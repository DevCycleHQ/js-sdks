(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i32_i32_=>_f64 (func (param i32 i32 i32) (result f64)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $i32_i32_i32_=>_i64 (func (param i32 i32 i32) (result i64)))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_i64 (func (param i32 i32 i32 i32 i32 i32 i32) (result i64)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $i64_=>_none (func (param i64)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i32_i32_i32_i32_i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 f64 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))
 (type $f64_i32_i32_=>_i32 (func (param f64 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_f64_i32_=>_i32 (func (param i32 f64 i32) (result i32)))
 (type $i32_i32_i32_f64_i32_=>_i32 (func (param i32 i32 i32 f64 i32) (result i32)))
 (type $i32_i32_i32_i32_f64_i32_=>_i32 (func (param i32 i32 i32 i32 f64 i32) (result i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i32_i64_=>_i32 (func (param i32 i32 i64) (result i32)))
 (type $i32_i32_i32_i32_i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 f64 i32 i32 i32 i32) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/native/ASC_GC_SWEEPFACTOR i32 (i32.const 20))
 (global $assembly/types/target/validAudienceOperators i32 (i32.const 128))
 (global $assembly/types/target/validTypes i32 (i32.const 368))
 (global $assembly/types/target/validSubTypes i32 (i32.const 896))
 (global $assembly/types/target/validComparators i32 (i32.const 1568))
 (global $assembly/types/target/validAudienceMatchComparators i32 (i32.const 1648))
 (global $assembly/types/target/validDataKeyTypes i32 (i32.const 1840))
 (global $assembly/types/target/validRolloutTypes i32 (i32.const 2064))
 (global $assembly/types/target/validRolloutStages i32 (i32.const 2224))
 (global $assembly/types/featureConfiguration/comparatorValues i32 (i32.const 2304))
 (global $assembly/types/feature/validTypes i32 (i32.const 2576))
 (global $assembly/types/configBody/validVariableTypes i32 (i32.const 2704))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_CONFIG i32 (i32.const 2752))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIABLE i32 (i32.const 2800))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_FEATURE i32 (i32.const 2864))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIATION i32 (i32.const 2928))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIABLE_FOR_VARIATION i32 (i32.const 2992))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.USER_NOT_IN_ROLLOUT i32 (i32.const 3072))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.USER_NOT_TARGETED i32 (i32.const 3136))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.INVALID_VARIABLE_TYPE i32 (i32.const 3200))
 (global $assembly/types/bucketedUserConfig/DEFAULT_REASONS.UNKNOWN i32 (i32.const 3264))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.TARGETING_MATCH i32 (i32.const 3312))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.SPLIT i32 (i32.const 3376))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.DEFAULT i32 (i32.const 3408))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.DISABLED i32 (i32.const 3456))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.ERROR i32 (i32.const 3504))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.OVERRIDE i32 (i32.const 3536))
 (global $assembly/types/bucketedUserConfig/EVAL_REASONS.OPT_IN i32 (i32.const 3584))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ALL_USERS i32 (i32.const 3616))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.AUDIENCE_MATCH i32 (i32.const 3664))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.NOT_IN_AUDIENCE i32 (i32.const 3712))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.OPT_IN i32 (i32.const 3776))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.NOT_OPTED_IN i32 (i32.const 3808))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.OVERRIDE i32 (i32.const 3856))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.RANDOM_DISTRIBUTION i32 (i32.const 3904))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ROLLOUT i32 (i32.const 3968))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.USER_ID i32 (i32.const 4016))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.EMAIL i32 (i32.const 4064))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.COUNTRY i32 (i32.const 4096))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM i32 (i32.const 4144))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM_VERSION i32 (i32.const 4192))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.APP_VERSION i32 (i32.const 4256))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.DEVICE_MODEL i32 (i32.const 4304))
 (global $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.CUSTOM_DATA i32 (i32.const 4352))
 (global $assembly/types/targetV2/validTypes i32 (i32.const 4448))
 (global $assembly/types/targetV2/validSubTypes i32 (i32.const 4560))
 (global $assembly/types/targetV2/validComparators i32 (i32.const 4688))
 (global $assembly/types/targetV2/validAudienceMatchComparators i32 (i32.const 4768))
 (global $assembly/types/targetV2/validDataKeyTypes i32 (i32.const 4848))
 (global $assembly/types/featureConfigurationV2/comparatorValues i32 (i32.const 4928))
 (global $assembly/types/featureV2/validTypes i32 (i32.const 5024))
 (global $assembly/managers/platformDataManager/_platformData (mut i32) (i32.const 0))
 (global $~lib/as-uuid/assembly/rng/CHUNK_SIZE i32 (i32.const 16))
 (global $~lib/as-uuid/assembly/rng/POOL_SIZE i32 (i32.const 256))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $~lib/as-uuid/assembly/rng/rnds8Pool (mut i32) (i32.const 0))
 (global $~lib/as-uuid/assembly/rng/poolPtr (mut i32) (i32.const 0))
 (global $~lib/as-uuid/assembly/stringify/MINUS_CODE i32 (i32.const 45))
 (global $~lib/as-uuid/assembly/stringify/HEX_CODES i32 (i32.const 5564))
 (global $assembly/types/dvcEvent/EventTypes (mut i32) (i32.const 0))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Bool i32 (i32.const 0))
 (global $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Num i32 (i32.const 1))
 (global $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Str i32 (i32.const 2))
 (global $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Null i32 (i32.const 3))
 (global $~lib/as-proto/assembly/WireType/WireType.VARINT i32 (i32.const 0))
 (global $~lib/as-proto/assembly/WireType/WireType.FIXED_64 i32 (i32.const 1))
 (global $~lib/as-proto/assembly/WireType/WireType.LENGTH_DELIMITED i32 (i32.const 2))
 (global $~lib/as-proto/assembly/WireType/WireType.START_GROUP i32 (i32.const 3))
 (global $~lib/as-proto/assembly/WireType/WireType.END_GROUP i32 (i32.const 4))
 (global $~lib/as-proto/assembly/WireType/WireType.FIXED_32 i32 (i32.const 5))
 (global $~lib/as-proto/assembly/Protobuf/WRITER (mut i32) (i32.const 0))
 (global $~lib/as-proto/assembly/Protobuf/READER (mut i32) (i32.const 0))
 (global $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Boolean i32 (i32.const 0))
 (global $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Number i32 (i32.const 1))
 (global $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.String i32 (i32.const 2))
 (global $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.JSON i32 (i32.const 3))
 (global $assembly/helpers/murmurhash/murmurhashBufferSize i32 (i32.const 2000))
 (global $assembly/helpers/murmurhash/keyBuffer (mut i32) (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id (mut i32) (i32.const 0))
 (global $~lib/native/ASC_TARGET i32 (i32.const 1))
 (global $~lib/assemblyscript-regex/assembly/parser/walker/QUANTIFIER_LIMIT i32 (i32.const 1000))
 (global $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPER_LOWER_OFFSET i32 (i32.const 32))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Match i32 (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Fail i32 (i32.const 1))
 (global $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Ignore i32 (i32.const 2))
 (global $assembly/bucketing/versionCompare/versionCompare i32 (i32.const 10496))
 (global $assembly/bucketing/bucketing/MAX_HASH_VALUE f64 (f64.const 4294967295))
 (global $assembly/bucketing/bucketing/baseSeed i32 (i32.const 1))
 (global $assembly/bucketing/bucketing/DEFAULT_BUCKETING_VALUE i32 (i32.const 10528))
 (global $assembly/managers/configDataManager/_configData (mut i32) (i32.const 0))
 (global $assembly/managers/configDataManager/_configMetadata (mut i32) (i32.const 0))
 (global $assembly/managers/clientCustomDataManager/_clientCustomData (mut i32) (i32.const 0))
 (global $assembly/eventQueue/eventQueue/EventTypesSet (mut i32) (i32.const 0))
 (global $assembly/managers/eventQueueManager/_eventQueueMap (mut i32) (i32.const 0))
 (global $assembly/managers/eventQueueManager/_requestPayloadMap (mut i32) (i32.const 0))
 (global $assembly/index/VariableType.Boolean i32 (i32.const 0))
 (global $assembly/index/VariableType.Number i32 (i32.const 1))
 (global $assembly/index/VariableType.String i32 (i32.const 2))
 (global $assembly/index/VariableType.JSON i32 (i32.const 3))
 (global $assembly/index/VariableTypeStrings i32 (i32.const 10608))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL (mut i32) (i32.const 0))
 (global $~lib/date/_day (mut i32) (i32.const 0))
 (global $~lib/date/_month (mut i32) (i32.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler (mut i32) (i32.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder (mut i32) (i32.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_0 i32 (i32.const 48))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_A i32 (i32.const 65))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_A_LOWER i32 (i32.const 97))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/FALSE_STR i32 (i32.const 13104))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/TRUE_STR i32 (i32.const 13216))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_MINUS i32 (i32.const 45))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_9 i32 (i32.const 57))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PERIOD i32 (i32.const 46))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PLUS i32 (i32.const 43))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E i32 (i32.const 69))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E_LOWER i32 (i32.const 101))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/decoder/NULL_STR i32 (i32.const 10528))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 31936))
 (global $~lib/memory/__data_end i32 (i32.const 32756))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 65524))
 (global $~lib/memory/__heap_base i32 (i32.const 65524))
 (memory $0 100 10000)
 (data (i32.const 12) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00a\00n\00d\00\00\00\00\00\00\00")
 (data (i32.const 44) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00o\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 76) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00 \00\00\00@\00\00\00\00\00\00\00")
 (data (i32.const 108) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00`\00\00\00`\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 156) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00a\00l\00l\00\00\00\00\00\00\00")
 (data (i32.const 188) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00u\00s\00e\00r\00\00\00\00\00")
 (data (i32.const 220) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00o\00p\00t\00I\00n\00\00\00")
 (data (i32.const 252) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00a\00u\00d\00i\00e\00n\00c\00e\00M\00a\00t\00c\00h\00\00\00")
 (data (i32.const 300) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00\b0\00\00\00\d0\00\00\00\f0\00\00\00\10\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 348) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00@\01\00\00@\01\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 396) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00u\00s\00e\00r\00_\00i\00d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00e\00m\00a\00i\00l\00\00\00")
 (data (i32.const 476) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00i\00p\00\00\00\00\00\00\00\00\00")
 (data (i32.const 508) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00c\00o\00u\00n\00t\00r\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 556) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 604) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00V\00e\00r\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 668) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00a\00p\00p\00V\00e\00r\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 716) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00d\00e\00v\00i\00c\00e\00M\00o\00d\00e\00l\00\00\00\00\00\00\00")
 (data (i32.const 764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00c\00u\00s\00t\00o\00m\00D\00a\00t\00a\00\00\00\00\00\00\00\00\00")
 (data (i32.const 812) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00\a0\01\00\00\d0\01\00\00\f0\01\00\00\10\02\00\00@\02\00\00p\02\00\00\b0\02\00\00\e0\02\00\00\10\03\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00@\03\00\00@\03\00\00$\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 924) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 956) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00!\00=\00\00\00\00\00\00\00\00\00")
 (data (i32.const 988) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00>\00=\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1052) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1084) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00<\00=\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00e\00x\00i\00s\00t\00\00\00")
 (data (i32.const 1148) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00!\00e\00x\00i\00s\00t\00")
 (data (i32.const 1180) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00c\00o\00n\00t\00a\00i\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1228) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00!\00c\00o\00n\00t\00a\00i\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00s\00t\00a\00r\00t\00W\00i\00t\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1324) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00!\00s\00t\00a\00r\00t\00W\00i\00t\00h\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1372) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00e\00n\00d\00W\00i\00t\00h\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1420) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00!\00e\00n\00d\00W\00i\00t\00h\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00\b0\03\00\00\d0\03\00\00\f0\03\00\00\10\04\00\000\04\00\00P\04\00\00p\04\00\00\90\04\00\00\b0\04\00\00\e0\04\00\00\10\05\00\00@\05\00\00p\05\00\00\a0\05\00\00\00\00\00\00")
 (data (i32.const 1548) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\d0\05\00\00\d0\05\00\008\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1596) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\b0\03\00\00\d0\03\00\00\00\00\00\00")
 (data (i32.const 1628) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00P\06\00\00P\06\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1676) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 1708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00B\00o\00o\00l\00e\00a\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00N\00u\00m\00b\00e\00r\00")
 (data (i32.const 1788) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\a0\06\00\00\c0\06\00\00\f0\06\00\00")
 (data (i32.const 1820) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\10\07\00\00\10\07\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1868) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00s\00c\00h\00e\00d\00u\00l\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1916) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00g\00r\00a\00d\00u\00a\00l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1964) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00s\00t\00e\00p\00p\00e\00d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00`\07\00\00\90\07\00\00\c0\07\00\00")
 (data (i32.const 2044) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\f0\07\00\00\f0\07\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00l\00i\00n\00e\00a\00r\00")
 (data (i32.const 2124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00d\00i\00s\00c\00r\00e\00t\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2172) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00@\08\00\00`\08\00\00\00\00\00\00")
 (data (i32.const 2204) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\90\08\00\00\90\08\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2252) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\b0\03\00\00\d0\03\00\00\00\00\00\00")
 (data (i32.const 2284) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\e0\08\00\00\e0\08\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00r\00e\00l\00e\00a\00s\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00e\00x\00p\00e\00r\00i\00m\00e\00n\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00o\00p\00s\00\00\00\00\00\00\00")
 (data (i32.const 2508) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\000\t\00\00`\t\00\00\90\t\00\00\c0\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2556) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\e0\t\00\00\e0\t\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2604) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00J\00S\00O\00N\00\00\00\00\00")
 (data (i32.const 2636) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00\a0\06\00\00\c0\06\00\00\f0\06\00\00@\n\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2684) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00`\n\00\00`\n\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2732) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00C\00O\00N\00F\00I\00G\00")
 (data (i32.const 2780) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00B\00L\00E\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00F\00E\00A\00T\00U\00R\00E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00T\00I\00O\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2972) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00B\00L\00E\00_\00F\00O\00R\00_\00V\00A\00R\00I\00A\00T\00I\00O\00N\00")
 (data (i32.const 3052) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00U\00S\00E\00R\00_\00N\00O\00T\00_\00I\00N\00_\00R\00O\00L\00L\00O\00U\00T\00\00\00\00\00\00\00")
 (data (i32.const 3116) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00U\00S\00E\00R\00_\00N\00O\00T\00_\00T\00A\00R\00G\00E\00T\00E\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3180) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00I\00N\00V\00A\00L\00I\00D\00_\00V\00A\00R\00I\00A\00B\00L\00E\00_\00T\00Y\00P\00E\00\00\00")
 (data (i32.const 3244) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00U\00N\00K\00N\00O\00W\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3292) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00T\00A\00R\00G\00E\00T\00I\00N\00G\00_\00M\00A\00T\00C\00H\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00S\00P\00L\00I\00T\00\00\00")
 (data (i32.const 3388) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00D\00E\00F\00A\00U\00L\00T\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3436) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00D\00I\00S\00A\00B\00L\00E\00D\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3484) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00E\00R\00R\00O\00R\00\00\00")
 (data (i32.const 3516) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00O\00V\00E\00R\00R\00I\00D\00E\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3564) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00O\00P\00T\00_\00I\00N\00")
 (data (i32.const 3596) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00A\00l\00l\00 \00U\00s\00e\00r\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3644) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00A\00u\00d\00i\00e\00n\00c\00e\00 \00M\00a\00t\00c\00h\00")
 (data (i32.const 3692) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00N\00o\00t\00 \00i\00n\00 \00A\00u\00d\00i\00e\00n\00c\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3756) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00O\00p\00t\00-\00I\00n\00")
 (data (i32.const 3788) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00N\00o\00t\00 \00O\00p\00t\00-\00I\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3836) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00O\00v\00e\00r\00r\00i\00d\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3884) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00R\00a\00n\00d\00o\00m\00 \00D\00i\00s\00t\00r\00i\00b\00u\00t\00i\00o\00n\00\00\00\00\00\00\00")
 (data (i32.const 3948) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00R\00o\00l\00l\00o\00u\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3996) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00U\00s\00e\00r\00 \00I\00D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00E\00m\00a\00i\00l\00\00\00")
 (data (i32.const 4076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00C\00o\00u\00n\00t\00r\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00P\00l\00a\00t\00f\00o\00r\00m\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4172) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00V\00e\00r\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4236) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00A\00p\00p\00 \00V\00e\00r\00s\00i\00o\00n\00\00\00\00\00\00\00")
 (data (i32.const 4284) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00D\00e\00v\00i\00c\00e\00 \00M\00o\00d\00e\00l\00\00\00\00\00")
 (data (i32.const 4332) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00C\00u\00s\00t\00o\00m\00 \00D\00a\00t\00a\00\00\00\00\00\00\00")
 (data (i32.const 4380) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00\b0\00\00\00\d0\00\00\00\f0\00\00\00\10\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4428) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\000\11\00\000\11\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4476) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00\a0\01\00\00\d0\01\00\00\f0\01\00\00\10\02\00\00@\02\00\00p\02\00\00\b0\02\00\00\e0\02\00\00\10\03\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4540) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\90\11\00\00\90\11\00\00$\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4588) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00\b0\03\00\00\d0\03\00\00\f0\03\00\00\10\04\00\000\04\00\00P\04\00\00p\04\00\00\90\04\00\00\b0\04\00\00\e0\04\00\00\10\05\00\00@\05\00\00p\05\00\00\a0\05\00\00\00\00\00\00")
 (data (i32.const 4668) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\00\12\00\00\00\12\00\008\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4716) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\b0\03\00\00\d0\03\00\00\00\00\00\00")
 (data (i32.const 4748) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\80\12\00\00\80\12\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4796) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\a0\06\00\00\c0\06\00\00\f0\06\00\00")
 (data (i32.const 4828) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\d0\12\00\00\d0\12\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\b0\03\00\00\d0\03\00\00\00\00\00\00")
 (data (i32.const 4908) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00 \13\00\00 \13\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\000\t\00\00`\t\00\00\90\t\00\00\c0\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5004) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00p\13\00\00p\13\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5052) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 5100) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 5164) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 5228) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5296) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5328) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5356) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5420) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5472) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "0123456789abcdef")
 (data (i32.const 5580) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00E\00v\00a\00l\00u\00a\00t\00e\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5644) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00E\00v\00a\00l\00u\00a\00t\00e\00d\00\00\00\00\00")
 (data (i32.const 5708) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5772) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d\00\00\00\00\00")
 (data (i32.const 5836) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00s\00d\00k\00C\00o\00n\00f\00i\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5916) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5980) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 6044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 6124) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6156) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00i\00n\00v\00a\00l\00i\00d\00 \00t\00o\00k\00e\00n\00\00\00")
 (data (i32.const 6204) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00p\00a\00r\00s\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 6332) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6460) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 6508) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00N\00\00\00T\00h\00e\00 \00p\00r\00e\00c\00e\00d\00i\00n\00g\00 \00t\00o\00k\00e\00n\00 \00i\00s\00 \00n\00o\00t\00 \00q\00u\00a\00n\00t\00i\00f\00i\00a\00b\00l\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00n\00o\00d\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6748) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00Z\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00r\00e\00g\00u\00l\00a\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00:\00 \00N\00o\00t\00h\00i\00n\00g\00 \00t\00o\00 \00r\00e\00p\00e\00a\00t\00\00\00")
 (data (i32.const 6860) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s\00\00\00\00\00")
 (data (i32.const 6940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7004) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7068) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7196) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00r\00e\00g\00e\00x\00p\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 7308) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7372) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00w\00a\00l\00k\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 7500) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00C\00a\00n\00n\00o\00t\00 \00h\00a\00n\00d\00l\00e\00 \00r\00a\00n\00g\00e\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00s\00 \00>\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 7596) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7724) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 7788) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 8220) "\1c\04\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9276) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 9372) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00T\00\00\00r\00e\00p\00l\00a\00c\00e\00 \00n\00o\00t\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9484) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9516) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9548) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00Z\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00n\00f\00a\00.\00t\00s\00\00\00")
 (data (i32.const 9660) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00 \00-\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9740) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00m\00a\00t\00c\00h\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9868) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00T\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e\00 \00w\00i\00t\00h\00i\00n\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00s\00e\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9980) "\1c\00\00\00\00\00\00\00\00\00\00\007\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10012) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00u\00n\00-\00r\00e\00c\00o\00g\00n\00i\00s\00e\00d\00 \00A\00S\00T\00 \00n\00o\00d\00e\00")
 (data (i32.const 10076) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10108) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10140) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00^\00\\\00d\00+\00[\00A\00-\00Z\00a\00-\00z\00]\00*\00$\00")
 (data (i32.const 10188) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00^\00\\\00d\00+\00$\00\00\00")
 (data (i32.const 10220) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10252) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10284) "\1c\00\00\00\00\00\00\00\00\00\00\00=\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10348) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10380) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10412) "\1c\00\00\00\00\00\00\00\00\00\00\00?\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00?\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10476) "\1c\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00n\00u\00l\00l\00\00\00\00\00")
 (data (i32.const 10540) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00\c0\06\00\00\f0\06\00\00\a0\06\00\00@\n\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10588) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00@)\00\00@)\00\00\10\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10636) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00u\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10668) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10700) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00_\00r\00o\00l\00l\00o\00u\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10748) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00r\00o\00l\00l\00o\00u\00t\00H\00a\00s\00h\00\00\00\00\00\00\00")
 (data (i32.const 10796) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00b\00u\00c\00k\00e\00t\00i\00n\00g\00H\00a\00s\00h\00\00\00")
 (data (i32.const 10844) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10908) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 10956) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10988) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\"\00:\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11052) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11084) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11116) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00C\00o\00n\00f\00i\00g\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11196) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00c\00o\00n\00f\00i\00g\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s\00")
 (data (i32.const 11292) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00D\00a\00t\00e\00\00\00\00\00")
 (data (i32.const 11340) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00~\00l\00i\00b\00/\00d\00a\00t\00e\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 11388) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11468) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00P\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11580) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11644) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 11692) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11756) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00l\00\00\00~\00l\00i\00b\00/\00@\00d\00e\00v\00c\00y\00c\00l\00e\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 11884) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d\00\00\00\00\00")
 (data (i32.const 11948) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00@\00d\00e\00v\00c\00y\00c\00l\00e\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00J\00S\00O\00N\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 12076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'\00\00\00\00\00")
 (data (i32.const 12124) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00\00\00")
 (data (i32.const 12204) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00\00\00\00\00")
 (data (i32.const 12284) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12316) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12348) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12380) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12412) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12444) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12476) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12540) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12572) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12604) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12636) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t\00\00\00\00\00\00\00")
 (data (i32.const 12700) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data (i32.const 12780) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12812) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'\00\00\00\00\00")
 (data (i32.const 12860) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13004) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13084) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00f\00a\00l\00s\00e\00\00\00")
 (data (i32.const 13116) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13164) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13196) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00r\00u\00e\00\00\00\00\00")
 (data (i32.const 13228) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00-\000\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13264) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 13452) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13516) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00N\00\00\00d\00v\00c\00U\00s\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13628) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00d\00v\00c\00U\00s\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13708) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00r\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00c\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13852) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13916) "\9c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\80\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14076) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14172) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00\"\00,\00 \00o\00b\00j\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14220) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\107\00\00\00\00\00\00p7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14268) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00h\00e\00l\00p\00e\00r\00s\00/\00j\00s\00o\00n\00H\00e\00l\00p\00e\00r\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00n\00a\00m\00e\00\00\00\00\00")
 (data (i32.const 14396) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00l\00a\00n\00g\00u\00a\00g\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14444) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00a\00p\00p\00B\00u\00i\00l\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14492) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00n\00u\00m\00b\00e\00r\00 \00v\00a\00l\00u\00e\00:\00 \00")
 (data (i32.const 14556) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00\00\00")
 (data (i32.const 14604) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\b08\00\00\00\00\00\00\f08\00\00\00\00\00\00\e0*\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14652) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 14684) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00n\00u\00m\00b\00e\00r\00")
 (data (i32.const 14716) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00b\00o\00o\00l\00e\00a\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14764) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14796) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14828) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00t\00y\00p\00e\00\00\00\00\00")
 (data (i32.const 14860) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00p\00e\00r\00c\00e\00n\00t\00a\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14908) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00d\00a\00t\00e\00\00\00\00\00")
 (data (i32.const 14940) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14972) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15004) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15068) "L\00\00\00\03\00\00\00\00\00\00\00\88\00\00\008\00\00\00\00\00\00\00p:\00\00\00\00\00\00p:\00\00\00\00\00\00\b0:\00\00\00\00\00\00\002\00\00\00\00\00\00\002\00\00\00\00\00\00\b0\17\00\00\00\00\00\00\d0:\00\00\00\00\00\00")
 (data (i32.const 15148) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 \00")
 (data (i32.const 15212) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\00\00\00\00\00\00")
 (data (i32.const 15260) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00,\00 \00m\00u\00s\00t\00 \00b\00e\00 \00o\00n\00e\00 \00o\00f\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 15324) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\18\00\00\00@;\00\00\00\00\00\00\80;\00\00\00\00\00\00\b0;\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15372) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 15404) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00S\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 15500) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00m\00a\00t\00c\00h\00 \00a\00 \00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15596) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00@<\00\00\00\00\00\00\80;\00\00\00\00\00\00\a0<\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15644) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\b08\00\00\00\00\00\00\f08\00\00\00\00\00\00\e0*\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15692) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 15724) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 15756) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15804) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15856) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 15912) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 16608) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 16784) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 16828) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00s\00e\00g\00m\00e\00n\00t\00a\00t\00i\00o\00n\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16924) "\1c\00\00\00\00\00\00\00\00\00\00\00\95\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 16988) "\1c\00\00\00\00\00\00\00\00\00\00\00\96\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17020) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17052) "\cc\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\bc\00\00\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00a\00u\00d\00i\00e\00n\00c\00e\00 \00r\00e\00f\00e\00r\00e\00n\00c\00e\00d\00 \00b\00y\00 \00a\00u\00d\00i\00e\00n\00c\00e\00M\00a\00t\00c\00h\00 \00f\00i\00l\00t\00e\00r\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00")
 (data (i32.const 17260) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00 \00-\00>\00 \00\00\00\00\00")
 (data (i32.const 17292) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00t\00a\00r\00g\00e\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17372) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17404) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00[\00^\00(\00\\\00d\00|\00.\00|\00\\\00-\00)\00]\00\00\00\00\00")
 (data (i32.const 17452) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00-\00.\00*\00\00\00\00\00\00\00")
 (data (i32.const 17484) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17516) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a\00\00\00\00\00\00\00")
 (data (i32.const 17580) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17612) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17644) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00\80C\00\00\00\00\00\00")
 (data (i32.const 17676) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00P\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 17788) "\ec\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\d4\00\00\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00T\00o\00 \00l\00e\00v\00e\00r\00a\00g\00e\00 \00t\00h\00i\00s\00 \00n\00e\00w\00 \00f\00i\00l\00t\00e\00r\00 \00d\00e\00f\00i\00n\00i\00t\00i\00o\00n\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00p\00d\00a\00t\00e\00 \00t\00o\00 \00t\00h\00e\00 \00l\00a\00t\00e\00s\00t\00 \00v\00e\00r\00s\00i\00o\00n\00 \00o\00f\00 \00t\00h\00e\00 \00D\00e\00v\00C\00y\00c\00l\00e\00 \00S\00D\00K\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18028) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00 E\00\00\00\00\00\00\90E\00\00")
 (data (i32.const 18060) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00 \00A\00N\00D\00 \00\00\00")
 (data (i32.const 18092) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00d\00e\00c\00i\00d\00e\00 \00t\00a\00r\00g\00e\00t\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00:\00 \00\00\00\00\00\00\00")
 (data (i32.const 18188) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00t\00a\00r\00g\00e\00t\00V\002\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18268) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 18348) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18444) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00 \00|\00 \00\00\00\00\00\00\00")
 (data (i32.const 18476) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00 H\00\00\00\00\00\00")
 (data (i32.const 18508) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00 H\00\00\00\00\00\00")
 (data (i32.const 18540) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00b\00l\00e\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18620) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00p\00r\00o\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18668) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00e\00n\00v\00i\00r\00o\00n\00m\00e\00n\00t\00\00\00\00\00\00\00")
 (data (i32.const 18716) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00f\00e\00a\00t\00u\00r\00e\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18764) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00\00\00\00\00\00\00")
 (data (i32.const 18828) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00\00\00\00\00")
 (data (i32.const 18892) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18940) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00d\00v\00c\00U\00s\00e\00r\00F\00r\00o\00m\00U\00T\00F\008\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19036) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00d\00e\00x\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19100) "\1c\00\00\00\00\00\00\00\00\00\00\00\a1\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19132) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00Z\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00u\00s\00e\00r\00 \00f\00r\00o\00m\00 \00v\00a\00r\00i\00a\00b\00l\00e\00F\00o\00r\00U\00s\00e\00r\00_\00P\00B\00 \00p\00r\00o\00t\00o\00b\00u\00f\00\00\00")
 (data (i32.const 19244) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00t\00y\00p\00e\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19324) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00N\00\00\00I\00n\00t\00e\00r\00n\00a\00l\00 \00e\00r\00r\00o\00r\00 \00p\00r\00o\00c\00e\00s\00s\00i\00n\00g\00 \00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19436) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00N\00o\00 \00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19532) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s\00")
 (data (i32.const 19628) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00e\00v\00a\00l\00R\00e\00a\00s\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19676) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00E\00v\00e\00n\00t\00 \00m\00i\00s\00s\00i\00n\00g\00 \00t\00a\00r\00g\00e\00t\00 \00t\00o\00 \00s\00a\00v\00e\00 \00a\00g\00g\00r\00e\00g\00a\00t\00e\00 \00e\00v\00e\00n\00t\00\00\00\00\00")
 (data (i32.const 19788) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00B\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 19884) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00b\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00m\00a\00p\00p\00i\00n\00g\00 \00f\00o\00r\00 \00t\00a\00r\00g\00e\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20012) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00 \00t\00o\00 \00a\00g\00g\00r\00e\00g\00a\00t\00e\00 \00b\00y\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20092) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\c0M\00\00\00\00\00\00@N\00\00")
 (data (i32.const 20124) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00v\00a\00l\00u\00e\00\00\00")
 (data (i32.const 20156) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00b\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00e\00c\00o\00n\00d\00 \00v\00a\00l\00u\00e\00 \00m\00a\00p\00 \00f\00o\00r\00 \00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20284) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 20380) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00V\00a\00r\00i\00a\00b\00l\00e\00T\00y\00p\00e\00:\00 \00")
 (data (i32.const 20444) "\1c\00\00\00\00\00\00\00\00\00\00\00\a5\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20476) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00_\00i\00d\00\00\00\00\00\00\00")
 (data (i32.const 20508) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00k\00e\00y\00\00\00\00\00\00\00")
 (data (i32.const 20540) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00e\00v\00a\00l\00\00\00\00\00")
 (data (i32.const 20572) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00_\00f\00e\00a\00t\00u\00r\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20620) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00V\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00 \00c\00o\00n\00f\00i\00g\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00")
 (data (i32.const 20732) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00.\00t\00s\00")
 (data (i32.const 20812) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00s\00d\00k\00T\00y\00p\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20860) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00s\00d\00k\00V\00e\00r\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 20908) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00s\00d\00k\00P\00l\00a\00t\00f\00o\00r\00m\00\00\00\00\00\00\00")
 (data (i32.const 20956) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00h\00o\00s\00t\00n\00a\00m\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21004) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 21100) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00j\00\00\00g\00e\00n\00e\00r\00a\00t\00e\00B\00u\00c\00k\00e\00t\00e\00d\00C\00o\00n\00f\00i\00g\00 \00c\00o\00n\00f\00i\00g\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00")
 (data (i32.const 21228) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00c\00o\00n\00f\00i\00g\00B\00o\00d\00y\00V\002\00.\00t\00s\00")
 (data (i32.const 21308) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00c\00l\00i\00e\00n\00t\00S\00D\00K\00K\00e\00y\00\00\00\00\00")
 (data (i32.const 21356) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00a\000\00_\00o\00r\00g\00a\00n\00i\00z\00a\00t\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21420) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00d\00i\00s\00a\00b\00l\00e\00P\00a\00s\00s\00t\00h\00r\00o\00u\00g\00h\00R\00o\00l\00l\00o\00u\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21500) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00b\00o\00o\00l\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00")
 (data (i32.const 21580) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\10T\00\00\00\00\00\00p7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21628) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00s\00e\00t\00t\00i\00n\00g\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21676) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00O\00b\00j\00e\00c\00t\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00\00\00\00\00")
 (data (i32.const 21756) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\c0T\00\00\00\00\00\00p7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21804) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00A\00r\00r\00a\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21884) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00@U\00\00\00\00\00\00p7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21932) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00_\00v\00a\00r\00\00\00\00\00")
 (data (i32.const 22012) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00V\00a\00l\00u\00e\00 \00m\00i\00s\00s\00i\00n\00g\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22092) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\10V\00\00\00\00\00\00p7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22140) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22220) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00V\002\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 22300) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00p\00r\00e\00r\00e\00q\00u\00i\00s\00i\00t\00e\00s\00\00\00")
 (data (i32.const 22348) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00c\00o\00m\00p\00a\00r\00a\00t\00o\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22396) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00P\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00C\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00V\002\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22508) "\1c\00\00\00\00\00\00\00\00\00\00\00\a6\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22540) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00w\00i\00n\00n\00i\00n\00g\00V\00a\00r\00i\00a\00t\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00_\00v\00a\00r\00i\00a\00t\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00u\00p\00d\00a\00t\00e\00d\00A\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22700) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00t\00a\00r\00g\00e\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22748) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00o\00p\00e\00r\00a\00t\00o\00r\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22796) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00f\00i\00l\00t\00e\00r\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22844) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22876) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00@;\00\00\00\00\00\00\80;\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22924) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00@<\00\00\00\00\00\00\80;\00\00\00\00\00\00\a0<\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 22972) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00s\00u\00b\00T\00y\00p\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00v\00a\00l\00u\00e\00s\00")
 (data (i32.const 23052) "\9c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\80\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00F\00i\00l\00t\00e\00r\00 \00v\00a\00l\00u\00e\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00l\00l\00 \00o\00f\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00t\00y\00p\00e\00.\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23212) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00b\00o\00o\00l\00,\00 \00g\00o\00t\00:\00 \00\00\00")
 (data (i32.const 23276) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00s\00t\00r\00i\00n\00g\00,\00 \00g\00o\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23356) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00n\00u\00m\00b\00e\00r\00,\00 \00g\00o\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23436) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00>\00\00\00F\00i\00l\00t\00e\00r\00 \00v\00a\00l\00u\00e\00s\00 \00o\00f\00 \00u\00n\00k\00n\00o\00w\00n\00 \00t\00y\00p\00e\00.\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23532) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00d\00a\00t\00a\00K\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23580) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00d\00a\00t\00a\00K\00e\00y\00T\00y\00p\00e\00\00\00\00\00\00\00")
 (data (i32.const 23628) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00_\00a\00u\00d\00i\00e\00n\00c\00e\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23676) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\10\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00_\00a\00u\00d\00i\00e\00n\00c\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23756) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00r\00o\00l\00l\00o\00u\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23804) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00s\00t\00a\00r\00t\00P\00e\00r\00c\00e\00n\00t\00a\00g\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23868) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00s\00t\00a\00r\00t\00D\00a\00t\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23916) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00s\00t\00a\00g\00e\00s\00")
 (data (i32.const 23948) "\1c\00\00\00\00\00\00\00\00\00\00\00\a7\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23980) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00d\00i\00s\00t\00r\00i\00b\00u\00t\00i\00o\00n\00\00\00\00\00")
 (data (i32.const 24028) "\1c\00\00\00\00\00\00\00\00\00\00\00\a8\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24060) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24092) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00b\00u\00c\00k\00e\00t\00i\00n\00g\00K\00e\00y\00\00\00\00\00")
 (data (i32.const 24140) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00d\00e\00s\00c\00\00\00\00\00")
 (data (i32.const 24172) "\1c\00\00\00\00\00\00\00\00\00\00\00\ab\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24204) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24236) "\1c\00\00\00\00\00\00\00\00\00\00\00\ac\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24268) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00\00\00")
 (data (i32.const 24316) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00a\00u\00d\00i\00e\00n\00c\00e\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24364) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00i\00d\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24396) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00i\00n\00v\00a\00l\00i\00d\00 \00g\00l\00o\00b\00a\00l\00 \00c\00l\00i\00e\00n\00t\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00J\00S\00O\00N\00S\00t\00r\00")
 (data (i32.const 24492) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00{\00}\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24524) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00P\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00d\00k\00K\00e\00y\00 \00t\00o\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00 \00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24636) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00N\00\00\00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00e\00x\00i\00s\00t\00s\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24748) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00P`\00\00\00\00\00\00 <\00\00")
 (data (i32.const 24780) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00p\00\00\00y\00o\00u\00 \00c\00a\00n\00 \00o\00n\00l\00y\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00 \00t\00h\00e\00 \00D\00e\00v\00C\00y\00c\00l\00e\00 \00S\00D\00K\00 \00o\00n\00c\00e\00 \00p\00e\00r\00 \00s\00d\00k\00K\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24924) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00E\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00O\00p\00t\00i\00o\00n\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00")
 (data (i32.const 25020) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00O\00p\00t\00i\00o\00n\00s\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 25116) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00d\00i\00s\00a\00b\00l\00e\00A\00u\00t\00o\00m\00a\00t\00i\00c\00E\00v\00e\00n\00t\00L\00o\00g\00g\00i\00n\00g\00\00\00\00\00")
 (data (i32.const 25196) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00d\00i\00s\00a\00b\00l\00e\00C\00u\00s\00t\00o\00m\00E\00v\00e\00n\00t\00L\00o\00g\00g\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25276) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00e\00v\00e\00n\00t\00R\00e\00q\00u\00e\00s\00t\00C\00h\00u\00n\00k\00S\00i\00z\00e\00\00\00")
 (data (i32.const 25340) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00R\00\00\00U\00n\00a\00b\00l\00e\00 \00t\00o\00 \00g\00e\00t\00 \00i\003\002\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00J\00S\00O\00N\00.\00V\00a\00l\00u\00e\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25452) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00e\00v\00e\00n\00t\00R\00e\00q\00u\00e\00s\00t\00C\00h\00u\00n\00k\00S\00i\00z\00e\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25532) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00l\00a\00r\00g\00e\00r\00 \00t\00h\00a\00n\00 \001\000\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25612) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\80c\00\00\00\00\00\00\d0c\00\00")
 (data (i32.const 25644) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00s\00m\00a\00l\00l\00e\00r\00 \00t\00h\00a\00n\00 \001\000\000\000\000\00\00\00\00\00\00\00")
 (data (i32.const 25724) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\80c\00\00\00\00\00\00@d\00\00")
 (data (i32.const 25756) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00Z\00\00\00N\00o\00 \00R\00e\00q\00u\00e\00s\00t\00 \00P\00a\00y\00l\00o\00a\00d\00 \00M\00a\00n\00a\00g\00e\00r\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 \00\00\00")
 (data (i32.const 25868) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00f\00a\00i\00l\00e\00d\00")
 (data (i32.const 25900) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00R\00e\00q\00u\00e\00s\00t\00 \00P\00a\00y\00l\00o\00a\00d\00:\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25964) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00 \00h\00a\00s\00 \00n\00o\00t\00 \00f\00i\00n\00i\00s\00h\00e\00d\00 \00s\00e\00n\00d\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26044) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00@e\00\00\00\00\00\00\80e\00\00")
 (data (i32.const 26076) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00X\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00/\00r\00e\00q\00u\00e\00s\00t\00P\00a\00y\00l\00o\00a\00d\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 26188) "\1c\00\00\00\00\00\00\00\00\00\00\00\b2\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26220) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26252) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00a\00g\00g\00r\00e\00g\00a\00t\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26300) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26332) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00\d0f\00\00\00\00\00\00")
 (data (i32.const 26364) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00c\00u\00s\00t\00o\00m\00E\00v\00e\00n\00t\00\00\00\00\00\00\00")
 (data (i32.const 26412) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00e\00v\00a\00l\00R\00e\00a\00s\00o\00n\00A\00g\00g\00M\00a\00p\00 \00f\00o\00r\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26508) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00t\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00u\00b\00 \00v\00a\00l\00u\00e\00 \00m\00a\00p\00 \00t\00o\00 \00w\00r\00i\00t\00e\00 \00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d\00 \00e\00v\00e\00n\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00s\00e\00n\00d\00i\00n\00g\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26700) "\1c\00\00\00\00\00\00\00\00\00\00\00\b3\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26732) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26764) "\1c\00\00\00\00\00\00\00\00\00\00\00\b2\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26796) "\1c\00\00\00\00\00\00\00\00\00\00\00\b4\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 26828) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00C\00o\00u\00l\00d\00 \00n\00o\00t\00 \00f\00i\00n\00d\00 \00p\00a\00y\00l\00o\00a\00d\00I\00d\00:\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 26908) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00 \00t\00o\00 \00m\00a\00r\00k\00 \00a\00s\00 \00s\00u\00c\00c\00e\00s\00s\00\00\00\00\00\00\00")
 (data (i32.const 26972) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\e0h\00\00\00\00\00\000i\00\00")
 (data (i32.const 27004) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00C\00o\00u\00l\00d\00 \00n\00o\00t\00 \00f\00i\00n\00d\00 \00p\00a\00y\00l\00o\00a\00d\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27084) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00,\00 \00r\00e\00t\00r\00y\00a\00b\00l\00e\00:\00 \00\00\00")
 (data (i32.const 27132) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00 \00t\00o\00 \00m\00a\00r\00k\00 \00a\00s\00 \00f\00a\00i\00l\00u\00r\00e\00\00\00\00\00\00\00")
 (data (i32.const 27196) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\90i\00\00\00\00\00\00\e0i\00\00\00\00\00\00\10j\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27244) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00F\00\00\00D\00V\00C\00E\00v\00e\00n\00t\00 \00e\00v\00e\00n\00t\00S\00t\00r\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00")
 (data (i32.const 27340) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00d\00v\00c\00E\00v\00e\00n\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27420) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00t\00a\00r\00g\00e\00t\00")
 (data (i32.const 27452) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00m\00e\00t\00a\00D\00a\00t\00a\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27500) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27532) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00R\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27644) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00F\00e\00a\00t\00u\00r\00e\00 \00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00m\00i\00s\00s\00i\00n\00g\00 \00_\00f\00e\00a\00t\00u\00r\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 27740) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00F\00e\00a\00t\00u\00r\00e\00 \00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00m\00i\00s\00s\00i\00n\00g\00 \00_\00v\00a\00r\00i\00a\00t\00i\00o\00n\00\00\00\00\00")
 (data (i32.const 27836) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00v\00a\00r\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 27932) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00V\00\00\00F\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00v\00a\00l\00u\00e\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00")
 (data (i32.const 28044) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00S\00D\00K\00V\00a\00r\00i\00a\00b\00l\00e\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00")
 (data (i32.const 28124) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00r\00e\00a\00s\00o\00n\00")
 (data (i32.const 28156) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00d\00e\00t\00a\00i\00l\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28204) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00t\00a\00r\00g\00e\00t\00I\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28252) "\1c\00\00\00\00\00\00\00\00\00\00\00\b5\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28284) "\1c\00\00\00\00\00\00\00\00\00\00\00\b6\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28316) "\1c\00\00\00\00\00\00\00\00\00\00\00\b7\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28348) "\1c\00\00\00\00\00\00\00\00\00\00\00\b8\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28380) "\1c\00\00\00\00\00\00\00\00\00\00\00\b9\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28412) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00x\00\00\00c\00h\00e\00c\00k\00N\00u\00m\00b\00e\00r\00s\00F\00i\00l\00t\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 28556) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00H\00e\00l\00p\00e\00r\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28636) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00z\00\00\00c\00h\00e\00c\00k\00V\00e\00r\00s\00i\00o\00n\00F\00i\00l\00t\00e\00r\00s\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00")
 (data (i32.const 28780) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00r\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 28924) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00h\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00d\00a\00t\00a\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 29052) "\ac\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\8e\00\00\00e\00v\00a\00l\00u\00a\00t\00e\00O\00p\00e\00r\00a\00t\00o\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00o\00p\00e\00r\00a\00t\00o\00r\00S\00t\00r\00 \00o\00r\00 \00u\00s\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29228) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00r\00e\00s\00u\00l\00t\00")
 (data (i32.const 29260) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00r\00e\00a\00s\00o\00n\00D\00e\00t\00a\00i\00l\00s\00\00\00")
 (data (i32.const 29308) "\9c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00~\00\00\00d\00e\00c\00i\00d\00e\00T\00a\00r\00g\00e\00t\00V\00a\00r\00i\00a\00t\00i\00o\00n\00F\00r\00o\00m\00J\00S\00O\00N\00 \00t\00a\00r\00g\00e\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29468) "\1c\00\00\00\00\00\00\00\00\00\00\00\a8\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29500) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29532) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00|\00\00\00d\00o\00e\00s\00U\00s\00e\00r\00P\00a\00s\00s\00R\00o\00l\00l\00o\00u\00t\00F\00r\00o\00m\00J\00S\00O\00N\00 \00r\00o\00l\00l\00o\00u\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00")
 (data (i32.const 29676) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00c\00o\00n\00f\00i\00g\00B\00o\00d\00y\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 29756) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00C\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00.\00t\00s\00")
 (data (i32.const 29852) "\1c\00\00\00\00\00\00\00\00\00\00\00\c4\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29884) "\1c\00\00\00\00\00\00\00\00\00\00\00\c5\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 29916) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00c\00r\00e\00a\00t\00e\00d\00D\00a\00t\00e\00\00\00\00\00\00\00")
 (data (i32.const 29964) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00l\00a\00s\00t\00S\00e\00e\00n\00D\00a\00t\00e\00\00\00\00\00")
 (data (i32.const 30012) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30140) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00N\00a\00m\00e\00\00\00")
 (data (i32.const 30188) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00K\00e\00y\00\00\00\00\00")
 (data (i32.const 30236) "\8c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00n\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00F\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00o\00b\00j\00e\00c\00t\00 \00i\00n\00 \00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30380) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00M\00a\00n\00u\00a\00l\00 \00a\00b\00o\00r\00t\00 \00t\00r\00i\00g\00g\00e\00r\00e\00d\00")
 (data (i32.const 30444) "\1c\00\00\00\00\00\00\00\00\00\00\00\ca\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30476) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30508) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00s\00J\00S\00O\00N\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 30604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00c\00u\00s\00t\00o\00m\00T\00y\00p\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00c\00l\00i\00e\00n\00t\00D\00a\00t\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30700) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00s\00\00\00\00\00\00\00")
 (data (i32.const 30748) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data (i32.const 30812) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data (i32.const 30876) "\1c\00\00\00\00\00\00\00\00\00\00\00\cb\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30908) "\1c\00\00\00\00\00\00\00\00\00\00\00\cb\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 30940) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00<\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s\00 \00-\00 \00")
 (data (i32.const 31020) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00\"\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31052) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00\\\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31084) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00b\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31116) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31148) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31180) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31212) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\\\00f\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31244) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00\\\00u\000\000\000\00b\00")
 (data (i32.const 31276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00t\00a\00r\00g\00e\00t\00_\00i\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31324) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00e\00v\00e\00n\00t\00s\00")
 (data (i32.const 31356) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00r\00e\00c\00o\00r\00d\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31404) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00p\00a\00y\00l\00o\00a\00d\00I\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31452) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00e\00v\00e\00n\00t\00C\00o\00u\00n\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 31500) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00f\00o\00r\00c\00e\00d\00U\00s\00e\00r\00s\00\00\00\00\00\00\00")
 (data (i32.const 31548) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\\\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00p\00r\00o\00t\00o\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00F\00i\00x\00e\00d\00R\00e\00a\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 31660) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00w\00i\00r\00e\00 \00t\00y\00p\00e\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 31724) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00f\00o\00r\00k\00(\00)\00 \00b\00e\00f\00o\00r\00e\00 \00l\00d\00e\00l\00i\00m\00(\00)\00 \00c\00a\00l\00l\00.\00\00\00\00\00")
 (data (i32.const 31820) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00Z\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00p\00r\00o\00t\00o\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00F\00i\00x\00e\00d\00S\00i\00z\00e\00r\00.\00t\00s\00\00\00")
 (data (i32.const 31936) "\cc\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00 \00\00\00\10A\82\00A\00\00\00\08A\00\00\00\00\00\00 \00\00\00\00\00\00\00\02\01\00\00\02\t\00\00\00\00\00\00 \00\00\00$\t\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00 \00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00\02A\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\1an
 (table $0 32 32 funcref)
 (elem $0 (i32.const 1) $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|1 $start:assembly/bucketing/versionCompare~anonymous|0 $assembly/bucketing/segmentation/getFilterAudiences~anonymous|0 $assembly/bucketing/segmentation/getFilterAudiencesAsStrings~anonymous|0 $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.decode $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.encode $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|0 $assembly/types/target/Rollout#constructor~anonymous|0 $assembly/types/targetV2/TargetV2#constructor~anonymous|0 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|1 $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads~anonymous|0 $~lib/as-uuid/assembly/rng/randomFill $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads~anonymous|0 $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0 $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount~anonymous|0 $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.encode $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.decode $assembly/types/target/Target#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/testHelpers/TestData>~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#clone~anonymous|0)
 (export "VariableType.Boolean" (global $assembly/index/VariableType.Boolean))
 (export "VariableType.Number" (global $assembly/index/VariableType.Number))
 (export "VariableType.String" (global $assembly/index/VariableType.String))
 (export "VariableType.JSON" (global $assembly/index/VariableType.JSON))
 (export "VariableTypeStrings" (global $assembly/index/VariableTypeStrings))
 (export "murmurhashBufferSize" (global $assembly/helpers/murmurhash/murmurhashBufferSize))
 (export "triggerAbort" (func $assembly/testHelpers/triggerAbort))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "generateBoundedHashesFromJSON" (func $export:assembly/index/generateBoundedHashesFromJSON))
 (export "generateBucketedConfigForUser" (func $export:assembly/index/generateBucketedConfigForUser))
 (export "generateBucketedConfigForUserUTF8" (func $export:assembly/index/generateBucketedConfigForUserUTF8))
 (export "generateBucketedConfigForUserWithOverrides" (func $export:assembly/index/generateBucketedConfigForUserWithOverrides))
 (export "variableForUser_PB_Preallocated" (func $export:assembly/index/variableForUser_PB_Preallocated))
 (export "variableForUser_PB" (func $export:assembly/index/variableForUser_PB))
 (export "variableForUser" (func $export:assembly/index/variableForUser))
 (export "variableForUserPreallocated" (func $export:assembly/index/variableForUserPreallocated))
 (export "setPlatformData" (func $export:assembly/index/setPlatformData))
 (export "setPlatformDataUTF8" (func $export:assembly/index/setPlatformDataUTF8))
 (export "clearPlatformData" (func $export:assembly/index/clearPlatformData@varargs))
 (export "setConfigDataUTF8Preallocated" (func $export:assembly/index/setConfigDataUTF8Preallocated))
 (export "setConfigDataUTF8" (func $export:assembly/index/setConfigDataUTF8))
 (export "setConfigData" (func $export:assembly/index/setConfigData))
 (export "setConfigDataWithEtag" (func $export:assembly/index/setConfigDataWithEtag))
 (export "hasConfigDataForEtag" (func $export:assembly/index/hasConfigDataForEtag))
 (export "setClientCustomData" (func $export:assembly/index/setClientCustomData))
 (export "setClientCustomDataUTF8" (func $export:assembly/index/setClientCustomDataUTF8))
 (export "getSDKKeyFromConfig" (func $export:assembly/index/getSDKKeyFromConfig))
 (export "getConfigMetadata" (func $export:assembly/index/getConfigMetadata))
 (export "murmurhashV3" (func $export:assembly/helpers/murmurhash/murmurhashV3))
 (export "murmurhashV3_js" (func $export:assembly/helpers/murmurhash/murmurhashV3_js))
 (export "initEventQueue" (func $export:assembly/managers/eventQueueManager/initEventQueue))
 (export "flushEventQueue" (func $export:assembly/managers/eventQueueManager/flushEventQueue))
 (export "onPayloadSuccess" (func $export:assembly/managers/eventQueueManager/onPayloadSuccess))
 (export "onPayloadFailure" (func $export:assembly/managers/eventQueueManager/onPayloadFailure))
 (export "queueEvent" (func $export:assembly/managers/eventQueueManager/queueEvent))
 (export "queueAggregateEvent" (func $export:assembly/managers/eventQueueManager/queueAggregateEvent))
 (export "queueVariableEvaluatedEvent_JSON" (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON))
 (export "queueVariableEvaluatedEvent" (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent))
 (export "cleanupEventQueue" (func $export:assembly/managers/eventQueueManager/cleanupEventQueue))
 (export "eventQueueSize" (func $export:assembly/managers/eventQueueManager/eventQueueSize))
 (export "testVariableForUserParams_PB" (func $export:assembly/testHelpers/testVariableForUserParams_PB))
 (export "testDVCUser_PB" (func $export:assembly/testHelpers/testDVCUser_PB))
 (export "testSDKVariable_PB" (func $export:assembly/testHelpers/testSDKVariable_PB))
 (export "checkNumbersFilterFromJSON" (func $export:assembly/testHelpers/checkNumbersFilterFromJSON))
 (export "checkVersionFiltersFromJSON" (func $export:assembly/testHelpers/checkVersionFiltersFromJSON))
 (export "checkCustomDataFromJSON" (func $export:assembly/testHelpers/checkCustomDataFromJSON))
 (export "evaluateOperatorFromJSON" (func $export:assembly/testHelpers/evaluateOperatorFromJSON@varargs))
 (export "decideTargetVariationFromJSON" (func $export:assembly/testHelpers/decideTargetVariationFromJSON))
 (export "doesUserPassRolloutFromJSON" (func $export:assembly/testHelpers/doesUserPassRolloutFromJSON))
 (export "testConfigBodyClass" (func $export:assembly/testHelpers/testConfigBodyClass@varargs))
 (export "testConfigBodyClassFromUTF8" (func $export:assembly/testHelpers/testConfigBodyClassFromUTF8@varargs))
 (export "testConfigBodyV2Class" (func $export:assembly/testHelpers/testConfigBodyV2Class@varargs))
 (export "testConfigBodyV2ClassFromUTF8" (func $export:assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs))
 (export "testDVCUserClass" (func $export:assembly/testHelpers/testDVCUserClass))
 (export "testDVCUserClassFromUTF8" (func $export:assembly/testHelpers/testDVCUserClassFromUTF8))
 (export "testBucketedUserConfigClass" (func $export:assembly/testHelpers/testBucketedUserConfigClass))
 (export "echoString" (func $export:assembly/testHelpers/echoString))
 (export "echoUint8Array" (func $export:assembly/testHelpers/echoUint8Array))
 (export "testSortObjectsByString" (func $export:assembly/testHelpers/testSortObjectsByString))
 (export "testEventQueueOptionsClass" (func $export:assembly/types/eventQueueOptions/testEventQueueOptionsClass))
 (export "testDVCEventClass" (func $export:assembly/types/dvcEvent/testDVCEventClass))
 (export "testDVCRequestEventClass" (func $export:assembly/types/dvcEvent/testDVCRequestEventClass))
 (export "testPlatformDataClass" (func $export:assembly/types/platformData/testPlatformDataClass))
 (export "testPlatformDataClassFromUTF8" (func $export:assembly/types/platformData/testPlatformDataClassFromUTF8))
 (start $~start)
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $this i32) (param $nextWithColor i32)
  local.get $this
  local.get $nextWithColor
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
  return
 )
 (func $~lib/rt/itcms/Object#get:nextWithColor (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  return
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  return
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 5248
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 5248
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 5248
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/itcms/Object#get:rtId (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/shared/typeinfo/Typeinfo#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   i32.const 5376
   i32.const 5440
   i32.const 21
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 4
  i32.mul
  i32.add
  call $~lib/shared/typeinfo/Typeinfo#get:flags
  return
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:rtId
  local.set $rtId
  local.get $rtId
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
  return
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 5248
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  return
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $this i32) (param $flMap i32)
  local.get $this
  local.get $flMap
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $this i32) (param $mmInfo i32)
  local.get $this
  local.get $mmInfo
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $this i32) (param $next i32)
  local.get $this
  local.get $next
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/Block#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#get:next (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/rt/tlsf/Root#get:flMap (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/tlsf/Block#get:prev
  local.set $prev
  local.get $block
  call $~lib/rt/tlsf/Block#get:next
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  block $~lib/rt/tlsf/GETHEAD|inlined.0 (result i32)
   local.get $root
   local.set $root|11
   local.get $fl
   local.set $fl|12
   local.get $sl
   local.set $sl|13
   local.get $root|11
   local.get $fl|12
   i32.const 4
   i32.shl
   local.get $sl|13
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.0
  end
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    block $~lib/rt/tlsf/GETSL|inlined.0 (result i32)
     local.get $root
     local.set $root|18
     local.get $fl
     local.set $fl|19
     local.get $root|18
     local.get $fl|19
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.0
    end
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store $0 offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     call $~lib/rt/tlsf/Root#get:flMap
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETRIGHT|inlined.0 (result i32)
   local.get $block
   local.set $block|3
   local.get $block|3
   i32.const 4
   i32.add
   local.get $block|3
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   br $~lib/rt/tlsf/GETRIGHT|inlined.0
  end
  local.set $right
  local.get $right
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.1 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.1
   end
   local.set $right
   local.get $right
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   block $~lib/rt/tlsf/GETFREELEFT|inlined.0 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.sub
    i32.load $0
    br $~lib/rt/tlsf/GETFREELEFT|inlined.0
   end
   local.set $left
   local.get $left
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 5520
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETHEAD|inlined.1 (result i32)
   local.get $root
   local.set $root|16
   local.get $fl
   local.set $fl|17
   local.get $sl
   local.set $sl|18
   local.get $root|16
   local.get $fl|17
   i32.const 4
   i32.shl
   local.get $sl|18
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.1
  end
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store $0 offset=96
  local.get $root
  local.get $root
  call $~lib/rt/tlsf/Root#get:flMap
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  block $~lib/rt/tlsf/GETSL|inlined.1 (result i32)
   local.get $root
   local.set $root|24
   local.get $fl
   local.set $fl|25
   local.get $root|24
   local.get $fl|25
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.1
  end
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $root|3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|9 i32)
  (local $tail|10 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  block $~lib/rt/tlsf/GETTAIL|inlined.0 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.0
  end
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 5520
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    call $~lib/rt/common/BLOCK#get:mmInfo
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 5520
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|9
  local.get $tail
  local.set $tail|10
  local.get $root|9
  local.get $tail|10
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
  return
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $root|7 i32)
  (local $fl|8 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store $0 offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   if
    local.get $root
    local.set $root|7
    local.get $fl
    local.set $fl|8
    i32.const 0
    local.set $slMap
    local.get $root|7
    local.get $fl|8
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store $0 offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     if
      local.get $root
      local.set $root|11
      local.get $fl
      local.set $fl|12
      local.get $sl
      local.set $sl|13
      i32.const 0
      local.set $head
      local.get $root|11
      local.get $fl|12
      i32.const 4
      i32.shl
      local.get $sl|13
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store $0 offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 5248
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
  return
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 20
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
  return
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 5184
   i32.const 5520
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
  return
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $requestSize
   i32.const 31
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETSL|inlined.2 (result i32)
   local.get $root
   local.set $root|5
   local.get $fl
   local.set $fl|6
   local.get $root|5
   local.get $fl|6
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=4
   br $~lib/rt/tlsf/GETSL|inlined.2
  end
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   call $~lib/rt/tlsf/Root#get:flMap
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    block $~lib/rt/tlsf/GETSL|inlined.3 (result i32)
     local.get $root
     local.set $root|10
     local.get $fl
     local.set $fl|11
     local.get $root|10
     local.get $fl|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     br $~lib/rt/tlsf/GETSL|inlined.3
    end
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 5520
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    block $~lib/rt/tlsf/GETHEAD|inlined.2 (result i32)
     local.get $root
     local.set $root|12
     local.get $fl
     local.set $fl|13
     local.get $slMap
     i32.ctz
     local.set $sl|14
     local.get $root|12
     local.get $fl|13
     i32.const 4
     i32.shl
     local.get $sl|14
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=96
     br $~lib/rt/tlsf/GETHEAD|inlined.2
    end
    local.set $head
   end
  else
   block $~lib/rt/tlsf/GETHEAD|inlined.3 (result i32)
    local.get $root
    local.set $root|15
    local.get $fl
    local.set $fl|16
    local.get $slMap
    i32.ctz
    local.set $sl|17
    local.get $root|15
    local.get $fl|16
    i32.const 4
    i32.shl
    local.get $sl|17
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    br $~lib/rt/tlsf/GETHEAD|inlined.3
   end
   local.set $head
  end
  local.get $head
  return
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  block $~lib/rt/tlsf/GETTAIL|inlined.1 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load $0 offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.1
  end
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.3 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.add
    local.get $block|7
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.3
   end
   block $~lib/rt/tlsf/GETRIGHT|inlined.2 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.2
   end
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 5520
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5520
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  return
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $this i32) (param $rtId i32)
  local.get $this
  local.get $rtId
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $this i32) (param $rtSize i32)
  local.get $this
  local.get $rtSize
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 5184
   i32.const 5248
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 5248
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $start:~lib/as-uuid/assembly/rng
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 5296
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 5328
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 5472
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  global.get $~lib/as-uuid/assembly/rng/POOL_SIZE
  call $~lib/typedarray/Uint8Array#constructor
  global.set $~lib/as-uuid/assembly/rng/rnds8Pool
  global.get $~lib/as-uuid/assembly/rng/POOL_SIZE
  global.set $~lib/as-uuid/assembly/rng/poolPtr
 )
 (func $start:~lib/as-uuid/assembly/uuid
  call $start:~lib/as-uuid/assembly/rng
 )
 (func $start:~lib/as-uuid/assembly/index
  call $start:~lib/as-uuid/assembly/uuid
 )
 (func $~lib/set/Set<~lib/string/String>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/set/Set<~lib/string/String>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/set/Set<~lib/string/String>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/set/Set<~lib/string/String>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/set/Set<~lib/string/String>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/set/Set<~lib/string/String>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/rt/common/OBJECT#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 1
  i32.shr_u
  return
 )
 (func $~lib/set/Set<~lib/string/String>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/set/Set<~lib/string/String>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/set/SetEntry<~lib/string/String>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/set/SetEntry<~lib/string/String>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load $0
     local.get $ptr2
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $7
   i32.const 1
   i32.sub
   local.set $len
   local.get $7
   if
    local.get $ptr1
    i32.load16_u $0
    local.set $a
    local.get $ptr2
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
  return
 )
 (func $~lib/set/Set<~lib/string/String>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/set/Set<~lib/string/String>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/set/Set<~lib/string/String>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/set/Set<~lib/string/String>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/set/SetEntry<~lib/string/String>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/set/SetEntry<~lib/string/String>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=4
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len (param $this i32) (param $len i32)
  local.get $this
  local.get $len
  i32.store $0
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:pos (param $this i32) (param $pos i32)
  local.get $this
  local.get $pos
  i32.store $0 offset=4
  local.get $this
  local.get $pos
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlen (param $this i32) (param $varlen i32)
  local.get $this
  local.get $varlen
  i32.store $0 offset=8
  local.get $this
  local.get $varlen
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlenidx (param $this i32) (param $varlenidx i32)
  local.get $this
  local.get $varlenidx
  i32.store $0 offset=12
  local.get $this
  local.get $varlenidx
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:sizer (param $this i32) (param $sizer i32)
  local.get $this
  local.get $sizer
  i32.store $0
  local.get $this
  local.get $sizer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:buf (param $this i32) (param $buf i32)
  local.get $this
  local.get $buf
  i32.store $0 offset=8
  local.get $this
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:buf (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr (param $this i32) (param $ptr i32)
  local.get $this
  local.get $ptr
  i32.store $0 offset=4
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx (param $this i32) (param $varlenidx i32)
  local.get $this
  local.get $varlenidx
  i32.store $0 offset=12
 )
 (func $~lib/as-proto/assembly/Reader/Reader#set:ptr (param $this i32) (param $ptr i32)
  local.get $this
  local.get $ptr
  i32.store $0
 )
 (func $~lib/as-proto/assembly/Reader/Reader#set:end (param $this i32) (param $end i32)
  local.get $this
  local.get $end
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#set:buf (param $this i32) (param $buf i32)
  local.get $this
  local.get $buf
  i32.store $0 offset=8
  local.get $this
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $start:~lib/as-proto/assembly/index
  call $start:~lib/as-proto/assembly/Protobuf
 )
 (func $start:assembly/types/protobuf-generated/CustomDataValue
  call $start:~lib/as-proto/assembly/index
 )
 (func $start:assembly/types/index
  call $start:assembly/types/dvcEvent
  call $start:assembly/types/protobuf-generated/CustomDataValue
 )
 (func $start:assembly/helpers/murmurhash
  i32.const 0
  global.get $assembly/helpers/murmurhash/murmurhashBufferSize
  call $~lib/staticarray/StaticArray<i32>#constructor
  global.set $assembly/helpers/murmurhash/keyBuffer
 )
 (func $assembly/bucketing/versionCompare/OptionsType#get:lexicographical (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $assembly/bucketing/versionCompare/OptionsType#get:zeroExtend (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=1
 )
 (func $~lib/array/Array<~lib/string/String>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtId
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtSize
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
  return
 )
 (func $~lib/array/Array<~lib/string/String>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/string/String>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current (param $this i32) (param $current i32)
  local.get $this
  local.get $current
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:sourceString (param $this i32) (param $sourceString i32)
  local.get $this
  local.get $sourceString
  i32.store $0 offset=8
  local.get $this
  local.get $sourceString
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:cursor (param $this i32) (param $cursor i32)
  local.get $this
  local.get $cursor
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#set:iterator (param $this i32) (param $iterator i32)
  local.get $this
  local.get $iterator
  i32.store $0
  local.get $this
  local.get $iterator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#set:body (param $this i32) (param $body i32)
  local.get $this
  local.get $body
  i32.store $0 offset=4
  local.get $this
  local.get $body
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#set:expressions (param $this i32) (param $expressions i32)
  local.get $this
  local.get $expressions
  i32.store $0 offset=4
  local.get $this
  local.get $expressions
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:left (param $this i32) (param $left i32)
  local.get $this
  local.get $left
  i32.store $0 offset=4
  local.get $this
  local.get $left
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:right (param $this i32) (param $right i32)
  local.get $this
  local.get $right
  i32.store $0 offset=8
  local.get $this
  local.get $right
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:expression (param $this i32) (param $expression i32)
  local.get $this
  local.get $expression
  i32.store $0 offset=4
  local.get $this
  local.get $expression
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:capturing (param $this i32) (param $capturing i32)
  local.get $this
  local.get $capturing
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/char/isDigit (param $code i32) (result i32)
  (local $value i32)
  (local $from i32)
  (local $to i32)
  block $~lib/assemblyscript-regex/assembly/char/inRange|inlined.0 (result i32)
   local.get $code
   local.set $value
   i32.const 48
   local.set $from
   i32.const 57
   local.set $to
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $value
   local.get $from
   i32.sub
   local.get $to
   local.get $from
   i32.sub
   i32.const 1
   i32.add
   i32.lt_u
   br $~lib/assemblyscript-regex/assembly/char/inRange|inlined.0
  end
  return
 )
 (func $~lib/string/String.fromCharCode@varargs (param $unit i32) (param $surr i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $surr
  end
  local.get $unit
  local.get $surr
  call $~lib/string/String.fromCharCode
 )
 (func $~lib/util/string/isSpace (param $c i32) (result i32)
  (local $1 i32)
  local.get $c
  i32.const 5760
  i32.lt_u
  if
   local.get $c
   i32.const 128
   i32.or
   i32.const 160
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $c
    i32.const 9
    i32.sub
    i32.const 13
    i32.const 9
    i32.sub
    i32.le_u
   end
   return
  end
  local.get $c
  i32.const 8192
  i32.sub
  i32.const 8202
  i32.const 8192
  i32.sub
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $c
          local.set $1
          local.get $1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#set:from (param $this i32) (param $from i32)
  local.get $this
  local.get $from
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#set:to (param $this i32) (param $to i32)
  local.get $this
  local.get $to
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:expression (param $this i32) (param $expression i32)
  local.get $this
  local.get $expression
  i32.store $0 offset=4
  local.get $this
  local.get $expression
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:from (param $this i32) (param $from i32)
  local.get $this
  local.get $from
  i32.store $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:to (param $this i32) (param $to i32)
  local.get $this
  local.get $to
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:greedy (param $this i32) (param $greedy i32)
  local.get $this
  local.get $greedy
  i32.store8 $0 offset=16
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#get:from (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#get:to (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter (param $code i32) (result i32)
  (local $1 i32)
  block $break|0
   block $case13|0
    block $case12|0
     block $case11|0
      block $case10|0
       block $case9|0
        block $case8|0
         block $case7|0
          block $case6|0
           block $case5|0
            block $case4|0
             block $case3|0
              block $case2|0
               block $case1|0
                block $case0|0
                 local.get $code
                 local.set $1
                 local.get $1
                 i32.const 36
                 i32.eq
                 br_if $case0|0
                 local.get $1
                 i32.const 40
                 i32.eq
                 br_if $case1|0
                 local.get $1
                 i32.const 41
                 i32.eq
                 br_if $case2|0
                 local.get $1
                 i32.const 42
                 i32.eq
                 br_if $case3|0
                 local.get $1
                 i32.const 43
                 i32.eq
                 br_if $case4|0
                 local.get $1
                 i32.const 46
                 i32.eq
                 br_if $case5|0
                 local.get $1
                 i32.const 63
                 i32.eq
                 br_if $case6|0
                 local.get $1
                 i32.const 92
                 i32.eq
                 br_if $case7|0
                 local.get $1
                 i32.const 91
                 i32.eq
                 br_if $case8|0
                 local.get $1
                 i32.const 93
                 i32.eq
                 br_if $case9|0
                 local.get $1
                 i32.const 94
                 i32.eq
                 br_if $case10|0
                 local.get $1
                 i32.const 124
                 i32.eq
                 br_if $case11|0
                 local.get $1
                 i32.const 123
                 i32.eq
                 br_if $case12|0
                 local.get $1
                 i32.const 125
                 i32.eq
                 br_if $case13|0
                 br $break|0
                end
               end
              end
             end
            end
           end
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#set:char (param $this i32) (param $char i32)
  local.get $this
  local.get $char
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/isAssertion (param $code i32) (result i32)
  local.get $code
  i32.const 36
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 94
   i32.eq
  end
  return
 )
 (func $~lib/assemblyscript-regex/assembly/char/isHexadecimalDigit (param $code i32) (result i32)
  (local $value i32)
  (local $from i32)
  (local $to i32)
  local.get $code
  call $~lib/assemblyscript-regex/assembly/char/isDigit
  if (result i32)
   i32.const 1
  else
   block $~lib/assemblyscript-regex/assembly/char/inRange|inlined.1 (result i32)
    local.get $code
    local.set $value
    i32.const 97
    local.set $from
    i32.const 102
    local.set $to
    i32.const 1
    i32.const 1
    i32.eq
    drop
    local.get $value
    local.get $from
    i32.sub
    local.get $to
    local.get $from
    i32.sub
    i32.const 1
    i32.add
    i32.lt_u
    br $~lib/assemblyscript-regex/assembly/char/inRange|inlined.1
   end
  end
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass (param $code i32) (result i32)
  (local $1 i32)
  block $break|0
   block $case11|0
    block $case10|0
     block $case9|0
      block $case8|0
       block $case7|0
        block $case6|0
         block $case5|0
          block $case4|0
           block $case3|0
            block $case2|0
             block $case1|0
              block $case0|0
               local.get $code
               local.set $1
               local.get $1
               i32.const 100
               i32.eq
               br_if $case0|0
               local.get $1
               i32.const 68
               i32.eq
               br_if $case1|0
               local.get $1
               i32.const 46
               i32.eq
               br_if $case2|0
               local.get $1
               i32.const 119
               i32.eq
               br_if $case3|0
               local.get $1
               i32.const 87
               i32.eq
               br_if $case4|0
               local.get $1
               i32.const 115
               i32.eq
               br_if $case5|0
               local.get $1
               i32.const 83
               i32.eq
               br_if $case6|0
               local.get $1
               i32.const 116
               i32.eq
               br_if $case7|0
               local.get $1
               i32.const 114
               i32.eq
               br_if $case8|0
               local.get $1
               i32.const 110
               i32.eq
               br_if $case9|0
               local.get $1
               i32.const 118
               i32.eq
               br_if $case10|0
               local.get $1
               i32.const 102
               i32.eq
               br_if $case11|0
               br $break|0
              end
             end
            end
           end
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#set:charClass (param $this i32) (param $charClass i32)
  local.get $this
  local.get $charClass
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#set:kind (param $this i32) (param $kind i32)
  local.get $this
  local.get $kind
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/isQuantifier (param $code i32) (result i32)
  local.get $code
  i32.const 63
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 43
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 42
   i32.eq
  end
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:expression (param $this i32) (param $expression i32)
  local.get $this
  local.get $expression
  i32.store $0 offset=4
  local.get $this
  local.get $expression
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:quantifier (param $this i32) (param $quantifier i32)
  local.get $this
  local.get $quantifier
  i32.store $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:greedy (param $this i32) (param $greedy i32)
  local.get $this
  local.get $greedy
  i32.store8 $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#set:from (param $this i32) (param $from i32)
  local.get $this
  local.get $from
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#set:to (param $this i32) (param $to i32)
  local.get $this
  local.get $to
  i32.store $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/isCharacterSetSpecialChar (param $code i32) (result i32)
  local.get $code
  i32.const 94
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 45
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 93
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 92
   i32.eq
  end
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#set:expressions (param $this i32) (param $expressions i32)
  local.get $this
  local.get $expressions
  i32.store $0 offset=4
  local.get $this
  local.get $expressions
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#set:negated (param $this i32) (param $negated i32)
  local.get $this
  local.get $negated
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#set:global (param $this i32) (param $global i32)
  local.get $this
  local.get $global
  i32.store8 $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#set:ignoreCase (param $this i32) (param $ignoreCase i32)
  local.get $this
  local.get $ignoreCase
  i32.store8 $0 offset=1
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#set:dotAll (param $this i32) (param $dotAll i32)
  local.get $this
  local.get $dotAll
  i32.store8 $0 offset=2
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#set:multiline (param $this i32) (param $multiline i32)
  local.get $this
  local.get $multiline
  i32.store8 $0 offset=3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#get:kind (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:startOfInput (param $this i32) (param $startOfInput i32)
  local.get $this
  local.get $startOfInput
  i32.store8 $0 offset=13
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:endOfInput (param $this i32) (param $endOfInput i32)
  local.get $this
  local.get $endOfInput
  i32.store8 $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#get:node (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:to (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $t|9 i32)
  (local $d1|10 i32)
  (local $digits i32)
  (local $digits|12 i32)
  (local $digit i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 7820
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 7820
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $t|9
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $d1|10
   local.get $t|9
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 7820
   local.get $d1|10
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $digits
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits
   i32.store $0
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 7820
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $digits|12
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits|12
   i32.store $0
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $digit
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digit
   i32.store16 $0
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 8240
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 8240
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u $0
   i32.store16 $0
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $value i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  block $~lib/util/number/isPowerOf2<i32>|inlined.0 (result i32)
   local.get $base
   local.set $value
   local.get $value
   i32.popcnt
   i32.const 1
   i32.eq
   br $~lib/util/number/isPowerOf2<i32>|inlined.0
  end
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
  return
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $shift i64)
  (local $mask i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $shift
   local.get $base
   i64.const 1
   i64.sub
   local.set $mask
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 9296
    local.get $num
    local.get $mask
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $num
    local.get $shift
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 9296
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/I32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa32
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#get:parentNode (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#replace (param $this i32) (param $node i32) (param $replacement i32)
  i32.const 9392
  i32.const 6640
  i32.const 29
  i32.const 5
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:from (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:expression (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#clone (param $this i32) (result i32)
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:greedy (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=16
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#children (param $this i32) (result i32)
  global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#set:node (param $this i32) (param $node i32)
  local.get $this
  local.get $node
  i32.store $0
  local.get $this
  local.get $node
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#set:parentNode (param $this i32) (param $parentNode i32)
  local.get $this
  local.get $parentNode
  i32.store $0 offset=4
  local.get $this
  local.get $parentNode
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#set:flags (param $this i32) (param $flags i32)
  local.get $this
  local.get $flags
  i32.store $0
  local.get $this
  local.get $flags
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#set:transitions (param $this i32) (param $transitions i32)
  local.get $this
  local.get $transitions
  i32.store $0
  local.get $this
  local.get $transitions
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#set:start (param $this i32) (param $start i32)
  local.get $this
  local.get $start
  i32.store $0
  local.get $this
  local.get $start
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#set:end (param $this i32) (param $end i32)
  local.get $this
  local.get $end
  i32.store $0 offset=4
  local.get $this
  local.get $end
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:expression (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:quantifier (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:greedy (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#get:character (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#set:character (param $this i32) (param $character i32)
  local.get $this
  local.get $character
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#set:ignoreCase (param $this i32) (param $ignoreCase i32)
  local.get $this
  local.get $ignoreCase
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#get:char (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#get:ignoreCase (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=1
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#set:matcher (param $this i32) (param $matcher i32)
  local.get $this
  local.get $matcher
  i32.store $0 offset=12
  local.get $this
  local.get $matcher
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#set:ignoreCase (param $this i32) (param $ignoreCase i32)
  local.get $this
  local.get $ignoreCase
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:left (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:right (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:expressions (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#set:ranges (param $this i32) (param $ranges i32)
  local.get $this
  local.get $ranges
  i32.store $0 offset=4
  local.get $this
  local.get $ranges
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#set:from (param $this i32) (param $from i32)
  local.get $this
  local.get $from
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#set:to (param $this i32) (param $to i32)
  local.get $this
  local.get $to
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#get:from (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#get:to (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#get:ranges (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#set:range (param $this i32) (param $range i32)
  local.get $this
  local.get $range
  i32.store $0 offset=8
  local.get $this
  local.get $range
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:from (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:to (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#set:charClass (param $this i32) (param $charClass i32)
  local.get $this
  local.get $charClass
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#set:dotAll (param $this i32) (param $dotAll i32)
  local.get $this
  local.get $dotAll
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#get:charClass (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#get:dotAll (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#set:matchers (param $this i32) (param $matchers i32)
  local.get $this
  local.get $matchers
  i32.store $0 offset=4
  local.get $this
  local.get $matchers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#set:negated (param $this i32) (param $negated i32)
  local.get $this
  local.get $negated
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:negated (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#set:matcher (param $this i32) (param $matcher i32)
  local.get $this
  local.get $matcher
  i32.store $0 offset=12
  local.get $this
  local.get $matcher
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#set:ignoreCase (param $this i32) (param $ignoreCase i32)
  local.get $this
  local.get $ignoreCase
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#set:matcher (param $this i32) (param $matcher i32)
  local.get $this
  local.get $matcher
  i32.store $0 offset=12
  local.get $this
  local.get $matcher
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#set:ignoreCase (param $this i32) (param $ignoreCase i32)
  local.get $this
  local.get $ignoreCase
  i32.store8 $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:expression (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:capturing (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capturing (param $this i32) (param $capturing i32)
  local.get $this
  local.get $capturing
  i32.store8 $0 offset=17
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:groupId (param $this i32) (param $groupId i32)
  local.get $this
  local.get $groupId
  i32.store $0 offset=20
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:location (param $this i32) (param $location i32)
  local.get $this
  local.get $location
  i32.store $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capture (param $this i32) (param $capture i32)
  local.get $this
  local.get $capture
  i32.store $0 offset=12
  local.get $this
  local.get $capture
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:flagged (param $this i32) (param $flagged i32)
  local.get $this
  local.get $flagged
  i32.store8 $0 offset=16
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#set:startMarker (param $this i32) (param $startMarker i32)
  local.get $this
  local.get $startMarker
  i32.store $0 offset=8
  local.get $this
  local.get $startMarker
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capturing (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=17
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:nfa (param $this i32) (param $nfa i32)
  local.get $this
  local.get $nfa
  i32.store $0 offset=8
  local.get $this
  local.get $nfa
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:groupMarkers (param $this i32) (param $groupMarkers i32)
  local.get $this
  local.get $groupMarkers
  i32.store $0 offset=16
  local.get $this
  local.get $groupMarkers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:flags (param $this i32) (param $flags i32)
  local.get $this
  local.get $flags
  i32.store $0 offset=4
  local.get $this
  local.get $flags
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:regex (param $this i32) (param $regex i32)
  local.get $this
  local.get $regex
  i32.store $0 offset=20
  local.get $this
  local.get $regex
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:flagsString (param $this i32) (param $flagsString i32)
  local.get $this
  local.get $flagsString
  i32.store $0 offset=24
  local.get $this
  local.get $flagsString
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:lastIndex (param $this i32) (param $lastIndex i32)
  local.get $this
  local.get $lastIndex
  i32.store $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:groupMarkers (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:nfa (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/array/Array<u32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<u32>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Ignore
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#set:matches (param $this i32) (param $matches i32)
  local.get $this
  local.get $matches
  i32.store $0
  local.get $this
  local.get $matches
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#set:index (param $this i32) (param $index i32)
  local.get $this
  local.get $index
  i32.store $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#set:input (param $this i32) (param $input i32)
  local.get $this
  local.get $input
  i32.store $0 offset=8
  local.get $this
  local.get $input
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:lastIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:startOfInput (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=13
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#get:multiline (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:flagged (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=16
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capture (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:groupId (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#get:index (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#get:matches (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:endOfInput (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#get:global (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $~lib/array/Array<f64>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<f64>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $start:assembly/bucketing/versionCompare
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
  global.set $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  i32.const 0
  i32.const 97
  i32.const 122
  call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
  i32.const 0
  i32.const 65
  i32.const 90
  call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
  global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
 )
 (func $start:assembly/bucketing/segmentation
  call $start:assembly/bucketing/versionCompare
 )
 (func $start:assembly/bucketing/bucketing
  call $start:assembly/helpers/murmurhash
  call $start:assembly/bucketing/segmentation
 )
 (func $start:assembly/bucketing/index
  call $start:assembly/bucketing/bucketing
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $start:assembly/managers/configDataManager
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#constructor
  global.set $assembly/managers/configDataManager/_configData
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  global.set $assembly/managers/configDataManager/_configMetadata
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $start:assembly/managers/clientCustomDataManager
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#constructor
  global.set $assembly/managers/clientCustomDataManager/_clientCustomData
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $start:assembly/managers/eventQueueManager
  call $start:assembly/eventQueue/eventQueue
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#constructor
  global.set $assembly/managers/eventQueueManager/_eventQueueMap
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#constructor
  global.set $assembly/managers/eventQueueManager/_requestPayloadMap
 )
 (func $start:assembly/index
  (local $0 i32)
  (local $1 i32)
  call $start:assembly/types/index
  call $start:assembly/bucketing/index
  call $start:assembly/managers/configDataManager
  call $start:assembly/managers/clientCustomDataManager
  call $start:assembly/managers/eventQueueManager
 )
 (func $~lib/staticarray/StaticArray<i32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/array/Array<~lib/string/String>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/string/String>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/string/String>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/staticarray/StaticArray<i32>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<i32>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  return
 )
 (func $assembly/bucketing/bucketing/BoundedHash#set:rolloutHash (param $this i32) (param $rolloutHash f64)
  local.get $this
  local.get $rolloutHash
  f64.store $0
 )
 (func $assembly/bucketing/bucketing/BoundedHash#set:bucketingHash (param $this i32) (param $bucketingHash f64)
  local.get $this
  local.get $bucketingHash
  f64.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set:_obj (param $this i32) (param $_obj i32)
  local.get $this
  local.get $_obj
  i32.store $0
  local.get $this
  local.get $_obj
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/BoundedHash#get:rolloutHash (param $this i32) (result f64)
  local.get $this
  f64.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#set:_num (param $this i32) (param $_num f64)
  local.get $this
  local.get $_num
  f64.store $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float (param $num f64) (result i32)
  i32.const 0
  local.get $num
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float#constructor
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<f64> (param $val f64) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $val
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/bucketing/bucketing/BoundedHash#get:bucketingHash (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify (param $this i32) (result i32)
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcUser/DVCUser#get:user_id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:user_id (param $this i32) (param $user_id i32)
  local.get $this
  local.get $user_id
  i32.store $0
  local.get $this
  local.get $user_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:email (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:email (param $this i32) (param $email i32)
  local.get $this
  local.get $email
  i32.store $0 offset=4
  local.get $this
  local.get $email
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=8
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:language (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:language (param $this i32) (param $language i32)
  local.get $this
  local.get $language
  i32.store $0 offset=12
  local.get $this
  local.get $language
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:country (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:country (param $this i32) (param $country i32)
  local.get $this
  local.get $country
  i32.store $0 offset=16
  local.get $this
  local.get $country
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:appVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:appVersion (param $this i32) (param $appVersion i32)
  local.get $this
  local.get $appVersion
  i32.store $0 offset=20
  local.get $this
  local.get $appVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:appBuild (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=24
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:appBuild (param $this i32) (param $appBuild f64)
  local.get $this
  local.get $appBuild
  f64.store $0 offset=24
 )
 (func $assembly/types/dvcUser/DVCUser#get:customData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=40
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:customData (param $this i32) (param $customData i32)
  local.get $this
  local.get $customData
  i32.store $0 offset=32
  local.get $this
  local.get $customData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:privateCustomData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=44
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:privateCustomData (param $this i32) (param $privateCustomData i32)
  local.get $this
  local.get $privateCustomData
  i32.store $0 offset=36
  local.get $this
  local.get $privateCustomData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#get:deviceModel (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:deviceModel (param $this i32) (param $deviceModel i32)
  local.get $this
  local.get $deviceModel
  i32.store $0 offset=44
  local.get $this
  local.get $deviceModel
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Null (result i32)
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Object (result i32)
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null> (param $val i32) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $val
  i32.const 0
  i32.eq
  if
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Null
   return
  end
  i32.const 0
  drop
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Object
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:_combinedCustomData (param $this i32) (param $_combinedCustomData i32)
  local.get $this
  local.get $_combinedCustomData
  i32.store $0 offset=40
  local.get $this
  local.get $_combinedCustomData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/date/invalidDate (param $millis i64) (result i32)
  local.get $millis
  i64.const 0
  i64.const 8640000000000000
  i64.sub
  i64.lt_s
  local.get $millis
  i64.const 8640000000000000
  i64.gt_s
  i32.or
  return
 )
 (func $~lib/date/dateFromEpoch (param $ms i64) (result i32)
  (local $a i64)
  (local $b i64)
  (local $da i32)
  (local $a|4 i32)
  (local $b|5 i32)
  (local $q0 i32)
  (local $r1 i32)
  (local $u1 i64)
  (local $dm1 i32)
  (local $n1 i32)
  (local $year i32)
  (local $mo i32)
  block $~lib/date/floorDiv<i64>|inlined.0 (result i64)
   local.get $ms
   local.set $a
   i32.const 86400000
   i64.extend_i32_s
   local.set $b
   local.get $a
   local.get $a
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $b
    i64.const 1
    i64.sub
   else
    i64.const 0
   end
   i64.sub
   local.get $b
   i64.div_s
   br $~lib/date/floorDiv<i64>|inlined.0
  end
  i32.wrap_i64
  i32.const 4
  i32.mul
  i32.const 719468
  i32.const 4
  i32.mul
  i32.add
  i32.const 3
  i32.or
  local.set $da
  block $~lib/date/floorDiv<i32>|inlined.0 (result i32)
   local.get $da
   local.set $a|4
   i32.const 146097
   local.set $b|5
   local.get $a|4
   local.get $a|4
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $b|5
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $b|5
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.0
  end
  local.set $q0
  local.get $da
  local.get $q0
  i32.const 146097
  i32.mul
  i32.sub
  local.set $r1
  local.get $r1
  i32.const 3
  i32.or
  i64.extend_i32_u
  i64.const 2939745
  i64.mul
  local.set $u1
  local.get $u1
  i32.wrap_i64
  i32.const 11758980
  i32.div_u
  local.set $dm1
  i32.const 2141
  local.get $dm1
  i32.mul
  i32.const 197913
  i32.add
  local.set $n1
  i32.const 100
  local.get $q0
  i32.mul
  local.get $u1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.add
  local.set $year
  local.get $n1
  i32.const 16
  i32.shr_u
  local.set $mo
  local.get $n1
  i32.const 65535
  i32.and
  i32.const 2141
  i32.div_s
  i32.const 1
  i32.add
  global.set $~lib/date/_day
  local.get $dm1
  i32.const 306
  i32.ge_u
  if
   local.get $mo
   i32.const 12
   i32.sub
   local.set $mo
   local.get $year
   i32.const 1
   i32.add
   local.set $year
  end
  local.get $mo
  global.set $~lib/date/_month
  local.get $year
  return
 )
 (func $~lib/date/Date#set:year (param $this i32) (param $year i32)
  local.get $this
  local.get $year
  i32.store $0
 )
 (func $~lib/date/Date#set:month (param $this i32) (param $month i32)
  local.get $this
  local.get $month
  i32.store $0 offset=4
 )
 (func $~lib/date/Date#set:day (param $this i32) (param $day i32)
  local.get $this
  local.get $day
  i32.store $0 offset=8
 )
 (func $~lib/date/Date#set:epochMillis (param $this i32) (param $epochMillis i64)
  local.get $this
  local.get $epochMillis
  i64.store $0 offset=16
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:createdDate (param $this i32) (param $createdDate i32)
  local.get $this
  local.get $createdDate
  i32.store $0 offset=48
  local.get $this
  local.get $createdDate
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:lastSeenDate (param $this i32) (param $lastSeenDate i32)
  local.get $this
  local.get $lastSeenDate
  i32.store $0 offset=52
  local.get $this
  local.get $lastSeenDate
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:platform (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:platform (param $this i32) (param $platform i32)
  local.get $this
  local.get $platform
  i32.store $0 offset=56
  local.get $this
  local.get $platform
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:platformVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:platformVersion (param $this i32) (param $platformVersion i32)
  local.get $this
  local.get $platformVersion
  i32.store $0 offset=60
  local.get $this
  local.get $platformVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:sdkType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:sdkType (param $this i32) (param $sdkType i32)
  local.get $this
  local.get $sdkType
  i32.store $0 offset=64
  local.get $this
  local.get $sdkType
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:sdkVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:sdkVersion (param $this i32) (param $sdkVersion i32)
  local.get $this
  local.get $sdkVersion
  i32.store $0 offset=68
  local.get $this
  local.get $sdkVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:sdkPlatform (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:sdkPlatform (param $this i32) (param $sdkPlatform i32)
  local.get $this
  local.get $sdkPlatform
  i32.store $0 offset=72
  local.get $this
  local.get $sdkPlatform
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#get:hostname (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#set:hostname (param $this i32) (param $hostname i32)
  local.get $this
  local.get $hostname
  i32.store $0 offset=76
  local.get $this
  local.get $hostname
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/string/String.UTF8.byteLength (param $str i32) (param $nullTerminated i32) (result i32)
  (local $strOff i32)
  (local $strEnd i32)
  (local $bufLen i32)
  (local $c1 i32)
  local.get $str
  local.set $strOff
  local.get $strOff
  local.get $str
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $strEnd
  local.get $nullTerminated
  i32.const 0
  i32.ne
  local.set $bufLen
  block $while-break|0
   loop $while-continue|0
    local.get $strOff
    local.get $strEnd
    i32.lt_u
    if
     local.get $strOff
     i32.load16_u $0
     local.set $c1
     local.get $c1
     i32.const 128
     i32.lt_u
     if
      local.get $nullTerminated
      local.get $c1
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $bufLen
      i32.const 1
      i32.add
      local.set $bufLen
     else
      local.get $c1
      i32.const 2048
      i32.lt_u
      if
       local.get $bufLen
       i32.const 2
       i32.add
       local.set $bufLen
      else
       local.get $c1
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       if (result i32)
        local.get $strOff
        i32.const 2
        i32.add
        local.get $strEnd
        i32.lt_u
       else
        i32.const 0
       end
       if
        local.get $strOff
        i32.load16_u $0 offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $bufLen
         i32.const 4
         i32.add
         local.set $bufLen
         local.get $strOff
         i32.const 4
         i32.add
         local.set $strOff
         br $while-continue|0
        end
       end
       local.get $bufLen
       i32.const 3
       i32.add
       local.set $bufLen
      end
     end
     local.get $strOff
     i32.const 2
     i32.add
     local.set $strOff
     br $while-continue|0
    end
   end
  end
  local.get $bufLen
  return
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $str i32) (param $len i32) (param $buf i32) (param $nullTerminated i32) (param $errorMode i32) (result i32)
  (local $strEnd i32)
  (local $bufOff i32)
  (local $c1 i32)
  (local $b0 i32)
  (local $b1 i32)
  (local $c2 i32)
  (local $b0|11 i32)
  (local $b1|12 i32)
  (local $b2 i32)
  (local $b3 i32)
  (local $b0|15 i32)
  (local $b1|16 i32)
  (local $b2|17 i32)
  (local $18 i32)
  local.get $str
  local.get $len
  i32.const 1
  i32.shl
  i32.add
  local.set $strEnd
  local.get $buf
  local.set $bufOff
  loop $while-continue|0
   local.get $str
   local.get $strEnd
   i32.lt_u
   if
    local.get $str
    i32.load16_u $0
    local.set $c1
    local.get $c1
    i32.const 128
    i32.lt_u
    if
     local.get $bufOff
     local.get $c1
     i32.store8 $0
     local.get $bufOff
     i32.const 1
     i32.add
     local.set $bufOff
     local.get $nullTerminated
     local.get $c1
     i32.eqz
     i32.and
     if
      local.get $bufOff
      local.get $buf
      i32.sub
      return
     end
    else
     local.get $c1
     i32.const 2048
     i32.lt_u
     if
      local.get $c1
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      local.set $b0
      local.get $c1
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $b1
      local.get $bufOff
      local.get $b1
      i32.const 8
      i32.shl
      local.get $b0
      i32.or
      i32.store16 $0
      local.get $bufOff
      i32.const 2
      i32.add
      local.set $bufOff
     else
      local.get $c1
      i32.const 63488
      i32.and
      i32.const 55296
      i32.eq
      if
       local.get $c1
       i32.const 56320
       i32.lt_u
       if (result i32)
        local.get $str
        i32.const 2
        i32.add
        local.get $strEnd
        i32.lt_u
       else
        i32.const 0
       end
       if
        local.get $str
        i32.load16_u $0 offset=2
        local.set $c2
        local.get $c2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         i32.const 65536
         local.get $c1
         i32.const 1023
         i32.and
         i32.const 10
         i32.shl
         i32.add
         local.get $c2
         i32.const 1023
         i32.and
         i32.or
         local.set $c1
         local.get $c1
         i32.const 18
         i32.shr_u
         i32.const 240
         i32.or
         local.set $b0|11
         local.get $c1
         i32.const 12
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $b1|12
         local.get $c1
         i32.const 6
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $b2
         local.get $c1
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         local.set $b3
         local.get $bufOff
         local.get $b3
         i32.const 24
         i32.shl
         local.get $b2
         i32.const 16
         i32.shl
         i32.or
         local.get $b1|12
         i32.const 8
         i32.shl
         i32.or
         local.get $b0|11
         i32.or
         i32.store $0
         local.get $bufOff
         i32.const 4
         i32.add
         local.set $bufOff
         local.get $str
         i32.const 4
         i32.add
         local.set $str
         br $while-continue|0
        end
       end
       local.get $errorMode
       i32.const 0
       i32.ne
       if
        local.get $errorMode
        i32.const 2
        i32.eq
        if
         i32.const 11600
         i32.const 11664
         i32.const 742
         i32.const 49
         call $~lib/builtins/abort
         unreachable
        end
        i32.const 65533
        local.set $c1
       end
      end
      local.get $c1
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      local.set $b0|15
      local.get $c1
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $b1|16
      local.get $c1
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      local.set $b2|17
      local.get $bufOff
      local.get $b1|16
      i32.const 8
      i32.shl
      local.get $b0|15
      i32.or
      i32.store16 $0
      local.get $bufOff
      local.get $b2|17
      i32.store8 $0 offset=2
      local.get $bufOff
      i32.const 3
      i32.add
      local.set $bufOff
     end
    end
    local.get $str
    i32.const 2
    i32.add
    local.set $str
    br $while-continue|0
   end
  end
  local.get $nullTerminated
  if
   local.get $bufOff
   local.tee $18
   i32.const 1
   i32.add
   local.set $bufOff
   local.get $18
   i32.const 0
   i32.store8 $0
  end
  local.get $bufOff
  local.get $buf
  i32.sub
  return
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:handler (param $this i32) (param $handler i32)
  local.get $this
  local.get $handler
  i32.store $0
  local.get $this
  local.get $handler
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:_state (param $this i32) (param $_state i32)
  local.get $this
  local.get $_state
  i32.store $0 offset=4
  local.get $this
  local.get $_state
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#set:stack (param $this i32) (param $stack i32)
  local.get $this
  local.get $stack
  i32.store $0
  local.get $this
  local.get $stack
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0 offset=8
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:lastKey (param $this i32) (param $lastKey i32)
  local.get $this
  local.get $lastKey
  i32.store $0
  local.get $this
  local.get $lastKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:readIndex (param $this i32) (param $readIndex i32)
  local.get $this
  local.get $readIndex
  i32.store $0 offset=4
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:_state (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#isWhitespace (param $this i32) (param $charCode i32) (result i32)
  local.get $charCode
  i32.const 9
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $charCode
   i32.const 10
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $charCode
   i32.const 13
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $charCode
   i32.const 32
   i32.eq
  end
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#get:_arr (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#set:_arr (param $this i32) (param $_arr i32)
  local.get $this
  local.get $_arr
  i32.store $0
  local.get $this
  local.get $_arr
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Array (result i32)
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#set:_str (param $this i32) (param $_str i32)
  local.get $this
  local.get $_str
  i32.store $0
  local.get $this
  local.get $_str
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#set:_bool (param $this i32) (param $_bool i32)
  local.get $this
  local.get $_bool
  i32.store8 $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool (param $b i32) (result i32)
  i32.const 0
  local.get $b
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#constructor
  return
 )
 (func $~lib/math/ipow32 (param $x i32) (param $e i32) (result i32)
  (local $out i32)
  (local $log i32)
  (local $4 i32)
  i32.const 1
  local.set $out
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $x
  i32.const 2
  i32.eq
  if
   i32.const 1
   local.get $e
   i32.shl
   i32.const 0
   local.get $e
   i32.const 32
   i32.lt_u
   select
   return
  end
  local.get $e
  i32.const 0
  i32.le_s
  if
   local.get $x
   i32.const -1
   i32.eq
   if
    i32.const -1
    i32.const 1
    local.get $e
    i32.const 1
    i32.and
    select
    return
   end
   local.get $e
   i32.const 0
   i32.eq
   local.get $x
   i32.const 1
   i32.eq
   i32.or
   return
  else
   local.get $e
   i32.const 1
   i32.eq
   if
    local.get $x
    return
   else
    local.get $e
    i32.const 2
    i32.eq
    if
     local.get $x
     local.get $x
     i32.mul
     return
    else
     local.get $e
     i32.const 32
     i32.lt_s
     if
      i32.const 32
      local.get $e
      i32.clz
      i32.sub
      local.set $log
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            local.get $log
            local.set $4
            local.get $4
            i32.const 5
            i32.eq
            br_if $case0|0
            local.get $4
            i32.const 4
            i32.eq
            br_if $case1|0
            local.get $4
            i32.const 3
            i32.eq
            br_if $case2|0
            local.get $4
            i32.const 2
            i32.eq
            br_if $case3|0
            local.get $4
            i32.const 1
            i32.eq
            br_if $case4|0
            br $break|0
           end
           local.get $e
           i32.const 1
           i32.and
           if
            local.get $out
            local.get $x
            i32.mul
            local.set $out
           end
           local.get $e
           i32.const 1
           i32.shr_u
           local.set $e
           local.get $x
           local.get $x
           i32.mul
           local.set $x
          end
          local.get $e
          i32.const 1
          i32.and
          if
           local.get $out
           local.get $x
           i32.mul
           local.set $out
          end
          local.get $e
          i32.const 1
          i32.shr_u
          local.set $e
          local.get $x
          local.get $x
          i32.mul
          local.set $x
         end
         local.get $e
         i32.const 1
         i32.and
         if
          local.get $out
          local.get $x
          i32.mul
          local.set $out
         end
         local.get $e
         i32.const 1
         i32.shr_u
         local.set $e
         local.get $x
         local.get $x
         i32.mul
         local.set $x
        end
        local.get $e
        i32.const 1
        i32.and
        if
         local.get $out
         local.get $x
         i32.mul
         local.set $out
        end
        local.get $e
        i32.const 1
        i32.shr_u
        local.set $e
        local.get $x
        local.get $x
        i32.mul
        local.set $x
       end
       local.get $e
       i32.const 1
       i32.and
       if
        local.get $out
        local.get $x
        i32.mul
        local.set $out
       end
      end
      local.get $out
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $e
   if
    local.get $e
    i32.const 1
    i32.and
    if
     local.get $out
     local.get $x
     i32.mul
     local.set $out
    end
    local.get $e
    i32.const 1
    i32.shr_u
    local.set $e
    local.get $x
    local.get $x
    i32.mul
    local.set $x
    br $while-continue|1
   end
  end
  local.get $out
  return
 )
 (func $~lib/math/NativeMath.scalbn (param $x f64) (param $n i32) (result f64)
  (local $y f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $x
  local.set $y
  local.get $n
  i32.const 1023
  i32.gt_s
  if
   local.get $y
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $y
   local.get $n
   i32.const 1023
   i32.sub
   local.set $n
   local.get $n
   i32.const 1023
   i32.gt_s
   if
    local.get $y
    f64.const 8988465674311579538646525e283
    f64.mul
    local.set $y
    local.get $n
    i32.const 1023
    i32.sub
    local.tee $3
    i32.const 1023
    local.tee $4
    local.get $3
    local.get $4
    i32.lt_s
    select
    local.set $n
   end
  else
   local.get $n
   i32.const -1022
   i32.lt_s
   if
    local.get $y
    f64.const 2.2250738585072014e-308
    f64.const 9007199254740992
    f64.mul
    f64.mul
    local.set $y
    local.get $n
    i32.const 1022
    i32.const 53
    i32.sub
    i32.add
    local.set $n
    local.get $n
    i32.const -1022
    i32.lt_s
    if
     local.get $y
     f64.const 2.2250738585072014e-308
     f64.const 9007199254740992
     f64.mul
     f64.mul
     local.set $y
     local.get $n
     i32.const 1022
     i32.add
     i32.const 53
     i32.sub
     local.tee $5
     i32.const -1022
     local.tee $6
     local.get $5
     local.get $6
     i32.gt_s
     select
     local.set $n
    end
   end
  end
  local.get $y
  i64.const 1023
  local.get $n
  i64.extend_i32_s
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#set:_num (param $this i32) (param $_num i64)
  local.get $this
  local.get $_num
  i64.store $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer (param $num i64) (result i32)
  i32.const 0
  local.get $num
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#constructor
  return
 )
 (func $assembly/types/dvcUser/DVCUser#set:user_id (param $this i32) (param $user_id i32)
  local.get $this
  local.get $user_id
  i32.store $0 offset=4
  local.get $this
  local.get $user_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:email (param $this i32) (param $email i32)
  local.get $this
  local.get $email
  i32.store $0 offset=8
  local.get $this
  local.get $email
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=12
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:language (param $this i32) (param $language i32)
  local.get $this
  local.get $language
  i32.store $0 offset=16
  local.get $this
  local.get $language
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:country (param $this i32) (param $country i32)
  local.get $this
  local.get $country
  i32.store $0 offset=20
  local.get $this
  local.get $country
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:appVersion (param $this i32) (param $appVersion i32)
  local.get $this
  local.get $appVersion
  i32.store $0 offset=32
  local.get $this
  local.get $appVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:appBuild (param $this i32) (param $appBuild f64)
  local.get $this
  local.get $appBuild
  f64.store $0 offset=24
 )
 (func $assembly/types/dvcUser/DVCUser#set:deviceModel (param $this i32) (param $deviceModel i32)
  local.get $this
  local.get $deviceModel
  i32.store $0 offset=36
  local.get $this
  local.get $deviceModel
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:customData (param $this i32) (param $customData i32)
  local.get $this
  local.get $customData
  i32.store $0 offset=40
  local.get $this
  local.get $customData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcUser/DVCUser#set:privateCustomData (param $this i32) (param $privateCustomData i32)
  local.get $this
  local.get $privateCustomData
  i32.store $0 offset=44
  local.get $this
  local.get $privateCustomData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#get:_num (param $this i32) (result f64)
  local.get $this
  f64.load $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#get:_num (param $this i32) (result i64)
  local.get $this
  i64.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:features (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureV2/FeatureV2#get:configuration (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:targets (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:project (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/PublicProject#get:settings (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/configBody/Settings#get:disablePassthroughRollouts (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $assembly/types/targetV2/TargetV2#get:rollout (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/targetV2/TargetV2#get:bucketingKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:_combinedCustomData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=40
 )
 (func $~lib/string/String#toString (param $this i32) (result i32)
  local.get $this
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:user_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/targetV2/TargetV2#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/target/Rollout#get:startPercentage (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $assembly/types/target/Rollout#get:startDate (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/date/Date#get:epochMillis (param $this i32) (result i64)
  local.get $this
  i64.load $0 offset=16
 )
 (func $assembly/types/target/Rollout#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/target/Rollout#get:stages (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/RolloutStage#get:date (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/date/Date#get:year (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/memory/memory.repeat (param $dst i32) (param $src i32) (param $srcLength i32) (param $count i32)
  (local $index i32)
  (local $total i32)
  i32.const 0
  local.set $index
  local.get $srcLength
  local.get $count
  i32.mul
  local.set $total
  loop $while-continue|0
   local.get $index
   local.get $total
   i32.lt_u
   if
    local.get $dst
    local.get $index
    i32.add
    local.get $src
    local.get $srcLength
    memory.copy $0 $0
    local.get $index
    local.get $srcLength
    i32.add
    local.set $index
    br $while-continue|0
   end
  end
 )
 (func $~lib/date/Date#get:month (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/date/Date#get:day (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/target/RolloutStage#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/date/daysSinceEpoch (param $y i32) (param $m i32) (param $d i32) (result i64)
  (local $a i32)
  (local $b i32)
  (local $era i32)
  (local $yoe i32)
  (local $doy i32)
  (local $doe i32)
  local.get $y
  local.get $m
  i32.const 2
  i32.le_s
  i32.sub
  local.set $y
  block $~lib/date/floorDiv<i32>|inlined.1 (result i32)
   local.get $y
   local.set $a
   i32.const 400
   local.set $b
   local.get $a
   local.get $a
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $b
    i32.const 1
    i32.sub
   else
    i32.const 0
   end
   i32.sub
   local.get $b
   i32.div_s
   br $~lib/date/floorDiv<i32>|inlined.1
  end
  local.set $era
  local.get $y
  local.get $era
  i32.const 400
  i32.mul
  i32.sub
  local.set $yoe
  i32.const 153
  local.get $m
  local.get $m
  i32.const 2
  i32.gt_s
  if (result i32)
   i32.const -3
  else
   i32.const 9
  end
  i32.add
  i32.mul
  i32.const 2
  i32.add
  i32.const 5
  i32.div_u
  local.get $d
  i32.add
  i32.const 1
  i32.sub
  local.set $doy
  local.get $yoe
  i32.const 365
  i32.mul
  local.get $yoe
  i32.const 4
  i32.div_u
  i32.add
  local.get $yoe
  i32.const 100
  i32.div_u
  i32.sub
  local.get $doy
  i32.add
  local.set $doe
  local.get $era
  i32.const 146097
  i32.mul
  local.get $doe
  i32.add
  i32.const 719468
  i32.sub
  i64.extend_i32_s
  return
 )
 (func $~lib/date/epochMillis (param $year i32) (param $month i32) (param $day i32) (param $hour i32) (param $minute i32) (param $second i32) (param $milliseconds i32) (result i64)
  local.get $year
  local.get $month
  local.get $day
  call $~lib/date/daysSinceEpoch
  i32.const 86400000
  i64.extend_i32_s
  i64.mul
  local.get $hour
  i32.const 3600000
  i32.mul
  i64.extend_i32_s
  i64.add
  local.get $minute
  i32.const 60000
  i32.mul
  i64.extend_i32_s
  i64.add
  local.get $second
  i32.const 1000
  i32.mul
  i64.extend_i32_s
  i64.add
  local.get $milliseconds
  i64.extend_i32_s
  i64.add
  return
 )
 (func $assembly/types/target/RolloutStage#set:date (param $this i32) (param $date i32)
  local.get $this
  local.get $date
  i32.store $0 offset=4
  local.get $this
  local.get $date
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/util/number/genDigits (param $buffer i32) (param $w_frc i64) (param $w_exp i32) (param $mp_frc i64) (param $mp_exp i32) (param $delta i64) (param $sign i32) (result i32)
  (local $one_exp i32)
  (local $one_frc i64)
  (local $mask i64)
  (local $wp_w_frc i64)
  (local $p1 i32)
  (local $p2 i64)
  (local $kappa i32)
  (local $len i32)
  (local $d i32)
  (local $16 i32)
  (local $17 i32)
  (local $tmp i64)
  (local $buffer|19 i32)
  (local $len|20 i32)
  (local $delta|21 i64)
  (local $rest i64)
  (local $ten_kappa i64)
  (local $wp_w i64)
  (local $lastp i32)
  (local $digit i32)
  (local $d|27 i64)
  (local $28 i32)
  (local $buffer|29 i32)
  (local $len|30 i32)
  (local $delta|31 i64)
  (local $rest|32 i64)
  (local $ten_kappa|33 i64)
  (local $wp_w|34 i64)
  (local $lastp|35 i32)
  (local $digit|36 i32)
  i32.const 0
  local.get $mp_exp
  i32.sub
  local.set $one_exp
  i64.const 1
  local.get $one_exp
  i64.extend_i32_s
  i64.shl
  local.set $one_frc
  local.get $one_frc
  i64.const 1
  i64.sub
  local.set $mask
  local.get $mp_frc
  local.get $w_frc
  i64.sub
  local.set $wp_w_frc
  local.get $mp_frc
  local.get $one_exp
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $p1
  local.get $mp_frc
  local.get $mask
  i64.and
  local.set $p2
  local.get $p1
  call $~lib/util/number/decimalCount32
  local.set $kappa
  local.get $sign
  local.set $len
  loop $while-continue|0
   local.get $kappa
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $kappa
                local.set $16
                local.get $16
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $16
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $16
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $16
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $16
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $16
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $16
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $16
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $16
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $16
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $p1
               i32.const 1000000000
               i32.div_u
               local.set $d
               local.get $p1
               i32.const 1000000000
               i32.rem_u
               local.set $p1
               br $break|1
              end
              local.get $p1
              i32.const 100000000
              i32.div_u
              local.set $d
              local.get $p1
              i32.const 100000000
              i32.rem_u
              local.set $p1
              br $break|1
             end
             local.get $p1
             i32.const 10000000
             i32.div_u
             local.set $d
             local.get $p1
             i32.const 10000000
             i32.rem_u
             local.set $p1
             br $break|1
            end
            local.get $p1
            i32.const 1000000
            i32.div_u
            local.set $d
            local.get $p1
            i32.const 1000000
            i32.rem_u
            local.set $p1
            br $break|1
           end
           local.get $p1
           i32.const 100000
           i32.div_u
           local.set $d
           local.get $p1
           i32.const 100000
           i32.rem_u
           local.set $p1
           br $break|1
          end
          local.get $p1
          i32.const 10000
          i32.div_u
          local.set $d
          local.get $p1
          i32.const 10000
          i32.rem_u
          local.set $p1
          br $break|1
         end
         local.get $p1
         i32.const 1000
         i32.div_u
         local.set $d
         local.get $p1
         i32.const 1000
         i32.rem_u
         local.set $p1
         br $break|1
        end
        local.get $p1
        i32.const 100
        i32.div_u
        local.set $d
        local.get $p1
        i32.const 100
        i32.rem_u
        local.set $p1
        br $break|1
       end
       local.get $p1
       i32.const 10
       i32.div_u
       local.set $d
       local.get $p1
       i32.const 10
       i32.rem_u
       local.set $p1
       br $break|1
      end
      local.get $p1
      local.set $d
      i32.const 0
      local.set $p1
      br $break|1
     end
     i32.const 0
     local.set $d
     br $break|1
    end
    local.get $d
    local.get $len
    i32.or
    if
     local.get $buffer
     local.get $len
     local.tee $17
     i32.const 1
     i32.add
     local.set $len
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p1
    i64.extend_i32_u
    local.get $one_exp
    i64.extend_i32_s
    i64.shl
    local.get $p2
    i64.add
    local.set $tmp
    local.get $tmp
    local.get $delta
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $buffer
     local.set $buffer|19
     local.get $len
     local.set $len|20
     local.get $delta
     local.set $delta|21
     local.get $tmp
     local.set $rest
     i32.const 16784
     local.get $kappa
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     local.get $one_exp
     i64.extend_i32_s
     i64.shl
     local.set $ten_kappa
     local.get $wp_w_frc
     local.set $wp_w
     local.get $buffer|19
     local.get $len|20
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp
     local.get $lastp
     i32.load16_u $0
     local.set $digit
     loop $while-continue|3
      local.get $rest
      local.get $wp_w
      i64.lt_u
      if (result i32)
       local.get $delta|21
       local.get $rest
       i64.sub
       local.get $ten_kappa
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.get $wp_w
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w
        local.get $rest
        i64.sub
        local.get $rest
        local.get $ten_kappa
        i64.add
        local.get $wp_w
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit
       i32.const 1
       i32.sub
       local.set $digit
       local.get $rest
       local.get $ten_kappa
       i64.add
       local.set $rest
       br $while-continue|3
      end
     end
     local.get $lastp
     local.get $digit
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   if
    local.get $p2
    i64.const 10
    i64.mul
    local.set $p2
    local.get $delta
    i64.const 10
    i64.mul
    local.set $delta
    local.get $p2
    local.get $one_exp
    i64.extend_i32_s
    i64.shr_u
    local.set $d|27
    local.get $d|27
    local.get $len
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $buffer
     local.get $len
     local.tee $28
     i32.const 1
     i32.add
     local.set $len
     local.get $28
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d|27
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $p2
    local.get $mask
    i64.and
    local.set $p2
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p2
    local.get $delta
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $wp_w_frc
     i32.const 16784
     i32.const 0
     local.get $kappa
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     i64.mul
     local.set $wp_w_frc
     local.get $buffer
     local.set $buffer|29
     local.get $len
     local.set $len|30
     local.get $delta
     local.set $delta|31
     local.get $p2
     local.set $rest|32
     local.get $one_frc
     local.set $ten_kappa|33
     local.get $wp_w_frc
     local.set $wp_w|34
     local.get $buffer|29
     local.get $len|30
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $lastp|35
     local.get $lastp|35
     i32.load16_u $0
     local.set $digit|36
     loop $while-continue|6
      local.get $rest|32
      local.get $wp_w|34
      i64.lt_u
      if (result i32)
       local.get $delta|31
       local.get $rest|32
       i64.sub
       local.get $ten_kappa|33
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.get $wp_w|34
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $wp_w|34
        local.get $rest|32
        i64.sub
        local.get $rest|32
        local.get $ten_kappa|33
        i64.add
        local.get $wp_w|34
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      if
       local.get $digit|36
       i32.const 1
       i32.sub
       local.set $digit|36
       local.get $rest|32
       local.get $ten_kappa|33
       i64.add
       local.set $rest|32
       br $while-continue|6
      end
     end
     local.get $lastp|35
     local.get $digit|36
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $buffer i32) (param $length i32) (param $k i32) (result i32)
  (local $kk i32)
  (local $i i32)
  (local $ptr i32)
  (local $offset i32)
  (local $i|7 i32)
  (local $buffer|8 i32)
  (local $k|9 i32)
  (local $sign i32)
  (local $decimals i32)
  (local $buffer|12 i32)
  (local $num i32)
  (local $offset|14 i32)
  (local $len i32)
  (local $buffer|16 i32)
  (local $k|17 i32)
  (local $sign|18 i32)
  (local $decimals|19 i32)
  (local $buffer|20 i32)
  (local $num|21 i32)
  (local $offset|22 i32)
  local.get $k
  i32.eqz
  if
   local.get $buffer
   local.get $length
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $length
   i32.const 2
   i32.add
   return
  end
  local.get $length
  local.get $k
  i32.add
  local.set $kk
  local.get $length
  local.get $kk
  i32.le_s
  if (result i32)
   local.get $kk
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $length
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $kk
    i32.lt_s
    if
     local.get $buffer
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $buffer
   local.get $kk
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $kk
   i32.const 2
   i32.add
   return
  else
   local.get $kk
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $kk
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $ptr
    i32.const 2
    i32.add
    local.get $ptr
    i32.const 0
    local.get $k
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16 $0
    local.get $length
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $kk
    i32.lt_s
    if (result i32)
     local.get $kk
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $kk
     i32.sub
     local.set $offset
     local.get $buffer
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $buffer
     local.get $length
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $buffer
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
     i32.const 2
     local.set $i|7
     loop $for-loop|1
      local.get $i|7
      local.get $offset
      i32.lt_s
      if
       local.get $buffer
       local.get $i|7
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $i|7
       i32.const 1
       i32.add
       local.set $i|7
       br $for-loop|1
      end
     end
     local.get $length
     local.get $offset
     i32.add
     return
    else
     local.get $length
     i32.const 1
     i32.eq
     if
      local.get $buffer
      i32.const 101
      i32.store16 $0 offset=2
      block $~lib/util/number/genExponent|inlined.0 (result i32)
       local.get $buffer
       i32.const 4
       i32.add
       local.set $buffer|8
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|9
       local.get $k|9
       i32.const 0
       i32.lt_s
       local.set $sign
       local.get $sign
       if
        i32.const 0
        local.get $k|9
        i32.sub
        local.set $k|9
       end
       local.get $k|9
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals
       local.get $buffer|8
       local.set $buffer|12
       local.get $k|9
       local.set $num
       local.get $decimals
       local.set $offset|14
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|12
       local.get $num
       local.get $offset|14
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|8
       i32.const 45
       i32.const 43
       local.get $sign
       select
       i32.store16 $0
       local.get $decimals
       br $~lib/util/number/genExponent|inlined.0
      end
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     else
      local.get $length
      i32.const 1
      i32.shl
      local.set $len
      local.get $buffer
      i32.const 4
      i32.add
      local.get $buffer
      i32.const 2
      i32.add
      local.get $len
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $buffer
      i32.const 46
      i32.store16 $0 offset=2
      local.get $buffer
      local.get $len
      i32.add
      i32.const 101
      i32.store16 $0 offset=2
      local.get $length
      block $~lib/util/number/genExponent|inlined.1 (result i32)
       local.get $buffer
       local.get $len
       i32.add
       i32.const 4
       i32.add
       local.set $buffer|16
       local.get $kk
       i32.const 1
       i32.sub
       local.set $k|17
       local.get $k|17
       i32.const 0
       i32.lt_s
       local.set $sign|18
       local.get $sign|18
       if
        i32.const 0
        local.get $k|17
        i32.sub
        local.set $k|17
       end
       local.get $k|17
       call $~lib/util/number/decimalCount32
       i32.const 1
       i32.add
       local.set $decimals|19
       local.get $buffer|16
       local.set $buffer|20
       local.get $k|17
       local.set $num|21
       local.get $decimals|19
       local.set $offset|22
       i32.const 0
       i32.const 1
       i32.ge_s
       drop
       local.get $buffer|20
       local.get $num|21
       local.get $offset|22
       call $~lib/util/number/utoa32_dec_lut
       local.get $buffer|16
       i32.const 45
       i32.const 43
       local.get $sign|18
       select
       i32.store16 $0
       local.get $decimals|19
       br $~lib/util/number/genExponent|inlined.1
      end
      i32.add
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $buffer i32) (param $value f64) (result i32)
  (local $sign i32)
  (local $value|3 f64)
  (local $buffer|4 i32)
  (local $sign|5 i32)
  (local $uv i64)
  (local $exp i32)
  (local $sid i64)
  (local $frc i64)
  (local $f i64)
  (local $e i32)
  (local $frc|12 i64)
  (local $exp|13 i32)
  (local $off i32)
  (local $m i32)
  (local $minExp i32)
  (local $dk f64)
  (local $k i32)
  (local $index i32)
  (local $off|20 i32)
  (local $frc_pow i64)
  (local $exp_pow i32)
  (local $u i64)
  (local $v i64)
  (local $u0 i64)
  (local $v0 i64)
  (local $u1 i64)
  (local $v1 i64)
  (local $l i64)
  (local $t i64)
  (local $w i64)
  (local $w_frc i64)
  (local $e1 i32)
  (local $e2 i32)
  (local $w_exp i32)
  (local $u|36 i64)
  (local $v|37 i64)
  (local $u0|38 i64)
  (local $v0|39 i64)
  (local $u1|40 i64)
  (local $v1|41 i64)
  (local $l|42 i64)
  (local $t|43 i64)
  (local $w|44 i64)
  (local $wp_frc i64)
  (local $e1|46 i32)
  (local $e2|47 i32)
  (local $wp_exp i32)
  (local $u|49 i64)
  (local $v|50 i64)
  (local $u0|51 i64)
  (local $v0|52 i64)
  (local $u1|53 i64)
  (local $v1|54 i64)
  (local $l|55 i64)
  (local $t|56 i64)
  (local $w|57 i64)
  (local $wm_frc i64)
  (local $delta i64)
  (local $len i32)
  local.get $value
  f64.const 0
  f64.lt
  local.set $sign
  local.get $sign
  if
   local.get $value
   f64.neg
   local.set $value
   local.get $buffer
   i32.const 45
   i32.store16 $0
  end
  block $~lib/util/number/grisu2|inlined.0 (result i32)
   local.get $value
   local.set $value|3
   local.get $buffer
   local.set $buffer|4
   local.get $sign
   local.set $sign|5
   local.get $value|3
   i64.reinterpret_f64
   local.set $uv
   local.get $uv
   i64.const 9218868437227405312
   i64.and
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   local.set $exp
   local.get $uv
   i64.const 4503599627370495
   i64.and
   local.set $sid
   local.get $exp
   i32.const 0
   i32.ne
   i64.extend_i32_u
   i64.const 52
   i64.shl
   local.get $sid
   i64.add
   local.set $frc
   local.get $exp
   i32.const 1
   local.get $exp
   select
   i32.const 1023
   i32.const 52
   i32.add
   i32.sub
   local.set $exp
   local.get $frc
   local.set $f
   local.get $exp
   local.set $e
   local.get $f
   i64.const 1
   i64.shl
   i64.const 1
   i64.add
   local.set $frc|12
   local.get $e
   i32.const 1
   i32.sub
   local.set $exp|13
   local.get $frc|12
   i64.clz
   i32.wrap_i64
   local.set $off
   local.get $frc|12
   local.get $off
   i64.extend_i32_s
   i64.shl
   local.set $frc|12
   local.get $exp|13
   local.get $off
   i32.sub
   local.set $exp|13
   i32.const 1
   local.get $f
   i64.const 4503599627370496
   i64.eq
   i32.add
   local.set $m
   local.get $frc|12
   global.set $~lib/util/number/_frc_plus
   local.get $f
   local.get $m
   i64.extend_i32_s
   i64.shl
   i64.const 1
   i64.sub
   local.get $e
   local.get $m
   i32.sub
   local.get $exp|13
   i32.sub
   i64.extend_i32_s
   i64.shl
   global.set $~lib/util/number/_frc_minus
   local.get $exp|13
   global.set $~lib/util/number/_exp
   global.get $~lib/util/number/_exp
   local.set $minExp
   i32.const -61
   local.get $minExp
   i32.sub
   f64.convert_i32_s
   f64.const 0.30102999566398114
   f64.mul
   f64.const 347
   f64.add
   local.set $dk
   local.get $dk
   i32.trunc_sat_f64_s
   local.set $k
   local.get $k
   local.get $k
   f64.convert_i32_s
   local.get $dk
   f64.ne
   i32.add
   local.set $k
   local.get $k
   i32.const 3
   i32.shr_s
   i32.const 1
   i32.add
   local.set $index
   i32.const 348
   local.get $index
   i32.const 3
   i32.shl
   i32.sub
   global.set $~lib/util/number/_K
   i32.const 15912
   local.get $index
   i32.const 3
   i32.shl
   i32.add
   i64.load $0
   global.set $~lib/util/number/_frc_pow
   i32.const 16608
   local.get $index
   i32.const 1
   i32.shl
   i32.add
   i32.load16_s $0
   global.set $~lib/util/number/_exp_pow
   local.get $frc
   i64.clz
   i32.wrap_i64
   local.set $off|20
   local.get $frc
   local.get $off|20
   i64.extend_i32_s
   i64.shl
   local.set $frc
   local.get $exp
   local.get $off|20
   i32.sub
   local.set $exp
   global.get $~lib/util/number/_frc_pow
   local.set $frc_pow
   global.get $~lib/util/number/_exp_pow
   local.set $exp_pow
   block $~lib/util/number/umul64f|inlined.0 (result i64)
    local.get $frc
    local.set $u
    local.get $frc_pow
    local.set $v
    local.get $u
    i64.const 4294967295
    i64.and
    local.set $u0
    local.get $v
    i64.const 4294967295
    i64.and
    local.set $v0
    local.get $u
    i64.const 32
    i64.shr_u
    local.set $u1
    local.get $v
    i64.const 32
    i64.shr_u
    local.set $v1
    local.get $u0
    local.get $v0
    i64.mul
    local.set $l
    local.get $u1
    local.get $v0
    i64.mul
    local.get $l
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t
    local.get $u0
    local.get $v1
    i64.mul
    local.get $t
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w
    local.get $w
    i64.const 2147483647
    i64.add
    local.set $w
    local.get $t
    i64.const 32
    i64.shr_u
    local.set $t
    local.get $w
    i64.const 32
    i64.shr_u
    local.set $w
    local.get $u1
    local.get $v1
    i64.mul
    local.get $t
    i64.add
    local.get $w
    i64.add
    br $~lib/util/number/umul64f|inlined.0
   end
   local.set $w_frc
   block $~lib/util/number/umul64e|inlined.0 (result i32)
    local.get $exp
    local.set $e1
    local.get $exp_pow
    local.set $e2
    local.get $e1
    local.get $e2
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.0
   end
   local.set $w_exp
   block $~lib/util/number/umul64f|inlined.1 (result i64)
    global.get $~lib/util/number/_frc_plus
    local.set $u|36
    local.get $frc_pow
    local.set $v|37
    local.get $u|36
    i64.const 4294967295
    i64.and
    local.set $u0|38
    local.get $v|37
    i64.const 4294967295
    i64.and
    local.set $v0|39
    local.get $u|36
    i64.const 32
    i64.shr_u
    local.set $u1|40
    local.get $v|37
    i64.const 32
    i64.shr_u
    local.set $v1|41
    local.get $u0|38
    local.get $v0|39
    i64.mul
    local.set $l|42
    local.get $u1|40
    local.get $v0|39
    i64.mul
    local.get $l|42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|43
    local.get $u0|38
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|44
    local.get $w|44
    i64.const 2147483647
    i64.add
    local.set $w|44
    local.get $t|43
    i64.const 32
    i64.shr_u
    local.set $t|43
    local.get $w|44
    i64.const 32
    i64.shr_u
    local.set $w|44
    local.get $u1|40
    local.get $v1|41
    i64.mul
    local.get $t|43
    i64.add
    local.get $w|44
    i64.add
    br $~lib/util/number/umul64f|inlined.1
   end
   i64.const 1
   i64.sub
   local.set $wp_frc
   block $~lib/util/number/umul64e|inlined.1 (result i32)
    global.get $~lib/util/number/_exp
    local.set $e1|46
    local.get $exp_pow
    local.set $e2|47
    local.get $e1|46
    local.get $e2|47
    i32.add
    i32.const 64
    i32.add
    br $~lib/util/number/umul64e|inlined.1
   end
   local.set $wp_exp
   block $~lib/util/number/umul64f|inlined.2 (result i64)
    global.get $~lib/util/number/_frc_minus
    local.set $u|49
    local.get $frc_pow
    local.set $v|50
    local.get $u|49
    i64.const 4294967295
    i64.and
    local.set $u0|51
    local.get $v|50
    i64.const 4294967295
    i64.and
    local.set $v0|52
    local.get $u|49
    i64.const 32
    i64.shr_u
    local.set $u1|53
    local.get $v|50
    i64.const 32
    i64.shr_u
    local.set $v1|54
    local.get $u0|51
    local.get $v0|52
    i64.mul
    local.set $l|55
    local.get $u1|53
    local.get $v0|52
    i64.mul
    local.get $l|55
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|56
    local.get $u0|51
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.const 4294967295
    i64.and
    i64.add
    local.set $w|57
    local.get $w|57
    i64.const 2147483647
    i64.add
    local.set $w|57
    local.get $t|56
    i64.const 32
    i64.shr_u
    local.set $t|56
    local.get $w|57
    i64.const 32
    i64.shr_u
    local.set $w|57
    local.get $u1|53
    local.get $v1|54
    i64.mul
    local.get $t|56
    i64.add
    local.get $w|57
    i64.add
    br $~lib/util/number/umul64f|inlined.2
   end
   i64.const 1
   i64.add
   local.set $wm_frc
   local.get $wp_frc
   local.get $wm_frc
   i64.sub
   local.set $delta
   local.get $buffer|4
   local.get $w_frc
   local.get $w_exp
   local.get $wp_frc
   local.get $wp_exp
   local.get $delta
   local.get $sign|5
   call $~lib/util/number/genDigits
   br $~lib/util/number/grisu2|inlined.0
  end
  local.set $len
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  local.get $sign
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $len
  local.get $len
  local.get $sign
  i32.add
  return
 )
 (func $~lib/number/F64#toString (param $this f64) (param $radix i32) (result i32)
  local.get $this
  call $~lib/util/number/dtoa
  return
 )
 (func $assembly/types/target/RolloutStage#set:percentage (param $this i32) (param $percentage f64)
  local.get $this
  local.get $percentage
  f64.store $0 offset=8
 )
 (func $assembly/types/target/RolloutStage#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/target/RolloutStage#get:percentage (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $assembly/types/targetV2/TargetV2#get:_audience (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/Audience#get:filters (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:audiences (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/AudienceOperator#get:filters (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#set:result (param $this i32) (param $result i32)
  local.get $this
  local.get $result
  i32.store8 $0
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#set:reasonDetails (param $this i32) (param $reasonDetails i32)
  local.get $this
  local.get $reasonDetails
  i32.store $0 offset=4
  local.get $this
  local.get $reasonDetails
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceOperator#get:operator (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/AudienceFilterOrOperator#get:operatorClass (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#get:result (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $assembly/types/target/AudienceFilterOrOperator#get:filterClass (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/AudienceFilter#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/target/AudienceMatchFilter#get:isValid (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=12
 )
 (func $assembly/types/target/AudienceMatchFilter#get:_audiences (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/AudienceMatchFilter#get:comparator (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/UserFilter#get:isValid (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=16
 )
 (func $assembly/types/target/UserFilter#get:subType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:country (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/target/UserFilter#get:comparator (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/target/UserFilter#get:_compiledStringValues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:email (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:appVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/bucketing/versionCompare/OptionsType#set:zeroExtend (param $this i32) (param $zeroExtend i32)
  local.get $this
  local.get $zeroExtend
  i32.store8 $0 offset=1
 )
 (func $assembly/bucketing/versionCompare/OptionsType#set:lexicographical (param $this i32) (param $lexicographical i32)
  local.get $this
  local.get $lexicographical
  i32.store8 $0
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:platformVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=60
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:deviceModel (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=44
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:platform (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=56
 )
 (func $assembly/types/target/CustomDataFilter#get:dataKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/types/target/CustomDataFilter#get:dataKeyType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/target/UserFilter#get:_compiledNumValues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#get:_bool (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0
 )
 (func $assembly/types/target/UserFilter#get:_compiledBoolValues (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $~lib/array/Array<bool>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<bool>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/bucketing/bucketing/TargetResult#set:target (param $this i32) (param $target i32)
  local.get $this
  local.get $target
  i32.store $0
  local.get $this
  local.get $target
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/TargetResult#set:reasonDetails (param $this i32) (param $reasonDetails i32)
  local.get $this
  local.get $reasonDetails
  i32.store $0 offset=4
  local.get $this
  local.get $reasonDetails
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/TargetResult#get:target (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/bucketing/bucketing/TargetResult#get:reasonDetails (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#set:target (param $this i32) (param $target i32)
  local.get $this
  local.get $target
  i32.store $0
  local.get $this
  local.get $target
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#set:boundedHashData (param $this i32) (param $boundedHashData i32)
  local.get $this
  local.get $boundedHashData
  i32.store $0 offset=4
  local.get $this
  local.get $boundedHashData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#set:reasonDetails (param $this i32) (param $reasonDetails i32)
  local.get $this
  local.get $reasonDetails
  i32.store $0 offset=8
  local.get $this
  local.get $reasonDetails
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#get:target (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#get:boundedHashData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/targetV2/TargetV2#get:_sortedDistribution (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/TargetDistribution#get:percentage (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $assembly/types/target/TargetDistribution#get:_variation (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureV2/FeatureV2#get:_variationsById (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#set:reason (param $this i32) (param $reason i32)
  local.get $this
  local.get $reason
  i32.store $0
  local.get $this
  local.get $reason
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#set:details (param $this i32) (param $details i32)
  local.get $this
  local.get $details
  i32.store $0 offset=4
  local.get $this
  local.get $details
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#set:target_id (param $this i32) (param $target_id i32)
  local.get $this
  local.get $target_id
  i32.store $0 offset=8
  local.get $this
  local.get $target_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/targetV2/TargetV2#get:distribution (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#get:reasonDetails (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/featureV2/FeatureV2#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0 offset=4
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=8
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=12
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:_variation (param $this i32) (param $_variation i32)
  local.get $this
  local.get $_variation
  i32.store $0 offset=16
  local.get $this
  local.get $_variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:variationName (param $this i32) (param $variationName i32)
  local.get $this
  local.get $variationName
  i32.store $0 offset=20
  local.get $this
  local.get $variationName
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:variationKey (param $this i32) (param $variationKey i32)
  local.get $this
  local.get $variationKey
  i32.store $0 offset=24
  local.get $this
  local.get $variationKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#set:evalReason (param $this i32) (param $evalReason i32)
  local.get $this
  local.get $evalReason
  i32.store $0 offset=28
  local.get $this
  local.get $evalReason
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/Variation#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/feature/Variation#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/Variation#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/feature/Variation#get:variables (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/VariationVariable#get:_var (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdMap (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/Variable#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#set:_feature (param $this i32) (param $_feature i32)
  local.get $this
  local.get $_feature
  i32.store $0 offset=4
  local.get $this
  local.get $_feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#set:_variation (param $this i32) (param $_variation i32)
  local.get $this
  local.get $_variation
  i32.store $0 offset=8
  local.get $this
  local.get $_variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0 offset=4
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=8
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=12
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=16
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:_feature (param $this i32) (param $_feature i32)
  local.get $this
  local.get $_feature
  i32.store $0 offset=20
  local.get $this
  local.get $_feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#set:evalReason (param $this i32) (param $evalReason i32)
  local.get $this
  local.get $evalReason
  i32.store $0 offset=24
  local.get $this
  local.get $evalReason
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/Variable#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/Variable#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/VariationVariable#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:project (param $this i32) (param $project i32)
  local.get $this
  local.get $project
  i32.store $0 offset=4
  local.get $this
  local.get $project
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:environment (param $this i32) (param $environment i32)
  local.get $this
  local.get $environment
  i32.store $0 offset=8
  local.get $this
  local.get $environment
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:features (param $this i32) (param $features i32)
  local.get $this
  local.get $features
  i32.store $0 offset=12
  local.get $this
  local.get $features
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:featureVariationMap (param $this i32) (param $featureVariationMap i32)
  local.get $this
  local.get $featureVariationMap
  i32.store $0 offset=16
  local.get $this
  local.get $featureVariationMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:variableVariationMap (param $this i32) (param $variableVariationMap i32)
  local.get $this
  local.get $variableVariationMap
  i32.store $0 offset=20
  local.get $this
  local.get $variableVariationMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#set:variables (param $this i32) (param $variables i32)
  local.get $this
  local.get $variables
  i32.store $0 offset=24
  local.get $this
  local.get $variables
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:environment (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:project (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:environment (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:features (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:featureVariationMap (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:variableVariationMap (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#get:variables (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $~lib/as-proto/assembly/Reader/Reader#get:end (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/as-proto/assembly/Reader/Reader#get:ptr (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:sdkKey (param $this i32) (param $sdkKey i32)
  local.get $this
  local.get $sdkKey
  i32.store $0
  local.get $this
  local.get $sdkKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableKey (param $this i32) (param $variableKey i32)
  local.get $this
  local.get $variableKey
  i32.store $0 offset=4
  local.get $this
  local.get $variableKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableType (param $this i32) (param $variableType i32)
  local.get $this
  local.get $variableType
  i32.store $0 offset=8
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:user (param $this i32) (param $user i32)
  local.get $this
  local.get $user
  i32.store $0 offset=12
  local.get $this
  local.get $user
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:shouldTrackEvent (param $this i32) (param $shouldTrackEvent i32)
  local.get $this
  local.get $shouldTrackEvent
  i32.store8 $0 offset=16
 )
 (func $~lib/as-proto/assembly/Reader/Reader#uint32 (param $this i32) (result i32)
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#string (param $this i32) (result i32)
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#int32 (param $this i32) (result i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:userId (param $this i32) (param $userId i32)
  local.get $this
  local.get $userId
  i32.store $0
  local.get $this
  local.get $userId
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:email (param $this i32) (param $email i32)
  local.get $this
  local.get $email
  i32.store $0 offset=4
  local.get $this
  local.get $email
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=8
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:language (param $this i32) (param $language i32)
  local.get $this
  local.get $language
  i32.store $0 offset=12
  local.get $this
  local.get $language
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:country (param $this i32) (param $country i32)
  local.get $this
  local.get $country
  i32.store $0 offset=16
  local.get $this
  local.get $country
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appBuild (param $this i32) (param $appBuild i32)
  local.get $this
  local.get $appBuild
  i32.store $0 offset=20
  local.get $this
  local.get $appBuild
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appVersion (param $this i32) (param $appVersion i32)
  local.get $this
  local.get $appVersion
  i32.store $0 offset=24
  local.get $this
  local.get $appVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:deviceModel (param $this i32) (param $deviceModel i32)
  local.get $this
  local.get $deviceModel
  i32.store $0 offset=28
  local.get $this
  local.get $deviceModel
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:customData (param $this i32) (param $customData i32)
  local.get $this
  local.get $customData
  i32.store $0 offset=32
  local.get $this
  local.get $customData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:privateCustomData (param $this i32) (param $privateCustomData i32)
  local.get $this
  local.get $privateCustomData
  i32.store $0 offset=36
  local.get $this
  local.get $privateCustomData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#set:isNull (param $this i32) (param $isNull i32)
  local.get $this
  local.get $isNull
  i32.store8 $0 offset=4
 )
 (func $~lib/as-proto/assembly/Reader/Reader#bool (param $this i32) (result i32)
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#skipType (param $this i32) (param $wireType i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:value (param $this i32) (param $value f64)
  local.get $this
  local.get $value
  f64.store $0
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:isNull (param $this i32) (param $isNull i32)
  local.get $this
  local.get $isNull
  i32.store8 $0 offset=8
 )
 (func $~lib/as-proto/assembly/Reader/Reader#double (param $this i32) (result f64)
  unreachable
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:isNull (param $this i32) (param $isNull i32)
  local.get $this
  local.get $isNull
  i32.store8 $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:boolValue (param $this i32) (param $boolValue i32)
  local.get $this
  local.get $boolValue
  i32.store8 $0 offset=4
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:doubleValue (param $this i32) (param $doubleValue f64)
  local.get $this
  local.get $doubleValue
  f64.store $0 offset=8
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:stringValue (param $this i32) (param $stringValue i32)
  local.get $this
  local.get $stringValue
  i32.store $0 offset=16
  local.get $this
  local.get $stringValue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:user (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:email (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:language (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:country (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appBuild (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:deviceModel (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:customData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:privateCustomData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:userId (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=4
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:isNull (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:value (param $this i32) (result f64)
  local.get $this
  f64.load $0
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:isNull (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=4
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:boolValue (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=4
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<bool> (param $val i32) (result i32)
  i32.const 1
  drop
  local.get $val
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool
  return
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:doubleValue (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:stringValue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:sdkKey (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:shouldTrackEvent (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=16
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:_variableKeyMap (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdToFeatureMap (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/Variation#get:_variablesById (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#set:variable (param $this i32) (param $variable i32)
  local.get $this
  local.get $variable
  i32.store $0
  local.get $this
  local.get $variable
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#set:variation (param $this i32) (param $variation i32)
  local.get $this
  local.get $variation
  i32.store $0 offset=4
  local.get $this
  local.get $variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#set:feature (param $this i32) (param $feature i32)
  local.get $this
  local.get $feature
  i32.store $0 offset=8
  local.get $this
  local.get $feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#get:variable (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#get:feature (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#get:variation (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#get:options (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#get:disableAutomaticEventLogging (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#get:reason (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/dvcEvent/DVCEvent#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#set:target (param $this i32) (param $target i32)
  local.get $this
  local.get $target
  i32.store $0 offset=4
  local.get $this
  local.get $target
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#set:date (param $this i32) (param $date i32)
  local.get $this
  local.get $date
  i32.store $0 offset=8
  local.get $this
  local.get $date
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#set:value (param $this i32) (param $value f64)
  local.get $this
  local.get $value
  f64.store $0 offset=16
 )
 (func $assembly/types/dvcEvent/DVCEvent#set:metaData (param $this i32) (param $metaData i32)
  local.get $this
  local.get $metaData
  i32.store $0 offset=24
  local.get $this
  local.get $metaData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#get:disableCustomEventLogging (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=9
 )
 (func $assembly/types/dvcEvent/DVCEvent#get:target (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#get:aggEventQueue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#get:_feature (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#get:_variation (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#get:eventQueueCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount (param $this i32) (param $eventQueueCount i32)
  local.get $this
  local.get $eventQueueCount
  i32.store $0 offset=16
 )
 (func $assembly/types/dvcEvent/DVCEvent#get:metaData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#get:value (param $this i32) (result i64)
  local.get $this
  i64.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#set:value (param $this i32) (param $value i64)
  local.get $this
  local.get $value
  i64.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,i64>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=16
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:reason (param $this i32) (param $reason i32)
  local.get $this
  local.get $reason
  i32.store $0
  local.get $this
  local.get $reason
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:details (param $this i32) (param $details i32)
  local.get $this
  local.get $details
  i32.store $0 offset=4
  local.get $this
  local.get $details
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:targetId (param $this i32) (param $targetId i32)
  local.get $this
  local.get $targetId
  i32.store $0 offset=8
  local.get $this
  local.get $targetId
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#get:details (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#get:target_id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0
  local.get $this
  local.get $id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=4
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=8
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:boolValue (param $this i32) (param $boolValue i32)
  local.get $this
  local.get $boolValue
  i32.store8 $0 offset=12
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:doubleValue (param $this i32) (param $doubleValue f64)
  local.get $this
  local.get $doubleValue
  f64.store $0 offset=16
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:stringValue (param $this i32) (param $stringValue i32)
  local.get $this
  local.get $stringValue
  i32.store $0 offset=24
  local.get $this
  local.get $stringValue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:evalReason (param $this i32) (param $evalReason i32)
  local.get $this
  local.get $evalReason
  i32.store $0 offset=28
  local.get $this
  local.get $evalReason
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:feature (param $this i32) (param $feature i32)
  local.get $this
  local.get $feature
  i32.store $0 offset=32
  local.get $this
  local.get $feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:eval (param $this i32) (param $eval i32)
  local.get $this
  local.get $eval
  i32.store $0 offset=36
  local.get $this
  local.get $eval
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#get:_feature (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/as-proto/assembly/Writer/Writer#uint32 (param $this i32) (param $value i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/as-proto/assembly/Writer/Writer#string (param $this i32) (param $value i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/as-proto/assembly/Writer/Writer#int32 (param $this i32) (param $value i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:boolValue (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=12
 )
 (func $~lib/as-proto/assembly/Writer/Writer#bool (param $this i32) (param $value i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:doubleValue (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=16
 )
 (func $~lib/as-proto/assembly/Writer/Writer#double (param $this i32) (param $value f64)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:stringValue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:evalReason (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $~lib/as-proto/assembly/Writer/Writer#fork (param $this i32)
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#ldelim (param $this i32)
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:feature (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:eval (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:reason (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:details (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:targetId (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:pos (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/array/Array<i32>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlenidx (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/platformData/PlatformData#set:platform (param $this i32) (param $platform i32)
  local.get $this
  local.get $platform
  i32.store $0 offset=4
  local.get $this
  local.get $platform
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#set:platformVersion (param $this i32) (param $platformVersion i32)
  local.get $this
  local.get $platformVersion
  i32.store $0 offset=8
  local.get $this
  local.get $platformVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#set:sdkType (param $this i32) (param $sdkType i32)
  local.get $this
  local.get $sdkType
  i32.store $0 offset=12
  local.get $this
  local.get $sdkType
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#set:sdkVersion (param $this i32) (param $sdkVersion i32)
  local.get $this
  local.get $sdkVersion
  i32.store $0 offset=16
  local.get $this
  local.get $sdkVersion
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#set:sdkPlatform (param $this i32) (param $sdkPlatform i32)
  local.get $this
  local.get $sdkPlatform
  i32.store $0 offset=20
  local.get $this
  local.get $sdkPlatform
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/platformData/PlatformData#set:hostname (param $this i32) (param $hostname i32)
  local.get $this
  local.get $hostname
  i32.store $0 offset=24
  local.get $this
  local.get $hostname
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/managers/platformDataManager/_setPlatformData (param $platformData i32)
  local.get $platformData
  global.set $assembly/managers/platformDataManager/_platformData
 )
 (func $assembly/managers/platformDataManager/_clearPlatformData
  i32.const 0
  global.set $assembly/managers/platformDataManager/_platformData
 )
 (func $assembly/index/clearPlatformData (param $empty i32)
  call $assembly/managers/platformDataManager/_clearPlatformData
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:etag (param $this i32) (param $etag i32)
  local.get $this
  local.get $etag
  i32.store $0 offset=20
  local.get $this
  local.get $etag
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:clientSDKKey (param $this i32) (param $clientSDKKey i32)
  local.get $this
  local.get $clientSDKKey
  i32.store $0 offset=24
  local.get $this
  local.get $clientSDKKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicProject#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicProject#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=4
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicProject#set:a0_organization (param $this i32) (param $a0_organization i32)
  local.get $this
  local.get $a0_organization
  i32.store $0 offset=8
  local.get $this
  local.get $a0_organization
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/Settings#set:disablePassthroughRollouts (param $this i32) (param $disablePassthroughRollouts i32)
  local.get $this
  local.get $disablePassthroughRollouts
  i32.store8 $0
 )
 (func $assembly/types/configBody/PublicProject#set:settings (param $this i32) (param $settings i32)
  local.get $this
  local.get $settings
  i32.store $0 offset=12
  local.get $this
  local.get $settings
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:project (param $this i32) (param $project i32)
  local.get $this
  local.get $project
  i32.store $0
  local.get $this
  local.get $project
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicEnvironment#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicEnvironment#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=4
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:environment (param $this i32) (param $environment i32)
  local.get $this
  local.get $environment
  i32.store $0 offset=8
  local.get $this
  local.get $environment
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/featureV2/FeatureV2#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=4
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=8
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/feature/Variation#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Variation#set:name (param $this i32) (param $name i32)
  local.get $this
  local.get $name
  i32.store $0 offset=4
  local.get $this
  local.get $name
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Variation#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=8
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/feature/VariationVariable#set:_var (param $this i32) (param $_var i32)
  local.get $this
  local.get $_var
  i32.store $0
  local.get $this
  local.get $_var
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/VariationVariable#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/feature/Variation#set:variables (param $this i32) (param $variables i32)
  local.get $this
  local.get $variables
  i32.store $0 offset=12
  local.get $this
  local.get $variables
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Variation#set:_variablesById (param $this i32) (param $_variablesById i32)
  local.get $this
  local.get $_variablesById
  i32.store $0 offset=16
  local.get $this
  local.get $_variablesById
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/featureV2/FeatureV2#set:variations (param $this i32) (param $variations i32)
  local.get $this
  local.get $variations
  i32.store $0 offset=12
  local.get $this
  local.get $variations
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#set:_variationsById (param $this i32) (param $_variationsById i32)
  local.get $this
  local.get $_variationsById
  i32.store $0 offset=24
  local.get $this
  local.get $_variationsById
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:_feature (param $this i32) (param $_feature i32)
  local.get $this
  local.get $_feature
  i32.store $0
  local.get $this
  local.get $_feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:comparator (param $this i32) (param $comparator i32)
  local.get $this
  local.get $comparator
  i32.store $0 offset=4
  local.get $this
  local.get $comparator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:prerequisites (param $this i32) (param $prerequisites i32)
  local.get $this
  local.get $prerequisites
  i32.store $0 offset=4
  local.get $this
  local.get $prerequisites
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:_variation (param $this i32) (param $_variation i32)
  local.get $this
  local.get $_variation
  i32.store $0
  local.get $this
  local.get $_variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:updatedAt (param $this i32) (param $updatedAt i32)
  local.get $this
  local.get $updatedAt
  i32.store $0 offset=4
  local.get $this
  local.get $updatedAt
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:winningVariation (param $this i32) (param $winningVariation i32)
  local.get $this
  local.get $winningVariation
  i32.store $0 offset=8
  local.get $this
  local.get $winningVariation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/targetV2/TargetV2#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceOperator#set:operator (param $this i32) (param $operator i32)
  local.get $this
  local.get $operator
  i32.store $0
  local.get $this
  local.get $operator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceOperator#set:filters (param $this i32) (param $filters i32)
  local.get $this
  local.get $filters
  i32.store $0 offset=4
  local.get $this
  local.get $filters
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceFilterOrOperator#set:operatorClass (param $this i32) (param $operatorClass i32)
  local.get $this
  local.get $operatorClass
  i32.store $0
  local.get $this
  local.get $operatorClass
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceFilter#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/UserFilter#set:values (param $this i32) (param $values i32)
  local.get $this
  local.get $values
  i32.store $0 offset=8
  local.get $this
  local.get $values
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/UserFilter#set:subType (param $this i32) (param $subType i32)
  local.get $this
  local.get $subType
  i32.store $0 offset=4
  local.get $this
  local.get $subType
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/UserFilter#set:comparator (param $this i32) (param $comparator i32)
  local.get $this
  local.get $comparator
  i32.store $0 offset=12
  local.get $this
  local.get $comparator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/UserFilter#set:isValid (param $this i32) (param $isValid i32)
  local.get $this
  local.get $isValid
  i32.store8 $0 offset=16
 )
 (func $assembly/types/target/UserFilter#get:values (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/array/Array<bool>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<bool>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<bool>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<bool>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/types/target/UserFilter#set:_compiledBoolValues (param $this i32) (param $_compiledBoolValues i32)
  local.get $this
  local.get $_compiledBoolValues
  i32.store $0 offset=24
  local.get $this
  local.get $_compiledBoolValues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/UserFilter#set:_compiledStringValues (param $this i32) (param $_compiledStringValues i32)
  local.get $this
  local.get $_compiledStringValues
  i32.store $0 offset=20
  local.get $this
  local.get $_compiledStringValues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<f64>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<f64>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<f64>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<f64>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/types/target/UserFilter#set:_compiledNumValues (param $this i32) (param $_compiledNumValues i32)
  local.get $this
  local.get $_compiledNumValues
  i32.store $0 offset=28
  local.get $this
  local.get $_compiledNumValues
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/CustomDataFilter#set:dataKey (param $this i32) (param $dataKey i32)
  local.get $this
  local.get $dataKey
  i32.store $0 offset=36
  local.get $this
  local.get $dataKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/CustomDataFilter#set:dataKeyType (param $this i32) (param $dataKeyType i32)
  local.get $this
  local.get $dataKeyType
  i32.store $0 offset=32
  local.get $this
  local.get $dataKeyType
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceMatchFilter#set:_audiences (param $this i32) (param $_audiences i32)
  local.get $this
  local.get $_audiences
  i32.store $0 offset=4
  local.get $this
  local.get $_audiences
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceMatchFilter#set:comparator (param $this i32) (param $comparator i32)
  local.get $this
  local.get $comparator
  i32.store $0 offset=8
  local.get $this
  local.get $comparator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/AudienceMatchFilter#set:isValid (param $this i32) (param $isValid i32)
  local.get $this
  local.get $isValid
  i32.store8 $0 offset=12
 )
 (func $assembly/types/target/AudienceFilterOrOperator#set:filterClass (param $this i32) (param $filterClass i32)
  local.get $this
  local.get $filterClass
  i32.store $0 offset=4
  local.get $this
  local.get $filterClass
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/types/target/Audience#set:filters (param $this i32) (param $filters i32)
  local.get $this
  local.get $filters
  i32.store $0
  local.get $this
  local.get $filters
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/targetV2/TargetV2#set:_audience (param $this i32) (param $_audience i32)
  local.get $this
  local.get $_audience
  i32.store $0 offset=4
  local.get $this
  local.get $_audience
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Rollout#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Rollout#set:startPercentage (param $this i32) (param $startPercentage f64)
  local.get $this
  local.get $startPercentage
  f64.store $0 offset=8
 )
 (func $assembly/types/target/Rollout#set:startDate (param $this i32) (param $startDate i32)
  local.get $this
  local.get $startDate
  i32.store $0 offset=16
  local.get $this
  local.get $startDate
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Rollout#set:stages (param $this i32) (param $stages i32)
  local.get $this
  local.get $stages
  i32.store $0 offset=20
  local.get $this
  local.get $stages
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/targetV2/TargetV2#set:rollout (param $this i32) (param $rollout i32)
  local.get $this
  local.get $rollout
  i32.store $0 offset=8
  local.get $this
  local.get $rollout
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/TargetDistribution#set:_variation (param $this i32) (param $_variation i32)
  local.get $this
  local.get $_variation
  i32.store $0
  local.get $this
  local.get $_variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/TargetDistribution#set:percentage (param $this i32) (param $percentage f64)
  local.get $this
  local.get $percentage
  f64.store $0 offset=8
 )
 (func $assembly/types/targetV2/TargetV2#set:distribution (param $this i32) (param $distribution i32)
  local.get $this
  local.get $distribution
  i32.store $0 offset=12
  local.get $this
  local.get $distribution
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:entry (param $this i32) (param $entry i32)
  local.get $this
  local.get $entry
  i32.store $0 offset=4
  local.get $this
  local.get $entry
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/types/targetV2/TargetV2#set:bucketingKey (param $this i32) (param $bucketingKey i32)
  local.get $this
  local.get $bucketingKey
  i32.store $0 offset=16
  local.get $this
  local.get $bucketingKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/util/sort/nodePower (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
  return
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:entry (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/util/bytes/REVERSE<assembly/types/target/TargetDistribution> (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     global.get $~lib/memory/__stack_pointer
     local.get $front
     i32.load $0
     local.tee $temp
     i32.store $0
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/targetV2/TargetV2#set:_sortedDistribution (param $this i32) (param $_sortedDistribution i32)
  local.get $this
  local.get $_sortedDistribution
  i32.store $0 offset=20
  local.get $this
  local.get $_sortedDistribution
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:targets (param $this i32) (param $targets i32)
  local.get $this
  local.get $targets
  i32.store $0 offset=16
  local.get $this
  local.get $targets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:forcedUsers (param $this i32) (param $forcedUsers i32)
  local.get $this
  local.get $forcedUsers
  i32.store $0 offset=12
  local.get $this
  local.get $forcedUsers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#set:configuration (param $this i32) (param $configuration i32)
  local.get $this
  local.get $configuration
  i32.store $0 offset=16
  local.get $this
  local.get $configuration
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureV2/FeatureV2#set:settings (param $this i32) (param $settings i32)
  local.get $this
  local.get $settings
  i32.store $0 offset=20
  local.get $this
  local.get $settings
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/featureV2/FeatureV2#get:variations (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:features (param $this i32) (param $features i32)
  local.get $this
  local.get $features
  i32.store $0 offset=12
  local.get $this
  local.get $features
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdToFeatureMap (param $this i32) (param $_variableIdToFeatureMap i32)
  local.get $this
  local.get $_variableIdToFeatureMap
  i32.store $0 offset=36
  local.get $this
  local.get $_variableIdToFeatureMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:audiences (param $this i32) (param $audiences i32)
  local.get $this
  local.get $audiences
  i32.store $0 offset=4
  local.get $this
  local.get $audiences
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/configBody/Variable#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/Variable#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=4
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/Variable#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=8
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:variables (param $this i32) (param $variables i32)
  local.get $this
  local.get $variables
  i32.store $0 offset=16
  local.get $this
  local.get $variables
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:_variableKeyMap (param $this i32) (param $_variableKeyMap i32)
  local.get $this
  local.get $_variableKeyMap
  i32.store $0 offset=28
  local.get $this
  local.get $_variableKeyMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdMap (param $this i32) (param $_variableIdMap i32)
  local.get $this
  local.get $_variableIdMap
  i32.store $0 offset=32
  local.get $this
  local.get $_variableIdMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/configBody/PublicProject#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/ProjectMetadata#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0
  local.get $this
  local.get $id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicProject#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/ProjectMetadata#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=4
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigMetadata#set:project (param $this i32) (param $project i32)
  local.get $this
  local.get $project
  i32.store $0
  local.get $this
  local.get $project
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicEnvironment#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/EnvironmentMetadata#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0
  local.get $this
  local.get $id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/PublicEnvironment#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/EnvironmentMetadata#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=4
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigMetadata#set:environment (param $this i32) (param $environment i32)
  local.get $this
  local.get $environment
  i32.store $0 offset=4
  local.get $this
  local.get $environment
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigMetadata#get:project (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/ProjectMetadata#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/ProjectMetadata#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/ConfigMetadata#get:environment (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/EnvironmentMetadata#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/EnvironmentMetadata#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:etag (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:clientSDKKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $~lib/number/U32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#set:disableAutomaticEventLogging (param $this i32) (param $disableAutomaticEventLogging i32)
  local.get $this
  local.get $disableAutomaticEventLogging
  i32.store8 $0 offset=8
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#set:disableCustomEventLogging (param $this i32) (param $disableCustomEventLogging i32)
  local.get $this
  local.get $disableCustomEventLogging
  i32.store8 $0 offset=9
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#set:eventRequestChunkSize (param $this i32) (param $eventRequestChunkSize i32)
  local.get $this
  local.get $eventRequestChunkSize
  i32.store $0 offset=4
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#set:sdkKey (param $this i32) (param $sdkKey i32)
  local.get $this
  local.get $sdkKey
  i32.store $0
  local.get $this
  local.get $sdkKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#set:options (param $this i32) (param $options i32)
  local.get $this
  local.get $options
  i32.store $0 offset=4
  local.get $this
  local.get $options
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#set:userEventQueue (param $this i32) (param $userEventQueue i32)
  local.get $this
  local.get $userEventQueue
  i32.store $0 offset=8
  local.get $this
  local.get $userEventQueue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#set:aggEventQueue (param $this i32) (param $aggEventQueue i32)
  local.get $this
  local.get $aggEventQueue
  i32.store $0 offset=12
  local.get $this
  local.get $aggEventQueue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:pendingPayloads (param $this i32) (param $pendingPayloads i32)
  local.get $this
  local.get $pendingPayloads
  i32.store $0
  local.get $this
  local.get $pendingPayloads
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:chunkSize (param $this i32) (param $chunkSize i32)
  local.get $this
  local.get $chunkSize
  i32.store $0 offset=4
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:clientUUID (param $this i32) (param $clientUUID i32)
  local.get $this
  local.get $clientUUID
  i32.store $0 offset=8
  local.get $this
  local.get $clientUUID
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#get:userEventQueue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues#set:userEventQueue (param $this i32) (param $userEventQueue i32)
  local.get $this
  local.get $userEventQueue
  i32.store $0
  local.get $this
  local.get $userEventQueue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues#set:aggEventQueue (param $this i32) (param $aggEventQueue i32)
  local.get $this
  local.get $aggEventQueue
  i32.store $0 offset=4
  local.get $this
  local.get $aggEventQueue
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues#get:userEventQueue (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues#get:aggEventQueue (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcEvent/FlushPayload#get:status (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcEvent/FlushPayload#get:payloadId (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:clientUUID (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:target (param $this i32) (param $target i32)
  local.get $this
  local.get $target
  i32.store $0 offset=4
  local.get $this
  local.get $target
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:customType (param $this i32) (param $customType i32)
  local.get $this
  local.get $customType
  i32.store $0 offset=8
  local.get $this
  local.get $customType
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:user_id (param $this i32) (param $user_id i32)
  local.get $this
  local.get $user_id
  i32.store $0 offset=12
  local.get $this
  local.get $user_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:date (param $this i32) (param $date i32)
  local.get $this
  local.get $date
  i32.store $0 offset=16
  local.get $this
  local.get $date
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#get:date (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:clientDate (param $this i32) (param $clientDate i32)
  local.get $this
  local.get $clientDate
  i32.store $0 offset=20
  local.get $this
  local.get $clientDate
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCEvent#get:value (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=16
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:value (param $this i32) (param $value f64)
  local.get $this
  local.get $value
  f64.store $0 offset=24
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:featureVars (param $this i32) (param $featureVars i32)
  local.get $this
  local.get $featureVars
  i32.store $0 offset=32
  local.get $this
  local.get $featureVars
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#set:metaData (param $this i32) (param $metaData i32)
  local.get $this
  local.get $metaData
  i32.store $0 offset=36
  local.get $this
  local.get $metaData
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#get:user (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#set:user (param $this i32) (param $user i32)
  local.get $this
  local.get $user
  i32.store $0
  local.get $this
  local.get $user
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#set:events (param $this i32) (param $events i32)
  local.get $this
  local.get $events
  i32.store $0 offset=4
  local.get $this
  local.get $events
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#get:events (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcEvent/FlushPayload#get:records (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:chunkSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcEvent/FlushPayload#set:status (param $this i32) (param $status i32)
  local.get $this
  local.get $status
  i32.store $0 offset=4
  local.get $this
  local.get $status
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/math/murmurHash3 (param $h i64) (result i64)
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -49064778989728563
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -4265267296055464877
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  return
 )
 (func $~lib/math/splitMix32 (param $h i32) (result i32)
  local.get $h
  i32.const 1831565813
  i32.add
  local.set $h
  local.get $h
  local.get $h
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 1
  i32.or
  i32.mul
  local.set $h
  local.get $h
  local.get $h
  local.get $h
  local.get $h
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $h
  local.get $h
  local.get $h
  i32.const 14
  i32.shr_u
  i32.xor
  return
 )
 (func $~lib/math/NativeMath.seedRandom (param $value i64)
  local.get $value
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $value
  end
  local.get $value
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $value
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $s1 i64)
  (local $s0 i64)
  (local $r i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $s1
  global.get $~lib/math/random_state1_64
  local.set $s0
  local.get $s0
  global.set $~lib/math/random_state0_64
  local.get $s1
  local.get $s1
  i64.const 23
  i64.shl
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s1
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  global.set $~lib/math/random_state1_64
  local.get $s0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $r
  local.get $r
  f64.reinterpret_i64
  f64.const 1
  f64.sub
  return
 )
 (func $~lib/as-uuid/assembly/stringify/byteToHex (param $byte i32) (result i32)
  global.get $~lib/as-uuid/assembly/stringify/HEX_CODES
  local.get $byte
  i32.const 4
  i32.shr_u
  i32.const 15
  i32.and
  i32.add
  i32.load8_u $0
  global.get $~lib/as-uuid/assembly/stringify/HEX_CODES
  local.get $byte
  i32.const 0
  i32.shr_u
  i32.const 15
  i32.and
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#set:payloadId (param $this i32) (param $payloadId i32)
  local.get $this
  local.get $payloadId
  i32.store $0
  local.get $this
  local.get $payloadId
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/dvcEvent/FlushPayload#set:records (param $this i32) (param $records i32)
  local.get $this
  local.get $records
  i32.store $0 offset=8
  local.get $this
  local.get $records
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $~lib/number/Bool#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  if (result i32)
   i32.const 13216
  else
   i32.const 13104
  end
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:customData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:privateCustomData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/target/Target#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Target#set:_audience (param $this i32) (param $_audience i32)
  local.get $this
  local.get $_audience
  i32.store $0 offset=4
  local.get $this
  local.get $_audience
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Target#set:rollout (param $this i32) (param $rollout i32)
  local.get $this
  local.get $rollout
  i32.store $0 offset=8
  local.get $this
  local.get $rollout
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Target#set:distribution (param $this i32) (param $distribution i32)
  local.get $this
  local.get $distribution
  i32.store $0 offset=12
  local.get $this
  local.get $distribution
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Target#set:_sortedDistribution (param $this i32) (param $_sortedDistribution i32)
  local.get $this
  local.get $_sortedDistribution
  i32.store $0 offset=16
  local.get $this
  local.get $_sortedDistribution
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/target/Target#get:_sortedDistribution (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/target/Target#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/ConfigBody#set:etag (param $this i32) (param $etag i32)
  local.get $this
  local.get $etag
  i32.store $0 offset=20
  local.get $this
  local.get $etag
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:clientSDKKey (param $this i32) (param $clientSDKKey i32)
  local.get $this
  local.get $clientSDKKey
  i32.store $0 offset=24
  local.get $this
  local.get $clientSDKKey
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:project (param $this i32) (param $project i32)
  local.get $this
  local.get $project
  i32.store $0
  local.get $this
  local.get $project
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:environment (param $this i32) (param $environment i32)
  local.get $this
  local.get $environment
  i32.store $0 offset=8
  local.get $this
  local.get $environment
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store $0
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:buckets (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store $0
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:bucketsMask (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entries (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store $0 offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCapacity (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesOffset (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCount (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store $0 offset=20
 )
 (func $assembly/types/feature/Feature#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:type (param $this i32) (param $type i32)
  local.get $this
  local.get $type
  i32.store $0 offset=4
  local.get $this
  local.get $type
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0 offset=8
  local.get $this
  local.get $key
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:variations (param $this i32) (param $variations i32)
  local.get $this
  local.get $variations
  i32.store $0 offset=12
  local.get $this
  local.get $variations
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:_variationsById (param $this i32) (param $_variationsById i32)
  local.get $this
  local.get $_variationsById
  i32.store $0 offset=24
  local.get $this
  local.get $_variationsById
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#set:_id (param $this i32) (param $_id i32)
  local.get $this
  local.get $_id
  i32.store $0
  local.get $this
  local.get $_id
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#set:_feature (param $this i32) (param $_feature i32)
  local.get $this
  local.get $_feature
  i32.store $0
  local.get $this
  local.get $_feature
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#set:comparator (param $this i32) (param $comparator i32)
  local.get $this
  local.get $comparator
  i32.store $0 offset=4
  local.get $this
  local.get $comparator
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#set:prerequisites (param $this i32) (param $prerequisites i32)
  local.get $this
  local.get $prerequisites
  i32.store $0 offset=4
  local.get $this
  local.get $prerequisites
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#set:_variation (param $this i32) (param $_variation i32)
  local.get $this
  local.get $_variation
  i32.store $0
  local.get $this
  local.get $_variation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#set:updatedAt (param $this i32) (param $updatedAt i32)
  local.get $this
  local.get $updatedAt
  i32.store $0 offset=4
  local.get $this
  local.get $updatedAt
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#set:winningVariation (param $this i32) (param $winningVariation i32)
  local.get $this
  local.get $winningVariation
  i32.store $0 offset=8
  local.get $this
  local.get $winningVariation
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/target/Target>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#set:targets (param $this i32) (param $targets i32)
  local.get $this
  local.get $targets
  i32.store $0 offset=16
  local.get $this
  local.get $targets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#set:forcedUsers (param $this i32) (param $forcedUsers i32)
  local.get $this
  local.get $forcedUsers
  i32.store $0 offset=12
  local.get $this
  local.get $forcedUsers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:configuration (param $this i32) (param $configuration i32)
  local.get $this
  local.get $configuration
  i32.store $0 offset=16
  local.get $this
  local.get $configuration
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/feature/Feature#set:settings (param $this i32) (param $settings i32)
  local.get $this
  local.get $settings
  i32.store $0 offset=20
  local.get $this
  local.get $settings
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/Feature#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:buckets (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:bucketsMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:taggedNext (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCapacity (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entries (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:key (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store $0
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:taggedNext (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store $0 offset=8
 )
 (func $assembly/types/feature/Feature#get:variations (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/configBody/ConfigBody#set:features (param $this i32) (param $features i32)
  local.get $this
  local.get $features
  i32.store $0 offset=12
  local.get $this
  local.get $features
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:_variableIdToFeatureMap (param $this i32) (param $_variableIdToFeatureMap i32)
  local.get $this
  local.get $_variableIdToFeatureMap
  i32.store $0 offset=36
  local.get $this
  local.get $_variableIdToFeatureMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:audiences (param $this i32) (param $audiences i32)
  local.get $this
  local.get $audiences
  i32.store $0 offset=4
  local.get $this
  local.get $audiences
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:variables (param $this i32) (param $variables i32)
  local.get $this
  local.get $variables
  i32.store $0 offset=16
  local.get $this
  local.get $variables
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:_variableKeyMap (param $this i32) (param $_variableKeyMap i32)
  local.get $this
  local.get $_variableKeyMap
  i32.store $0 offset=28
  local.get $this
  local.get $_variableKeyMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#set:_variableIdMap (param $this i32) (param $_variableIdMap i32)
  local.get $this
  local.get $_variableIdMap
  i32.store $0 offset=32
  local.get $this
  local.get $_variableIdMap
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/types/configBody/ConfigBody#get:project (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/configBody/ConfigBody#get:environment (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/configBody/ConfigBody#get:audiences (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/configBody/ConfigBody#get:features (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/configBody/ConfigBody#get:variables (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/configBody/ConfigBody#get:clientSDKKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#get:variables (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:name (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:language (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:appBuild (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=24
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null> (param $val i32) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $val
  i32.const 0
  i32.eq
  if
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Null
   return
  end
  i32.const 0
  drop
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Object
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:createdDate (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=48
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:lastSeenDate (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=52
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:sdkType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=64
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:sdkVersion (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=68
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:sdkPlatform (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=72
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#get:hostname (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=76
 )
 (func $assembly/testHelpers/echoString (param $str i32) (result i32)
  local.get $str
  return
 )
 (func $assembly/testHelpers/echoUint8Array (param $data i32) (result i32)
  local.get $data
  return
 )
 (func $assembly/testHelpers/triggerAbort
  i32.const 30400
  i32.const 28576
  i32.const 171
  i32.const 5
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:entry (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/util/bytes/REVERSE<assembly/testHelpers/TestData> (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     global.get $~lib/memory/__stack_pointer
     local.get $front
     i32.load $0
     local.tee $temp
     i32.store $0
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<i32> (param $val i32) (result i32)
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $val
  i64.extend_i32_s
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer
  return
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:target (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:customType (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:user_id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:date (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:clientDate (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:value (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=24
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:featureVars (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#get:metaData (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $obj i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $obj
   local.get $obj
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 30768
    i32.const 5248
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 30832
   i32.const 5248
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#get:startMarker (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:location (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#get:matcher (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#get:ignoreCase (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#get:matcher (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#get:matchers (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#get:charClass (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#get:dotAll (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/char/isAlpha (param $code i32) (result i32)
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $code
  i32.const 32
  i32.or
  i32.const 97
  i32.sub
  i32.const 26
  i32.lt_u
  return
 )
 (func $~lib/assemblyscript-regex/assembly/char/isWhitespace (param $code i32) (result i32)
  (local $1 i32)
  (local $value i32)
  (local $from i32)
  (local $to i32)
  block $break|0
   block $case13|0
    block $case12|0
     block $case11|0
      block $case10|0
       block $case9|0
        block $case8|0
         block $case7|0
          block $case6|0
           block $case5|0
            block $case4|0
             block $case3|0
              block $case2|0
               block $case1|0
                block $case0|0
                 local.get $code
                 local.set $1
                 local.get $1
                 i32.const 32
                 i32.eq
                 br_if $case0|0
                 local.get $1
                 i32.const 9
                 i32.eq
                 br_if $case1|0
                 local.get $1
                 i32.const 11
                 i32.eq
                 br_if $case2|0
                 local.get $1
                 i32.const 12
                 i32.eq
                 br_if $case3|0
                 local.get $1
                 i32.const 10
                 i32.eq
                 br_if $case4|0
                 local.get $1
                 i32.const 13
                 i32.eq
                 br_if $case5|0
                 local.get $1
                 i32.const 160
                 i32.eq
                 br_if $case6|0
                 local.get $1
                 i32.const 5760
                 i32.eq
                 br_if $case7|0
                 local.get $1
                 i32.const 8232
                 i32.eq
                 br_if $case8|0
                 local.get $1
                 i32.const 8233
                 i32.eq
                 br_if $case9|0
                 local.get $1
                 i32.const 8239
                 i32.eq
                 br_if $case10|0
                 local.get $1
                 i32.const 8287
                 i32.eq
                 br_if $case11|0
                 local.get $1
                 i32.const 12288
                 i32.eq
                 br_if $case12|0
                 local.get $1
                 i32.const 65279
                 i32.eq
                 br_if $case13|0
                 br $break|0
                end
               end
              end
             end
            end
           end
          end
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  block $~lib/assemblyscript-regex/assembly/char/inRange|inlined.2 (result i32)
   local.get $code
   local.set $value
   i32.const 8192
   local.set $from
   i32.const 8202
   local.set $to
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $value
   local.get $from
   i32.sub
   local.get $to
   local.get $from
   i32.sub
   i32.const 1
   i32.add
   i32.lt_u
   br $~lib/assemblyscript-regex/assembly/char/inRange|inlined.2
  end
  if
   i32.const 1
   return
  end
  i32.const 0
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#get:negated (param $this i32) (result i32)
  local.get $this
  i32.load8_u $0 offset=8
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#get:matcher (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/util/number/decimalCount64High (param $value i64) (result i32)
  local.get $value
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $value
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $value
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $value
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $value
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $value
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $value
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $t i64)
  (local $r i32)
  (local $b i32)
  (local $c i32)
  (local $b1 i32)
  (local $b2 i32)
  (local $c1 i32)
  (local $c2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  loop $while-continue|0
   local.get $num
   i64.const 100000000
   i64.ge_u
   if
    local.get $num
    i64.const 100000000
    i64.div_u
    local.set $t
    local.get $num
    local.get $t
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 10000
    i32.div_u
    local.set $b
    local.get $r
    i32.const 10000
    i32.rem_u
    local.set $c
    local.get $b
    i32.const 100
    i32.div_u
    local.set $b1
    local.get $b
    i32.const 100
    i32.rem_u
    local.set $b2
    local.get $c
    i32.const 100
    i32.div_u
    local.set $c1
    local.get $c
    i32.const 100
    i32.rem_u
    local.set $c2
    i32.const 7820
    local.get $c1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 7820
    local.get $c2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    i32.const 7820
    local.get $b1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 7820
    local.get $b2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $buffer
  local.get $num
  i32.wrap_i64
  local.get $offset
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/number/I64#toString (param $this i64) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa64
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#stringify (param $this i32) (result i32)
  i32.const 10528
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:_variation (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:variationName (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:variationKey (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#get:evalReason (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/types/configBody/PublicProject#get:a0_organization (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/feature/Feature#get:type (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/feature/Feature#get:key (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/feature/Feature#get:configuration (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#get:prerequisites (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#get:winningVariation (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#get:forcedUsers (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#get:targets (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/array/Array<assembly/types/target/Target>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#get:_feature (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#get:comparator (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#get:_variation (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#get:updatedAt (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:_id (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:prerequisites (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:winningVariation (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:forcedUsers (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#get:_feature (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#get:comparator (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#get:_variation (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#get:updatedAt (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/Target#get:_audience (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/types/target/Target#get:rollout (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<assembly/types/target/Rollout|null> (param $val i32) (result i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $val
  i32.const 0
  i32.eq
  if
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Null
   return
  end
  i32.const 0
  drop
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Object
  return
 )
 (func $assembly/types/target/Target#get:distribution (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:varlenidx (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/string/String.UTF8.encodeUnsafe@varargs (param $str i32) (param $len i32) (param $buf i32) (param $nullTerminated i32) (param $errorMode i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 3
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $nullTerminated
   end
   i32.const 0
   local.set $errorMode
  end
  local.get $str
  local.get $len
  local.get $buf
  local.get $nullTerminated
  local.get $errorMode
  call $~lib/string/String.UTF8.encodeUnsafe
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#ldelim (param $this i32)
  nop
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#replace@override (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  block $default
   block $case5
    block $case4
     block $case3
      block $case2
       block $case1
        block $case0
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         local.set $3
         local.get $3
         i32.const 27
         i32.eq
         br_if $case0
         local.get $3
         i32.const 32
         i32.eq
         br_if $case1
         local.get $3
         i32.const 40
         i32.eq
         br_if $case2
         local.get $3
         i32.const 36
         i32.eq
         br_if $case3
         local.get $3
         i32.const 33
         i32.eq
         br_if $case4
         local.get $3
         i32.const 34
         i32.eq
         br_if $case5
         br $default
        end
        local.get $0
        local.get $1
        local.get $2
        call $~lib/assemblyscript-regex/assembly/parser/node/AST#replace
        return
       end
       local.get $0
       local.get $1
       local.get $2
       call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#replace
       return
      end
      local.get $0
      local.get $1
      local.get $2
      call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#replace
      return
     end
     local.get $0
     local.get $1
     local.get $2
     call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#replace
     return
    end
    local.get $0
    local.get $1
    local.get $2
    call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#replace
    return
   end
   local.get $0
   local.get $1
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#replace
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#replace
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case10
    block $case9
     block $case8
      block $case7
       block $case6
        block $case5
         block $case4
          block $case3
           block $case2
            block $case1
             block $case0
              local.get $0
              i32.const 8
              i32.sub
              i32.load $0
              local.set $1
              local.get $1
              i32.const 27
              i32.eq
              br_if $case0
              local.get $1
              i32.const 32
              i32.eq
              br_if $case1
              local.get $1
              i32.const 41
              i32.eq
              br_if $case2
              local.get $1
              i32.const 42
              i32.eq
              br_if $case3
              local.get $1
              i32.const 37
              i32.eq
              br_if $case4
              local.get $1
              i32.const 39
              i32.eq
              br_if $case5
              local.get $1
              i32.const 38
              i32.eq
              br_if $case6
              local.get $1
              i32.const 40
              i32.eq
              br_if $case7
              local.get $1
              i32.const 36
              i32.eq
              br_if $case8
              local.get $1
              i32.const 33
              i32.eq
              br_if $case9
              local.get $1
              i32.const 34
              i32.eq
              br_if $case10
              br $default
             end
             local.get $0
             call $~lib/assemblyscript-regex/assembly/parser/node/AST#clone
             return
            end
            local.get $0
            call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone
            return
           end
           local.get $0
           call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#clone
           return
          end
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#clone
          return
         end
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#clone
         return
        end
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#clone
        return
       end
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#clone
       return
      end
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#clone
      return
     end
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#clone
     return
    end
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#clone
    return
   end
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#clone
   return
  end
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#children@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case5
    block $case4
     block $case3
      block $case2
       block $case1
        block $case0
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         local.set $1
         local.get $1
         i32.const 27
         i32.eq
         br_if $case0
         local.get $1
         i32.const 32
         i32.eq
         br_if $case1
         local.get $1
         i32.const 40
         i32.eq
         br_if $case2
         local.get $1
         i32.const 36
         i32.eq
         br_if $case3
         local.get $1
         i32.const 33
         i32.eq
         br_if $case4
         local.get $1
         i32.const 34
         i32.eq
         br_if $case5
         br $default
        end
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/AST#children
        return
       end
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#children
       return
      end
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
      return
     end
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#children
     return
    end
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#children
    return
   end
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#children
   return
  end
  local.get $0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#children
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@override (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  block $default
   block $case4
    block $case3
     block $case2
      block $case1
       block $case0
        local.get $0
        i32.const 8
        i32.sub
        i32.load $0
        local.set $3
        local.get $3
        i32.const 25
        i32.eq
        br_if $case0
        local.get $3
        i32.const 58
        i32.eq
        br_if $case1
        local.get $3
        i32.const 48
        i32.eq
        br_if $case2
        local.get $3
        i32.const 56
        i32.eq
        br_if $case3
        local.get $3
        i32.const 57
        i32.eq
        br_if $case4
        br $default
       end
       local.get $0
       local.get $1
       local.get $2
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#matches
       return
      end
      local.get $0
      local.get $1
      local.get $2
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#matches
      return
     end
     local.get $0
     local.get $1
     local.get $2
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#matches
     return
    end
    local.get $0
    local.get $1
    local.get $2
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#matches
    return
   end
   local.get $0
   local.get $1
   local.get $2
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#matches
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case46
    block $case45
     block $case44
      block $case43
       block $case42
        block $case41
         block $case40
          block $case39
           block $case38
            block $case37
             block $case36
              block $case35
               block $case34
                block $case33
                 block $case32
                  block $case31
                   block $case30
                    block $case29
                     block $case28
                      block $case27
                       block $case26
                        block $case25
                         block $case24
                          block $case23
                           block $case22
                            block $case21
                             block $case20
                              block $case19
                               block $case18
                                block $case17
                                 block $case16
                                  block $case15
                                   block $case14
                                    block $case13
                                     block $case12
                                      block $case11
                                       block $case10
                                        block $case9
                                         block $case8
                                          block $case7
                                           block $case6
                                            block $case5
                                             block $case4
                                              block $case3
                                               block $case2
                                                block $case1
                                                 block $case0
                                                  local.get $0
                                                  i32.const 8
                                                  i32.sub
                                                  i32.load $0
                                                  local.set $1
                                                  local.get $1
                                                  i32.const 133
                                                  i32.eq
                                                  br_if $case0
                                                  local.get $1
                                                  i32.const 125
                                                  i32.eq
                                                  br_if $case1
                                                  local.get $1
                                                  i32.const 124
                                                  i32.eq
                                                  br_if $case1
                                                  local.get $1
                                                  i32.const 135
                                                  i32.eq
                                                  br_if $case2
                                                  local.get $1
                                                  i32.const 126
                                                  i32.eq
                                                  br_if $case3
                                                  local.get $1
                                                  i32.const 134
                                                  i32.eq
                                                  br_if $case4
                                                  local.get $1
                                                  i32.const 132
                                                  i32.eq
                                                  br_if $case5
                                                  local.get $1
                                                  i32.const 6
                                                  i32.eq
                                                  br_if $case6
                                                  local.get $1
                                                  i32.const 139
                                                  i32.eq
                                                  br_if $case7
                                                  local.get $1
                                                  i32.const 141
                                                  i32.eq
                                                  br_if $case8
                                                  local.get $1
                                                  i32.const 137
                                                  i32.eq
                                                  br_if $case9
                                                  local.get $1
                                                  i32.const 138
                                                  i32.eq
                                                  br_if $case10
                                                  local.get $1
                                                  i32.const 143
                                                  i32.eq
                                                  br_if $case11
                                                  local.get $1
                                                  i32.const 67
                                                  i32.eq
                                                  br_if $case12
                                                  local.get $1
                                                  i32.const 66
                                                  i32.eq
                                                  br_if $case13
                                                  local.get $1
                                                  i32.const 74
                                                  i32.eq
                                                  br_if $case14
                                                  local.get $1
                                                  i32.const 96
                                                  i32.eq
                                                  br_if $case15
                                                  local.get $1
                                                  i32.const 109
                                                  i32.eq
                                                  br_if $case16
                                                  local.get $1
                                                  i32.const 108
                                                  i32.eq
                                                  br_if $case17
                                                  local.get $1
                                                  i32.const 104
                                                  i32.eq
                                                  br_if $case18
                                                  local.get $1
                                                  i32.const 119
                                                  i32.eq
                                                  br_if $case19
                                                  local.get $1
                                                  i32.const 107
                                                  i32.eq
                                                  br_if $case20
                                                  local.get $1
                                                  i32.const 105
                                                  i32.eq
                                                  br_if $case21
                                                  local.get $1
                                                  i32.const 103
                                                  i32.eq
                                                  br_if $case22
                                                  local.get $1
                                                  i32.const 188
                                                  i32.eq
                                                  br_if $case23
                                                  local.get $1
                                                  i32.const 76
                                                  i32.eq
                                                  br_if $case24
                                                  local.get $1
                                                  i32.const 77
                                                  i32.eq
                                                  br_if $case25
                                                  local.get $1
                                                  i32.const 75
                                                  i32.eq
                                                  br_if $case26
                                                  local.get $1
                                                  i32.const 189
                                                  i32.eq
                                                  br_if $case27
                                                  local.get $1
                                                  i32.const 190
                                                  i32.eq
                                                  br_if $case28
                                                  local.get $1
                                                  i32.const 192
                                                  i32.eq
                                                  br_if $case29
                                                  local.get $1
                                                  i32.const 81
                                                  i32.eq
                                                  br_if $case30
                                                  local.get $1
                                                  i32.const 82
                                                  i32.eq
                                                  br_if $case31
                                                  local.get $1
                                                  i32.const 84
                                                  i32.eq
                                                  br_if $case32
                                                  local.get $1
                                                  i32.const 5
                                                  i32.eq
                                                  br_if $case33
                                                  local.get $1
                                                  i32.const 186
                                                  i32.eq
                                                  br_if $case34
                                                  local.get $1
                                                  i32.const 71
                                                  i32.eq
                                                  br_if $case35
                                                  local.get $1
                                                  i32.const 70
                                                  i32.eq
                                                  br_if $case36
                                                  local.get $1
                                                  i32.const 69
                                                  i32.eq
                                                  br_if $case37
                                                  local.get $1
                                                  i32.const 68
                                                  i32.eq
                                                  br_if $case38
                                                  local.get $1
                                                  i32.const 148
                                                  i32.eq
                                                  br_if $case39
                                                  local.get $1
                                                  i32.const 151
                                                  i32.eq
                                                  br_if $case40
                                                  local.get $1
                                                  i32.const 153
                                                  i32.eq
                                                  br_if $case41
                                                  local.get $1
                                                  i32.const 88
                                                  i32.eq
                                                  br_if $case42
                                                  local.get $1
                                                  i32.const 89
                                                  i32.eq
                                                  br_if $case43
                                                  local.get $1
                                                  i32.const 91
                                                  i32.eq
                                                  br_if $case44
                                                  local.get $1
                                                  i32.const 87
                                                  i32.eq
                                                  br_if $case45
                                                  local.get $1
                                                  i32.const 147
                                                  i32.eq
                                                  br_if $case46
                                                  br $default
                                                 end
                                                 local.get $0
                                                 call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#stringify
                                                 return
                                                end
                                                local.get $0
                                                call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#stringify
                                                return
                                               end
                                               local.get $0
                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#stringify
                                               return
                                              end
                                              local.get $0
                                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#stringify
                                              return
                                             end
                                             local.get $0
                                             call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#stringify
                                             return
                                            end
                                            local.get $0
                                            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify
                                            return
                                           end
                                           local.get $0
                                           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify
                                           return
                                          end
                                          local.get $0
                                          call $assembly/types/bucketedUserConfig/EvalReason#stringify
                                          return
                                         end
                                         local.get $0
                                         call $assembly/types/bucketedUserConfig/FeatureVariation#stringify
                                         return
                                        end
                                        local.get $0
                                        call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
                                        return
                                       end
                                       local.get $0
                                       call $assembly/types/bucketedUserConfig/SDKFeature#stringify
                                       return
                                      end
                                      local.get $0
                                      call $assembly/types/bucketedUserConfig/SDKVariable#stringify
                                      return
                                     end
                                     local.get $0
                                     call $assembly/types/configBody/Settings#stringify
                                     return
                                    end
                                    local.get $0
                                    call $assembly/types/configBody/PublicProject#stringify
                                    return
                                   end
                                   local.get $0
                                   call $assembly/types/configBody/PublicEnvironment#stringify
                                   return
                                  end
                                  local.get $0
                                  call $assembly/types/configBody/Variable#stringify
                                  return
                                 end
                                 local.get $0
                                 call $assembly/types/dvcEvent/DVCEvent#stringify
                                 return
                                end
                                local.get $0
                                call $assembly/types/dvcEvent/DVCRequestEvent#stringify
                                return
                               end
                               local.get $0
                               call $assembly/types/dvcEvent/UserEventsBatchRecord#stringify
                               return
                              end
                              local.get $0
                              call $assembly/types/dvcEvent/FlushPayload#stringify
                              return
                             end
                             local.get $0
                             call $assembly/types/dvcUser/DVCUser#stringify
                             return
                            end
                            local.get $0
                            call $assembly/types/dvcUser/DVCPopulatedUser#stringify
                            return
                           end
                           local.get $0
                           call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
                           return
                          end
                          local.get $0
                          call $assembly/types/feature/Feature#stringify
                          return
                         end
                         local.get $0
                         call $assembly/types/feature/Variation#stringify
                         return
                        end
                        local.get $0
                        call $assembly/types/feature/VariationVariable#stringify
                        return
                       end
                       local.get $0
                       call $assembly/types/featureV2/FeatureV2#stringify
                       return
                      end
                      local.get $0
                      call $assembly/types/featureConfiguration/FeatureConfiguration#stringify
                      return
                     end
                     local.get $0
                     call $assembly/types/featureConfiguration/FeaturePrerequisites#stringify
                     return
                    end
                    local.get $0
                    call $assembly/types/featureConfiguration/FeatureWinningVariation#stringify
                    return
                   end
                   local.get $0
                   call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#stringify
                   return
                  end
                  local.get $0
                  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#stringify
                  return
                 end
                 local.get $0
                 call $assembly/types/featureConfigurationV2/FeatureWinningVariation#stringify
                 return
                end
                local.get $0
                call $assembly/types/platformData/PlatformData#stringify
                return
               end
               local.get $0
               call $assembly/types/target/Target#stringify
               return
              end
              local.get $0
              call $assembly/types/target/AudienceFilter#stringify
              return
             end
             local.get $0
             call $assembly/types/target/AudienceFilterOrOperator#stringify
             return
            end
            local.get $0
            call $assembly/types/target/AudienceOperator#stringify
            return
           end
           local.get $0
           call $assembly/types/target/Audience#stringify
           return
          end
          local.get $0
          call $assembly/types/target/AudienceMatchFilter#stringify
          return
         end
         local.get $0
         call $assembly/types/target/UserFilter#stringify
         return
        end
        local.get $0
        call $assembly/types/target/CustomDataFilter#stringify
        return
       end
       local.get $0
       call $assembly/types/target/Rollout#stringify
       return
      end
      local.get $0
      call $assembly/types/target/RolloutStage#stringify
      return
     end
     local.get $0
     call $assembly/types/target/TargetDistribution#stringify
     return
    end
    local.get $0
    call $assembly/types/targetV2/TargetV2#stringify
    return
   end
   local.get $0
   call $assembly/bucketing/segmentation/SegmentationResult#stringify
   return
  end
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case6
    block $case5
     block $case4
      block $case3
       block $case2
        block $case1
         block $case0
          local.get $0
          i32.const 8
          i32.sub
          i32.load $0
          local.set $1
          local.get $1
          i32.const 141
          i32.eq
          br_if $case0
          local.get $1
          i32.const 137
          i32.eq
          br_if $case1
          local.get $1
          i32.const 138
          i32.eq
          br_if $case2
          local.get $1
          i32.const 143
          i32.eq
          br_if $case3
          local.get $1
          i32.const 107
          i32.eq
          br_if $case4
          local.get $1
          i32.const 103
          i32.eq
          br_if $case5
          local.get $1
          i32.const 5
          i32.eq
          br_if $case6
          br $default
         end
         local.get $0
         call $assembly/types/bucketedUserConfig/FeatureVariation#stringify
         return
        end
        local.get $0
        call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
        return
       end
       local.get $0
       call $assembly/types/bucketedUserConfig/SDKFeature#stringify
       return
      end
      local.get $0
      call $assembly/types/bucketedUserConfig/SDKVariable#stringify
      return
     end
     local.get $0
     call $assembly/types/dvcUser/DVCUser#stringify
     return
    end
    local.get $0
    call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
    return
   end
   local.get $0
   call $assembly/types/platformData/PlatformData#stringify
   return
  end
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 133
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#toString
   return
  end
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString
 )
 (func $~lib/as-proto/assembly/Reader/Reader#uint32@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#string@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#string
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#int32@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#int32
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#bool@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#bool
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#skipType@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $2
    local.get $2
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#double@override (param $0 i32) (result f64)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 16
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#double
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#uint32@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $2
     local.get $2
     i32.const 11
     i32.eq
     br_if $case0
     local.get $2
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    local.get $1
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#uint32
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#uint32
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#string@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $2
     local.get $2
     i32.const 11
     i32.eq
     br_if $case0
     local.get $2
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    local.get $1
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#string
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#string
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#int32@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $2
     local.get $2
     i32.const 11
     i32.eq
     br_if $case0
     local.get $2
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    local.get $1
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#int32
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#int32
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#bool@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $2
     local.get $2
     i32.const 11
     i32.eq
     br_if $case0
     local.get $2
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    local.get $1
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#bool
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#bool
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#double@override (param $0 i32) (param $1 f64)
  (local $2 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $2
     local.get $2
     i32.const 11
     i32.eq
     br_if $case0
     local.get $2
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    local.get $1
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#double
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#double
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#fork@override (param $0 i32)
  (local $1 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $1
     local.get $1
     i32.const 11
     i32.eq
     br_if $case0
     local.get $1
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#fork
    return
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#fork
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#ldelim@override (param $0 i32)
  (local $1 i32)
  block $default
   block $case1
    block $case0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.set $1
     local.get $1
     i32.const 11
     i32.eq
     br_if $case0
     local.get $1
     i32.const 13
     i32.eq
     br_if $case1
     br $default
    end
    local.get $0
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#ldelim
    return
   end
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#ldelim
   return
  end
  unreachable
 )
 (func $assembly/types/target/AudienceFilter#stringify@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case2
    block $case1
     block $case0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.set $1
      local.get $1
      i32.const 148
      i32.eq
      br_if $case0
      local.get $1
      i32.const 151
      i32.eq
      br_if $case1
      local.get $1
      i32.const 153
      i32.eq
      br_if $case2
      br $default
     end
     local.get $0
     call $assembly/types/target/AudienceMatchFilter#stringify
     return
    end
    local.get $0
    call $assembly/types/target/UserFilter#stringify
    return
   end
   local.get $0
   call $assembly/types/target/CustomDataFilter#stringify
   return
  end
  local.get $0
  call $assembly/types/target/AudienceFilter#stringify
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 32
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AssertionNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 39
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 36
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 40
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 37
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AlternationNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 33
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 41
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 42
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 38
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/GroupNode (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 34
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 25
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 6
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 5
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 103
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 107
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 137
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 138
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 141
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 143
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 132
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 133
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 124
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 135
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/types/target/AudienceMatchFilter (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 148
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/types/target/UserFilter (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 151
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 153
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|assembly/types/target/CustomDataFilter (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 153
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 134
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Null (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 126
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 125
   i32.eq
   br_if $is_instance
   local.get $1
   i32.const 124
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 46
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 51
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 54
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher (param $0 i32) (result i32)
  (local $1 i32)
  block $is_instance
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   local.set $1
   local.get $1
   i32.const 49
   i32.eq
   br_if $is_instance
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  global.get $assembly/index/VariableTypeStrings
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 5376
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5072
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 6480
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 6352
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 10864
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5184
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 30768
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 30832
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11312
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11600
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 8240
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 9296
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $assembly/managers/platformDataManager/_platformData
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/configDataManager/_configData
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/configDataManager/_configMetadata
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/helpers/murmurhash/keyBuffer
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/TRUE_STR
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/FALSE_STR
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/NULL_STR
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_CONFIG
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIABLE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_FEATURE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIATION
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.MISSING_VARIABLE_FOR_VARIATION
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.USER_NOT_IN_ROLLOUT
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.USER_NOT_TARGETED
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.INVALID_VARIABLE_TYPE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/DEFAULT_REASONS.UNKNOWN
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.TARGETING_MATCH
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.SPLIT
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.DEFAULT
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.DISABLED
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.ERROR
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.OVERRIDE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.OPT_IN
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ALL_USERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.AUDIENCE_MATCH
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.NOT_IN_AUDIENCE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.OPT_IN
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.NOT_OPTED_IN
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.OVERRIDE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.RANDOM_DISTRIBUTION
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ROLLOUT
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.USER_ID
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.EMAIL
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.COUNTRY
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM_VERSION
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.APP_VERSION
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.DEVICE_MODEL
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.CUSTOM_DATA
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/configBody/validVariableTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/dvcEvent/EventTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/feature/validTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/featureV2/validTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/featureConfiguration/comparatorValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/featureConfigurationV2/comparatorValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validAudienceOperators
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validSubTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validComparators
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validAudienceMatchComparators
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validDataKeyTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validRolloutTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/target/validRolloutStages
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/targetV2/validTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/targetV2/validSubTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/targetV2/validComparators
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/targetV2/validAudienceMatchComparators
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/types/targetV2/validDataKeyTypes
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/bucketing/bucketing/DEFAULT_BUCKETING_VALUE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/as-uuid/assembly/rng/rnds8Pool
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/object/Object~visit (param $0 i32) (param $1 i32)
  nop
 )
 (func $~lib/array/Array<~lib/string/String>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $assembly/types/platformData/PlatformData~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__visit
 )
 (func $~lib/typedarray/Uint8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/set/Set<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/set/Set<~lib/string/String>#__visit
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/as-proto/assembly/Writer/Writer~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/as-proto/assembly/Writer/Writer~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/as-proto/assembly/Writer/Writer~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<u32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/array/Array<i32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/as-proto/assembly/Reader/Reader~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/as-proto/assembly/Reader/Reader~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__visit
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>#__visit
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>#__visit
 )
 (func $~lib/array/Array<f64>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>#__visit
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/configBody/PublicProject~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/Audience~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/AudienceOperator~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/AudienceFilterOrOperator~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/AudienceFilter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#__visit
 )
 (func $assembly/types/configBody/PublicEnvironment~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/featureV2/FeatureV2~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/feature/Variation~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/feature/VariationVariable~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#__visit
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/Variation>#__visit
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#__visit
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#__visit
 )
 (func $assembly/types/targetV2/TargetV2~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/Rollout~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/RolloutStage~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/RolloutStage>#__visit
 )
 (func $assembly/types/target/TargetDistribution~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#__visit
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#__visit
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#__visit
 )
 (func $assembly/types/configBody/Variable~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/configBody/Variable>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#__visit
 )
 (func $assembly/eventQueue/eventQueue/EventQueue~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=44
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=40
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=48
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=52
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=56
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=60
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=64
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=68
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=72
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=76
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/dvcUser/DVCUser~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=40
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=44
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/dvcEvent/DVCEvent~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,i64>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#__visit
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/dvcEvent/FlushPayload~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#__visit
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__visit
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  local.set $cur
  local.get $cur
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/string/String>#__visit
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/bucketedUserConfig/EvalReason~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#__visit
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#__visit
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#__visit
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/bucketing/bucketing/TargetResult~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/bucketing/segmentation/SegmentationResult~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/AudienceMatchFilter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/types/target/AudienceFilter~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>#__visit
 )
 (func $assembly/types/target/UserFilter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/types/target/AudienceFilter~visit
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<bool>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<bool>#__visit
 )
 (func $assembly/types/target/CustomDataFilter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $assembly/types/target/UserFilter~visit
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#__visit
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>#__visit
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>#__visit
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#__visit
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>#__visit
 )
 (func $assembly/types/configBody/ConfigMetadata~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/configBody/ProjectMetadata~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/configBody/EnvironmentMetadata~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__visit
 )
 (func $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>#__visit
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>#__visit
 )
 (func $assembly/types/target/Target~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/configBody/ConfigBody~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/feature/Feature~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#__visit
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/types/target/Target>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/target/Target>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/Target>#__visit
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/Feature>#__visit
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>#__visit
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>#__visit
 )
 (func $assembly/testHelpers/TestData~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#__visit
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/testHelpers/TestData>#__visit
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>
    block $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>
     block $~lib/array/Array<assembly/testHelpers/TestData>
      block $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
       block $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>
        block $assembly/testHelpers/TestData
         block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>
          block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>
           block $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>
            block $~lib/array/Array<assembly/types/feature/Feature>
             block $~lib/array/Array<assembly/types/target/Target>
              block $assembly/types/featureConfiguration/FeatureWinningVariation
               block $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>
                block $assembly/types/featureConfiguration/FeaturePrerequisites
                 block $assembly/types/featureConfiguration/FeatureConfiguration
                  block $assembly/types/feature/Feature
                   block $assembly/types/configBody/ConfigBody
                    block $assembly/types/target/Target
                     block $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
                      block $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>
                       block $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>
                        block $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>
                         block $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>
                          block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>
                           block $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>
                            block $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>
                             block $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>
                              block $assembly/eventQueue/eventQueue/FlushEventQueues
                               block $assembly/types/configBody/EnvironmentMetadata
                                block $assembly/types/configBody/ProjectMetadata
                                 block $assembly/types/configBody/ConfigMetadata
                                  block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>
                                   block $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>
                                    block $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
                                     block $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>
                                      block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>
                                       block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>
                                        block $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>
                                         block $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>
                                          block $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB
                                           block $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB
                                            block $assembly/bucketing/bucketing/BucketedVariableResponse
                                             block $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>
                                              block $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>
                                               block $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue
                                                block $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData
                                                 block $assembly/types/protobuf-generated/NullableDouble/NullableDouble
                                                  block $assembly/types/protobuf-generated/NullableString/NullableString
                                                   block $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB
                                                    block $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB
                                                     block $assembly/types/target/CustomDataFilter
                                                      block $~lib/array/Array<bool>
                                                       block $assembly/types/target/UserFilter
                                                        block $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>
                                                         block $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>
                                                          block $assembly/types/target/AudienceMatchFilter
                                                           block $assembly/bucketing/segmentation/SegmentationResult
                                                            block $assembly/bucketing/bucketing/TargetResult
                                                             block $assembly/bucketing/bucketing/TargetAndHashes
                                                              block $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>
                                                               block $assembly/types/bucketedUserConfig/SDKVariable
                                                                block $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>
                                                                 block $assembly/types/bucketedUserConfig/FeatureVariation
                                                                  block $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>
                                                                   block $assembly/types/bucketedUserConfig/EvalReason
                                                                    block $assembly/types/bucketedUserConfig/SDKFeature
                                                                     block $assembly/types/bucketedUserConfig/BucketedUserConfig
                                                                      block $~lib/staticarray/StaticArray<~lib/string/String>
                                                                       block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
                                                                        block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
                                                                         block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
                                                                          block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
                                                                           block $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState
                                                                            block $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>
                                                                             block $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                                                              block $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler
                                                                               block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler
                                                                                block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null
                                                                                 block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num
                                                                                  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
                                                                                   block $assembly/bucketing/bucketing/BoundedHash
                                                                                    block $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>
                                                                                     block $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>
                                                                                      block $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>
                                                                                       block $assembly/types/dvcEvent/FlushPayload
                                                                                        block $assembly/eventQueue/requestPayloadManager/RequestPayloadManager
                                                                                         block $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>
                                                                                          block $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>
                                                                                           block $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>
                                                                                            block $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>
                                                                                             block $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>
                                                                                              block $~lib/map/Map<~lib/string/String,i64>
                                                                                               block $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>
                                                                                                block $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>
                                                                                                 block $assembly/types/dvcEvent/DVCEvent
                                                                                                  block $assembly/types/dvcEvent/DVCRequestEvent
                                                                                                   block $assembly/types/dvcUser/DVCUser
                                                                                                    block $assembly/types/dvcUser/DVCUserInterface
                                                                                                     block $assembly/types/dvcUser/DVCPopulatedUser
                                                                                                      block $assembly/types/dvcEvent/UserEventsBatchRecord
                                                                                                       block $assembly/types/eventQueueOptions/EventQueueOptions
                                                                                                        block $assembly/eventQueue/eventQueue/EventQueue
                                                                                                         block $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
                                                                                                          block $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>
                                                                                                           block $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>
                                                                                                            block $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>
                                                                                                             block $~lib/array/Array<assembly/types/configBody/Variable>
                                                                                                              block $assembly/types/configBody/Variable
                                                                                                               block $~lib/array/Array<assembly/types/featureV2/FeatureV2>
                                                                                                                block $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>
                                                                                                                 block $~lib/array/Array<assembly/types/targetV2/TargetV2>
                                                                                                                  block $~lib/array/Array<assembly/types/target/TargetDistribution>
                                                                                                                   block $assembly/types/target/TargetDistribution
                                                                                                                    block $~lib/array/Array<assembly/types/target/RolloutStage>
                                                                                                                     block $assembly/types/target/RolloutStage
                                                                                                                      block $assembly/types/target/Rollout
                                                                                                                       block $assembly/types/targetV2/TargetV2
                                                                                                                        block $~lib/map/Map<~lib/string/String,~lib/string/String>
                                                                                                                         block $~lib/date/Date
                                                                                                                          block $assembly/types/featureConfigurationV2/FeatureWinningVariation
                                                                                                                           block $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>
                                                                                                                            block $assembly/types/featureConfigurationV2/FeaturePrerequisites
                                                                                                                             block $assembly/types/featureConfigurationV2/FeatureConfigurationV2
                                                                                                                              block $~lib/array/Array<assembly/types/feature/Variation>
                                                                                                                               block $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>
                                                                                                                                block $~lib/array/Array<assembly/types/feature/VariationVariable>
                                                                                                                                 block $assembly/types/feature/VariationVariable
                                                                                                                                  block $assembly/types/feature/Variation
                                                                                                                                   block $assembly/types/featureV2/FeatureV2
                                                                                                                                    block $assembly/types/configBody/PublicEnvironment
                                                                                                                                     block $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>
                                                                                                                                      block $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>
                                                                                                                                       block $assembly/types/target/AudienceFilter
                                                                                                                                        block $assembly/types/target/AudienceFilterOrOperator
                                                                                                                                         block $assembly/types/target/AudienceOperator
                                                                                                                                          block $assembly/types/target/Audience
                                                                                                                                           block $assembly/types/configBody/Settings
                                                                                                                                            block $assembly/types/configBody/PublicProject
                                                                                                                                             block $assembly/types/configBodyV2/ConfigBodyV2
                                                                                                                                              block $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>
                                                                                                                                               block $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>
                                                                                                                                                block $~lib/array/Array<f64>
                                                                                                                                                 block $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>
                                                                                                                                                  block $~lib/assemblyscript-regex/assembly/regexp/Match
                                                                                                                                                   block $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>
                                                                                                                                                    block $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState
                                                                                                                                                     block $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>
                                                                                                                                                      block $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>
                                                                                                                                                       block $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>
                                                                                                                                                        block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher
                                                                                                                                                         block $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>
                                                                                                                                                          block $~lib/assemblyscript-regex/assembly/util/Range
                                                                                                                                                           block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher
                                                                                                                                                            block $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>
                                                                                                                                                             block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher
                                                                                                                                                              block $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>
                                                                                                                                                               block $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher
                                                                                                                                                                block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher
                                                                                                                                                                 block $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor
                                                                                                                                                                  block $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>
                                                                                                                                                                   block $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor
                                                                                                                                                                    block $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode
                                                                                                                                                                     block $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode
                                                                                                                                                                      block $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode
                                                                                                                                                                       block $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode
                                                                                                                                                                        block $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
                                                                                                                                                                         block $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
                                                                                                                                                                          block $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode
                                                                                                                                                                           block $~lib/assemblyscript-regex/assembly/parser/parser/Range
                                                                                                                                                                            block $~lib/assemblyscript-regex/assembly/parser/node/GroupNode
                                                                                                                                                                             block $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode
                                                                                                                                                                              block $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
                                                                                                                                                                               block $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>
                                                                                                                                                                                block $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator
                                                                                                                                                                                 block $~lib/assemblyscript-regex/assembly/parser/parser/Parser
                                                                                                                                                                                  block $~lib/assemblyscript-regex/assembly/parser/node/Node
                                                                                                                                                                                   block $~lib/assemblyscript-regex/assembly/parser/node/AST
                                                                                                                                                                                    block $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>
                                                                                                                                                                                     block $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
                                                                                                                                                                                      block $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>
                                                                                                                                                                                       block $~lib/assemblyscript-regex/assembly/nfa/nfa/State
                                                                                                                                                                                        block $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata
                                                                                                                                                                                         block $~lib/assemblyscript-regex/assembly/regexp/Flags
                                                                                                                                                                                          block $~lib/assemblyscript-regex/assembly/regexp/RegExp
                                                                                                                                                                                           block $assembly/bucketing/versionCompare/OptionsType
                                                                                                                                                                                            block $~lib/staticarray/StaticArray<i32>
                                                                                                                                                                                             block $~lib/as-proto/assembly/Reader/Reader
                                                                                                                                                                                              block $~lib/as-proto/assembly/internal/FixedReader/FixedReader
                                                                                                                                                                                               block $~lib/array/Array<i32>
                                                                                                                                                                                                block $~lib/array/Array<u32>
                                                                                                                                                                                                 block $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer
                                                                                                                                                                                                  block $~lib/as-proto/assembly/Writer/Writer
                                                                                                                                                                                                   block $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter
                                                                                                                                                                                                    block $~lib/set/Set<~lib/string/String>
                                                                                                                                                                                                     block $~lib/typedarray/Uint8Array
                                                                                                                                                                                                      block $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                                                                                                                                                                                       block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value
                                                                                                                                                                                                        block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
                                                                                                                                                                                                         block $assembly/types/platformData/PlatformData
                                                                                                                                                                                                          block $~lib/array/Array<~lib/string/String>
                                                                                                                                                                                                           block $~lib/arraybuffer/ArrayBufferView
                                                                                                                                                                                                            block $~lib/string/String
                                                                                                                                                                                                             block $~lib/arraybuffer/ArrayBuffer
                                                                                                                                                                                                              block $~lib/object/Object
                                                                                                                                                                                                               local.get $0
                                                                                                                                                                                                               i32.const 8
                                                                                                                                                                                                               i32.sub
                                                                                                                                                                                                               i32.load $0
                                                                                                                                                                                                               br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<~lib/string/String> $assembly/types/platformData/PlatformData $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value> $~lib/typedarray/Uint8Array $~lib/set/Set<~lib/string/String> $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter $~lib/as-proto/assembly/Writer/Writer $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer $~lib/array/Array<u32> $~lib/array/Array<i32> $~lib/as-proto/assembly/internal/FixedReader/FixedReader $~lib/as-proto/assembly/Reader/Reader $~lib/staticarray/StaticArray<i32> $assembly/bucketing/versionCompare/OptionsType $~lib/assemblyscript-regex/assembly/regexp/RegExp $~lib/assemblyscript-regex/assembly/regexp/Flags $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata $~lib/assemblyscript-regex/assembly/nfa/nfa/State $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State> $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState> $~lib/assemblyscript-regex/assembly/parser/node/AST $~lib/assemblyscript-regex/assembly/parser/node/Node $~lib/assemblyscript-regex/assembly/parser/parser/Parser $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node> $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode $~lib/assemblyscript-regex/assembly/parser/node/GroupNode $~lib/assemblyscript-regex/assembly/parser/parser/Range $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void> $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher> $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher> $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher $~lib/assemblyscript-regex/assembly/util/Range $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range> $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher> $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher> $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher> $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void> $~lib/assemblyscript-regex/assembly/regexp/Match $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void> $~lib/array/Array<f64> $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64> $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64> $assembly/types/configBodyV2/ConfigBodyV2 $assembly/types/configBody/PublicProject $assembly/types/configBody/Settings $assembly/types/target/Audience $assembly/types/target/AudienceOperator $assembly/types/target/AudienceFilterOrOperator $assembly/types/target/AudienceFilter $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator> $~lib/map/Map<~lib/string/String,assembly/types/target/Audience> $assembly/types/configBody/PublicEnvironment $assembly/types/featureV2/FeatureV2 $assembly/types/feature/Variation $assembly/types/feature/VariationVariable $~lib/array/Array<assembly/types/feature/VariationVariable> $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable> $~lib/array/Array<assembly/types/feature/Variation> $assembly/types/featureConfigurationV2/FeatureConfigurationV2 $assembly/types/featureConfigurationV2/FeaturePrerequisites $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites> $assembly/types/featureConfigurationV2/FeatureWinningVariation $~lib/date/Date $~lib/map/Map<~lib/string/String,~lib/string/String> $assembly/types/targetV2/TargetV2 $assembly/types/target/Rollout $assembly/types/target/RolloutStage $~lib/array/Array<assembly/types/target/RolloutStage> $assembly/types/target/TargetDistribution $~lib/array/Array<assembly/types/target/TargetDistribution> $~lib/array/Array<assembly/types/targetV2/TargetV2> $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation> $~lib/array/Array<assembly/types/featureV2/FeatureV2> $assembly/types/configBody/Variable $~lib/array/Array<assembly/types/configBody/Variable> $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable> $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2> $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2> $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj> $assembly/eventQueue/eventQueue/EventQueue $assembly/types/eventQueueOptions/EventQueueOptions $assembly/types/dvcEvent/UserEventsBatchRecord $assembly/types/dvcUser/DVCPopulatedUser $assembly/types/dvcUser/DVCUserInterface $assembly/types/dvcUser/DVCUser $assembly/types/dvcEvent/DVCRequestEvent $assembly/types/dvcEvent/DVCEvent $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent> $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord> $~lib/map/Map<~lib/string/String,i64> $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>> $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>> $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>> $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>> $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue> $assembly/eventQueue/requestPayloadManager/RequestPayloadManager $assembly/types/dvcEvent/FlushPayload $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord> $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload> $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager> $assembly/bucketing/bucketing/BoundedHash $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value> $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler> $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer $~lib/staticarray/StaticArray<~lib/string/String> $assembly/types/bucketedUserConfig/BucketedUserConfig $assembly/types/bucketedUserConfig/SDKFeature $assembly/types/bucketedUserConfig/EvalReason $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature> $assembly/types/bucketedUserConfig/FeatureVariation $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation> $assembly/types/bucketedUserConfig/SDKVariable $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable> $assembly/bucketing/bucketing/TargetAndHashes $assembly/bucketing/bucketing/TargetResult $assembly/bucketing/segmentation/SegmentationResult $assembly/types/target/AudienceMatchFilter $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>> $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>> $assembly/types/target/UserFilter $~lib/array/Array<bool> $assembly/types/target/CustomDataFilter $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB $assembly/types/protobuf-generated/NullableString/NullableString $assembly/types/protobuf-generated/NullableDouble/NullableDouble $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue> $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB> $assembly/bucketing/bucketing/BucketedVariableResponse $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution> $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution> $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2> $assembly/types/configBody/ConfigMetadata $assembly/types/configBody/ProjectMetadata $assembly/types/configBody/EnvironmentMetadata $assembly/eventQueue/eventQueue/FlushEventQueues $~lib/array/Array<assembly/types/dvcEvent/FlushPayload> $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void> $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String> $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32> $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void> $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB> $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void> $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB> $assembly/types/target/Target $assembly/types/configBody/ConfigBody $assembly/types/feature/Feature $assembly/types/featureConfiguration/FeatureConfiguration $assembly/types/featureConfiguration/FeaturePrerequisites $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites> $assembly/types/featureConfiguration/FeatureWinningVariation $~lib/array/Array<assembly/types/target/Target> $~lib/array/Array<assembly/types/feature/Feature> $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites> $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target> $assembly/testHelpers/TestData $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData> $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>> $~lib/array/Array<assembly/testHelpers/TestData> $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32> $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node> $invalid
                                                                                                                                                                                                              end
                                                                                                                                                                                                              return
                                                                                                                                                                                                             end
                                                                                                                                                                                                             return
                                                                                                                                                                                                            end
                                                                                                                                                                                                            return
                                                                                                                                                                                                           end
                                                                                                                                                                                                           local.get $0
                                                                                                                                                                                                           local.get $1
                                                                                                                                                                                                           call $~lib/arraybuffer/ArrayBufferView~visit
                                                                                                                                                                                                           return
                                                                                                                                                                                                          end
                                                                                                                                                                                                          local.get $0
                                                                                                                                                                                                          local.get $1
                                                                                                                                                                                                          call $~lib/array/Array<~lib/string/String>~visit
                                                                                                                                                                                                          return
                                                                                                                                                                                                         end
                                                                                                                                                                                                         local.get $0
                                                                                                                                                                                                         local.get $1
                                                                                                                                                                                                         call $assembly/types/platformData/PlatformData~visit
                                                                                                                                                                                                         return
                                                                                                                                                                                                        end
                                                                                                                                                                                                        local.get $0
                                                                                                                                                                                                        local.get $1
                                                                                                                                                                                                        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj~visit
                                                                                                                                                                                                        return
                                                                                                                                                                                                       end
                                                                                                                                                                                                       return
                                                                                                                                                                                                      end
                                                                                                                                                                                                      local.get $0
                                                                                                                                                                                                      local.get $1
                                                                                                                                                                                                      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>~visit
                                                                                                                                                                                                      return
                                                                                                                                                                                                     end
                                                                                                                                                                                                     local.get $0
                                                                                                                                                                                                     local.get $1
                                                                                                                                                                                                     call $~lib/typedarray/Uint8Array~visit
                                                                                                                                                                                                     return
                                                                                                                                                                                                    end
                                                                                                                                                                                                    local.get $0
                                                                                                                                                                                                    local.get $1
                                                                                                                                                                                                    call $~lib/set/Set<~lib/string/String>~visit
                                                                                                                                                                                                    return
                                                                                                                                                                                                   end
                                                                                                                                                                                                   local.get $0
                                                                                                                                                                                                   local.get $1
                                                                                                                                                                                                   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter~visit
                                                                                                                                                                                                   return
                                                                                                                                                                                                  end
                                                                                                                                                                                                  return
                                                                                                                                                                                                 end
                                                                                                                                                                                                 local.get $0
                                                                                                                                                                                                 local.get $1
                                                                                                                                                                                                 call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer~visit
                                                                                                                                                                                                 return
                                                                                                                                                                                                end
                                                                                                                                                                                                local.get $0
                                                                                                                                                                                                local.get $1
                                                                                                                                                                                                call $~lib/array/Array<u32>~visit
                                                                                                                                                                                                return
                                                                                                                                                                                               end
                                                                                                                                                                                               local.get $0
                                                                                                                                                                                               local.get $1
                                                                                                                                                                                               call $~lib/array/Array<i32>~visit
                                                                                                                                                                                               return
                                                                                                                                                                                              end
                                                                                                                                                                                              local.get $0
                                                                                                                                                                                              local.get $1
                                                                                                                                                                                              call $~lib/as-proto/assembly/internal/FixedReader/FixedReader~visit
                                                                                                                                                                                              return
                                                                                                                                                                                             end
                                                                                                                                                                                             return
                                                                                                                                                                                            end
                                                                                                                                                                                            return
                                                                                                                                                                                           end
                                                                                                                                                                                           return
                                                                                                                                                                                          end
                                                                                                                                                                                          local.get $0
                                                                                                                                                                                          local.get $1
                                                                                                                                                                                          call $~lib/assemblyscript-regex/assembly/regexp/RegExp~visit
                                                                                                                                                                                          return
                                                                                                                                                                                         end
                                                                                                                                                                                         return
                                                                                                                                                                                        end
                                                                                                                                                                                        local.get $0
                                                                                                                                                                                        local.get $1
                                                                                                                                                                                        call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata~visit
                                                                                                                                                                                        return
                                                                                                                                                                                       end
                                                                                                                                                                                       local.get $0
                                                                                                                                                                                       local.get $1
                                                                                                                                                                                       call $~lib/assemblyscript-regex/assembly/nfa/nfa/State~visit
                                                                                                                                                                                       return
                                                                                                                                                                                      end
                                                                                                                                                                                      local.get $0
                                                                                                                                                                                      local.get $1
                                                                                                                                                                                      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>~visit
                                                                                                                                                                                      return
                                                                                                                                                                                     end
                                                                                                                                                                                     local.get $0
                                                                                                                                                                                     local.get $1
                                                                                                                                                                                     call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState~visit
                                                                                                                                                                                     return
                                                                                                                                                                                    end
                                                                                                                                                                                    local.get $0
                                                                                                                                                                                    local.get $1
                                                                                                                                                                                    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>~visit
                                                                                                                                                                                    return
                                                                                                                                                                                   end
                                                                                                                                                                                   local.get $0
                                                                                                                                                                                   local.get $1
                                                                                                                                                                                   call $~lib/assemblyscript-regex/assembly/parser/node/AST~visit
                                                                                                                                                                                   return
                                                                                                                                                                                  end
                                                                                                                                                                                  return
                                                                                                                                                                                 end
                                                                                                                                                                                 local.get $0
                                                                                                                                                                                 local.get $1
                                                                                                                                                                                 call $~lib/assemblyscript-regex/assembly/parser/parser/Parser~visit
                                                                                                                                                                                 return
                                                                                                                                                                                end
                                                                                                                                                                                local.get $0
                                                                                                                                                                                local.get $1
                                                                                                                                                                                call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator~visit
                                                                                                                                                                                return
                                                                                                                                                                               end
                                                                                                                                                                               local.get $0
                                                                                                                                                                               local.get $1
                                                                                                                                                                               call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>~visit
                                                                                                                                                                               return
                                                                                                                                                                              end
                                                                                                                                                                              local.get $0
                                                                                                                                                                              local.get $1
                                                                                                                                                                              call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode~visit
                                                                                                                                                                              return
                                                                                                                                                                             end
                                                                                                                                                                             local.get $0
                                                                                                                                                                             local.get $1
                                                                                                                                                                             call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit
                                                                                                                                                                             return
                                                                                                                                                                            end
                                                                                                                                                                            local.get $0
                                                                                                                                                                            local.get $1
                                                                                                                                                                            call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode~visit
                                                                                                                                                                            return
                                                                                                                                                                           end
                                                                                                                                                                           return
                                                                                                                                                                          end
                                                                                                                                                                          local.get $0
                                                                                                                                                                          local.get $1
                                                                                                                                                                          call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode~visit
                                                                                                                                                                          return
                                                                                                                                                                         end
                                                                                                                                                                         return
                                                                                                                                                                        end
                                                                                                                                                                        return
                                                                                                                                                                       end
                                                                                                                                                                       return
                                                                                                                                                                      end
                                                                                                                                                                      local.get $0
                                                                                                                                                                      local.get $1
                                                                                                                                                                      call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode~visit
                                                                                                                                                                      return
                                                                                                                                                                     end
                                                                                                                                                                     local.get $0
                                                                                                                                                                     local.get $1
                                                                                                                                                                     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode~visit
                                                                                                                                                                     return
                                                                                                                                                                    end
                                                                                                                                                                    return
                                                                                                                                                                   end
                                                                                                                                                                   local.get $0
                                                                                                                                                                   local.get $1
                                                                                                                                                                   call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor~visit
                                                                                                                                                                   return
                                                                                                                                                                  end
                                                                                                                                                                  local.get $0
                                                                                                                                                                  local.get $1
                                                                                                                                                                  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>~visit
                                                                                                                                                                  return
                                                                                                                                                                 end
                                                                                                                                                                 local.get $0
                                                                                                                                                                 local.get $1
                                                                                                                                                                 call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor~visit
                                                                                                                                                                 return
                                                                                                                                                                end
                                                                                                                                                                return
                                                                                                                                                               end
                                                                                                                                                               return
                                                                                                                                                              end
                                                                                                                                                              local.get $0
                                                                                                                                                              local.get $1
                                                                                                                                                              call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>~visit
                                                                                                                                                              return
                                                                                                                                                             end
                                                                                                                                                             local.get $0
                                                                                                                                                             local.get $1
                                                                                                                                                             call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher~visit
                                                                                                                                                             return
                                                                                                                                                            end
                                                                                                                                                            local.get $0
                                                                                                                                                            local.get $1
                                                                                                                                                            call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>~visit
                                                                                                                                                            return
                                                                                                                                                           end
                                                                                                                                                           local.get $0
                                                                                                                                                           local.get $1
                                                                                                                                                           call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher~visit
                                                                                                                                                           return
                                                                                                                                                          end
                                                                                                                                                          return
                                                                                                                                                         end
                                                                                                                                                         local.get $0
                                                                                                                                                         local.get $1
                                                                                                                                                         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>~visit
                                                                                                                                                         return
                                                                                                                                                        end
                                                                                                                                                        return
                                                                                                                                                       end
                                                                                                                                                       local.get $0
                                                                                                                                                       local.get $1
                                                                                                                                                       call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>~visit
                                                                                                                                                       return
                                                                                                                                                      end
                                                                                                                                                      local.get $0
                                                                                                                                                      local.get $1
                                                                                                                                                      call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>~visit
                                                                                                                                                      return
                                                                                                                                                     end
                                                                                                                                                     local.get $0
                                                                                                                                                     local.get $1
                                                                                                                                                     call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>~visit
                                                                                                                                                     return
                                                                                                                                                    end
                                                                                                                                                    local.get $0
                                                                                                                                                    local.get $1
                                                                                                                                                    call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState~visit
                                                                                                                                                    return
                                                                                                                                                   end
                                                                                                                                                   local.get $0
                                                                                                                                                   local.get $1
                                                                                                                                                   call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>~visit
                                                                                                                                                   return
                                                                                                                                                  end
                                                                                                                                                  local.get $0
                                                                                                                                                  local.get $1
                                                                                                                                                  call $~lib/assemblyscript-regex/assembly/regexp/Match~visit
                                                                                                                                                  return
                                                                                                                                                 end
                                                                                                                                                 local.get $0
                                                                                                                                                 local.get $1
                                                                                                                                                 call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>~visit
                                                                                                                                                 return
                                                                                                                                                end
                                                                                                                                                local.get $0
                                                                                                                                                local.get $1
                                                                                                                                                call $~lib/array/Array<f64>~visit
                                                                                                                                                return
                                                                                                                                               end
                                                                                                                                               local.get $0
                                                                                                                                               local.get $1
                                                                                                                                               call $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>~visit
                                                                                                                                               return
                                                                                                                                              end
                                                                                                                                              local.get $0
                                                                                                                                              local.get $1
                                                                                                                                              call $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>~visit
                                                                                                                                              return
                                                                                                                                             end
                                                                                                                                             local.get $0
                                                                                                                                             local.get $1
                                                                                                                                             call $assembly/types/configBodyV2/ConfigBodyV2~visit
                                                                                                                                             return
                                                                                                                                            end
                                                                                                                                            local.get $0
                                                                                                                                            local.get $1
                                                                                                                                            call $assembly/types/configBody/PublicProject~visit
                                                                                                                                            return
                                                                                                                                           end
                                                                                                                                           return
                                                                                                                                          end
                                                                                                                                          local.get $0
                                                                                                                                          local.get $1
                                                                                                                                          call $assembly/types/target/Audience~visit
                                                                                                                                          return
                                                                                                                                         end
                                                                                                                                         local.get $0
                                                                                                                                         local.get $1
                                                                                                                                         call $assembly/types/target/AudienceOperator~visit
                                                                                                                                         return
                                                                                                                                        end
                                                                                                                                        local.get $0
                                                                                                                                        local.get $1
                                                                                                                                        call $assembly/types/target/AudienceFilterOrOperator~visit
                                                                                                                                        return
                                                                                                                                       end
                                                                                                                                       local.get $0
                                                                                                                                       local.get $1
                                                                                                                                       call $assembly/types/target/AudienceFilter~visit
                                                                                                                                       return
                                                                                                                                      end
                                                                                                                                      local.get $0
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>~visit
                                                                                                                                      return
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     local.get $1
                                                                                                                                     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>~visit
                                                                                                                                     return
                                                                                                                                    end
                                                                                                                                    local.get $0
                                                                                                                                    local.get $1
                                                                                                                                    call $assembly/types/configBody/PublicEnvironment~visit
                                                                                                                                    return
                                                                                                                                   end
                                                                                                                                   local.get $0
                                                                                                                                   local.get $1
                                                                                                                                   call $assembly/types/featureV2/FeatureV2~visit
                                                                                                                                   return
                                                                                                                                  end
                                                                                                                                  local.get $0
                                                                                                                                  local.get $1
                                                                                                                                  call $assembly/types/feature/Variation~visit
                                                                                                                                  return
                                                                                                                                 end
                                                                                                                                 local.get $0
                                                                                                                                 local.get $1
                                                                                                                                 call $assembly/types/feature/VariationVariable~visit
                                                                                                                                 return
                                                                                                                                end
                                                                                                                                local.get $0
                                                                                                                                local.get $1
                                                                                                                                call $~lib/array/Array<assembly/types/feature/VariationVariable>~visit
                                                                                                                                return
                                                                                                                               end
                                                                                                                               local.get $0
                                                                                                                               local.get $1
                                                                                                                               call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>~visit
                                                                                                                               return
                                                                                                                              end
                                                                                                                              local.get $0
                                                                                                                              local.get $1
                                                                                                                              call $~lib/array/Array<assembly/types/feature/Variation>~visit
                                                                                                                              return
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             local.get $1
                                                                                                                             call $assembly/types/featureConfigurationV2/FeatureConfigurationV2~visit
                                                                                                                             return
                                                                                                                            end
                                                                                                                            local.get $0
                                                                                                                            local.get $1
                                                                                                                            call $assembly/types/featureConfigurationV2/FeaturePrerequisites~visit
                                                                                                                            return
                                                                                                                           end
                                                                                                                           local.get $0
                                                                                                                           local.get $1
                                                                                                                           call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>~visit
                                                                                                                           return
                                                                                                                          end
                                                                                                                          local.get $0
                                                                                                                          local.get $1
                                                                                                                          call $assembly/types/featureConfigurationV2/FeatureWinningVariation~visit
                                                                                                                          return
                                                                                                                         end
                                                                                                                         return
                                                                                                                        end
                                                                                                                        local.get $0
                                                                                                                        local.get $1
                                                                                                                        call $~lib/map/Map<~lib/string/String,~lib/string/String>~visit
                                                                                                                        return
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       local.get $1
                                                                                                                       call $assembly/types/targetV2/TargetV2~visit
                                                                                                                       return
                                                                                                                      end
                                                                                                                      local.get $0
                                                                                                                      local.get $1
                                                                                                                      call $assembly/types/target/Rollout~visit
                                                                                                                      return
                                                                                                                     end
                                                                                                                     local.get $0
                                                                                                                     local.get $1
                                                                                                                     call $assembly/types/target/RolloutStage~visit
                                                                                                                     return
                                                                                                                    end
                                                                                                                    local.get $0
                                                                                                                    local.get $1
                                                                                                                    call $~lib/array/Array<assembly/types/target/RolloutStage>~visit
                                                                                                                    return
                                                                                                                   end
                                                                                                                   local.get $0
                                                                                                                   local.get $1
                                                                                                                   call $assembly/types/target/TargetDistribution~visit
                                                                                                                   return
                                                                                                                  end
                                                                                                                  local.get $0
                                                                                                                  local.get $1
                                                                                                                  call $~lib/array/Array<assembly/types/target/TargetDistribution>~visit
                                                                                                                  return
                                                                                                                 end
                                                                                                                 local.get $0
                                                                                                                 local.get $1
                                                                                                                 call $~lib/array/Array<assembly/types/targetV2/TargetV2>~visit
                                                                                                                 return
                                                                                                                end
                                                                                                                local.get $0
                                                                                                                local.get $1
                                                                                                                call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>~visit
                                                                                                                return
                                                                                                               end
                                                                                                               local.get $0
                                                                                                               local.get $1
                                                                                                               call $~lib/array/Array<assembly/types/featureV2/FeatureV2>~visit
                                                                                                               return
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              local.get $1
                                                                                                              call $assembly/types/configBody/Variable~visit
                                                                                                              return
                                                                                                             end
                                                                                                             local.get $0
                                                                                                             local.get $1
                                                                                                             call $~lib/array/Array<assembly/types/configBody/Variable>~visit
                                                                                                             return
                                                                                                            end
                                                                                                            local.get $0
                                                                                                            local.get $1
                                                                                                            call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>~visit
                                                                                                            return
                                                                                                           end
                                                                                                           local.get $0
                                                                                                           local.get $1
                                                                                                           call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>~visit
                                                                                                           return
                                                                                                          end
                                                                                                          local.get $0
                                                                                                          local.get $1
                                                                                                          call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>~visit
                                                                                                          return
                                                                                                         end
                                                                                                         local.get $0
                                                                                                         local.get $1
                                                                                                         call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>~visit
                                                                                                         return
                                                                                                        end
                                                                                                        local.get $0
                                                                                                        local.get $1
                                                                                                        call $assembly/eventQueue/eventQueue/EventQueue~visit
                                                                                                        return
                                                                                                       end
                                                                                                       local.get $0
                                                                                                       local.get $1
                                                                                                       call $assembly/types/eventQueueOptions/EventQueueOptions~visit
                                                                                                       return
                                                                                                      end
                                                                                                      local.get $0
                                                                                                      local.get $1
                                                                                                      call $assembly/types/dvcEvent/UserEventsBatchRecord~visit
                                                                                                      return
                                                                                                     end
                                                                                                     local.get $0
                                                                                                     local.get $1
                                                                                                     call $assembly/types/dvcUser/DVCPopulatedUser~visit
                                                                                                     return
                                                                                                    end
                                                                                                    return
                                                                                                   end
                                                                                                   local.get $0
                                                                                                   local.get $1
                                                                                                   call $assembly/types/dvcUser/DVCUser~visit
                                                                                                   return
                                                                                                  end
                                                                                                  local.get $0
                                                                                                  local.get $1
                                                                                                  call $assembly/types/dvcEvent/DVCRequestEvent~visit
                                                                                                  return
                                                                                                 end
                                                                                                 local.get $0
                                                                                                 local.get $1
                                                                                                 call $assembly/types/dvcEvent/DVCEvent~visit
                                                                                                 return
                                                                                                end
                                                                                                local.get $0
                                                                                                local.get $1
                                                                                                call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>~visit
                                                                                                return
                                                                                               end
                                                                                               local.get $0
                                                                                               local.get $1
                                                                                               call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>~visit
                                                                                               return
                                                                                              end
                                                                                              local.get $0
                                                                                              local.get $1
                                                                                              call $~lib/map/Map<~lib/string/String,i64>~visit
                                                                                              return
                                                                                             end
                                                                                             local.get $0
                                                                                             local.get $1
                                                                                             call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>~visit
                                                                                             return
                                                                                            end
                                                                                            local.get $0
                                                                                            local.get $1
                                                                                            call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>~visit
                                                                                            return
                                                                                           end
                                                                                           local.get $0
                                                                                           local.get $1
                                                                                           call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>~visit
                                                                                           return
                                                                                          end
                                                                                          local.get $0
                                                                                          local.get $1
                                                                                          call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>~visit
                                                                                          return
                                                                                         end
                                                                                         local.get $0
                                                                                         local.get $1
                                                                                         call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>~visit
                                                                                         return
                                                                                        end
                                                                                        local.get $0
                                                                                        local.get $1
                                                                                        call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager~visit
                                                                                        return
                                                                                       end
                                                                                       local.get $0
                                                                                       local.get $1
                                                                                       call $assembly/types/dvcEvent/FlushPayload~visit
                                                                                       return
                                                                                      end
                                                                                      local.get $0
                                                                                      local.get $1
                                                                                      call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>~visit
                                                                                      return
                                                                                     end
                                                                                     local.get $0
                                                                                     local.get $1
                                                                                     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>~visit
                                                                                     return
                                                                                    end
                                                                                    local.get $0
                                                                                    local.get $1
                                                                                    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>~visit
                                                                                    return
                                                                                   end
                                                                                   return
                                                                                  end
                                                                                  return
                                                                                 end
                                                                                 return
                                                                                end
                                                                                return
                                                                               end
                                                                               local.get $0
                                                                               local.get $1
                                                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler~visit
                                                                               return
                                                                              end
                                                                              return
                                                                             end
                                                                             local.get $0
                                                                             local.get $1
                                                                             call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>~visit
                                                                             return
                                                                            end
                                                                            local.get $0
                                                                            local.get $1
                                                                            call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>~visit
                                                                            return
                                                                           end
                                                                           local.get $0
                                                                           local.get $1
                                                                           call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState~visit
                                                                           return
                                                                          end
                                                                          local.get $0
                                                                          local.get $1
                                                                          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr~visit
                                                                          return
                                                                         end
                                                                         local.get $0
                                                                         local.get $1
                                                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str~visit
                                                                         return
                                                                        end
                                                                        return
                                                                       end
                                                                       return
                                                                      end
                                                                      local.get $0
                                                                      local.get $1
                                                                      call $~lib/staticarray/StaticArray<~lib/string/String>~visit
                                                                      return
                                                                     end
                                                                     local.get $0
                                                                     local.get $1
                                                                     call $assembly/types/bucketedUserConfig/BucketedUserConfig~visit
                                                                     return
                                                                    end
                                                                    local.get $0
                                                                    local.get $1
                                                                    call $assembly/types/bucketedUserConfig/SDKFeature~visit
                                                                    return
                                                                   end
                                                                   local.get $0
                                                                   local.get $1
                                                                   call $assembly/types/bucketedUserConfig/EvalReason~visit
                                                                   return
                                                                  end
                                                                  local.get $0
                                                                  local.get $1
                                                                  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>~visit
                                                                  return
                                                                 end
                                                                 local.get $0
                                                                 local.get $1
                                                                 call $assembly/types/bucketedUserConfig/FeatureVariation~visit
                                                                 return
                                                                end
                                                                local.get $0
                                                                local.get $1
                                                                call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>~visit
                                                                return
                                                               end
                                                               local.get $0
                                                               local.get $1
                                                               call $assembly/types/bucketedUserConfig/SDKVariable~visit
                                                               return
                                                              end
                                                              local.get $0
                                                              local.get $1
                                                              call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>~visit
                                                              return
                                                             end
                                                             local.get $0
                                                             local.get $1
                                                             call $assembly/bucketing/bucketing/TargetAndHashes~visit
                                                             return
                                                            end
                                                            local.get $0
                                                            local.get $1
                                                            call $assembly/bucketing/bucketing/TargetResult~visit
                                                            return
                                                           end
                                                           local.get $0
                                                           local.get $1
                                                           call $assembly/bucketing/segmentation/SegmentationResult~visit
                                                           return
                                                          end
                                                          local.get $0
                                                          local.get $1
                                                          call $assembly/types/target/AudienceMatchFilter~visit
                                                          return
                                                         end
                                                         local.get $0
                                                         local.get $1
                                                         call $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>~visit
                                                         return
                                                        end
                                                        local.get $0
                                                        local.get $1
                                                        call $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>~visit
                                                        return
                                                       end
                                                       local.get $0
                                                       local.get $1
                                                       call $assembly/types/target/UserFilter~visit
                                                       return
                                                      end
                                                      local.get $0
                                                      local.get $1
                                                      call $~lib/array/Array<bool>~visit
                                                      return
                                                     end
                                                     local.get $0
                                                     local.get $1
                                                     call $assembly/types/target/CustomDataFilter~visit
                                                     return
                                                    end
                                                    local.get $0
                                                    local.get $1
                                                    call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB~visit
                                                    return
                                                   end
                                                   local.get $0
                                                   local.get $1
                                                   call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB~visit
                                                   return
                                                  end
                                                  local.get $0
                                                  local.get $1
                                                  call $assembly/types/protobuf-generated/NullableString/NullableString~visit
                                                  return
                                                 end
                                                 return
                                                end
                                                local.get $0
                                                local.get $1
                                                call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData~visit
                                                return
                                               end
                                               local.get $0
                                               local.get $1
                                               call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue~visit
                                               return
                                              end
                                              local.get $0
                                              local.get $1
                                              call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>~visit
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $assembly/bucketing/bucketing/BucketedVariableResponse~visit
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $assembly/types/configBody/ConfigMetadata~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $assembly/types/configBody/ProjectMetadata~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $assembly/types/configBody/EnvironmentMetadata~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $assembly/eventQueue/eventQueue/FlushEventQueues~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>~visit
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>~visit
                     return
                    end
                    local.get $0
                    local.get $1
                    call $assembly/types/target/Target~visit
                    return
                   end
                   local.get $0
                   local.get $1
                   call $assembly/types/configBody/ConfigBody~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $assembly/types/feature/Feature~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $assembly/types/featureConfiguration/FeatureConfiguration~visit
                 return
                end
                local.get $0
                local.get $1
                call $assembly/types/featureConfiguration/FeaturePrerequisites~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>~visit
               return
              end
              local.get $0
              local.get $1
              call $assembly/types/featureConfiguration/FeatureWinningVariation~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/array/Array<assembly/types/target/Target>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/array/Array<assembly/types/feature/Feature>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>~visit
         return
        end
        local.get $0
        local.get $1
        call $assembly/testHelpers/TestData~visit
        return
       end
       local.get $0
       local.get $1
       call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/array/Array<assembly/testHelpers/TestData>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>~visit
   return
  end
  unreachable
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 65552
   i32.const 65600
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 5120
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $buffer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/set/Set<~lib/string/String>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/set/Set<~lib/string/String>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/set/Set<~lib/string/String>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.0 (result i32)
   i32.const 8
   br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/set/Set<~lib/string/String>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/set/Set<~lib/string/String>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/set/Set<~lib/string/String>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/set/Set<~lib/string/String>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $key i32) (result i32)
  (local $key|1 i32)
  (local $h i32)
  (local $len i32)
  (local $pos i32)
  (local $s1 i32)
  (local $s2 i32)
  (local $s3 i32)
  (local $s4 i32)
  (local $end i32)
  (local $h|10 i32)
  (local $key|11 i32)
  (local $h|12 i32)
  (local $key|13 i32)
  (local $h|14 i32)
  (local $key|15 i32)
  (local $h|16 i32)
  (local $key|17 i32)
  (local $end|18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1
  drop
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $key|1
   i32.store $0
   local.get $key|1
   i32.const 0
   i32.eq
   if
    i32.const 0
    br $~lib/util/hash/hashStr|inlined.0
   end
   local.get $key|1
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=4
   local.get $19
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   local.set $h
   local.get $h
   local.set $len
   local.get $key|1
   local.set $pos
   local.get $len
   i32.const 16
   i32.ge_u
   if
    i32.const 0
    i32.const -1640531535
    i32.add
    i32.const -2048144777
    i32.add
    local.set $s1
    i32.const 0
    i32.const -2048144777
    i32.add
    local.set $s2
    i32.const 0
    local.set $s3
    i32.const 0
    i32.const -1640531535
    i32.sub
    local.set $s4
    local.get $len
    local.get $pos
    i32.add
    i32.const 16
    i32.sub
    local.set $end
    loop $while-continue|0
     local.get $pos
     local.get $end
     i32.le_u
     if
      block $~lib/util/hash/mix|inlined.0 (result i32)
       local.get $s1
       local.set $h|10
       local.get $pos
       i32.load $0
       local.set $key|11
       local.get $h|10
       local.get $key|11
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.0
      end
      local.set $s1
      block $~lib/util/hash/mix|inlined.1 (result i32)
       local.get $s2
       local.set $h|12
       local.get $pos
       i32.load $0 offset=4
       local.set $key|13
       local.get $h|12
       local.get $key|13
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.1
      end
      local.set $s2
      block $~lib/util/hash/mix|inlined.2 (result i32)
       local.get $s3
       local.set $h|14
       local.get $pos
       i32.load $0 offset=8
       local.set $key|15
       local.get $h|14
       local.get $key|15
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.2
      end
      local.set $s3
      block $~lib/util/hash/mix|inlined.3 (result i32)
       local.get $s4
       local.set $h|16
       local.get $pos
       i32.load $0 offset=12
       local.set $key|17
       local.get $h|16
       local.get $key|17
       i32.const -2048144777
       i32.mul
       i32.add
       i32.const 13
       i32.rotl
       i32.const -1640531535
       i32.mul
       br $~lib/util/hash/mix|inlined.3
      end
      local.set $s4
      local.get $pos
      i32.const 16
      i32.add
      local.set $pos
      br $while-continue|0
     end
    end
    local.get $h
    local.get $s1
    i32.const 1
    i32.rotl
    local.get $s2
    i32.const 7
    i32.rotl
    i32.add
    local.get $s3
    i32.const 12
    i32.rotl
    i32.add
    local.get $s4
    i32.const 18
    i32.rotl
    i32.add
    i32.add
    local.set $h
   else
    local.get $h
    i32.const 0
    i32.const 374761393
    i32.add
    i32.add
    local.set $h
   end
   local.get $key|1
   local.get $len
   i32.add
   i32.const 4
   i32.sub
   local.set $end|18
   loop $while-continue|1
    local.get $pos
    local.get $end|18
    i32.le_u
    if
     local.get $h
     local.get $pos
     i32.load $0
     i32.const -1028477379
     i32.mul
     i32.add
     local.set $h
     local.get $h
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $h
     local.get $pos
     i32.const 4
     i32.add
     local.set $pos
     br $while-continue|1
    end
   end
   local.get $key|1
   local.get $len
   i32.add
   local.set $end|18
   loop $while-continue|2
    local.get $pos
    local.get $end|18
    i32.lt_u
    if
     local.get $h
     local.get $pos
     i32.load8_u $0
     i32.const 374761393
     i32.mul
     i32.add
     local.set $h
     local.get $h
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $h
     local.get $pos
     i32.const 1
     i32.add
     local.set $pos
     br $while-continue|2
    end
   end
   local.get $h
   local.get $h
   i32.const 15
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -2048144777
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 13
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -1028477379
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 16
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   br $~lib/util/hash/hashStr|inlined.0
  end
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
  return
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/set/Set<~lib/string/String>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/set/Set<~lib/string/String>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/set/Set<~lib/string/String>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/set/SetEntry<~lib/string/String>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/set/SetEntry<~lib/string/String>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/set/Set<~lib/string/String>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.1 (result i32)
   i32.const 8
   br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/set/Set<~lib/string/String>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/set/Set<~lib/string/String>#get:entriesOffset
  block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.2 (result i32)
   i32.const 8
   br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/set/SetEntry<~lib/string/String>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/set/SetEntry<~lib/string/String>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/set/SetEntry<~lib/string/String>#set:key
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/set/SetEntry<~lib/string/String>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.3 (result i32)
      i32.const 8
      br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.4 (result i32)
     i32.const 8
     br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/set/Set<~lib/string/String>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/set/Set<~lib/string/String>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/set/Set<~lib/string/String>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/set/Set<~lib/string/String>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/set/Set<~lib/string/String>#get:entriesCount
  call $~lib/set/Set<~lib/string/String>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<~lib/string/String>#add (param $this i32) (param $key i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $4 i32)
  (local $bucketPtrBase i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $hashCode
  call $~lib/set/Set<~lib/string/String>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:entriesOffset
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/set/Set<~lib/string/String>#get:entriesCount
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/set/Set<~lib/string/String>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     call $~lib/set/Set<~lib/string/String>#get:bucketsMask
    else
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     call $~lib/set/Set<~lib/string/String>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/set/Set<~lib/string/String>#rehash
   end
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:entries
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:entriesOffset
   local.tee $4
   i32.const 1
   i32.add
   call $~lib/set/Set<~lib/string/String>#set:entriesOffset
   local.get $4
   block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.5 (result i32)
    i32.const 8
    br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/set/SetEntry<~lib/string/String>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/set/Set<~lib/string/String>#set:entriesCount
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/set/Set<~lib/string/String>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/set/SetEntry<~lib/string/String>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $start:assembly/types/dvcEvent
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  call $start:~lib/as-uuid/assembly/index
  i32.const 0
  call $~lib/set/Set<~lib/string/String>#constructor
  global.set $assembly/types/dvcEvent/EventTypes
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5664
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5728
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5792
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5856
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/Writer/Writer#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:pos
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlen
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlenidx
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/as-proto/assembly/Writer/Writer#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  i32.const 2
  i32.const 14
  i32.const 5904
  call $~lib/rt/__newArray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:pos
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  i32.const 2
  i32.const 15
  i32.const 5936
  call $~lib/rt/__newArray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlen
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  i32.const 2
  i32.const 15
  i32.const 5968
  call $~lib/rt/__newArray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:varlenidx
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $sizer i32)
  (local $3 i32)
  (local $buf i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:sizer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:buf
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/Writer/Writer#constructor
  local.tee $this
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:sizer
  local.get $1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.tee $sizer
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $3
  i32.store $0 offset=20
  local.get $3
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  local.get $sizer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  call $~lib/typedarray/Uint8Array#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:buf
  local.get $3
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:buf
  local.tee $buf
  i32.store $0 offset=28
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $buf
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/as-proto/assembly/Reader/Reader#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/as-proto/assembly/Reader/Reader#set:ptr
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/as-proto/assembly/Reader/Reader#set:end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#constructor (param $this i32) (param $buf i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#set:buf
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Reader/Reader#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  call $~lib/as-proto/assembly/Reader/Reader#set:ptr
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.add
  call $~lib/as-proto/assembly/Reader/Reader#set:end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#set:buf
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:~lib/as-proto/assembly/Protobuf
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#constructor
  global.set $~lib/as-proto/assembly/Protobuf/WRITER
  i32.const 0
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#constructor
  global.set $~lib/as-proto/assembly/Protobuf/READER
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $array
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 5072
    i32.const 6096
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/itcms/__renew
   local.set $newData
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store $0
    local.get $array
    local.get $newData
    i32.store $0 offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/string/String>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#indexOf (param $this i32) (param $search i32) (param $start i32) (result i32)
  (local $searchLen i32)
  (local $len i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $searchStart i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $search
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/string/String#get:length
  local.set $searchLen
  local.get $searchLen
  i32.eqz
  if
   i32.const 0
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   i32.const -1
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $start
  local.tee $5
  i32.const 0
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.tee $7
  local.get $len
  local.tee $8
  local.get $7
  local.get $8
  i32.lt_s
  select
  local.set $searchStart
  local.get $len
  local.get $searchLen
  i32.sub
  local.set $len
  loop $for-loop|0
   local.get $searchStart
   local.get $len
   i32.le_s
   if
    local.get $this
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    local.get $searchStart
    local.get $search
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 0
    local.get $searchLen
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     local.get $searchStart
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $10
     return
    end
    local.get $searchStart
    i32.const 1
    i32.add
    local.set $searchStart
    br $for-loop|0
   end
  end
  i32.const -1
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String#split (param $this i32) (param $separator i32) (param $limit i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $length i32)
  (local $sepLen i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $i i32)
  (local $charStr i32)
  (local $result|13 i32)
  (local $result|14 i32)
  (local $end i32)
  (local $start i32)
  (local $i|17 i32)
  (local $len i32)
  (local $out i32)
  (local $len|20 i32)
  (local $out|21 i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $limit
  i32.eqz
  if
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 0
   call $~lib/rt/__newArray
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $separator
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0 offset=4
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   local.get $this
   call $~lib/array/Array<~lib/string/String>#__set
   local.get $3
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $this
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store $0 offset=8
  local.get $22
  call $~lib/string/String#get:length
  local.set $length
  local.get $separator
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store $0 offset=8
  local.get $22
  call $~lib/string/String#get:length
  local.set $sepLen
  local.get $limit
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $limit
  end
  local.get $sepLen
  i32.eqz
  if
   local.get $length
   i32.eqz
   if
    i32.const 0
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.set $22
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $22
    return
   end
   local.get $length
   local.tee $7
   local.get $limit
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
   local.set $length
   global.get $~lib/memory/__stack_pointer
   local.get $length
   i32.const 2
   i32.const 4
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $result
   i32.store $0 offset=12
   local.get $result
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=8
   local.get $22
   call $~lib/array/Array<~lib/string/String>#get:dataStart
   local.set $resultStart
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 2
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $charStr
     i32.store $0 offset=16
     local.get $charStr
     local.get $this
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.store16 $0
     local.get $resultStart
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $charStr
     i32.store $0
     local.get $result
     local.get $charStr
     i32.const 1
     call $~lib/rt/itcms/__link
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $result
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  else
   local.get $length
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 1
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $result|13
    i32.store $0 offset=20
    local.get $result|13
    local.set $22
    global.get $~lib/memory/__stack_pointer
    local.get $22
    i32.store $0 offset=8
    local.get $22
    call $~lib/array/Array<~lib/string/String>#get:dataStart
    i32.const 6144
    i32.store $0
    local.get $result|13
    local.set $22
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $22
    return
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result|14
  i32.store $0 offset=24
  i32.const 0
  local.set $end
  i32.const 0
  local.set $start
  i32.const 0
  local.set $i|17
  loop $while-continue|1
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=8
   local.get $22
   local.get $separator
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=28
   local.get $22
   local.get $start
   call $~lib/string/String#indexOf
   local.tee $end
   i32.const -1
   i32.xor
   if
    local.get $end
    local.get $start
    i32.sub
    local.set $len
    local.get $len
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $len
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $out
     i32.store $0 offset=32
     local.get $out
     local.get $this
     local.get $start
     i32.const 1
     i32.shl
     i32.add
     local.get $len
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $result|14
     local.set $22
     global.get $~lib/memory/__stack_pointer
     local.get $22
     i32.store $0 offset=8
     local.get $22
     local.get $out
     local.set $22
     global.get $~lib/memory/__stack_pointer
     local.get $22
     i32.store $0 offset=28
     local.get $22
     call $~lib/array/Array<~lib/string/String>#push
     drop
    else
     local.get $result|14
     local.set $22
     global.get $~lib/memory/__stack_pointer
     local.get $22
     i32.store $0 offset=8
     local.get $22
     i32.const 6144
     local.set $22
     global.get $~lib/memory/__stack_pointer
     local.get $22
     i32.store $0 offset=28
     local.get $22
     call $~lib/array/Array<~lib/string/String>#push
     drop
    end
    local.get $i|17
    i32.const 1
    i32.add
    local.tee $i|17
    local.get $limit
    i32.eq
    if
     local.get $result|14
     local.set $22
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $22
     return
    end
    local.get $end
    local.get $sepLen
    i32.add
    local.set $start
    br $while-continue|1
   end
  end
  local.get $start
  i32.eqz
  if
   local.get $result|14
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=8
   local.get $22
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=28
   local.get $22
   call $~lib/array/Array<~lib/string/String>#push
   drop
   local.get $result|14
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $length
  local.get $start
  i32.sub
  local.set $len|20
  local.get $len|20
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $len|20
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out|21
   i32.store $0 offset=36
   local.get $out|21
   local.get $this
   local.get $start
   i32.const 1
   i32.shl
   i32.add
   local.get $len|20
   i32.const 1
   i32.shl
   memory.copy $0 $0
   local.get $result|14
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=8
   local.get $22
   local.get $out|21
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=28
   local.get $22
   call $~lib/array/Array<~lib/string/String>#push
   drop
  else
   local.get $result|14
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=8
   local.get $22
   i32.const 6144
   local.set $22
   global.get $~lib/memory/__stack_pointer
   local.get $22
   i32.store $0 offset=28
   local.get $22
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $result|14
  local.set $22
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $22
  return
 )
 (func $~lib/string/String#split@varargs (param $this i32) (param $separator i32) (param $limit i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $separator
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $limit
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $separator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $limit
  call $~lib/string/String#split
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#charCodeAt (param $this i32) (param $pos i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $pos
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const -1
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor (param $this i32) (param $sourceString i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $sourceString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:sourceString
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:cursor
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  call $~lib/string/String#charCodeAt
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#constructor (param $this i32) (param $input i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#set:iterator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  local.get $input
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#set:iterator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/string/String#get:length
  i32.lt_u
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor (param $this i32) (param $type i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $type
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor (param $this i32) (param $body i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 27
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $body
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#set:body
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 31
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  i32.const 1
  i32.add
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:cursor
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/string/String#get:length
  i32.ge_u
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const -1
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  call $~lib/string/String#charCodeAt
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken (param $this i32) (param $value i32) (result i32)
  (local $currentToken i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  local.set $currentToken
  local.get $value
  i32.const -1
  i32.ne
  if (result i32)
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
   local.get $value
   i32.ne
  else
   i32.const 0
  end
  if
   i32.const 6176
   i32.const 6224
   i32.const 94
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next
  drop
  local.get $currentToken
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor (param $this i32) (param $expressions i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 32
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $expressions
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#set:expressions
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor (param $this i32) (param $left i32) (param $right i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $left
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:left
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $right
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:right
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 2
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead (param $this i32) (param $distance i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  local.get $distance
  i32.add
  call $~lib/string/String#charCodeAt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 63
  i32.eq
  if (result i32)
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
   i32.const 58
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 63
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 58
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor (param $this i32) (param $expression i32) (param $capturing i32) (param $id i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:expression
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $capturing
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:capturing
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $id
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:id
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 10
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $id
  i32.const -1
  i32.eq
  if
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   global.get $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.tee $4
   i32.const 1
   i32.add
   global.set $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.get $4
   call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:id
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor@varargs (param $this i32) (param $expression i32) (param $capturing i32) (param $id i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $id
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $capturing
  local.get $id
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#copy (param $this i32) (result i32)
  (local $iterator i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:sourceString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
  local.tee $iterator
  i32.store $0 offset=4
  local.get $iterator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:cursor
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:cursor
  local.get $iterator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#set:current
  local.get $iterator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.fromCharCode@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#concat (param $this i32) (param $other i32) (result i32)
  (local $thisSize i32)
  (local $otherSize i32)
  (local $outSize i32)
  (local $out i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $other
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $otherSize
  local.get $thisSize
  local.get $otherSize
  i32.add
  local.set $outSize
  local.get $outSize
  i32.const 0
  i32.eq
  if
   i32.const 6144
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $thisSize
  memory.copy $0 $0
  local.get $out
  local.get $thisSize
  i32.add
  local.get $other
  local.get $otherSize
  memory.copy $0 $0
  local.get $out
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/string/String.__concat (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/string/strtol<f64> (param $str i32) (param $radix i32) (result f64)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $sign f64)
  (local $6 i32)
  (local $num f64)
  (local $initial i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   i32.const 1
   drop
   f64.const nan:0x8000000000000
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u $0
  local.set $code
  loop $while-continue|0
   local.get $code
   call $~lib/util/string/isSpace
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  f64.const 1
  local.set $sign
  local.get $code
  i32.const 45
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 43
   i32.eq
  end
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    i32.const 1
    drop
    f64.const nan:0x8000000000000
    local.set $11
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $11
    return
   end
   local.get $code
   i32.const 45
   i32.eq
   if
    f64.const -1
    local.set $sign
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u $0
   local.set $code
  end
  local.get $radix
  if
   local.get $radix
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $radix
    i32.const 36
    i32.gt_s
   end
   if
    i32.const 1
    drop
    f64.const nan:0x8000000000000
    local.set $11
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $11
    return
   end
   local.get $radix
   i32.const 16
   i32.eq
   if
    local.get $len
    i32.const 2
    i32.gt_s
    if (result i32)
     local.get $code
     i32.const 48
     i32.eq
    else
     i32.const 0
    end
    if (result i32)
     local.get $ptr
     i32.load16_u $0 offset=2
     i32.const 32
     i32.or
     i32.const 120
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
    end
   end
  else
   local.get $code
   i32.const 48
   i32.eq
   if (result i32)
    local.get $len
    i32.const 2
    i32.gt_s
   else
    i32.const 0
   end
   if
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $ptr
        i32.load16_u $0 offset=2
        i32.const 32
        i32.or
        local.set $6
        local.get $6
        i32.const 98
        i32.eq
        br_if $case0|1
        local.get $6
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $6
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $ptr
       i32.const 4
       i32.add
       local.set $ptr
       local.get $len
       i32.const 2
       i32.sub
       local.set $len
       i32.const 2
       local.set $radix
       br $break|1
      end
      local.get $ptr
      i32.const 4
      i32.add
      local.set $ptr
      local.get $len
      i32.const 2
      i32.sub
      local.set $len
      i32.const 8
      local.set $radix
      br $break|1
     end
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
     i32.const 16
     local.set $radix
     br $break|1
    end
   end
   local.get $radix
   i32.eqz
   if
    i32.const 10
    local.set $radix
   end
  end
  f64.const 0
  local.set $num
  local.get $len
  i32.const 1
  i32.sub
  local.set $initial
  block $while-break|2
   loop $while-continue|2
    local.get $len
    local.tee $9
    i32.const 1
    i32.sub
    local.set $len
    local.get $9
    if
     local.get $ptr
     i32.load16_u $0
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if
      local.get $code
      i32.const 48
      i32.sub
      local.set $code
     else
      local.get $code
      i32.const 65
      i32.sub
      i32.const 90
      i32.const 65
      i32.sub
      i32.le_u
      if
       local.get $code
       i32.const 65
       i32.const 10
       i32.sub
       i32.sub
       local.set $code
      else
       local.get $code
       i32.const 97
       i32.sub
       i32.const 122
       i32.const 97
       i32.sub
       i32.le_u
       if
        local.get $code
        i32.const 97
        i32.const 10
        i32.sub
        i32.sub
        local.set $code
       end
      end
     end
     local.get $code
     local.get $radix
     i32.ge_u
     if
      local.get $initial
      local.get $len
      i32.eq
      if
       i32.const 1
       drop
       f64.const nan:0x8000000000000
       local.set $11
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $11
       return
      end
      br $while-break|2
     end
     local.get $num
     local.get $radix
     f64.convert_i32_s
     f64.mul
     local.get $code
     f64.convert_i32_u
     f64.add
     local.set $num
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $while-continue|2
    end
   end
  end
  local.get $sign
  local.get $num
  f64.mul
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/string/parseInt (param $str i32) (param $radix i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $radix
  call $~lib/util/string/strtol<f64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $value
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $value
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit (param $this i32) (result i32)
  (local $digitStr i32)
  (local $token i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 6144
  local.tee $digitStr
  i32.store $0
  loop $while-continue|0
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
   if
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
    local.set $token
    local.get $token
    call $~lib/assemblyscript-regex/assembly/char/isDigit
    if
     global.get $~lib/memory/__stack_pointer
     local.get $digitStr
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=16
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $3
     call $~lib/string/String.__concat
     local.tee $digitStr
     i32.store $0
    else
     local.get $digitStr
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     i32.const 6144
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $3
     call $~lib/string/String.__eq
     if (result i32)
      i32.const -1
     else
      local.get $digitStr
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      i32.const 0
      call $~lib/string/parseInt
      i32.trunc_sat_f64_s
     end
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 0
    global.set $~argumentsLength
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    br $while-continue|0
   end
  end
  local.get $digitStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/string/String.__eq
  if (result i32)
   i32.const -1
  else
   local.get $digitStr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   call $~lib/string/parseInt
   i32.trunc_sat_f64_s
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor (param $this i32) (param $from i32) (param $to i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $from
  call $~lib/assemblyscript-regex/assembly/parser/parser/Range#set:from
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $to
  call $~lib/assemblyscript-regex/assembly/parser/parser/Range#set:to
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange (param $this i32) (result i32)
  (local $iteratorCopy i32)
  (local $from i32)
  (local $to i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#copy
  local.tee $iteratorCopy
  i32.store $0 offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 123
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
  local.set $from
  local.get $from
  i32.const -1
  i32.eq
  if
   i32.const 0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 125
  i32.eq
  if
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
   drop
   i32.const 0
   local.get $from
   local.get $from
   call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
   i32.const 44
   i32.eq
   if
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 0
    global.set $~argumentsLength
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
    local.set $to
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
    i32.const 125
    i32.eq
    if
     local.get $this
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     i32.const 0
     global.set $~argumentsLength
     i32.const 0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     drop
     i32.const 0
     local.get $from
     local.get $to
     call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
   end
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $iteratorCopy
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#set:iterator
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 6480
   i32.const 6096
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $val
  i32.store $0 offset=4
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $len
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#set:length_
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor (param $this i32) (param $expression i32) (param $from i32) (param $to i32) (param $greedy i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 17
   i32.const 36
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:expression
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $from
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:from
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $to
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:to
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $greedy
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:greedy
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 9
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $expression
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
  i32.const 9
  i32.eq
  if
   i32.const 6528
   i32.const 6640
   i32.const 169
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 63
  i32.eq
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
   drop
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor (param $this i32) (param $char i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $char
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#set:char
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 4
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode (param $this i32) (param $code i32) (result i32)
  (local $length i32)
  (local $i i32)
  (local $value i32)
  (local $i|5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $code
  i32.const 120
  i32.eq
  if (result i32)
   i32.const 2
  else
   i32.const 4
  end
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $length
   i32.lt_s
   if
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $i
    i32.const 1
    i32.add
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
    call $~lib/assemblyscript-regex/assembly/char/isHexadecimalDigit
    i32.eqz
    if
     i32.const 0
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 0
     global.set $~argumentsLength
     i32.const 0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $code
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 6144
  local.tee $value
  i32.store $0 offset=8
  i32.const 0
  local.set $i|5
  loop $for-loop|1
   local.get $i|5
   local.get $length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $6
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=12
    local.get $6
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/string/String.__concat
    local.tee $value
    i32.store $0 offset=8
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    i32.const 0
    global.set $~argumentsLength
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    local.get $i|5
    i32.const 1
    i32.add
    local.set $i|5
    br $for-loop|1
   end
  end
  i32.const 0
  local.get $value
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 16
  call $~lib/string/parseInt
  i32.trunc_sat_f64_u
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor (param $this i32) (param $charClass i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $charClass
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#set:charClass
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 6
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor (param $this i32) (param $kind i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 39
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $kind
  call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#set:kind
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter (param $this i32) (result i32)
  (local $token i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  local.set $token
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 92
  i32.eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.const 92
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
   local.set $token
   local.get $token
   call $~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter
   if
    local.get $this
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.const 0
    global.set $~argumentsLength
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    i32.const 0
    local.get $token
    call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   else
    local.get $token
    call $~lib/assemblyscript-regex/assembly/parser/parser/isAssertion
    if
     i32.const 0
     local.get $this
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     i32.const 0
     global.set $~argumentsLength
     i32.const 0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    else
     local.get $token
     i32.const 120
     i32.eq
     if
      local.get $this
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      i32.const 120
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      return
     else
      local.get $token
      i32.const 117
      i32.eq
      if
       local.get $this
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       i32.const 117
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
       local.set $2
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       return
      else
       local.get $token
       call $~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass
       if
        i32.const 0
        local.get $this
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $2
        i32.const 0
        global.set $~argumentsLength
        i32.const 0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
        call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
        local.set $2
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $2
        return
       else
        i32.const 0
        local.get $this
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $2
        i32.const 0
        global.set $~argumentsLength
        i32.const 0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
        call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
        local.set $2
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $2
        return
       end
       unreachable
      end
      unreachable
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  local.get $token
  call $~lib/assemblyscript-regex/assembly/parser/parser/isAssertion
  if
   i32.const 0
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
   call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $token
  i32.const 46
  i32.eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.const 46
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   i32.const 0
   i32.const 46
   call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor (param $this i32) (param $expression i32) (param $quantifier i32) (param $greedy i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 13
   i32.const 40
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $expression
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:expression
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $quantifier
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:quantifier
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $greedy
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:greedy
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 8
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor (param $this i32) (param $from i32) (param $to i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $from
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#set:from
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $to
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#set:to
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 7
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterRange (param $this i32) (result i32)
  (local $from i32)
  (local $to i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
  local.set $from
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 45
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
  local.set $to
  i32.const 0
  local.get $from
  local.get $to
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor (param $this i32) (param $expressions i32) (param $negated i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $expressions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#set:expressions
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $negated
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#set:negated
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 5
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterClass (param $this i32) (result i32)
  (local $negated i32)
  (local $nodes i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 91
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
  i32.const 94
  i32.eq
  local.set $negated
  local.get $negated
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 94
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
  local.tee $nodes
  i32.store $0 offset=8
  loop $while-continue|0
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
   i32.const 93
   i32.ne
   if (result i32)
    i32.const 1
   else
    local.get $nodes
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
    i32.const 0
    i32.eq
   end
   if
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
    i32.const 92
    i32.ne
    if (result i32)
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.const 1
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
     i32.const 45
     i32.eq
    else
     i32.const 0
    end
    if (result i32)
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.const 2
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
     i32.const 93
     i32.ne
    else
     i32.const 0
    end
    if
     local.get $nodes
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterRange
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
     drop
    else
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
     i32.const 92
     i32.eq
     if
      local.get $this
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      i32.const 0
      global.set $~argumentsLength
      i32.const 0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      drop
      local.get $this
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
      call $~lib/assemblyscript-regex/assembly/parser/parser/isCharacterSetSpecialChar
      if
       local.get $nodes
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       local.get $3
       i32.const 0
       local.get $this
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=12
       local.get $3
       i32.const 0
       global.set $~argumentsLength
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
       call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $3
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
       drop
      else
       local.get $nodes
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       local.get $3
       i32.const 0
       local.get $this
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=12
       local.get $3
       i32.const 0
       global.set $~argumentsLength
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
       call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $3
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
       drop
      end
     else
      local.get $nodes
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      i32.const 0
      local.get $this
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=12
      local.get $3
      i32.const 0
      global.set $~argumentsLength
      i32.const 0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
      drop
     end
    end
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
    i32.eqz
    if
     i32.const 6880
     i32.const 6224
     i32.const 316
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    br $while-continue|0
   end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 93
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  i32.const 0
  local.get $nodes
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $negated
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence (param $this i32) (result i32)
  (local $nodes i32)
  (local $token i32)
  (local $left i32)
  (local $4 i32)
  (local $5 i32)
  (local $capturing i32)
  (local $range i32)
  (local $expression i32)
  (local $expression|9 i32)
  (local $quantifier i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
  local.tee $nodes
  i32.store $0
  block $while-break|0
   loop $while-continue|0
    local.get $this
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
    if
     local.get $this
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=8
     local.get $11
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=4
     local.get $11
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#get:current
     local.set $token
     local.get $token
     i32.const 41
     i32.eq
     if
      br $while-break|0
     end
     local.get $token
     i32.const 124
     i32.eq
     if
      local.get $this
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=4
      local.get $11
      i32.const 124
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
      drop
      global.get $~lib/memory/__stack_pointer
      local.get $nodes
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=4
      local.get $11
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
      i32.const 1
      i32.gt_s
      if (result i32)
       i32.const 0
       local.get $nodes
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
      else
       local.get $nodes
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=4
       local.get $11
       i32.const 0
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      end
      local.tee $left
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 1
      i32.const 2
      i32.const 31
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $4
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load $0 offset=4
      local.tee $5
      i32.store $0 offset=20
      local.get $4
      i32.const 0
      i32.const 0
      local.get $left
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=8
      local.get $11
      local.get $this
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=24
      local.get $11
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0 offset=24
      local.get $11
      call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
      local.get $4
      local.tee $nodes
      i32.store $0
     else
      local.get $token
      i32.const 40
      i32.eq
      if
       local.get $this
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=4
       local.get $11
       i32.const 40
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
       drop
       local.get $this
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=4
       local.get $11
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing
       local.set $capturing
       local.get $nodes
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=4
       local.get $11
       i32.const 0
       local.get $this
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=28
       local.get $11
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=28
       local.get $11
       local.get $capturing
       i32.const 2
       global.set $~argumentsLength
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor@varargs
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
       drop
       local.get $this
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=4
       local.get $11
       i32.const 41
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
       drop
      else
       local.get $token
       i32.const 123
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $this
        local.set $11
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store $0 offset=4
        local.get $11
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange
        local.tee $range
        i32.store $0 offset=32
        local.get $range
        i32.const 0
        i32.ne
        if
         global.get $~lib/memory/__stack_pointer
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
         local.tee $expression
         i32.store $0 offset=36
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         i32.const 0
         local.get $expression
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         local.get $range
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         call $~lib/assemblyscript-regex/assembly/parser/parser/Range#get:from
         local.get $range
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         call $~lib/assemblyscript-regex/assembly/parser/parser/Range#get:to
         local.get $this
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
         call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=8
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
         drop
        else
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         local.get $this
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=24
         local.get $11
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=8
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
         drop
        end
       else
        local.get $token
        call $~lib/assemblyscript-regex/assembly/parser/parser/isQuantifier
        if
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
         i32.const 0
         i32.eq
         if
          i32.const 6768
          i32.const 6224
          i32.const 255
          i32.const 11
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
         local.tee $expression|9
         i32.store $0 offset=40
         local.get $this
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         i32.const 0
         global.set $~argumentsLength
         i32.const 0
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
         local.set $quantifier
         local.get $nodes
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=4
         local.get $11
         i32.const 0
         local.get $expression|9
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         local.get $quantifier
         local.get $this
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=28
         local.get $11
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
         call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0 offset=8
         local.get $11
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
         drop
        else
         local.get $token
         i32.const 91
         i32.eq
         if
          local.get $nodes
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=4
          local.get $11
          local.get $this
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=24
          local.get $11
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterClass
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=8
          local.get $11
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
          drop
         else
          local.get $nodes
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=4
          local.get $11
          local.get $this
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=24
          local.get $11
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0 offset=8
          local.get $11
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
          drop
         end
        end
       end
      end
     end
     br $while-continue|0
    end
   end
  end
  local.get $nodes
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
  i32.const 1
  i32.gt_s
  if (result i32)
   i32.const 0
   local.get $nodes
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=8
   local.get $11
   call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
  else
   local.get $nodes
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  end
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#toAST (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#get:iterator
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  else
   i32.const 0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser.toAST (param $input i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.get $input
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#toAST
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#includes (param $this i32) (param $search i32) (param $start i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $search
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $start
  call $~lib/string/String#indexOf
  i32.const -1
  i32.ne
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Flags#constructor (param $this i32) (param $flagString i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:global
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:ignoreCase
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:dotAll
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:multiline
  local.get $flagString
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $flagString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   i32.const 6960
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   i32.const 0
   call $~lib/string/String#includes
   call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:global
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $flagString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   i32.const 6992
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   i32.const 0
   call $~lib/string/String#includes
   call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:ignoreCase
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $flagString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   i32.const 7024
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   i32.const 0
   call $~lib/string/String#includes
   call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:dotAll
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $flagString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   i32.const 7056
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   i32.const 0
   call $~lib/string/String#includes
   call $~lib/assemblyscript-regex/assembly/regexp/Flags#set:multiline
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $arr i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is (param $node i32) (param $kind i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $node
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
  i32.const 1
  i32.eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $node
   local.tee $2
   i32.store $0 offset=4
   local.get $2
   call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AssertionNode
   if (result i32)
    local.get $2
   else
    i32.const 7328
    i32.const 6640
    i32.const 119
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#get:kind
   local.get $kind
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $kind
    i32.const -1
    i32.eq
   end
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/util/last<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $arr i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode (param $visitor i32) (result i32)
  (local $concatNode i32)
  (local $parentNode i32)
  (local $node i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  i32.const 0
  local.set $concatNode
  global.get $~lib/memory/__stack_pointer
  local.get $visitor
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#get:parentNode
  local.tee $parentNode
  i32.store $0 offset=4
  local.get $parentNode
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
  i32.const 3
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $visitor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#get:node
   local.tee $node
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 31
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load $0 offset=4
   local.tee $5
   i32.store $0 offset=20
   local.get $4
   i32.const 0
   local.get $node
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
   local.get $4
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $7
   call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
   local.tee $concatNode
   i32.store $0 offset=24
   local.get $parentNode
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $node
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $7
   local.get $concatNode
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=28
   local.get $7
   call $~lib/assemblyscript-regex/assembly/parser/node/Node#replace@override
   local.get $concatNode
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $parentNode
  local.tee $6
  i32.store $0 offset=32
  local.get $6
  call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
  if (result i32)
   local.get $6
  else
   i32.const 7328
   i32.const 7392
   i32.const 54
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $slice i32)
  (local $sliceBase i32)
  (local $thisBase i32)
  (local $off i32)
  (local $end|18 i32)
  (local $ref i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0
  local.get $20
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $slice
  i32.store $0 offset=4
  local.get $slice
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0
  local.get $20
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $sliceBase
  local.get $this
  local.set $20
  global.get $~lib/memory/__stack_pointer
  local.get $20
  i32.store $0
  local.get $20
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  i32.const 1
  drop
  i32.const 0
  local.set $off
  local.get $len
  i32.const 2
  i32.shl
  local.set $end|18
  loop $while-continue|0
   local.get $off
   local.get $end|18
   i32.lt_u
   if
    local.get $thisBase
    local.get $off
    i32.add
    i32.load $0
    local.set $ref
    local.get $sliceBase
    local.get $off
    i32.add
    local.get $ref
    i32.store $0
    local.get $slice
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $off
    i32.const 4
    i32.add
    local.set $off
    br $while-continue|0
   end
  end
  local.get $slice
  local.set $20
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $20
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat (param $this i32) (param $other i32) (result i32)
  (local $thisLen i32)
  (local $otherLen i32)
  (local $outLen i32)
  (local $out i32)
  (local $outStart i32)
  (local $thisSize i32)
  (local $thisStart i32)
  (local $offset i32)
  (local $ref i32)
  (local $otherStart i32)
  (local $otherSize i32)
  (local $offset|13 i32)
  (local $ref|14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $thisLen
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $otherLen
  local.get $thisLen
  local.get $otherLen
  i32.add
  local.set $outLen
  local.get $outLen
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outLen
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $outStart
  local.get $thisLen
  i32.const 2
  i32.shl
  local.set $thisSize
  i32.const 1
  drop
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $thisStart
  i32.const 0
  local.set $offset
  loop $for-loop|0
   local.get $offset
   local.get $thisSize
   i32.lt_u
   if
    local.get $thisStart
    local.get $offset
    i32.add
    i32.load $0
    local.set $ref
    local.get $outStart
    local.get $offset
    i32.add
    local.get $ref
    i32.store $0
    local.get $out
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset
    i32.const 4
    i32.add
    local.set $offset
    br $for-loop|0
   end
  end
  local.get $outStart
  local.get $thisSize
  i32.add
  local.set $outStart
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $otherStart
  local.get $otherLen
  i32.const 2
  i32.shl
  local.set $otherSize
  i32.const 0
  local.set $offset|13
  loop $for-loop|1
   local.get $offset|13
   local.get $otherSize
   i32.lt_u
   if
    local.get $otherStart
    local.get $offset|13
    i32.add
    i32.load $0
    local.set $ref|14
    local.get $outStart
    local.get $offset|13
    i32.add
    local.get $ref|14
    i32.store $0
    local.get $out
    local.get $ref|14
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset|13
    i32.const 4
    i32.add
    local.set $offset|13
    br $for-loop|1
   end
  end
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $end
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions (param $visitor i32)
  (local $node i32)
  (local $2 i32)
  (local $rangeRepNode i32)
  (local $concatNode i32)
  (local $expressions i32)
  (local $index i32)
  (local $from i32)
  (local $expression i32)
  (local $clones i32)
  (local $i i32)
  (local $count i32)
  (local $i|12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 56
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $visitor
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#get:node
  local.tee $node
  i32.store $0 offset=4
  local.get $node
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
  i32.const 9
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $node
   local.tee $2
   i32.store $0 offset=8
   local.get $2
   call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode
   if (result i32)
    local.get $2
   else
    i32.const 7328
    i32.const 7392
    i32.const 63
    i32.const 26
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $rangeRepNode
   i32.store $0 offset=12
   local.get $rangeRepNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:to
   global.get $~lib/assemblyscript-regex/assembly/parser/walker/QUANTIFIER_LIMIT
   i32.gt_s
   if
    i32.const 7520
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    global.get $~lib/assemblyscript-regex/assembly/parser/walker/QUANTIFIER_LIMIT
    i32.const 10
    call $~lib/number/I32#toString
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=16
    local.get $13
    call $~lib/string/String.__concat
    i32.const 7392
    i32.const 66
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $visitor
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode
   local.tee $concatNode
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $concatNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
   local.tee $expressions
   i32.store $0 offset=24
   local.get $expressions
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   local.get $rangeRepNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=16
   local.get $13
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
   local.set $index
   local.get $rangeRepNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:from
   local.set $from
   global.get $~lib/memory/__stack_pointer
   local.get $rangeRepNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:expression
   local.tee $expression
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $from
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   local.tee $clones
   i32.store $0 offset=32
   local.get $from
   i32.const 0
   i32.gt_s
   if
    local.get $clones
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    i32.const 0
    local.get $expression
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=36
    local.get $13
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
    i32.const 1
    local.set $i
    loop $for-loop|0
     local.get $i
     local.get $from
     i32.lt_s
     if
      local.get $clones
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0
      local.get $13
      local.get $i
      local.get $expression
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=36
      local.get $13
      call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=36
      local.get $13
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
      local.get $i
      i32.const 1
      i32.add
      local.set $i
      br $for-loop|0
     end
    end
   end
   local.get $rangeRepNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:to
   i32.const -1
   i32.eq
   if
    local.get $clones
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    i32.const 0
    local.get $expression
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=40
    local.get $13
    call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=40
    local.get $13
    i32.const 42
    local.get $rangeRepNode
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=40
    local.get $13
    call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:greedy
    call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=16
    local.get $13
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
    drop
   else
    local.get $rangeRepNode
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:to
    local.get $rangeRepNode
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:from
    i32.sub
    local.set $count
    i32.const 0
    local.set $i|12
    loop $for-loop|1
     local.get $i|12
     local.get $count
     i32.lt_s
     if
      local.get $clones
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0
      local.get $13
      i32.const 0
      local.get $expression
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=40
      local.get $13
      call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=40
      local.get $13
      i32.const 63
      local.get $rangeRepNode
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=40
      local.get $13
      call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:greedy
      call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store $0 offset=16
      local.get $13
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#push
      drop
      local.get $i|12
      i32.const 1
      i32.add
      local.set $i|12
      br $for-loop|1
     end
    end
   end
   local.get $concatNode
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   local.get $expressions
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=52
   local.get $13
   i32.const 0
   local.get $index
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=44
   local.get $13
   local.get $clones
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=48
   local.get $13
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=36
   local.get $13
   local.get $expressions
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=44
   local.get $13
   local.get $index
   i32.const 1
   i32.add
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=40
   local.get $13
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=16
   local.get $13
   call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#set:expressions
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#constructor (param $this i32) (param $node i32) (param $parentNode i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $node
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#set:node
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $parentNode
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#set:parentNode
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/walkNode (param $node i32) (param $parentNode i32) (param $visitor i32)
  (local $children i32)
  (local $i i32)
  (local $nodeVisitor i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $node
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
  local.tee $children
  i32.store $0 offset=4
  local.get $children
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   if
    local.get $children
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $6
    local.get $i
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $node
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    local.get $visitor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=12
    local.get $6
    call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $node
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  local.get $parentNode
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor#constructor
  local.tee $nodeVisitor
  i32.store $0 offset=20
  local.get $nodeVisitor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 1
  global.set $~argumentsLength
  local.get $visitor
  i32.load $0
  call_indirect $0 (type $i32_=>_none)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/walker (param $ast i32) (param $visitor i32)
  (local $node i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $ast
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
  local.tee $node
  i32.store $0 offset=4
  local.get $node
  i32.const 0
  i32.ne
  if
   local.get $node
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $ast
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $visitor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#constructor (param $this i32) (param $flags i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 45
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $flags
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#set:flags
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor (param $this i32) (param $transitions i32) (param $id i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 23
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $transitions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#set:transitions
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $id
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#set:id
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs (param $this i32) (param $transitions i32) (param $id i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 24
    i32.const 9536
    call $~lib/rt/__newArray
    local.tee $transitions
    i32.store $0
   end
   global.get $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
   local.tee $5
   i32.const 1
   i32.add
   global.set $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
   local.get $5
   local.set $id
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $transitions
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  local.get $id
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $start
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#set:start
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#set:end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromEpsilon (result i32)
  (local $start i32)
  (local $end i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $start
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=4
  local.get $start
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  i32.const 0
  local.get $start
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  local.get $end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/zeroOrOne (param $nfa i32) (param $greedy i32) (result i32)
  (local $start i32)
  (local $end i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $start
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=4
  local.get $greedy
  if
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  else
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  end
  local.get $nfa
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  i32.const 0
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/oneOrMore (param $nfa i32) (param $greedy i32) (result i32)
  (local $start i32)
  (local $end i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $start
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=4
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $nfa
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $greedy
  if
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  else
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  end
  i32.const 0
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/closure (param $nfa i32) (param $greedy i32) (result i32)
  (local $start i32)
  (local $end i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $start
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=4
  local.get $greedy
  if
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  else
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=20
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
   local.get $start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $nfa
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
   drop
  end
  i32.const 0
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor (param $this i32) (param $type i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 47
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $type
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#constructor (param $this i32) (param $character i32) (param $ignoreCase i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 46
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $character
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#set:character
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $ignoreCase
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#set:ignoreCase
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $this
  i32.store $0
  local.get $ignoreCase
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#get:character
   i32.const 32
   i32.or
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#set:character
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode (param $node i32) (param $flags i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $node
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#get:char
  local.get $flags
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:ignoreCase
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#constructor (param $this i32) (param $matcher i32) (param $next i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 48
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#set:matcher
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#set:ignoreCase
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $next
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher> (param $matcher i32) (result i32)
  (local $end i32)
  (local $start i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#constructor
  local.tee $start
  i32.store $0 offset=12
  i32.const 0
  local.get $start
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/concat (param $first i32) (param $second i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $first
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $second
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  i32.const 0
  local.get $first
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $second
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/union (param $first i32) (param $second i32) (result i32)
  (local $start i32)
  (local $end i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $start
  i32.store $0
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $second
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=16
  local.get $first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $second
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  i32.const 0
  local.get $start
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#constructor (param $this i32) (param $from i32) (param $to i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 52
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $from
  call $~lib/assemblyscript-regex/assembly/util/Range#set:from
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $to
  call $~lib/assemblyscript-regex/assembly/util/Range#set:to
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#intersection (param $this i32) (param $other i32) (result i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $lower i32)
  (local $value1|5 f64)
  (local $value2|6 f64)
  (local $upper i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/math/NativeMath.max|inlined.0 (result f64)
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/assemblyscript-regex/assembly/util/Range#get:from
   f64.convert_i32_s
   local.set $value1
   local.get $other
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/assemblyscript-regex/assembly/util/Range#get:from
   f64.convert_i32_s
   local.set $value2
   local.get $value1
   local.get $value2
   f64.max
   br $~lib/math/NativeMath.max|inlined.0
  end
  i32.trunc_sat_f64_s
  local.set $lower
  block $~lib/math/NativeMath.min|inlined.0 (result f64)
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/assemblyscript-regex/assembly/util/Range#get:to
   f64.convert_i32_s
   local.set $value1|5
   local.get $other
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/assemblyscript-regex/assembly/util/Range#get:to
   f64.convert_i32_s
   local.set $value2|6
   local.get $value1|5
   local.get $value2|6
   f64.min
   br $~lib/math/NativeMath.min|inlined.0
  end
  i32.trunc_sat_f64_s
  local.set $upper
  local.get $lower
  local.get $upper
  i32.lt_s
  if (result i32)
   i32.const 0
   local.get $lower
   local.get $upper
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  else
   i32.const 0
  end
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#offset (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/util/Range#get:from
  local.get $value
  i32.add
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/util/Range#get:to
  local.get $value
  i32.add
  call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#constructor (param $this i32) (param $range i32) (param $ignoreCase i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $lowerIntersect i32)
  (local $upperIntersect i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 51
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $range
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#set:range
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#set:ranges
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 53
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load $0 offset=4
  local.tee $4
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  local.get $range
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__set
  local.get $3
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#set:ranges
  local.get $ignoreCase
  if
   global.get $~lib/memory/__stack_pointer
   local.get $range
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/assemblyscript-regex/assembly/util/Range#intersection
   local.tee $lowerIntersect
   i32.store $0 offset=20
   local.get $lowerIntersect
   if
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=24
    local.get $7
    call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#get:ranges
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $lowerIntersect
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=24
    local.get $7
    i32.const 0
    global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPER_LOWER_OFFSET
    i32.sub
    call $~lib/assemblyscript-regex/assembly/util/Range#offset
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#push
    drop
   end
   global.get $~lib/memory/__stack_pointer
   local.get $range
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/assemblyscript-regex/assembly/util/Range#intersection
   local.tee $upperIntersect
   i32.store $0 offset=28
   local.get $upperIntersect
   if
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=24
    local.get $7
    call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#get:ranges
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $upperIntersect
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=24
    local.get $7
    global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPER_LOWER_OFFSET
    call $~lib/assemblyscript-regex/assembly/util/Range#offset
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#push
    drop
   end
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterRangeNode (param $node i32) (param $flags i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  i32.const 0
  local.get $node
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:from
  local.get $node
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:to
  call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $flags
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:ignoreCase
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#constructor (param $this i32) (param $charClass i32) (param $dotAll i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 54
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $charClass
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#set:charClass
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $dotAll
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#set:dotAll
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 2
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode (param $node i32) (param $flags i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $node
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#get:charClass
  local.get $flags
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:dotAll
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 (param $exp i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  block $case3|0
   block $case2|0
    block $case1|0
     block $case0|0
      local.get $exp
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store $0
      local.get $10
      call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
      local.set $3
      local.get $3
      i32.const 7
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 4
      i32.eq
      br_if $case1|0
      local.get $3
      i32.const 6
      i32.eq
      br_if $case2|0
      br $case3|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $exp
     local.tee $4
     i32.store $0 offset=8
     local.get $4
     call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode
     if (result i32)
      local.get $4
     else
      i32.const 7328
      i32.const 9760
      i32.const 54
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
     local.tee $5
     i32.store $0 offset=12
     local.get $5
     if (result i32)
      local.get $5
     else
      i32.const 7088
      i32.const 9760
      i32.const 55
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterRangeNode
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 32
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $10
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $exp
    local.tee $6
    i32.store $0 offset=16
    local.get $6
    call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 9760
     i32.const 59
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
    local.tee $7
    i32.store $0 offset=20
    local.get $7
    if (result i32)
     local.get $7
    else
     i32.const 7088
     i32.const 9760
     i32.const 60
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
    local.set $10
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $10
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $exp
   local.tee $8
   i32.store $0 offset=24
   local.get $8
   call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
   if (result i32)
    local.get $8
   else
    i32.const 7328
    i32.const 9760
    i32.const 64
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
   local.tee $9
   i32.store $0 offset=28
   local.get $9
   if (result i32)
    local.get $9
   else
    i32.const 7088
    i32.const 9760
    i32.const 65
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  i32.const 9888
  i32.const 9760
  i32.const 68
  i32.const 11
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 50
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#constructor (param $this i32) (param $matchers i32) (param $negated i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 49
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $matchers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#set:matchers
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $negated
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#set:negated
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 3
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode (param $node i32) (param $flags i32) (result i32)
  (local $matchers i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $flags
  global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
  global.get $~lib/memory/__stack_pointer
  local.get $node
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:expressions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 10000
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>
  local.tee $matchers
  i32.store $0 offset=12
  i32.const 0
  local.get $matchers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $node
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:negated
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#constructor (param $this i32) (param $matcher i32) (param $next i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 56
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#set:matcher
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#set:ignoreCase
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $next
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher> (param $matcher i32) (result i32)
  (local $end i32)
  (local $start i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#constructor
  local.tee $start
  i32.store $0 offset=12
  i32.const 0
  local.get $start
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#constructor (param $this i32) (param $matcher i32) (param $next i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 57
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#set:matcher
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#set:ignoreCase
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $next
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher> (param $matcher i32) (result i32)
  (local $end i32)
  (local $start i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#constructor
  local.tee $start
  i32.store $0 offset=12
  i32.const 0
  local.get $start
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#constructor (param $this i32) (param $next i32) (param $capturing i32) (param $groupId i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $capturing
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capturing
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $groupId
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:groupId
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const -1
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:location
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 6144
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capture
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:flagged
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $this
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $next
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#constructor (param $this i32) (param $next i32) (param $startMarker i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 58
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $startMarker
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#set:startMarker
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $next
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/group (param $nfa i32) (param $capturing i32) (param $id i32) (result i32)
  (local $startMarker i32)
  (local $end i32)
  (local $endMarker i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $nfa
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $capturing
  local.get $id
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#constructor
  local.tee $startMarker
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $end
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $startMarker
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#constructor
  local.tee $endMarker
  i32.store $0 offset=16
  local.get $nfa
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=24
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  local.get $endMarker
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  i32.const 0
  local.get $startMarker
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode (param $this i32) (param $expression i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $node i32)
  (local $automata i32)
  (local $quantifier i32)
  (local $7 i32)
  (local $8 i32)
  (local $expressions i32)
  (local $automata|10 i32)
  (local $i i32)
  (local $len i32)
  (local $13 i32)
  (local $node|14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $node|18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 72
  memory.fill $0
  local.get $expression
  i32.const 0
  i32.eq
  if
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromEpsilon
   local.set $19
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $19
   return
  end
  block $case8|0
   block $case7|0
    block $case6|0
     block $case5|0
      block $case4|0
       block $case3|0
        block $case2|0
         block $case1|0
          block $case0|0
           local.get $expression
           local.set $19
           global.get $~lib/memory/__stack_pointer
           local.get $19
           i32.store $0
           local.get $19
           call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
           local.set $2
           local.get $2
           i32.const 8
           i32.eq
           br_if $case0|0
           local.get $2
           i32.const 4
           i32.eq
           br_if $case1|0
           local.get $2
           i32.const 3
           i32.eq
           br_if $case2|0
           local.get $2
           i32.const 2
           i32.eq
           br_if $case3|0
           local.get $2
           i32.const 5
           i32.eq
           br_if $case4|0
           local.get $2
           i32.const 6
           i32.eq
           br_if $case5|0
           local.get $2
           i32.const 10
           i32.eq
           br_if $case6|0
           local.get $2
           i32.const 1
           i32.eq
           br_if $case7|0
           br $case8|0
          end
          global.get $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          local.get $expression
          local.tee $3
          i32.store $0 offset=4
          local.get $3
          call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode
          if (result i32)
           local.get $3
          else
           i32.const 7328
           i32.const 9568
           i32.const 184
           i32.const 22
           call $~lib/builtins/abort
           unreachable
          end
          local.tee $node
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $this
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0
          local.get $19
          local.get $node
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=16
          local.get $19
          call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:expression
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=12
          local.get $19
          call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
          local.tee $automata
          i32.store $0 offset=20
          local.get $node
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0
          local.get $19
          call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:quantifier
          local.set $quantifier
          local.get $quantifier
          i32.const 63
          i32.eq
          if
           local.get $automata
           local.set $19
           global.get $~lib/memory/__stack_pointer
           local.get $19
           i32.store $0
           local.get $19
           local.get $node
           local.set $19
           global.get $~lib/memory/__stack_pointer
           local.get $19
           i32.store $0 offset=12
           local.get $19
           call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:greedy
           call $~lib/assemblyscript-regex/assembly/nfa/nfa/zeroOrOne
           local.set $19
           global.get $~lib/memory/__stack_pointer
           i32.const 72
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $19
           return
          else
           local.get $quantifier
           i32.const 43
           i32.eq
           if
            local.get $automata
            local.set $19
            global.get $~lib/memory/__stack_pointer
            local.get $19
            i32.store $0
            local.get $19
            local.get $node
            local.set $19
            global.get $~lib/memory/__stack_pointer
            local.get $19
            i32.store $0 offset=12
            local.get $19
            call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:greedy
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/oneOrMore
            local.set $19
            global.get $~lib/memory/__stack_pointer
            i32.const 72
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $19
            return
           else
            local.get $quantifier
            i32.const 42
            i32.eq
            if
             local.get $automata
             local.set $19
             global.get $~lib/memory/__stack_pointer
             local.get $19
             i32.store $0
             local.get $19
             local.get $node
             local.set $19
             global.get $~lib/memory/__stack_pointer
             local.get $19
             i32.store $0 offset=12
             local.get $19
             call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:greedy
             call $~lib/assemblyscript-regex/assembly/nfa/nfa/closure
             local.set $19
             global.get $~lib/memory/__stack_pointer
             i32.const 72
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $19
             return
            else
             i32.const 9680
             local.set $19
             global.get $~lib/memory/__stack_pointer
             local.get $19
             i32.store $0
             local.get $19
             local.get $quantifier
             i32.const 1
             global.set $~argumentsLength
             i32.const 0
             call $~lib/string/String.fromCharCode@varargs
             local.set $19
             global.get $~lib/memory/__stack_pointer
             local.get $19
             i32.store $0 offset=12
             local.get $19
             call $~lib/string/String.__concat
             i32.const 9568
             i32.const 194
             i32.const 11
             call $~lib/builtins/abort
             unreachable
            end
            unreachable
           end
           unreachable
          end
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $expression
         local.tee $7
         i32.store $0 offset=24
         local.get $7
         call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
         if (result i32)
          local.get $7
         else
          i32.const 7328
          i32.const 9568
          i32.const 201
          i32.const 37
          call $~lib/builtins/abort
          unreachable
         end
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=12
         local.get $19
         local.get $this
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=28
         local.get $19
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#get:flags
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=16
         local.get $19
         call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0
         local.get $19
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>
         local.set $19
         global.get $~lib/memory/__stack_pointer
         i32.const 72
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $19
         return
        end
        global.get $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $expression
        local.tee $8
        i32.store $0 offset=32
        local.get $8
        call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
        if (result i32)
         local.get $8
        else
         i32.const 7328
         i32.const 9568
         i32.const 204
         i32.const 30
         call $~lib/builtins/abort
         unreachable
        end
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
        local.tee $expressions
        i32.store $0 offset=36
        local.get $expressions
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
        i32.const 0
        i32.eq
        if
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromEpsilon
         local.set $19
         global.get $~lib/memory/__stack_pointer
         i32.const 72
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $19
         return
        end
        global.get $~lib/memory/__stack_pointer
        local.get $this
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        local.get $expressions
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=16
        local.get $19
        i32.const 0
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=12
        local.get $19
        call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
        local.tee $automata|10
        i32.store $0 offset=40
        i32.const 1
        local.set $i
        local.get $expressions
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length
        local.set $len
        loop $for-loop|1
         local.get $i
         local.get $len
         i32.lt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.get $automata|10
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0
          local.get $19
          local.get $this
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=16
          local.get $19
          local.get $expressions
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=44
          local.get $19
          local.get $i
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=28
          local.get $19
          call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0 offset=12
          local.get $19
          call $~lib/assemblyscript-regex/assembly/nfa/nfa/concat
          local.tee $automata|10
          i32.store $0 offset=40
          local.get $i
          i32.const 1
          i32.add
          local.set $i
          br $for-loop|1
         end
        end
        local.get $automata|10
        local.set $19
        global.get $~lib/memory/__stack_pointer
        i32.const 72
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $19
        return
       end
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $expression
       local.tee $13
       i32.store $0 offset=48
       local.get $13
       call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AlternationNode
       if (result i32)
        local.get $13
       else
        i32.const 7328
        i32.const 9568
        i32.const 215
        i32.const 22
        call $~lib/builtins/abort
        unreachable
       end
       local.tee $node|14
       i32.store $0 offset=52
       local.get $this
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=16
       local.get $19
       local.get $node|14
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=44
       local.get $19
       call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:left
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=28
       local.get $19
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0
       local.get $19
       local.get $this
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=16
       local.get $19
       local.get $node|14
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=44
       local.get $19
       call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:right
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=28
       local.get $19
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=12
       local.get $19
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/union
       local.set $19
       global.get $~lib/memory/__stack_pointer
       i32.const 72
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $19
       return
      end
      global.get $~lib/memory/__stack_pointer
      local.get $expression
      local.tee $15
      i32.store $0 offset=56
      local.get $15
      call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode
      if (result i32)
       local.get $15
      else
       i32.const 7328
       i32.const 9568
       i32.const 224
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0 offset=12
      local.get $19
      local.get $this
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0 offset=28
      local.get $19
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#get:flags
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0 offset=16
      local.get $19
      call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0
      local.get $19
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>
      local.set $19
      global.get $~lib/memory/__stack_pointer
      i32.const 72
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $19
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $expression
     local.tee $16
     i32.store $0 offset=60
     local.get $16
     call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
     if (result i32)
      local.get $16
     else
      i32.const 7328
      i32.const 9568
      i32.const 231
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=12
     local.get $19
     local.get $this
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=28
     local.get $19
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#get:flags
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=16
     local.get $19
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0
     local.get $19
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromMatcher<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>
     local.set $19
     global.get $~lib/memory/__stack_pointer
     i32.const 72
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $19
     return
    end
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $expression
    local.tee $17
    i32.store $0 offset=64
    local.get $17
    call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/GroupNode
    if (result i32)
     local.get $17
    else
     i32.const 7328
     i32.const 9568
     i32.const 236
     i32.const 22
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $node|18
    i32.store $0 offset=68
    local.get $this
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=12
    local.get $19
    local.get $node|18
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=28
    local.get $19
    call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:expression
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=16
    local.get $19
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0
    local.get $19
    local.get $node|18
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=12
    local.get $19
    call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:capturing
    local.get $node|18
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=12
    local.get $19
    call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:id
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/group
    local.set $19
    global.get $~lib/memory/__stack_pointer
    i32.const 72
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $19
    return
   end
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.fromEpsilon
   local.set $19
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $19
   return
  end
  i32.const 10032
  i32.const 9568
  i32.const 246
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.toNFA (param $ast i32) (param $flags i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.get $flags
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $ast
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 (param $state i32)
  (local $1 i32)
  (local $2 i32)
  (local $startMarker i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $state
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $state
   local.tee $2
   i32.store $0 offset=4
   local.get $2
   call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
   if (result i32)
    local.get $2
   else
    i32.const 7328
    i32.const 7216
    i32.const 141
    i32.const 29
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $startMarker
   i32.store $0 offset=8
   local.get $startMarker
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capturing
   if
    global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    global.get $~lib/memory/__stack_pointer
    local.get $state
    local.tee $4
    i32.store $0 offset=20
    local.get $4
    call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
    if (result i32)
     local.get $4
    else
     i32.const 7328
     i32.const 7216
     i32.const 143
     i32.const 26
     call $~lib/builtins/abort
     unreachable
    end
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#push
    drop
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#indexOf (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:dataStart
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#includes (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $fromIndex
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#indexOf
  i32.const 0
  i32.ge_s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/walker/walker (param $state i32) (param $visitor i32) (param $visited i32)
  (local $nextStates i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $visited
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $state
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#includes
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $state
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 1
  global.set $~argumentsLength
  local.get $visitor
  i32.load $0
  call_indirect $0 (type $i32_=>_none)
  local.get $visited
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $state
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#push
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $state
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.tee $nextStates
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  local.get $nextStates
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $nextStates
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $6
    local.get $i
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $visitor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    local.get $visited
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=12
    local.get $6
    call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/walker/walker@varargs (param $state i32) (param $visitor i32) (param $visited i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 24
   i32.const 10128
   call $~lib/rt/__newArray
   local.tee $visited
   i32.store $0
  end
  local.get $state
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $visitor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  local.get $visited
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor (param $this i32) (param $regex i32) (param $flagsString i32) (result i32)
  (local $ast i32)
  (local $flags i32)
  (local $body i32)
  (local $6 i32)
  (local $7 i32)
  (local $expressions i32)
  (local $nfa i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 20
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $regex
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:regex
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $flagsString
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:flagsString
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:lastIndex
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:flags
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:nfa
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:endOfInput
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:startOfInput
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:groupMarkers
  global.get $~lib/memory/__stack_pointer
  local.get $regex
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser.toAST
  local.tee $ast
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $flagsString
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#constructor
  local.tee $flags
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $ast
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
  local.tee $body
  i32.store $0 offset=20
  local.get $body
  i32.const 0
  i32.ne
  if (result i32)
   local.get $body
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/assemblyscript-regex/assembly/parser/node/Node#get:type
   i32.const 3
   i32.eq
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $ast
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=8
   local.get $10
   call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
   local.tee $6
   i32.store $0 offset=24
   local.get $6
   if (result i32)
    local.get $6
   else
    i32.const 7088
    i32.const 7216
    i32.const 128
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $7
   i32.store $0 offset=28
   local.get $7
   call $~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
   if (result i32)
    local.get $7
   else
    i32.const 7328
    i32.const 7216
    i32.const 128
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
   local.tee $expressions
   i32.store $0 offset=32
   local.get $this
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   local.get $expressions
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=36
   local.get $10
   call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node>
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=8
   local.get $10
   i32.const 94
   call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:startOfInput
   local.get $this
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   local.get $expressions
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=36
   local.get $10
   call $~lib/assemblyscript-regex/assembly/util/last<~lib/assemblyscript-regex/assembly/parser/node/Node>
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=8
   local.get $10
   i32.const 36
   call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:endOfInput
  end
  local.get $ast
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 9504
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/parser/walker/walker
  global.get $~lib/memory/__stack_pointer
  local.get $ast
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $flags
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata.toNFA
  local.tee $nfa
  i32.store $0 offset=40
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
  global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
  local.get $nfa
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=36
  local.get $10
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 10096
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/walker/walker@varargs
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $nfa
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:nfa
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:groupMarkers
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $flags
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:flags
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<u32>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<u32>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<u32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<u32>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<u32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<u32>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<u32>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<u32>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<u32>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String#substring (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $finalStart i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $finalEnd i32)
  (local $14 i32)
  (local $15 i32)
  (local $fromPos i32)
  (local $17 i32)
  (local $18 i32)
  (local $toPos i32)
  (local $size i32)
  (local $out i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store $0
  local.get $22
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $finalStart
  local.get $end
  local.tee $9
  i32.const 0
  local.tee $10
  local.get $9
  local.get $10
  i32.gt_s
  select
  local.tee $11
  local.get $len
  local.tee $12
  local.get $11
  local.get $12
  i32.lt_s
  select
  local.set $finalEnd
  local.get $finalStart
  local.tee $14
  local.get $finalEnd
  local.tee $15
  local.get $14
  local.get $15
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $fromPos
  local.get $finalStart
  local.tee $17
  local.get $finalEnd
  local.tee $18
  local.get $17
  local.get $18
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $toPos
  local.get $toPos
  local.get $fromPos
  i32.sub
  local.set $size
  local.get $size
  i32.eqz
  if
   i32.const 6144
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $fromPos
  i32.eqz
  if (result i32)
   local.get $toPos
   local.get $len
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $fromPos
  i32.add
  local.get $size
  memory.copy $0 $0
  local.get $out
  local.set $22
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $22
  return
 )
 (func $~lib/string/String.__ne (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String.__eq
  i32.eqz
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch (param $state i32) (param $input i32) (param $visited i32) (param $position i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $matches i32)
  (local $7 i32)
  (local $8 i32)
  (local $transitions i32)
  (local $i|10 i32)
  (local $len|11 i32)
  (local $match i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  i32.const 0
  local.set $i
  local.get $visited
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<u32>#get:length
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $visited
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    local.get $i
    call $~lib/array/Array<u32>#__get
    local.get $state
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:id
    i32.eq
    if
     i32.const 0
     local.set $15
     global.get $~lib/memory/__stack_pointer
     i32.const 36
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $15
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $visited
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  local.get $state
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:id
  call $~lib/array/Array<u32>#push
  drop
  local.get $state
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  local.get $input
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  local.get $position
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@override
  local.set $matches
  local.get $matches
  global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Match
  i32.eq
  if
   local.get $position
   local.get $input
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0
   local.get $15
   call $~lib/string/String#get:length
   i32.eq
   if
    i32.const 0
    local.set $15
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $15
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 14
   i32.const 10240
   call $~lib/rt/__newArray
   local.tee $visited
   i32.store $0 offset=8
   local.get $position
   i32.const 1
   i32.add
   local.set $position
  else
   local.get $matches
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Fail
   i32.eq
   if
    i32.const 0
    local.set $15
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $15
    return
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $state
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#get:transitions
  local.tee $transitions
  i32.store $0 offset=12
  local.get $transitions
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length
  i32.const 0
  i32.eq
  if
   local.get $input
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0
   local.get $15
   i32.const 0
   local.get $position
   call $~lib/string/String#substring
   local.set $15
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $15
   return
  end
  i32.const 0
  local.set $i|10
  local.get $transitions
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length
  local.set $len|11
  loop $for-loop|1
   local.get $i|10
   local.get $len|11
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $transitions
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=20
    local.get $15
    local.get $i|10
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#__get
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    local.get $input
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $visited
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=16
    local.get $15
    local.get $position
    call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
    local.tee $match
    i32.store $0 offset=24
    local.get $match
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    i32.const 0
    call $~lib/string/String.__ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $state
     local.tee $13
     i32.store $0 offset=28
     local.get $13
     i32.eqz
     if (result i32)
      i32.const 0
     else
      local.get $13
      call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.get $state
      local.tee $14
      i32.store $0 offset=32
      local.get $14
      call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState
      if (result i32)
       local.get $14
      else
       i32.const 7328
       i32.const 7216
       i32.const 52
       i32.const 10
       call $~lib/builtins/abort
       unreachable
      end
      local.set $15
      global.get $~lib/memory/__stack_pointer
      local.get $15
      i32.store $0
      local.get $15
      i32.const 1
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:flagged
     end
     local.get $match
     local.set $15
     global.get $~lib/memory/__stack_pointer
     i32.const 36
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $15
     return
    end
    local.get $i|10
    i32.const 1
    i32.add
    local.set $i|10
    br $for-loop|1
   end
  end
  i32.const 0
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs (param $state i32) (param $input i32) (param $visited i32) (param $position i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 14
    i32.const 10272
    call $~lib/rt/__newArray
    local.tee $visited
    i32.store $0
   end
   i32.const 0
   local.set $position
  end
  local.get $state
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $input
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  local.get $visited
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  local.get $position
  call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#constructor (param $this i32) (param $matches i32) (param $index i32) (param $input i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 60
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $matches
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/assemblyscript-regex/assembly/regexp/Match#set:matches
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $index
  call $~lib/assemblyscript-regex/assembly/regexp/Match#set:index
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/assemblyscript-regex/assembly/regexp/Match#set:input
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:multiline (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:flags
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:multiline
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#substr (param $this i32) (param $start i32) (param $length i32) (result i32)
  (local $intStart i32)
  (local $end i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $size i32)
  (local $out i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $start
  local.set $intStart
  local.get $length
  local.set $end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  call $~lib/string/String#get:length
  local.set $len
  local.get $intStart
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $intStart
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
   local.set $intStart
  end
  local.get $end
  local.tee $8
  i32.const 0
  local.tee $9
  local.get $8
  local.get $9
  i32.gt_s
  select
  local.tee $10
  local.get $len
  local.get $intStart
  i32.sub
  local.tee $11
  local.get $10
  local.get $11
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $size
  local.get $size
  i32.const 0
  i32.le_s
  if
   i32.const 6144
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $intStart
  i32.const 1
  i32.shl
  i32.add
  local.get $size
  memory.copy $0 $0
  local.get $out
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/string/String#substr@varargs (param $this i32) (param $start i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $length
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $length
  call $~lib/string/String#substr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 (param $gm i32) (param $$1 i32) (param $$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $gm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $gm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:flagged
  if (result i32)
   local.get $gm
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capture
  else
   i32.const 6144
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capture
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach (param $this i32) (param $fn i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $i
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $i
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__uget (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState> (param $arr i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__uget
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup (param $groupMarkers i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $values i32)
  (local $currrentId i32)
  (local $i i32)
  (local $gm i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $groupMarkers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length
  i32.eqz
  if
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 10336
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load $0 offset=4
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  local.get $groupMarkers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capture
  call $~lib/array/Array<~lib/string/String>#__set
  local.get $3
  local.tee $values
  i32.store $0 offset=16
  local.get $groupMarkers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:groupId
  local.set $currrentId
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $groupMarkers
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $groupMarkers
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__get
    local.tee $gm
    i32.store $0 offset=20
    local.get $gm
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:groupId
    local.get $currrentId
    i32.ne
    if
     local.get $gm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:groupId
     local.set $currrentId
     local.get $values
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     local.get $gm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=24
     local.get $9
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capture
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     call $~lib/array/Array<~lib/string/String>#push
     drop
    else
     local.get $gm
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:flagged
     if
      local.get $values
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      local.get $values
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=24
      local.get $9
      call $~lib/array/Array<~lib/string/String>#get:length
      i32.const 1
      i32.sub
      local.get $gm
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=24
      local.get $9
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capture
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=24
      local.get $9
      call $~lib/array/Array<~lib/string/String>#__set
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $values
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/array/Array<~lib/string/String>#concat (param $this i32) (param $other i32) (result i32)
  (local $thisLen i32)
  (local $otherLen i32)
  (local $outLen i32)
  (local $out i32)
  (local $outStart i32)
  (local $thisSize i32)
  (local $thisStart i32)
  (local $offset i32)
  (local $ref i32)
  (local $otherStart i32)
  (local $otherSize i32)
  (local $offset|13 i32)
  (local $ref|14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $thisLen
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $otherLen
  local.get $thisLen
  local.get $otherLen
  i32.add
  local.set $outLen
  local.get $outLen
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outLen
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $outStart
  local.get $thisLen
  i32.const 2
  i32.shl
  local.set $thisSize
  i32.const 1
  drop
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $thisStart
  i32.const 0
  local.set $offset
  loop $for-loop|0
   local.get $offset
   local.get $thisSize
   i32.lt_u
   if
    local.get $thisStart
    local.get $offset
    i32.add
    i32.load $0
    local.set $ref
    local.get $outStart
    local.get $offset
    i32.add
    local.get $ref
    i32.store $0
    local.get $out
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset
    i32.const 4
    i32.add
    local.set $offset
    br $for-loop|0
   end
  end
  local.get $outStart
  local.get $thisSize
  i32.add
  local.set $outStart
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $otherStart
  local.get $otherLen
  i32.const 2
  i32.shl
  local.set $otherSize
  i32.const 0
  local.set $offset|13
  loop $for-loop|1
   local.get $offset|13
   local.get $otherSize
   i32.lt_u
   if
    local.get $otherStart
    local.get $offset|13
    i32.add
    i32.load $0
    local.set $ref|14
    local.get $outStart
    local.get $offset|13
    i32.add
    local.get $ref|14
    i32.store $0
    local.get $out
    local.get $ref|14
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset|13
    i32.const 4
    i32.add
    local.set $offset|13
    br $for-loop|1
   end
  end
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:global (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:flags
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:global
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec (param $this i32) (param $str i32) (result i32)
  (local $groupMarkers i32)
  (local $i i32)
  (local $len i32)
  (local $len|5 i32)
  (local $matchStr i32)
  (local $7 i32)
  (local $8 i32)
  (local $matchIndex i32)
  (local $matchStr|10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $matches i32)
  (local $match i32)
  (local $matchEndIndex i32)
  (local $16 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 56
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:groupMarkers
  local.tee $groupMarkers
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  local.get $groupMarkers
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $groupMarkers
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=12
    local.get $16
    local.get $i
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__get
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 6144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=8
    local.get $16
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capture
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $str
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/string/String#get:length
  local.set $len|5
  local.get $len|5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:nfa
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=12
   local.get $16
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   i32.const 6144
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=8
   local.get $16
   i32.const 0
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
   local.tee $matchStr
   i32.store $0 offset=20
   local.get $matchStr
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   i32.const 0
   call $~lib/string/String.__ne
   if (result i32)
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    i32.const 1
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $7
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load $0 offset=4
    local.tee $8
    i32.store $0 offset=28
    local.get $7
    i32.const 0
    local.get $matchStr
    call $~lib/array/Array<~lib/string/String>#__set
    local.get $7
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=8
    local.get $16
    i32.const 0
    local.get $str
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
   else
    i32.const 0
   end
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 56
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:lastIndex
  local.set $matchIndex
  loop $for-loop|1
   local.get $matchIndex
   local.get $this
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:startOfInput
   if (result i32)
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:multiline
    i32.eqz
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    local.get $len|5
   end
   i32.lt_s
   if
    block $for-continue|1
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=16
     local.get $16
     call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:nfa
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=12
     local.get $16
     call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#get:start
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     local.get $str
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=12
     local.get $16
     local.get $matchIndex
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     call $~lib/string/String#substr@varargs
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=8
     local.get $16
     i32.const 0
     i32.const 2
     global.set $~argumentsLength
     i32.const 0
     call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
     local.tee $matchStr|10
     i32.store $0 offset=32
     local.get $matchStr|10
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     i32.const 0
     call $~lib/string/String.__ne
     if
      local.get $groupMarkers
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      i32.const 10304
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=8
      local.get $16
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $11
      i32.store $0 offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.load $0 offset=4
      local.tee $12
      i32.store $0 offset=40
      local.get $11
      i32.const 0
      local.get $matchStr|10
      call $~lib/array/Array<~lib/string/String>#__set
      local.get $11
      local.tee $matches
      i32.store $0 offset=44
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      local.get $matches
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=12
      local.get $16
      local.get $groupMarkers
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=48
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=16
      local.get $16
      call $~lib/array/Array<~lib/string/String>#concat
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=8
      local.get $16
      local.get $matchIndex
      local.get $str
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=16
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
      local.tee $match
      i32.store $0 offset=52
      local.get $match
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/Match#get:index
      local.get $match
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=12
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/Match#get:matches
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0 offset=8
      local.get $16
      i32.const 0
      call $~lib/array/Array<~lib/string/String>#__get
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      call $~lib/string/String#get:length
      i32.add
      local.set $matchEndIndex
      local.get $this
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:startOfInput
      if
       local.get $this
       local.set $16
       global.get $~lib/memory/__stack_pointer
       local.get $16
       i32.store $0 offset=8
       local.get $16
       call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:flags
       local.set $16
       global.get $~lib/memory/__stack_pointer
       local.get $16
       i32.store $0
       local.get $16
       call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:multiline
       if (result i32)
        local.get $matchIndex
        i32.const 0
        i32.ne
       else
        i32.const 0
       end
       if
        local.get $str
        local.set $16
        global.get $~lib/memory/__stack_pointer
        local.get $16
        i32.store $0
        local.get $16
        local.get $matchIndex
        i32.const 1
        i32.sub
        call $~lib/string/String#charCodeAt
        i32.const 10
        i32.ne
        if
         br $for-continue|1
        end
       else
        local.get $matchIndex
        i32.const 0
        i32.ne
        if
         br $for-continue|1
        end
       end
      end
      local.get $this
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:endOfInput
      if
       local.get $this
       local.set $16
       global.get $~lib/memory/__stack_pointer
       local.get $16
       i32.store $0 offset=8
       local.get $16
       call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:flags
       local.set $16
       global.get $~lib/memory/__stack_pointer
       local.get $16
       i32.store $0
       local.get $16
       call $~lib/assemblyscript-regex/assembly/regexp/Flags#get:multiline
       if (result i32)
        local.get $matchEndIndex
        local.get $len|5
        i32.ne
       else
        i32.const 0
       end
       if
        local.get $str
        local.set $16
        global.get $~lib/memory/__stack_pointer
        local.get $16
        i32.store $0
        local.get $16
        local.get $matchEndIndex
        call $~lib/string/String#charCodeAt
        i32.const 10
        i32.ne
        if
         br $for-continue|1
        end
       else
        local.get $matchEndIndex
        local.get $len|5
        i32.ne
        if
         br $for-continue|1
        end
       end
      end
      local.get $this
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      call $~lib/assemblyscript-regex/assembly/regexp/RegExp#get:global
      if
       local.get $this
       local.set $16
       global.get $~lib/memory/__stack_pointer
       local.get $16
       i32.store $0
       local.get $16
       local.get $matchEndIndex
       call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:lastIndex
      end
      local.get $match
      local.set $16
      global.get $~lib/memory/__stack_pointer
      i32.const 56
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $16
      return
     end
    end
    local.get $matchIndex
    i32.const 1
    i32.add
    local.set $matchIndex
    br $for-loop|1
   end
  end
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#set:lastIndex
  i32.const 0
  local.set $16
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $16
  return
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#test (param $this i32) (param $str i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $str
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/bucketing/versionCompare/hasValidParts (param $lexicographical i32) (param $parts i32) (result i32)
  (local $i i32)
  (local $regex i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $parts
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $lexicographical
    if (result i32)
     i32.const 0
     i32.const 10160
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     local.get $4
     i32.const 6960
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     local.get $4
     call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    else
     i32.const 0
     i32.const 10208
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     local.get $4
     i32.const 6960
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     local.get $4
     call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    end
    local.tee $regex
    i32.store $0 offset=12
    local.get $regex
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $parts
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#test
    i32.eqz
    if
     i32.const 0
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $parts
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.eqz
  i32.eqz
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 (param $n i32) (param $$1 i32) (param $$2 i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $~lib/string/parseInt
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<~lib/string/String>#map<f64> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result f64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 3
  i32.const 62
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<f64>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/string/String>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/string/String>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_f64)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $result
    f64.store $0
    i32.const 0
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|1 (param $n i32) (param $$1 i32) (param $$2 i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $~lib/string/parseInt
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<f64>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<f64>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<f64>#__get (param $this i32) (param $index i32) (result f64)
  (local $value f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<f64>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<f64>#get:dataStart
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0 (param $v1 i32) (param $v2 i32) (param $options i32) (result f64)
  (local $lexicographical i32)
  (local $zeroExtend i32)
  (local $v1parts i32)
  (local $v2parts i32)
  (local $hasV1 i32)
  (local $hasV2 i32)
  (local $9 i32)
  (local $10 i32)
  (local $v1PartsFinal i32)
  (local $12 i32)
  (local $13 i32)
  (local $v2PartsFinal i32)
  (local $i i32)
  (local $16 i32)
  (local $17 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $options
  if (result i32)
   local.get $options
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   call $assembly/bucketing/versionCompare/OptionsType#get:lexicographical
  else
   i32.const 0
  end
  local.set $lexicographical
  local.get $options
  if (result i32)
   local.get $options
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   call $assembly/bucketing/versionCompare/OptionsType#get:zeroExtend
  else
   i32.const 0
  end
  local.set $zeroExtend
  global.get $~lib/memory/__stack_pointer
  local.get $v1
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  i32.const 6064
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String#split@varargs
  local.tee $v1parts
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $v2
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  i32.const 6064
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String#split@varargs
  local.tee $v2parts
  i32.store $0 offset=12
  local.get $lexicographical
  local.get $v1parts
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  call $assembly/bucketing/versionCompare/hasValidParts
  local.set $hasV1
  local.get $lexicographical
  local.get $v2parts
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  call $assembly/bucketing/versionCompare/hasValidParts
  local.set $hasV2
  local.get $hasV1
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $hasV2
   i32.eqz
  end
  if
   f64.const nan:0x8000000000000
   local.set $17
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $17
   return
  end
  local.get $zeroExtend
  if
   loop $while-continue|0
    local.get $v1parts
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $v2parts
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     local.get $v1parts
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     i32.const 7808
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=4
     local.get $16
     call $~lib/array/Array<~lib/string/String>#push
     drop
     br $while-continue|0
    end
   end
   loop $while-continue|1
    local.get $v2parts
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $v1parts
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     local.get $v2parts
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     i32.const 7808
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=4
     local.get $16
     call $~lib/array/Array<~lib/string/String>#push
     drop
     br $while-continue|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 62
  i32.const 10368
  call $~lib/rt/__newArray
  local.tee $v1PartsFinal
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 62
  i32.const 10400
  call $~lib/rt/__newArray
  local.tee $v2PartsFinal
  i32.store $0 offset=20
  local.get $lexicographical
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $v1parts
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   i32.const 10432
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $v1PartsFinal
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $v2parts
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   i32.const 10464
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $v2PartsFinal
   i32.store $0 offset=20
  end
  i32.const 0
  local.set $i
  loop $for-loop|2
   local.get $i
   local.get $v1PartsFinal
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   call $~lib/array/Array<f64>#get:length
   i32.lt_s
   if
    block $for-continue|2
     local.get $v2PartsFinal
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     call $~lib/array/Array<f64>#get:length
     local.get $i
     i32.eq
     if
      f64.const 1
      local.set $17
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $17
      return
     end
     local.get $v1PartsFinal
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     local.get $i
     call $~lib/array/Array<f64>#__get
     local.get $v2PartsFinal
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     local.get $i
     call $~lib/array/Array<f64>#__get
     f64.eq
     if
      br $for-continue|2
     else
      local.get $v1PartsFinal
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      local.get $i
      call $~lib/array/Array<f64>#__get
      local.get $v2PartsFinal
      local.set $16
      global.get $~lib/memory/__stack_pointer
      local.get $16
      i32.store $0
      local.get $16
      local.get $i
      call $~lib/array/Array<f64>#__get
      f64.gt
      if
       f64.const 1
       local.set $17
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $17
       return
      else
       f64.const -1
       local.set $17
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $17
       return
      end
      unreachable
     end
     unreachable
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|2
   end
  end
  local.get $v1PartsFinal
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/array/Array<f64>#get:length
  local.get $v2PartsFinal
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/array/Array<f64>#get:length
  i32.ne
  if
   f64.const -1
   local.set $17
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $17
   return
  end
  f64.const 0
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 100
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 86
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 101
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $start:assembly/eventQueue/eventQueue
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  call $~lib/set/Set<~lib/string/String>#constructor
  global.set $assembly/eventQueue/eventQueue/EventTypesSet
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5664
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5728
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5792
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/set/Set<~lib/string/String>#add
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 117
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 122
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/util/string/joinStringArray (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $4 i32)
  (local $estLen i32)
  (local $value i32)
  (local $i i32)
  (local $offset i32)
  (local $sepLen i32)
  (local $result i32)
  (local $i|11 i32)
  (local $valueLen i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6144
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $dataStart
   i32.load $0
   local.tee $4
   i32.store $0
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 6144
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  i32.const 0
  local.set $estLen
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $value
    i32.store $0 offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $estLen
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     i32.add
     local.set $estLen
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $offset
  local.get $separator
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $~lib/string/String#get:length
  local.set $sepLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  local.get $sepLen
  local.get $lastIndex
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0 offset=12
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $lastIndex
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i|11
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $value
    i32.store $0 offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=8
     local.get $13
     call $~lib/string/String#get:length
     local.set $valueLen
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     local.get $valueLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $valueLen
     i32.add
     local.set $offset
    end
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $result
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $value
   local.get $value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=8
   local.get $13
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   memory.copy $0 $0
  end
  local.get $result
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $this i32) (param $separator i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $ptr
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $len
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $ptr
  local.get $len
  local.get $separator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/util/string/joinStringArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/stringHelpers/padWithLeadingZeros (param $str i32) (result i32)
  (local $length i32)
  (local $2 i32)
  (local $3 i32)
  (local $array i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 5
  local.get $str
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/string/String#get:length
  i32.sub
  local.set $length
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 0
  i32.gt_s
  if (result i32)
   i32.const 0
   local.get $length
   call $~lib/array/Array<~lib/string/String>#constructor
  else
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 10688
   call $~lib/rt/__newArray
  end
  local.tee $array
  i32.store $0 offset=4
  local.get $array
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 7808
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $~lib/array/Array<~lib/string/String>#join
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $str
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/string/String.__concat
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/helpers/stringHelpers/unicodeCharEscape (param $charCode i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 10656
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $charCode
  i32.const 16
  call $~lib/number/I32#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $assembly/helpers/stringHelpers/padWithLeadingZeros
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/murmurhash/murmurhashV3 (param $key i32) (param $seed i32) (result i32)
  (local $currentBuffer i32)
  (local $i i32)
  (local $charCode i32)
  (local $length i32)
  (local $remainder i32)
  (local $bytes i32)
  (local $h1b i32)
  (local $c1 i32)
  (local $c2 i32)
  (local $k1 i32)
  (local $i|12 i32)
  (local $h1 i32)
  (local $14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/helpers/murmurhash/keyBuffer
  local.tee $currentBuffer
  i32.store $0
  local.get $key
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  call $~lib/string/String#get:length
  global.get $assembly/helpers/murmurhash/keyBuffer
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  call $~lib/staticarray/StaticArray<i32>#get:length
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $key
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=4
   local.get $15
   call $~lib/string/String#get:length
   call $~lib/staticarray/StaticArray<i32>#constructor
   local.tee $currentBuffer
   i32.store $0
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $key
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=4
   local.get $15
   call $~lib/string/String#get:length
   i32.lt_s
   if
    local.get $key
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i
    call $~lib/string/String#charCodeAt
    local.set $charCode
    local.get $charCode
    i32.const 127
    i32.gt_s
    if
     local.get $currentBuffer
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=4
     local.get $15
     local.get $i
     local.get $charCode
     call $assembly/helpers/stringHelpers/unicodeCharEscape
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=8
     local.get $15
     i32.const 0
     call $~lib/string/String#charCodeAt
     call $~lib/staticarray/StaticArray<i32>#__uset
    else
     local.get $currentBuffer
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=4
     local.get $15
     local.get $i
     local.get $charCode
     call $~lib/staticarray/StaticArray<i32>#__uset
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $key
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  call $~lib/string/String#get:length
  local.set $length
  local.get $key
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=4
  local.get $15
  call $~lib/string/String#get:length
  i32.const 3
  i32.and
  local.set $remainder
  local.get $length
  local.get $remainder
  i32.sub
  local.set $bytes
  local.get $seed
  local.set $h1
  i32.const -862048943
  local.set $c1
  i32.const 461845907
  local.set $c2
  i32.const 0
  local.set $i|12
  loop $while-continue|1
   local.get $i|12
   local.get $bytes
   i32.lt_s
   if
    local.get $currentBuffer
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i|12
    call $~lib/staticarray/StaticArray<i32>#__uget
    i32.const 255
    i32.and
    local.get $currentBuffer
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i|12
    i32.const 1
    i32.add
    local.tee $i|12
    call $~lib/staticarray/StaticArray<i32>#__uget
    i32.const 255
    i32.and
    i32.const 8
    i32.shl
    i32.or
    local.get $currentBuffer
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i|12
    i32.const 1
    i32.add
    local.tee $i|12
    call $~lib/staticarray/StaticArray<i32>#__uget
    i32.const 255
    i32.and
    i32.const 16
    i32.shl
    i32.or
    local.get $currentBuffer
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i|12
    i32.const 1
    i32.add
    local.tee $i|12
    call $~lib/staticarray/StaticArray<i32>#__uget
    i32.const 255
    i32.and
    i32.const 24
    i32.shl
    i32.or
    local.set $k1
    local.get $i|12
    i32.const 1
    i32.add
    local.set $i|12
    local.get $k1
    i32.const 65535
    i32.and
    local.get $c1
    i32.mul
    local.get $k1
    i32.const 16
    i32.shr_u
    local.get $c1
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    i32.const -1
    i32.and
    local.set $k1
    local.get $k1
    i32.const 15
    i32.shl
    local.get $k1
    i32.const 17
    i32.shr_u
    i32.or
    local.set $k1
    local.get $k1
    i32.const 65535
    i32.and
    local.get $c2
    i32.mul
    local.get $k1
    i32.const 16
    i32.shr_u
    local.get $c2
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    i32.const -1
    i32.and
    local.set $k1
    local.get $h1
    local.get $k1
    i32.xor
    local.set $h1
    local.get $h1
    i32.const 13
    i32.shl
    local.get $h1
    i32.const 19
    i32.shr_u
    i32.or
    local.set $h1
    local.get $h1
    i32.const 65535
    i32.and
    i32.const 5
    i32.mul
    local.get $h1
    i32.const 16
    i32.shr_u
    i32.const 5
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    i32.const -1
    i32.and
    local.set $h1b
    local.get $h1b
    i32.const 65535
    i32.and
    i32.const 27492
    i32.add
    local.get $h1b
    i32.const 16
    i32.shr_u
    i32.const 58964
    i32.add
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    local.set $h1
    br $while-continue|1
   end
  end
  i32.const 0
  local.set $k1
  block $break|2
   block $case2|2
    block $case1|2
     block $case0|2
      local.get $remainder
      local.set $14
      local.get $14
      i32.const 3
      i32.eq
      br_if $case0|2
      local.get $14
      i32.const 2
      i32.eq
      br_if $case1|2
      local.get $14
      i32.const 1
      i32.eq
      br_if $case2|2
      br $break|2
     end
     local.get $k1
     local.get $currentBuffer
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=4
     local.get $15
     local.get $i|12
     i32.const 2
     i32.add
     call $~lib/staticarray/StaticArray<i32>#__uget
     i32.const 255
     i32.and
     i32.const 16
     i32.shl
     i32.xor
     local.set $k1
    end
    local.get $k1
    local.get $currentBuffer
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0 offset=4
    local.get $15
    local.get $i|12
    i32.const 1
    i32.add
    call $~lib/staticarray/StaticArray<i32>#__uget
    i32.const 255
    i32.and
    i32.const 8
    i32.shl
    i32.xor
    local.set $k1
   end
   local.get $k1
   local.get $currentBuffer
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=4
   local.get $15
   local.get $i|12
   call $~lib/staticarray/StaticArray<i32>#__uget
   i32.const 255
   i32.and
   i32.xor
   local.set $k1
   local.get $k1
   i32.const 65535
   i32.and
   local.get $c1
   i32.mul
   local.get $k1
   i32.const 16
   i32.shr_u
   local.get $c1
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   i32.const -1
   i32.and
   local.set $k1
   local.get $k1
   i32.const 15
   i32.shl
   local.get $k1
   i32.const 17
   i32.shr_u
   i32.or
   local.set $k1
   local.get $k1
   i32.const 65535
   i32.and
   local.get $c2
   i32.mul
   local.get $k1
   i32.const 16
   i32.shr_u
   local.get $c2
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   i32.const -1
   i32.and
   local.set $k1
   local.get $h1
   local.get $k1
   i32.xor
   local.set $h1
  end
  local.get $h1
  local.get $length
  i32.xor
  local.set $h1
  local.get $h1
  local.get $h1
  i32.const 16
  i32.shr_u
  i32.xor
  local.set $h1
  local.get $h1
  i32.const 65535
  i32.and
  i32.const -2048144789
  i32.mul
  local.get $h1
  i32.const 16
  i32.shr_u
  i32.const -2048144789
  i32.mul
  i32.const 65535
  i32.and
  i32.const 16
  i32.shl
  i32.add
  i32.const -1
  i32.and
  local.set $h1
  local.get $h1
  local.get $h1
  i32.const 13
  i32.shr_u
  i32.xor
  local.set $h1
  local.get $h1
  i32.const 65535
  i32.and
  i32.const -1028477387
  i32.mul
  local.get $h1
  i32.const 16
  i32.shr_u
  i32.const -1028477387
  i32.mul
  i32.const 65535
  i32.and
  i32.const 16
  i32.shl
  i32.add
  i32.const -1
  i32.and
  local.set $h1
  local.get $h1
  local.get $h1
  i32.const 16
  i32.shr_u
  i32.xor
  local.set $h1
  local.get $h1
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $assembly/bucketing/bucketing/generateBoundedHash (param $input i32) (param $hashSeed i32) (result f64)
  (local $hash f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $input
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $hashSeed
  call $assembly/helpers/murmurhash/murmurhashV3
  f64.convert_i32_u
  local.set $hash
  local.get $hash
  global.get $assembly/bucketing/bucketing/MAX_HASH_VALUE
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/bucketing/BoundedHash#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 123
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  f64.const 0
  call $assembly/bucketing/bucketing/BoundedHash#set:rolloutHash
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  f64.const 0
  call $assembly/bucketing/bucketing/BoundedHash#set:bucketingHash
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/_generateBoundedHashes (param $user_id i32) (param $target_id i32) (result i32)
  (local $targetHash i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $target_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  global.get $assembly/bucketing/bucketing/baseSeed
  call $assembly/helpers/murmurhash/murmurhashV3
  local.set $targetHash
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/bucketing/bucketing/BoundedHash#constructor
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $user_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 10720
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $targetHash
  call $assembly/bucketing/bucketing/generateBoundedHash
  call $assembly/bucketing/bucketing/BoundedHash#set:rolloutHash
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $user_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $targetHash
  call $assembly/bucketing/bucketing/generateBoundedHash
  call $assembly/bucketing/bucketing/BoundedHash#set:bucketingHash
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set:_obj
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set:_obj
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#constructor (param $this i32) (param $_num f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 125
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $_num
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#set:_num
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float#constructor (param $this i32) (param $_num f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 124
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $_num
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64> (param $this i32) (param $key i32) (param $value f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<f64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<~lib/string/String>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify (param $this i32) (result i32)
  (local $keys i32)
  (local $objs i32)
  (local $i i32)
  (local $key i32)
  (local $value i32)
  (local $valStr i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $keys
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $keys
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/string/String>#get:length
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $objs
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $key
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $value
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
    local.tee $valStr
    i32.store $0 offset=28
    local.get $objs
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $i
    i32.const 10976
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=44
    local.get $7
    local.get $key
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=48
    local.get $7
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=36
    local.get $7
    i32.const 11008
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=40
    local.get $7
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    local.get $valStr
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=32
    local.get $7
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    call $~lib/array/Array<~lib/string/String>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 11040
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  local.get $objs
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=36
  local.get $7
  i32.const 11072
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=40
  local.get $7
  call $~lib/array/Array<~lib/string/String>#join
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=32
  local.get $7
  call $~lib/string/String.__concat
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 11104
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/string/String.__concat
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/index/generateBoundedHashesFromJSON (param $user_id i32) (param $target_id i32) (result i32)
  (local $boundedHash i32)
  (local $json i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $user_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $target_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/bucketing/bucketing/_generateBoundedHashes
  local.tee $boundedHash
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0 offset=12
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 10768
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $boundedHash
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/bucketing/bucketing/BoundedHash#get:rolloutHash
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 10816
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $boundedHash
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/bucketing/bucketing/BoundedHash#get:bucketingHash
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/managers/configDataManager/_getConfigData (param $sdkKey i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/managers/configDataManager/_configData
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  i32.eqz
  if
   i32.const 11136
   i32.const 11216
   i32.const 13
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  else
   global.get $assembly/managers/configDataManager/_configData
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $sdkKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#has
  i32.eqz
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 126
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $key
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/date/Date#constructor (param $this i32) (param $epochMillis i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 85
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $epochMillis
  call $~lib/date/Date#set:epochMillis
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:year
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:month
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/date/Date#set:day
  local.get $epochMillis
  call $~lib/date/invalidDate
  if
   i32.const 11312
   i32.const 11360
   i32.const 100
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $epochMillis
  call $~lib/date/dateFromEpoch
  call $~lib/date/Date#set:year
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_month
  call $~lib/date/Date#set:month
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_day
  call $~lib/date/Date#set:day
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#constructor (param $this i32) (param $user i32) (result i32)
  (local $combinedCustomData i32)
  (local $customData i32)
  (local $i i32)
  (local $key i32)
  (local $privateCustomData i32)
  (local $i|7 i32)
  (local $key|8 i32)
  (local $platformData i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 80
   i32.const 105
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:user_id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:email
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:name
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:language
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:country
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:appVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  f64.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:appBuild
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:deviceModel
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:customData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:privateCustomData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:_combinedCustomData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:createdDate
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:lastSeenDate
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:platform
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:platformVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkType
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkPlatform
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:hostname
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:user_id
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:user_id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:email
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:email
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:name
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:name
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:language
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:language
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:country
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:country
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:appVersion
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:appVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:appBuild
  call $assembly/types/dvcUser/DVCPopulatedUser#set:appBuild
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:customData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:customData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:privateCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:privateCustomData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:deviceModel
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:deviceModel
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $combinedCustomData
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:customData
  local.tee $customData
  i32.store $0 offset=20
  local.get $customData
  if
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $customData
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=8
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $customData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $key
     i32.store $0 offset=24
     local.get $combinedCustomData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     local.get $key
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     local.get $customData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=28
     local.get $10
     local.get $key
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=32
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=12
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/types/dvcUser/DVCUser#get:privateCustomData
  local.tee $privateCustomData
  i32.store $0 offset=36
  local.get $privateCustomData
  if
   i32.const 0
   local.set $i|7
   loop $for-loop|1
    local.get $i|7
    local.get $privateCustomData
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=8
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $privateCustomData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     local.get $i|7
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $key|8
     i32.store $0 offset=40
     local.get $combinedCustomData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     local.get $key|8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     local.get $privateCustomData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=28
     local.get $10
     local.get $key|8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=32
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=12
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
     local.get $i|7
     i32.const 1
     i32.add
     local.set $i|7
     br $for-loop|1
    end
   end
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $combinedCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:_combinedCustomData
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  block $~lib/date/Date.now|inlined.0 (result i64)
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   br $~lib/date/Date.now|inlined.0
  end
  call $~lib/date/Date#constructor
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:createdDate
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  block $~lib/date/Date.now|inlined.1 (result i64)
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   br $~lib/date/Date.now|inlined.1
  end
  call $~lib/date/Date#constructor
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:lastSeenDate
  global.get $~lib/memory/__stack_pointer
  call $assembly/managers/platformDataManager/_getPlatformData
  local.tee $platformData
  i32.store $0 offset=44
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:platform
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:platform
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:platformVersion
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:platformVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:sdkType
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkType
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:sdkVersion
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkVersion
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:sdkPlatform
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:sdkPlatform
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $platformData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $assembly/types/platformData/PlatformData#get:hostname
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser#set:hostname
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/string/String.UTF8.encode (param $str i32) (param $nullTerminated i32) (param $errorMode i32) (result i32)
  (local $buf i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $nullTerminated
  call $~lib/string/String.UTF8.byteLength
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $str
  local.get $str
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String#get:length
  local.get $buf
  local.get $nullTerminated
  local.get $errorMode
  call $~lib/string/String.UTF8.encodeUnsafe
  drop
  local.get $buf
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String.UTF8.encode@varargs (param $str i32) (param $nullTerminated i32) (param $errorMode i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $nullTerminated
   end
   i32.const 0
   local.set $errorMode
  end
  local.get $str
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $nullTerminated
  local.get $errorMode
  call $~lib/string/String.UTF8.encode
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/typedarray/Uint8Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $~lib/typedarray/WRAP<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $buffer
   local.tee $buffer|3
   i32.store $0
   local.get $byteOffset
   local.set $byteOffset|4
   local.get $length
   local.set $len
   local.get $buffer|3
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $~lib/arraybuffer/ArrayBuffer#get:byteLength
   local.set $bufferByteLength
   local.get $byteOffset|4
   local.get $bufferByteLength
   i32.gt_u
   local.get $byteOffset|4
   i32.const 0
   i32.and
   i32.or
   if
    i32.const 5376
    i32.const 11712
    i32.const 1860
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $len
   i32.const 0
   i32.lt_s
   if
    local.get $len
    i32.const -1
    i32.eq
    if
     local.get $bufferByteLength
     i32.const 0
     i32.and
     if
      i32.const 5072
      i32.const 11712
      i32.const 1865
      i32.const 9
      call $~lib/builtins/abort
      unreachable
     end
     local.get $bufferByteLength
     local.get $byteOffset|4
     i32.sub
     local.set $byteLength
    else
     i32.const 5072
     i32.const 11712
     i32.const 1869
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   else
    local.get $len
    i32.const 0
    i32.shl
    local.set $byteLength
    local.get $byteOffset|4
    local.get $byteLength
    i32.add
    local.get $bufferByteLength
    i32.gt_s
    if
     i32.const 5072
     i32.const 11712
     i32.const 1874
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0 offset=8
   local.get $out
   local.get $buffer|3
   i32.store $0
   local.get $out
   local.get $buffer|3
   i32.const 0
   call $~lib/rt/itcms/__link
   local.get $out
   local.get $byteLength
   i32.store $0 offset=8
   local.get $out
   local.get $buffer|3
   local.get $byteOffset|4
   i32.add
   i32.store $0 offset=4
   local.get $out
   br $~lib/typedarray/WRAP<~lib/typedarray/Uint8Array,u8>|inlined.0
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8Array.wrap
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString (param $str i32) (result i32)
  (local $buffer i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 0
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.tee $buffer
  i32.store $0 offset=4
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 0
  i32.eq
  if
   i32.const 0
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#constructor (param $this i32) (param $handler i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 130
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:handler
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:_state
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $handler
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:handler
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 128
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 129
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 127
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#set:stack
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:state (param $this i32) (param $state i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:_state
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#constructor (param $this i32) (param $buffer i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 131
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:buffer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 6144
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:lastKey
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:readIndex
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:_state
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 7088
   i32.const 11776
   i32.const 127
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/typedarray/Uint8Array#__get (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.ge_u
  if
   i32.const 5376
   i32.const 11712
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.add
  i32.load8_u $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint8Array#get:length
  i32.ge_s
  if
   i32.const -1
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
  call $~lib/typedarray/Uint8Array#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  i32.lt_s
  i32.eqz
  if
   i32.const 11904
   i32.const 11776
   i32.const 156
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
  local.tee $1
  i32.const 1
  i32.add
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:readIndex
  local.get $1
  call $~lib/typedarray/Uint8Array#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#isWhitespace
   if
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push (param $this i32) (param $obj i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#get:_arr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $obj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue (param $this i32) (param $name i32) (param $obj i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $name
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/string/String#get:length
  i32.const 0
  i32.eq
  if (result i32)
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $obj
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $4
   i32.store $0 offset=20
   local.get $4
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $4
   else
    i32.const 7328
    i32.const 11968
    i32.const 78
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $name
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   local.get $obj
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  else
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $5
   i32.store $0 offset=24
   local.get $5
   i32.eqz
   if (result i32)
    i32.const 0
   else
    local.get $5
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
    local.tee $6
    i32.store $0 offset=28
    local.get $6
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 11968
     i32.const 80
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $obj
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#pushObject (param $this i32) (param $name i32) (result i32)
  (local $obj i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Object
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
  drop
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:buffer
  i32.sub
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.getDataPtr (param $arr i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:buffer
  local.get $arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.readString (param $arr i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $arr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.getDataPtr
  local.get $start
  i32.add
  local.get $end
  local.get $start
  i32.sub
  i32.const 0
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $end
  i32.const 1
  i32.sub
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.readString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $end
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit (param $this i32) (result i32)
  (local $byte i32)
  (local $digit i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.set $byte
  local.get $byte
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_0
  i32.sub
  local.set $digit
  local.get $digit
  i32.const 9
  i32.gt_s
  if
   local.get $byte
   global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   local.set $digit
   local.get $digit
   i32.const 10
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $digit
    i32.const 15
    i32.gt_s
   end
   if
    local.get $byte
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    local.set $digit
   end
  end
  local.get $digit
  i32.const 0
  i32.ge_s
  if (result i32)
   local.get $digit
   i32.const 16
   i32.lt_s
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 12656
   i32.const 11776
   i32.const 319
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $digit
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar (param $this i32) (result i32)
  (local $byte i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $d3 i32)
  (local $d4 i32)
  (local $charCode i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.set $byte
  local.get $byte
  i32.const 10976
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 10976
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12304
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12304
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12336
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12336
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12368
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12400
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12432
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12464
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12496
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12528
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12560
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 12592
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $byte
  i32.const 12624
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
   local.set $d1
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
   local.set $d2
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
   local.set $d3
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
   local.set $d4
   local.get $d1
   i32.const 4096
   i32.mul
   local.get $d2
   i32.const 256
   i32.mul
   i32.add
   local.get $d3
   i32.const 16
   i32.mul
   i32.add
   local.get $d4
   i32.add
   local.set $charCode
   local.get $charCode
   call $~lib/string/String.fromCodePoint
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 12720
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $byte
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.fromCharCode@varargs
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/string/String.__concat
   i32.const 11776
   i32.const 306
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 6144
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString (param $this i32) (result i32)
  (local $savedIndex i32)
  (local $stringParts i32)
  (local $byte i32)
  (local $s i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  i32.const 10976
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 12144
   i32.const 11776
   i32.const 245
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
  local.set $savedIndex
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $stringParts
  i32.store $0 offset=8
  loop $for-loop|0
   i32.const 1
   if
    local.get $this
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.set $byte
    local.get $byte
    i32.const 32
    i32.ge_s
    i32.eqz
    if
     i32.const 12224
     i32.const 11776
     i32.const 254
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $byte
    i32.const 10976
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $savedIndex
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
     local.tee $s
     i32.store $0 offset=12
     local.get $stringParts
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $~lib/array/Array<~lib/string/String>#get:length
     i32.const 0
     i32.eq
     if
      local.get $s
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $5
      return
     end
     local.get $stringParts
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $s
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $stringParts
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.const 6144
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/array/Array<~lib/string/String>#join
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    else
     local.get $byte
     i32.const 12304
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
      local.get $savedIndex
      i32.const 1
      i32.add
      i32.gt_s
      if
       local.get $stringParts
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       local.get $this
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=20
       local.get $5
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=16
       local.get $5
       local.get $savedIndex
       i32.const 1
       global.set $~argumentsLength
       i32.const 0
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=4
       local.get $5
       call $~lib/array/Array<~lib/string/String>#push
       drop
      end
      local.get $stringParts
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=16
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      local.get $5
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:readIndex
      local.set $savedIndex
     end
    end
    br $for-loop|0
   end
  end
  i32.const 6144
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseKey (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:lastKey
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  i32.const 12800
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 12832
   i32.const 11776
   i32.const 207
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 6480
   i32.const 6096
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $val
  i32.store $0 offset=4
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $len
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set:length_
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popObject (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 1
  i32.gt_s
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#pop
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseObject (param $this i32) (result i32)
  (local $key i32)
  (local $firstItem i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  i32.const 11040
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
  local.tee $key
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:lastKey
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#pushObject
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $firstItem
   loop $while-continue|0
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.const 11104
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.ne
    if
     local.get $firstItem
     i32.eqz
     if
      local.get $this
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
      i32.const 11072
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 12096
       i32.const 11776
       i32.const 190
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $firstItem
     end
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseKey
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   i32.const 11104
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 12880
    i32.const 11776
    i32.const 197
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popObject
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 132
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#set:_arr
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#set:_arr
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#pushArray (param $this i32) (param $name i32) (result i32)
  (local $obj i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Array
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 0
  i32.eq
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
   drop
  else
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $name
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
   drop
  end
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popArray (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
  i32.const 1
  i32.gt_s
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#pop
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseArray (param $this i32) (result i32)
  (local $key i32)
  (local $firstItem i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  i32.const 12960
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
  local.tee $key
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#set:lastKey
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#pushArray
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $firstItem
   loop $while-continue|0
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.const 12992
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    i32.const 0
    call $~lib/string/String#charCodeAt
    i32.ne
    if
     local.get $firstItem
     i32.eqz
     if
      local.get $this
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
      i32.const 11072
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      i32.eqz
      if
       i32.const 12096
       i32.const 11776
       i32.const 224
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     else
      i32.const 0
      local.set $firstItem
     end
     local.get $this
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   i32.const 12992
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 13024
    i32.const 11776
    i32.const 230
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popArray
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#constructor (param $this i32) (param $_str i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 133
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $_str
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#set:_str
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String (param $str i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setString (param $this i32) (param $name i32) (param $value i32)
  (local $obj i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
  local.tee $obj
  i32.store $0 offset=4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $name
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $obj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  i32.const 10976
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setString
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert (param $this i32) (param $str i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $str
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/string/String#get:length
   i32.lt_s
   if
    local.get $str
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $i
    call $~lib/string/String#charCodeAt
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 13136
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $3
     local.get $str
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $3
     call $~lib/string/String.__concat
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.const 13184
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/string/String.__concat
     i32.const 11776
     i32.const 396
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#constructor (param $this i32) (param $_bool i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 134
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $_bool
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#set:_bool
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean (param $this i32) (param $name i32) (param $value i32)
  (local $obj i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $name
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $obj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseBoolean (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/FALSE_STR
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/FALSE_STR
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean
   i32.const 1
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/TRUE_STR
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/TRUE_STR
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean
   i32.const 1
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/util/string/strtod (param $str i32) (result f64)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $sign f64)
  (local $savedPtr i32)
  (local $pointed i32)
  (local $consumed i32)
  (local $position i32)
  (local $x i64)
  (local $noDigits i32)
  (local $digit i32)
  (local $12 i32)
  (local $13 i32)
  (local $ptr|14 i32)
  (local $len|15 i32)
  (local $sign|16 i32)
  (local $magnitude i32)
  (local $code|18 i32)
  (local $digit|19 i32)
  (local $significand i64)
  (local $exp i32)
  (local $significandf f64)
  (local $n i32)
  (local $24 i32)
  (local $25 i32)
  (local $n|26 i32)
  (local $n|27 i32)
  (local $significand|28 i64)
  (local $exp|29 i32)
  (local $shift i64)
  (local $q i64)
  (local $r i64)
  (local $s i64)
  (local $b i64)
  (local $q|35 i64)
  (local $r|36 i64)
  (local $s|37 i64)
  (local $significand|38 i64)
  (local $exp|39 i32)
  (local $shift|40 i64)
  (local $a i64)
  (local $b|42 i32)
  (local $low i64)
  (local $high i64)
  (local $overflow i32)
  (local $space i32)
  (local $revspace i64)
  (local $a|48 i64)
  (local $b|49 i32)
  (local $low|50 i64)
  (local $high|51 i64)
  (local $overflow|52 i32)
  (local $space|53 i32)
  (local $revspace|54 i64)
  (local $55 i32)
  (local $56 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $55
  global.get $~lib/memory/__stack_pointer
  local.get $55
  i32.store $0
  local.get $55
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u $0
  local.set $code
  f64.const 1
  local.set $sign
  loop $while-continue|0
   local.get $len
   if (result i32)
    local.get $code
    call $~lib/util/string/isSpace
   else
    i32.const 0
   end
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  local.get $len
  i32.eqz
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 45
  i32.eq
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u $0
   local.set $code
   f64.const -1
   local.set $sign
  else
   local.get $code
   i32.const 43
   i32.eq
   if
    local.get $len
    i32.const 1
    i32.sub
    local.tee $len
    i32.eqz
    if
     f64.const nan:0x8000000000000
     local.set $56
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $56
     return
    end
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
   end
  end
  local.get $len
  i32.const 8
  i32.ge_s
  if (result i32)
   local.get $code
   i32.const 73
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $ptr
   i64.load $0
   i64.const 29555310648492105
   i64.eq
   if (result i32)
    local.get $ptr
    i64.load $0 offset=8
    i64.const 34058970405077102
    i64.eq
   else
    i32.const 0
   end
   if
    f64.const inf
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $code
  i32.const 46
  i32.ne
  if (result i32)
   local.get $code
   i32.const 48
   i32.sub
   i32.const 10
   i32.ge_u
  else
   i32.const 0
  end
  if
   f64.const nan:0x8000000000000
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  local.get $ptr
  local.set $savedPtr
  loop $while-continue|1
   local.get $code
   i32.const 48
   i32.eq
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|1
   end
  end
  local.get $len
  i32.const 0
  i32.le_s
  if
   f64.const 0
   local.get $sign
   f64.mul
   local.set $56
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $56
   return
  end
  i32.const 0
  local.set $pointed
  i32.const 0
  local.set $consumed
  i32.const 0
  local.set $position
  i64.const 0
  local.set $x
  local.get $code
  i32.const 46
  i32.eq
  if
   local.get $savedPtr
   local.get $ptr
   i32.sub
   i32.eqz
   local.set $noDigits
   local.get $ptr
   i32.const 2
   i32.add
   local.set $ptr
   local.get $len
   i32.const 1
   i32.sub
   local.set $len
   local.get $len
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   i32.const 1
   local.set $pointed
   loop $for-loop|2
    local.get $ptr
    i32.load16_u $0
    local.tee $code
    i32.const 48
    i32.eq
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $len
     local.get $position
     i32.const 1
     i32.sub
     local.set $position
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $for-loop|2
    end
   end
   local.get $len
   i32.const 0
   i32.le_s
   if
    f64.const 0
    local.get $sign
    f64.mul
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
   local.get $position
   i32.eqz
   if (result i32)
    local.get $noDigits
   else
    i32.const 0
   end
   if (result i32)
    local.get $code
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
   else
    i32.const 0
   end
   if
    f64.const nan:0x8000000000000
    local.set $56
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $56
    return
   end
  end
  local.get $code
  i32.const 48
  i32.sub
  local.set $digit
  block $for-break3
   loop $for-loop|3
    local.get $digit
    i32.const 10
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $code
     i32.const 46
     i32.eq
     if (result i32)
      local.get $pointed
      i32.eqz
     else
      i32.const 0
     end
    end
    if
     local.get $digit
     i32.const 10
     i32.lt_u
     if
      local.get $consumed
      i32.const 19
      i32.lt_s
      if (result i64)
       i64.const 10
       local.get $x
       i64.mul
       local.get $digit
       i64.extend_i32_u
       i64.add
      else
       local.get $x
       local.get $digit
       i32.eqz
       i32.eqz
       i64.extend_i32_u
       i64.or
      end
      local.set $x
      local.get $consumed
      i32.const 1
      i32.add
      local.set $consumed
     else
      local.get $consumed
      local.set $position
      i32.const 1
      local.set $pointed
     end
     local.get $len
     i32.const 1
     i32.sub
     local.tee $len
     i32.eqz
     if
      br $for-break3
     end
     local.get $ptr
     i32.const 2
     i32.add
     local.tee $ptr
     i32.load16_u $0
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     local.set $digit
     br $for-loop|3
    end
   end
  end
  local.get $pointed
  i32.eqz
  if
   local.get $consumed
   local.set $position
  end
  block $~lib/util/string/scientific|inlined.0 (result f64)
   local.get $x
   local.set $significand
   local.get $position
   i32.const 19
   local.tee $12
   local.get $consumed
   local.tee $13
   local.get $12
   local.get $13
   i32.lt_s
   select
   i32.sub
   block $~lib/util/string/parseExp|inlined.0 (result i32)
    local.get $ptr
    local.set $ptr|14
    local.get $len
    local.set $len|15
    i32.const 1
    local.set $sign|16
    i32.const 0
    local.set $magnitude
    local.get $ptr|14
    i32.load16_u $0
    local.set $code|18
    local.get $code|18
    i32.const 32
    i32.or
    i32.const 101
    i32.ne
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $len|15
    i32.const 1
    i32.sub
    local.tee $len|15
    i32.eqz
    if
     i32.const 0
     br $~lib/util/string/parseExp|inlined.0
    end
    local.get $ptr|14
    i32.const 2
    i32.add
    local.tee $ptr|14
    i32.load16_u $0
    local.set $code|18
    local.get $code|18
    i32.const 45
    i32.eq
    if
     local.get $len|15
     i32.const 1
     i32.sub
     local.tee $len|15
     i32.eqz
     if
      i32.const 0
      br $~lib/util/string/parseExp|inlined.0
     end
     local.get $ptr|14
     i32.const 2
     i32.add
     local.tee $ptr|14
     i32.load16_u $0
     local.set $code|18
     i32.const -1
     local.set $sign|16
    else
     local.get $code|18
     i32.const 43
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
     end
    end
    loop $while-continue|4
     local.get $code|18
     i32.const 48
     i32.eq
     if
      local.get $len|15
      i32.const 1
      i32.sub
      local.tee $len|15
      i32.eqz
      if
       i32.const 0
       br $~lib/util/string/parseExp|inlined.0
      end
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
      br $while-continue|4
     end
    end
    local.get $code|18
    i32.const 48
    i32.sub
    local.set $digit|19
    loop $for-loop|5
     local.get $len|15
     if (result i32)
      local.get $digit|19
      i32.const 10
      i32.lt_u
     else
      i32.const 0
     end
     if
      local.get $magnitude
      i32.const 3200
      i32.ge_s
      if
       local.get $sign|16
       i32.const 3200
       i32.mul
       br $~lib/util/string/parseExp|inlined.0
      end
      i32.const 10
      local.get $magnitude
      i32.mul
      local.get $digit|19
      i32.add
      local.set $magnitude
      local.get $ptr|14
      i32.const 2
      i32.add
      local.tee $ptr|14
      i32.load16_u $0
      local.set $code|18
      local.get $len|15
      i32.const 1
      i32.sub
      local.set $len|15
      local.get $code|18
      i32.const 48
      i32.sub
      local.set $digit|19
      br $for-loop|5
     end
    end
    local.get $sign|16
    local.get $magnitude
    i32.mul
    br $~lib/util/string/parseExp|inlined.0
   end
   i32.add
   local.set $exp
   local.get $significand
   i64.const 0
   i64.ne
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $exp
    i32.const -342
    i32.lt_s
   end
   if
    f64.const 0
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 308
   i32.gt_s
   if
    f64.const inf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $significand
   f64.convert_i64_u
   local.set $significandf
   local.get $exp
   i32.eqz
   if
    local.get $significandf
    br $~lib/util/string/scientific|inlined.0
   end
   local.get $exp
   i32.const 22
   i32.gt_s
   if (result i32)
    local.get $exp
    i32.const 22
    i32.const 15
    i32.add
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $significandf
    block $~lib/util/string/pow10|inlined.0 (result f64)
     local.get $exp
     i32.const 22
     i32.sub
     local.set $n
     i32.const 13264
     local.get $n
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     br $~lib/util/string/pow10|inlined.0
    end
    f64.mul
    local.set $significandf
    i32.const 22
    local.set $exp
   end
   local.get $significand
   i64.const 9007199254740991
   i64.le_u
   if (result i32)
    local.get $exp
    local.tee $24
    i32.const 31
    i32.shr_s
    local.tee $25
    local.get $24
    i32.add
    local.get $25
    i32.xor
    i32.const 22
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $exp
    i32.const 0
    i32.gt_s
    if
     local.get $significandf
     block $~lib/util/string/pow10|inlined.1 (result f64)
      local.get $exp
      local.set $n|26
      i32.const 13264
      local.get $n|26
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      br $~lib/util/string/pow10|inlined.1
     end
     f64.mul
     br $~lib/util/string/scientific|inlined.0
    end
    local.get $significandf
    block $~lib/util/string/pow10|inlined.2 (result f64)
     i32.const 0
     local.get $exp
     i32.sub
     local.set $n|27
     i32.const 13264
     local.get $n|27
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     br $~lib/util/string/pow10|inlined.2
    end
    f64.div
    br $~lib/util/string/scientific|inlined.0
   else
    local.get $exp
    i32.const 0
    i32.lt_s
    if
     block $~lib/util/string/scaledown|inlined.0 (result f64)
      local.get $significand
      local.set $significand|28
      local.get $exp
      local.set $exp|29
      local.get $significand|28
      i64.clz
      local.set $shift
      local.get $significand|28
      local.get $shift
      i64.shl
      local.set $significand|28
      local.get $exp|29
      i64.extend_i32_s
      local.get $shift
      i64.sub
      local.set $shift
      loop $for-loop|6
       local.get $exp|29
       i32.const -14
       i32.le_s
       if
        local.get $significand|28
        i64.const 6103515625
        i64.div_u
        local.set $q
        local.get $significand|28
        i64.const 6103515625
        i64.rem_u
        local.set $r
        local.get $q
        i64.clz
        local.set $s
        local.get $q
        local.get $s
        i64.shl
        f64.const 0.00004294967296
        local.get $r
        local.get $s
        i64.const 18
        i64.sub
        i64.shl
        f64.convert_i64_u
        f64.mul
        f64.nearest
        i64.trunc_sat_f64_u
        i64.add
        local.set $significand|28
        local.get $shift
        local.get $s
        i64.sub
        local.set $shift
        local.get $exp|29
        i32.const 14
        i32.add
        local.set $exp|29
        br $for-loop|6
       end
      end
      i32.const 5
      i32.const 0
      local.get $exp|29
      i32.sub
      call $~lib/math/ipow32
      i64.extend_i32_s
      local.set $b
      local.get $significand|28
      local.get $b
      i64.div_u
      local.set $q|35
      local.get $significand|28
      local.get $b
      i64.rem_u
      local.set $r|36
      local.get $q|35
      i64.clz
      local.set $s|37
      local.get $q|35
      local.get $s|37
      i64.shl
      local.get $r|36
      f64.convert_i64_u
      i64.reinterpret_f64
      local.get $s|37
      i64.const 52
      i64.shl
      i64.add
      f64.reinterpret_i64
      local.get $b
      f64.convert_i64_u
      f64.div
      i64.trunc_sat_f64_u
      i64.add
      local.set $significand|28
      local.get $shift
      local.get $s|37
      i64.sub
      local.set $shift
      local.get $significand|28
      f64.convert_i64_u
      local.get $shift
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaledown|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    else
     block $~lib/util/string/scaleup|inlined.0 (result f64)
      local.get $significand
      local.set $significand|38
      local.get $exp
      local.set $exp|39
      local.get $significand|38
      i64.ctz
      local.set $shift|40
      local.get $significand|38
      local.get $shift|40
      i64.shr_u
      local.set $significand|38
      local.get $shift|40
      local.get $exp|39
      i64.extend_i32_s
      i64.add
      local.set $shift|40
      local.get $shift|40
      global.set $~lib/util/string/__fixmulShift
      loop $for-loop|7
       local.get $exp|39
       i32.const 13
       i32.ge_s
       if
        block $~lib/util/string/fixmul|inlined.0 (result i64)
         local.get $significand|38
         local.set $a
         i32.const 1220703125
         local.set $b|42
         local.get $a
         i64.const 4294967295
         i64.and
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.set $low
         local.get $a
         i64.const 32
         i64.shr_u
         local.get $b|42
         i64.extend_i32_u
         i64.mul
         local.get $low
         i64.const 32
         i64.shr_u
         i64.add
         local.set $high
         local.get $high
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         local.set $overflow
         local.get $overflow
         i32.clz
         local.set $space
         i64.const 32
         local.get $space
         i64.extend_i32_u
         i64.sub
         local.set $revspace
         global.get $~lib/util/string/__fixmulShift
         local.get $revspace
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $high
         local.get $space
         i64.extend_i32_u
         i64.shl
         local.get $low
         i64.const 4294967295
         i64.and
         local.get $revspace
         i64.shr_u
         i64.or
         local.get $low
         local.get $space
         i64.extend_i32_u
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         i64.add
         br $~lib/util/string/fixmul|inlined.0
        end
        local.set $significand|38
        local.get $exp|39
        i32.const 13
        i32.sub
        local.set $exp|39
        br $for-loop|7
       end
      end
      block $~lib/util/string/fixmul|inlined.1 (result i64)
       local.get $significand|38
       local.set $a|48
       i32.const 5
       local.get $exp|39
       call $~lib/math/ipow32
       local.set $b|49
       local.get $a|48
       i64.const 4294967295
       i64.and
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.set $low|50
       local.get $a|48
       i64.const 32
       i64.shr_u
       local.get $b|49
       i64.extend_i32_u
       i64.mul
       local.get $low|50
       i64.const 32
       i64.shr_u
       i64.add
       local.set $high|51
       local.get $high|51
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       local.set $overflow|52
       local.get $overflow|52
       i32.clz
       local.set $space|53
       i64.const 32
       local.get $space|53
       i64.extend_i32_u
       i64.sub
       local.set $revspace|54
       global.get $~lib/util/string/__fixmulShift
       local.get $revspace|54
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $high|51
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       local.get $low|50
       i64.const 4294967295
       i64.and
       local.get $revspace|54
       i64.shr_u
       i64.or
       local.get $low|50
       local.get $space|53
       i64.extend_i32_u
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       i64.add
       br $~lib/util/string/fixmul|inlined.1
      end
      local.set $significand|38
      global.get $~lib/util/string/__fixmulShift
      local.set $shift|40
      local.get $significand|38
      f64.convert_i64_u
      local.get $shift|40
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
      br $~lib/util/string/scaleup|inlined.0
     end
     br $~lib/util/string/scientific|inlined.0
    end
    unreachable
   end
   unreachable
  end
  local.get $sign
  f64.copysign
  local.set $56
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $56
  return
 )
 (func $~lib/string/parseFloat (param $str i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/util/string/strtod
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setFloat (param $this i32) (param $name i32) (param $value f64)
  (local $obj i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $name
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $obj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#constructor (param $this i32) (param $_num i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 135
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $_num
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#set:_num
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setInteger (param $this i32) (param $name i32) (param $value i64)
  (local $obj i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $name
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $obj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNumber (param $this i32) (result i32)
  (local $number f64)
  (local $sign f64)
  (local $isFloat i32)
  (local $numberAsString i32)
  (local $digits i32)
  (local $charCode i32)
  (local $value f64)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  f64.const 0
  local.set $number
  f64.const 1
  local.set $sign
  i32.const 0
  local.set $isFloat
  global.get $~lib/memory/__stack_pointer
  i32.const 6144
  local.tee $numberAsString
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_MINUS
  i32.eq
  if
   f64.const -1
   local.set $sign
   global.get $~lib/memory/__stack_pointer
   local.get $numberAsString
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=12
   local.get $8
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String.fromCharCode@varargs
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $8
   call $~lib/string/String.__concat
   local.tee $numberAsString
   i32.store $0
  end
  i32.const 0
  local.set $digits
  loop $while-continue|0
   global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_0
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   i32.le_s
   if (result i32)
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_9
    i32.le_s
   else
    i32.const 0
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PERIOD
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_MINUS
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PLUS
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.eq
   end
   if (result i32)
    i32.const 1
   else
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E_LOWER
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.eq
   end
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.set $charCode
    global.get $~lib/memory/__stack_pointer
    local.get $numberAsString
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $charCode
    i32.const 1
    global.set $~argumentsLength
    i32.const 0
    call $~lib/string/String.fromCharCode@varargs
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/string/String.__concat
    local.tee $numberAsString
    i32.store $0
    local.get $charCode
    global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E
    i32.eq
    if (result i32)
     i32.const 1
    else
     local.get $charCode
     global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_E_LOWER
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $charCode
     global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PERIOD
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $charCode
     global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_PLUS
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $charCode
     global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_MINUS
     i32.eq
    end
    if
     i32.const 1
     local.set $isFloat
    else
     local.get $isFloat
     i32.eqz
     if
      local.get $charCode
      global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/CHAR_0
      i32.sub
      f64.convert_i32_s
      local.set $value
      local.get $number
      f64.const 10
      f64.mul
      local.set $number
      local.get $number
      local.get $value
      f64.add
      local.set $number
     end
     local.get $digits
     i32.const 1
     i32.add
     local.set $digits
    end
    br $while-continue|0
   end
  end
  local.get $digits
  i32.const 0
  i32.gt_s
  if
   local.get $isFloat
   if (result i32)
    i32.const 1
   else
    local.get $numberAsString
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    i32.const 13248
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/string/String.__eq
   end
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $numberAsString
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/string/parseFloat
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setFloat
   else
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $number
    local.get $sign
    f64.mul
    i64.trunc_sat_f64_s
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setInteger
   end
   i32.const 1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  i32.const 0
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setNull (param $this i32) (param $name i32)
  (local $obj i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Null
  local.tee $obj
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $name
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNull (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
  global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/NULL_STR
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   global.get $~lib/@devcycle/assemblyscript-json/assembly/decoder/NULL_STR
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#get:lastKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setNull
   i32.const 1
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseObject
  local.tee $1
  if (result i32)
   local.get $1
  else
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseArray
  end
  local.tee $2
  if (result i32)
   local.get $2
  else
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseString
  end
  local.tee $3
  if (result i32)
   local.get $3
  else
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseBoolean
  end
  local.tee $4
  if (result i32)
   local.get $4
  else
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNumber
  end
  local.tee $5
  if (result i32)
   local.get $5
  else
   local.get $this
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNull
  end
  local.set $result
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
  local.get $result
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize (param $this i32) (param $buffer i32) (param $decoderState i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $decoderState
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $decoderState
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:state
  else
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   local.get $buffer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#set:state
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 13472
   i32.const 11776
   i32.const 144
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.gt_s
   if
    local.get $this
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:stack
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#pop
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String> (param $str i32) (result i32)
  (local $arr i32)
  (local $res i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $arr
  i32.store $0 offset=4
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $arr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $res
  i32.store $0 offset=12
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  local.get $res
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj (param $this i32) (param $key i32) (result i32)
  (local $jsonValue i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $jsonValue
  i32.store $0 offset=8
  local.get $jsonValue
  i32.const 0
  i32.ne
  if (result i32)
   local.get $jsonValue
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 11968
    i32.const 418
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/jsonHelpers/isFlatJSONObj (param $json i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $value i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $json
  i32.eqz
  if
   i32.const 1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $json
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $jsonObj
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $key
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=16
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $value
    i32.store $0 offset=20
    local.get $value
    if (result i32)
     local.get $value
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     local.tee $6
     if (result i32)
      local.get $6
     else
      local.get $value
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=4
      local.get $7
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr
     end
    else
     i32.const 0
    end
    if
     i32.const 0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/dvcUser/DVCUser#constructor (param $this i32) (param $user_id i32) (param $email i32) (param $name i32) (param $language i32) (param $country i32) (param $appBuild f64) (param $appVersion i32) (param $deviceModel i32) (param $customData i32) (param $privateCustomData i32) (result i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.const 107
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $user_id
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:user_id
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $email
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:email
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $name
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:name
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $language
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:language
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $country
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:country
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $appVersion
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:appVersion
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $appBuild
  call $assembly/types/dvcUser/DVCUser#set:appBuild
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $deviceModel
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:deviceModel
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $customData
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:customData
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $privateCustomData
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/dvcUser/DVCUser#set:privateCustomData
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString (param $this i32) (param $key i32) (result i32)
  (local $jsonValue i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $jsonValue
  i32.store $0 offset=8
  local.get $jsonValue
  i32.const 0
  i32.ne
  if (result i32)
   local.get $jsonValue
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 11968
    i32.const 370
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $this i32) (param $separator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $this
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#get:length
  local.get $separator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/util/string/joinStringArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $str i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $str
  i32.store $0 offset=8
  local.get $str
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $jsonObj
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $4
   i32.store $0 offset=16
   i32.const 14240
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 14240
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 3
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 14240
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 6144
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 43
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  else
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSONOptional (param $jsonObj i32) (param $key i32) (result i32)
  (local $str i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $str
  i32.store $0 offset=8
  local.get $str
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  else
   local.get $str
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf (param $this i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#get:_num
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf (param $this i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#get:_num
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONOptional (param $jsonObj i32) (param $key i32) (param $defaultValue f64) (result f64)
  (local $num i32)
  (local $4 i32)
  (local $5 i32)
  (local $int i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $key
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $num
  i32.store $0 offset=8
  local.get $num
  i32.eqz
  if
   local.get $defaultValue
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $num
  if (result i32)
   local.get $num
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $num
   local.tee $4
   i32.store $0 offset=12
   local.get $4
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
   if (result i32)
    local.get $4
   else
    i32.const 7328
    i32.const 14288
    i32.const 141
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  else
   local.get $num
   if (result i32)
    local.get $num
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $num
    local.tee $5
    i32.store $0 offset=16
    local.get $5
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
    if (result i32)
     local.get $5
    else
     i32.const 7328
     i32.const 14288
     i32.const 143
     i32.const 21
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $int
    i32.store $0 offset=20
    local.get $int
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    f64.convert_i64_s
    local.set $10
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $10
    return
   else
    global.get $~lib/memory/__stack_pointer
    local.get $num
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
    local.tee $7
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $key
    local.tee $8
    i32.store $0 offset=28
    i32.const 14624
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    i32.const 1
    local.get $7
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=32
    local.get $9
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 14624
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    i32.const 3
    local.get $8
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=32
    local.get $9
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 14624
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    i32.const 6144
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 14288
    i32.const 146
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/types/dvcUser/DVCUser.fromJSONObj (param $user i32) (result i32)
  (local $customData i32)
  (local $privateCustomData i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 784
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $customData
  i32.store $0 offset=8
  local.get $customData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 13728
   i32.const 13648
   i32.const 149
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 13872
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $privateCustomData
  i32.store $0 offset=12
  local.get $privateCustomData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 13936
   i32.const 13648
   i32.const 154
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 416
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 464
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 14384
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 14416
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=24
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 528
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=28
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 14464
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  f64.const nan:0x8000000000000
  call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 688
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  i32.const 736
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  local.get $customData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  local.get $privateCustomData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=44
  local.get $3
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcUser/DVCUser.fromJSONString (param $userStr i32) (result i32)
  (local $str i32)
  (local $userJSON i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $userStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.0
  end
  local.tee $userJSON
  i32.store $0 offset=8
  local.get $userJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 13536
   i32.const 13648
   i32.const 136
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $userJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 13648
   i32.const 137
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcUser/DVCUser.fromJSONObj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString (param $userStr i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $userStr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcUser/DVCUser.fromJSONString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/managers/clientCustomDataManager/_setClientCustomData (param $sdkKey i32) (param $clientCustomData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $clientCustomData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/clientCustomDataManager/_getClientCustomData (param $sdkKey i32) (result i32)
  (local $clientCustomData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#has
  if
   global.get $assembly/managers/clientCustomDataManager/_clientCustomData
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $sdkKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $clientCustomData
  i32.store $0 offset=8
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $clientCustomData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/managers/clientCustomDataManager/_setClientCustomData
  local.get $clientCustomData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 144
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 140
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 142
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser#get:_combinedCustomData
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/jsonHelpers/getValueFromJSONOptional (param $jsonObj i32) (param $key i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $value
  i32.store $0 offset=8
  local.get $value
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/bucketing/_getUserValueForBucketingKey (param $user i32) (param $target i32) (result i32)
  (local $bucketingValue i32)
  (local $customData i32)
  (local $customDataValue i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $target
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/targetV2/TargetV2#get:bucketingKey
  if (result i32)
   local.get $target
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   call $assembly/types/targetV2/TargetV2#get:bucketingKey
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 416
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/bucketing/bucketing/DEFAULT_BUCKETING_VALUE
   local.tee $bucketingValue
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $user
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData
   local.tee $customData
   i32.store $0 offset=16
   local.get $customData
   if
    global.get $~lib/memory/__stack_pointer
    local.get $customData
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $target
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $assembly/types/targetV2/TargetV2#get:bucketingKey
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/helpers/jsonHelpers/getValueFromJSONOptional
    local.tee $customDataValue
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $customDataValue
    if (result i32)
     local.get $customDataValue
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
    else
     global.get $assembly/bucketing/bucketing/DEFAULT_BUCKETING_VALUE
    end
    local.tee $bucketingValue
    i32.store $0 offset=12
   end
   local.get $bucketingValue
   drop
   i32.const 14672
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 14672
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/string/String.__ne
   if (result i32)
    local.get $bucketingValue
    drop
    i32.const 14672
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    i32.const 14704
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/string/String.__ne
   else
    i32.const 0
   end
   if (result i32)
    local.get $bucketingValue
    drop
    i32.const 14672
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    i32.const 14736
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/string/String.__ne
   else
    i32.const 0
   end
   if
    global.get $assembly/bucketing/bucketing/DEFAULT_BUCKETING_VALUE
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   else
    local.get $bucketingValue
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $~lib/string/String#toString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
   unreachable
  end
  local.get $user
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/target/RolloutStage>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/lodashHelpers/last<assembly/types/target/RolloutStage> (param $array i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $array
  if (result i32)
   local.get $array
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if (result i32)
   local.get $array
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $array
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<assembly/types/target/RolloutStage>#__get
  else
   i32.const 0
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/lodashHelpers/first<assembly/types/target/RolloutStage> (param $array i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $array
  if (result i32)
   local.get $array
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if (result i32)
   local.get $array
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<assembly/types/target/RolloutStage>#__get
  else
   i32.const 0
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/string/String> (param $val i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $val
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/string/String>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#padStart (param $this i32) (param $length i32) (param $pad i32) (result i32)
  (local $thisSize i32)
  (local $targetSize i32)
  (local $padSize i32)
  (local $prependSize i32)
  (local $out i32)
  (local $repeatCount i32)
  (local $restBase i32)
  (local $restSize i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $length
  i32.const 1
  i32.shl
  local.set $targetSize
  local.get $pad
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $padSize
  local.get $targetSize
  local.get $thisSize
  i32.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $padSize
   i32.eqz
  end
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $targetSize
  local.get $thisSize
  i32.sub
  local.set $prependSize
  global.get $~lib/memory/__stack_pointer
  local.get $targetSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $prependSize
  local.get $padSize
  i32.gt_u
  if
   local.get $prependSize
   i32.const 2
   i32.sub
   local.get $padSize
   i32.div_u
   local.set $repeatCount
   local.get $repeatCount
   local.get $padSize
   i32.mul
   local.set $restBase
   local.get $prependSize
   local.get $restBase
   i32.sub
   local.set $restSize
   local.get $out
   local.get $pad
   local.get $padSize
   local.get $repeatCount
   call $~lib/memory/memory.repeat
   local.get $out
   local.get $restBase
   i32.add
   local.get $pad
   local.get $restSize
   memory.copy $0 $0
  else
   local.get $out
   local.get $pad
   local.get $prependSize
   memory.copy $0 $0
  end
  local.get $out
  local.get $prependSize
  i32.add
  local.get $this
  local.get $thisSize
  memory.copy $0 $0
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/date/stringify (param $value i32) (param $padding i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $value
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $padding
  i32.const 7808
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#padStart
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/date/Date#getUTCHours (param $this i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $m i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.0 (result i64)
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $a
   i32.const 86400000
   i64.extend_i32_s
   local.set $b
   local.get $a
   local.get $b
   i64.rem_s
   local.set $m
   local.get $m
   local.get $m
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $b
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.0
  end
  i32.wrap_i64
  i32.const 3600000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#getUTCMinutes (param $this i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $m i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.1 (result i64)
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $a
   i32.const 3600000
   i64.extend_i32_s
   local.set $b
   local.get $a
   local.get $b
   i64.rem_s
   local.set $m
   local.get $m
   local.get $m
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $b
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.1
  end
  i32.wrap_i64
  i32.const 60000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#getUTCSeconds (param $this i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $m i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.2 (result i64)
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $a
   i32.const 60000
   i64.extend_i32_s
   local.set $b
   local.get $a
   local.get $b
   i64.rem_s
   local.set $m
   local.get $m
   local.get $m
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $b
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.2
  end
  i32.wrap_i64
  i32.const 1000
  i32.div_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#getUTCMilliseconds (param $this i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $m i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $~lib/date/euclidRem<i64>|inlined.3 (result i64)
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/date/Date#get:epochMillis
   local.set $a
   i32.const 1000
   i64.extend_i32_s
   local.set $b
   local.get $a
   local.get $b
   i64.rem_s
   local.set $m
   local.get $m
   local.get $m
   i64.const 0
   i64.lt_s
   if (result i64)
    local.get $b
   else
    i64.const 0
   end
   i64.add
   br $~lib/date/euclidRem<i64>|inlined.3
  end
  i32.wrap_i64
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/date/Date#toISOString (param $this i32) (result i32)
  (local $yr i32)
  (local $isNeg i32)
  (local $3 i32)
  (local $4 i32)
  (local $year i32)
  (local $month i32)
  (local $day i32)
  (local $hours i32)
  (local $mins i32)
  (local $secs i32)
  (local $ms i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 68
  memory.fill $0
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#get:year
  local.set $yr
  local.get $yr
  i32.const 0
  i32.lt_s
  local.set $isNeg
  global.get $~lib/memory/__stack_pointer
  local.get $isNeg
  if (result i32)
   i32.const 1
  else
   local.get $yr
   i32.const 10000
   i32.ge_s
  end
  if (result i32)
   local.get $isNeg
   if (result i32)
    i32.const 14960
   else
    i32.const 14992
   end
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0
   local.get $19
   local.get $yr
   local.tee $3
   i32.const 31
   i32.shr_s
   local.tee $4
   local.get $3
   i32.add
   local.get $4
   i32.xor
   i32.const 6
   call $~lib/date/stringify
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=4
   local.get $19
   call $~lib/string/String.__concat
  else
   local.get $yr
   i32.const 4
   call $~lib/date/stringify
  end
  local.tee $year
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#get:month
  i32.const 2
  call $~lib/date/stringify
  local.tee $month
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#get:day
  i32.const 2
  call $~lib/date/stringify
  local.tee $day
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#getUTCHours
  i32.const 2
  call $~lib/date/stringify
  local.tee $hours
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#getUTCMinutes
  i32.const 2
  call $~lib/date/stringify
  local.tee $mins
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#getUTCSeconds
  i32.const 2
  call $~lib/date/stringify
  local.tee $secs
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/date/Date#getUTCMilliseconds
  i32.const 3
  call $~lib/date/stringify
  local.tee $ms
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $year
  local.tee $12
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $month
  local.tee $13
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $day
  local.tee $14
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $hours
  local.tee $15
  i32.store $0 offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $mins
  local.tee $16
  i32.store $0 offset=52
  global.get $~lib/memory/__stack_pointer
  local.get $secs
  local.tee $17
  i32.store $0 offset=56
  global.get $~lib/memory/__stack_pointer
  local.get $ms
  local.tee $18
  i32.store $0 offset=60
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 0
  local.get $12
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 2
  local.get $13
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 4
  local.get $14
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 6
  local.get $15
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 8
  local.get $16
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 10
  local.get $17
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 12
  local.get $18
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=64
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 15088
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 6144
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0 offset=4
  local.get $19
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
  return
 )
 (func $~lib/array/Array<~lib/string/String>#indexOf (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $value
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    call $~lib/string/String.__eq
    if
     local.get $fromIndex
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<~lib/string/String>#includes (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $fromIndex
  call $~lib/array/Array<~lib/string/String>#indexOf
  i32.const 0
  i32.ge_s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/console/console.log (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/isValidString (param $jsonObj i32) (param $key i32) (param $validStrings i32) (param $shouldThrow i32) (result i32)
  (local $value i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $key
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $value
  i32.store $0 offset=8
  local.get $validStrings
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#includes
  i32.eqz
  if
   local.get $shouldThrow
   if
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.tee $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $key
    local.tee $6
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $validStrings
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 15392
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/array/Array<~lib/string/String>#join
    local.tee $7
    i32.store $0 offset=20
    i32.const 15344
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 1
    local.get $5
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 15344
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 3
    local.get $6
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 15344
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 5
    local.get $7
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 15344
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 6144
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 14288
    i32.const 84
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.tee $8
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $key
    local.tee $9
    i32.store $0 offset=32
    i32.const 15616
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 1
    local.get $8
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 15616
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 3
    local.get $9
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 15616
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 6144
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    call $~lib/console/console.log
   end
  end
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/string/String#substring@varargs (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $start
  local.get $end
  call $~lib/string/String#substring
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/string/strtol<i32> (param $str i32) (param $radix i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $sign i32)
  (local $6 i32)
  (local $num i32)
  (local $initial i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   i32.const 0
   drop
   i32.const 0
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u $0
  local.set $code
  loop $while-continue|0
   local.get $code
   call $~lib/util/string/isSpace
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  i32.const 1
  local.set $sign
  local.get $code
  i32.const 45
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 43
   i32.eq
  end
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    i32.const 0
    drop
    i32.const 0
    local.set $10
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $10
    return
   end
   local.get $code
   i32.const 45
   i32.eq
   if
    i32.const -1
    local.set $sign
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u $0
   local.set $code
  end
  local.get $radix
  if
   local.get $radix
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $radix
    i32.const 36
    i32.gt_s
   end
   if
    i32.const 0
    drop
    i32.const 0
    local.set $10
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $10
    return
   end
   local.get $radix
   i32.const 16
   i32.eq
   if
    local.get $len
    i32.const 2
    i32.gt_s
    if (result i32)
     local.get $code
     i32.const 48
     i32.eq
    else
     i32.const 0
    end
    if (result i32)
     local.get $ptr
     i32.load16_u $0 offset=2
     i32.const 32
     i32.or
     i32.const 120
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
    end
   end
  else
   local.get $code
   i32.const 48
   i32.eq
   if (result i32)
    local.get $len
    i32.const 2
    i32.gt_s
   else
    i32.const 0
   end
   if
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $ptr
        i32.load16_u $0 offset=2
        i32.const 32
        i32.or
        local.set $6
        local.get $6
        i32.const 98
        i32.eq
        br_if $case0|1
        local.get $6
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $6
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $ptr
       i32.const 4
       i32.add
       local.set $ptr
       local.get $len
       i32.const 2
       i32.sub
       local.set $len
       i32.const 2
       local.set $radix
       br $break|1
      end
      local.get $ptr
      i32.const 4
      i32.add
      local.set $ptr
      local.get $len
      i32.const 2
      i32.sub
      local.set $len
      i32.const 8
      local.set $radix
      br $break|1
     end
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
     i32.const 16
     local.set $radix
     br $break|1
    end
   end
   local.get $radix
   i32.eqz
   if
    i32.const 10
    local.set $radix
   end
  end
  i32.const 0
  local.set $num
  local.get $len
  i32.const 1
  i32.sub
  local.set $initial
  block $while-break|2
   loop $while-continue|2
    local.get $len
    local.tee $9
    i32.const 1
    i32.sub
    local.set $len
    local.get $9
    if
     local.get $ptr
     i32.load16_u $0
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if
      local.get $code
      i32.const 48
      i32.sub
      local.set $code
     else
      local.get $code
      i32.const 65
      i32.sub
      i32.const 90
      i32.const 65
      i32.sub
      i32.le_u
      if
       local.get $code
       i32.const 65
       i32.const 10
       i32.sub
       i32.sub
       local.set $code
      else
       local.get $code
       i32.const 97
       i32.sub
       i32.const 122
       i32.const 97
       i32.sub
       i32.le_u
       if
        local.get $code
        i32.const 97
        i32.const 10
        i32.sub
        i32.sub
        local.set $code
       end
      end
     end
     local.get $code
     local.get $radix
     i32.ge_u
     if
      local.get $initial
      local.get $len
      i32.eq
      if
       i32.const 0
       drop
       i32.const 0
       local.set $10
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $10
       return
      end
      br $while-break|2
     end
     local.get $num
     local.get $radix
     i32.mul
     local.get $code
     i32.add
     local.set $num
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $while-continue|2
    end
   end
  end
  local.get $sign
  local.get $num
  i32.mul
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/number/I32.parseInt (param $value i32) (param $radix i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $radix
  call $~lib/util/string/strtol<i32>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/date/Date.fromString (param $dateTimeString i32) (result i32)
  (local $hour i32)
  (local $min i32)
  (local $sec i32)
  (local $ms i32)
  (local $dateString i32)
  (local $posT i32)
  (local $timeString i32)
  (local $timeParts i32)
  (local $len i32)
  (local $secAndMs i32)
  (local $posDot i32)
  (local $parts i32)
  (local $year i32)
  (local $month i32)
  (local $day i32)
  (local $len|16 i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $dateTimeString
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  call $~lib/string/String#get:length
  i32.eqz
  if
   i32.const 11312
   i32.const 11360
   i32.const 50
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $hour
  i32.const 0
  local.set $min
  i32.const 0
  local.set $sec
  i32.const 0
  local.set $ms
  global.get $~lib/memory/__stack_pointer
  local.get $dateTimeString
  local.tee $dateString
  i32.store $0 offset=4
  local.get $dateTimeString
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  i32.const 15024
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0 offset=8
  local.get $17
  i32.const 0
  call $~lib/string/String#indexOf
  local.set $posT
  local.get $posT
  i32.const -1
  i32.xor
  if
   global.get $~lib/memory/__stack_pointer
   local.get $dateTimeString
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   i32.const 0
   local.get $posT
   call $~lib/string/String#substring
   local.tee $dateString
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $dateTimeString
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   local.get $posT
   i32.const 1
   i32.add
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String#substring@varargs
   local.tee $timeString
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $timeString
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   i32.const 12800
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0 offset=8
   local.get $17
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/string/String#split@varargs
   local.tee $timeParts
   i32.store $0 offset=16
   local.get $timeParts
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   call $~lib/array/Array<~lib/string/String>#get:length
   local.set $len
   local.get $len
   i32.const 1
   i32.le_s
   if
    i32.const 11312
    i32.const 11360
    i32.const 67
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $timeParts
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0 offset=8
   local.get $17
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#__get
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   i32.const 0
   call $~lib/number/I32.parseInt
   local.set $hour
   local.get $timeParts
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0 offset=8
   local.get $17
   i32.const 1
   call $~lib/array/Array<~lib/string/String>#__get
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   i32.const 0
   call $~lib/number/I32.parseInt
   local.set $min
   local.get $len
   i32.const 3
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $timeParts
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store $0
    local.get $17
    i32.const 2
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $secAndMs
    i32.store $0 offset=20
    local.get $secAndMs
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store $0
    local.get $17
    i32.const 6064
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store $0 offset=8
    local.get $17
    i32.const 0
    call $~lib/string/String#indexOf
    local.set $posDot
    local.get $posDot
    i32.const -1
    i32.xor
    if
     local.get $secAndMs
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store $0 offset=8
     local.get $17
     i32.const 0
     local.get $posDot
     call $~lib/string/String#substring
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store $0
     local.get $17
     i32.const 0
     call $~lib/number/I32.parseInt
     local.set $sec
     local.get $secAndMs
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store $0 offset=8
     local.get $17
     local.get $posDot
     i32.const 1
     i32.add
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     call $~lib/string/String#substring@varargs
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store $0
     local.get $17
     i32.const 0
     call $~lib/number/I32.parseInt
     local.set $ms
    else
     local.get $secAndMs
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store $0
     local.get $17
     i32.const 0
     call $~lib/number/I32.parseInt
     local.set $sec
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $dateString
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  i32.const 14960
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0 offset=8
  local.get $17
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String#split@varargs
  local.tee $parts
  i32.store $0 offset=24
  local.get $parts
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0 offset=8
  local.get $17
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#__get
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  i32.const 0
  call $~lib/number/I32.parseInt
  local.set $year
  i32.const 1
  local.set $month
  i32.const 1
  local.set $day
  local.get $parts
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  call $~lib/array/Array<~lib/string/String>#get:length
  local.set $len|16
  local.get $len|16
  i32.const 2
  i32.ge_s
  if
   local.get $parts
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0 offset=8
   local.get $17
   i32.const 1
   call $~lib/array/Array<~lib/string/String>#__get
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store $0
   local.get $17
   i32.const 0
   call $~lib/number/I32.parseInt
   local.set $month
   local.get $len|16
   i32.const 3
   i32.ge_s
   if
    local.get $parts
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store $0 offset=8
    local.get $17
    i32.const 2
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store $0
    local.get $17
    i32.const 0
    call $~lib/number/I32.parseInt
    local.set $day
   end
  end
  i32.const 0
  local.get $year
  local.get $month
  local.get $day
  local.get $hour
  local.get $min
  local.get $sec
  local.get $ms
  call $~lib/date/epochMillis
  call $~lib/date/Date#constructor
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
  return
 )
 (func $assembly/helpers/jsonHelpers/getDateFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $dateStr i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $dateStr
  i32.store $0 offset=8
  local.get $dateStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/date/Date.fromString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONValue (param $jsonValue i32) (result f64)
  (local $1 i32)
  (local $float i32)
  (local $3 i32)
  (local $int i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonValue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
   if (result i32)
    local.get $1
   else
    i32.const 7328
    i32.const 14288
    i32.const 179
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $float
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonValue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 14288
    i32.const 180
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $int
  i32.store $0 offset=16
  local.get $float
  i32.eqz
  if (result i32)
   local.get $int
   i32.eqz
  else
   i32.const 0
  end
  if
   f64.const nan:0x8000000000000
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $float
  if (result f64)
   local.get $float
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
  else
   local.get $int
   if (result f64)
    local.get $int
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    f64.convert_i64_s
   else
    f64.const nan:0x8000000000000
   end
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONObj (param $jsonObj i32) (param $key i32) (result f64)
  (local $value i32)
  (local $num f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $value
  i32.store $0 offset=8
  local.get $value
  if (result f64)
   local.get $value
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  else
   f64.const nan:0x8000000000000
  end
  local.set $num
  local.get $num
  local.get $num
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $num
   i32.const 0
   call $~lib/number/F64#toString
   local.tee $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $5
   i32.store $0 offset=16
   i32.const 15664
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 1
   local.get $4
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=20
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 15664
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 3
   local.get $5
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=20
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 15664
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 6144
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 131
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $num
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/target/RolloutStage#constructor (param $this i32) (param $stage i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 89
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/RolloutStage#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/RolloutStage#set:date
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f64.const 0
  call $assembly/types/target/RolloutStage#set:percentage
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $stage
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/target/validRolloutStages
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/RolloutStage#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $stage
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 14928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/RolloutStage#set:date
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $stage
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 14880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/helpers/jsonHelpers/getF64FromJSONObj
  call $assembly/types/target/RolloutStage#set:percentage
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/bucketing/getCurrentRolloutPercentage (param $rollout i32) (param $currentDate i32) (result f64)
  (local $start f64)
  (local $this i32)
  (local $startDateTime i64)
  (local $this|5 i32)
  (local $currentDateTime i64)
  (local $stages i32)
  (local $8 i32)
  (local $9 i32)
  (local $currentStages i32)
  (local $11 i32)
  (local $12 i32)
  (local $nextStages i32)
  (local $i i32)
  (local $stage i32)
  (local $this|16 i32)
  (local $stageTime i64)
  (local $_currentStage i32)
  (local $nextStage i32)
  (local $currentStage i32)
  (local $jsonObj i32)
  (local $this|22 i32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $currentDatePercentage f64)
  (local $26 i32)
  (local $27 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  local.get $rollout
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/types/target/Rollout#get:startPercentage
  local.set $start
  block $~lib/date/Date#getTime|inlined.0 (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $rollout
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $assembly/types/target/Rollout#get:startDate
   local.tee $this
   i32.store $0 offset=4
   local.get $this
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $~lib/date/Date#get:epochMillis
   br $~lib/date/Date#getTime|inlined.0
  end
  local.set $startDateTime
  block $~lib/date/Date#getTime|inlined.1 (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $currentDate
   local.tee $this|5
   i32.store $0 offset=8
   local.get $this|5
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $~lib/date/Date#get:epochMillis
   br $~lib/date/Date#getTime|inlined.1
  end
  local.set $currentDateTime
  local.get $rollout
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=16
  local.get $26
  call $assembly/types/target/Rollout#get:type
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  i32.const 1888
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=12
  local.get $26
  call $~lib/string/String.__eq
  if
   local.get $currentDateTime
   local.get $startDateTime
   i64.ge_s
   if (result f64)
    f64.const 1
   else
    f64.const 0
   end
   local.set $27
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $27
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $rollout
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/types/target/Rollout#get:stages
  local.tee $stages
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 90
  i32.const 14784
  call $~lib/rt/__newArray
  local.tee $currentStages
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 90
  i32.const 14816
  call $~lib/rt/__newArray
  local.tee $nextStages
  i32.store $0 offset=28
  local.get $stages
  if
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $stages
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0
    local.get $26
    call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $stages
     local.set $26
     global.get $~lib/memory/__stack_pointer
     local.get $26
     i32.store $0
     local.get $26
     local.get $i
     call $~lib/array/Array<assembly/types/target/RolloutStage>#__get
     local.tee $stage
     i32.store $0 offset=32
     block $~lib/date/Date#getTime|inlined.2 (result i64)
      global.get $~lib/memory/__stack_pointer
      local.get $stage
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0
      local.get $26
      call $assembly/types/target/RolloutStage#get:date
      local.tee $this|16
      i32.store $0 offset=36
      local.get $this|16
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0
      local.get $26
      call $~lib/date/Date#get:epochMillis
      br $~lib/date/Date#getTime|inlined.2
     end
     local.set $stageTime
     local.get $stageTime
     local.get $currentDateTime
     i64.le_s
     if
      local.get $currentStages
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0
      local.get $26
      local.get $stage
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0 offset=12
      local.get $26
      call $~lib/array/Array<assembly/types/target/RolloutStage>#push
      drop
     else
      local.get $nextStages
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0
      local.get $26
      local.get $stage
      local.set $26
      global.get $~lib/memory/__stack_pointer
      local.get $26
      i32.store $0 offset=12
      local.get $26
      call $~lib/array/Array<assembly/types/target/RolloutStage>#push
      drop
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $currentStages
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/helpers/lodashHelpers/last<assembly/types/target/RolloutStage>
  local.tee $_currentStage
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $nextStages
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/helpers/lodashHelpers/first<assembly/types/target/RolloutStage>
  local.tee $nextStage
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $_currentStage
  local.tee $currentStage
  i32.store $0 offset=48
  local.get $_currentStage
  i32.eqz
  if (result i32)
   local.get $startDateTime
   local.get $currentDateTime
   i64.lt_s
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $jsonObj
   i32.store $0 offset=52
   local.get $jsonObj
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   i32.const 14848
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=12
   local.get $26
   i32.const 2144
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=16
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
   local.get $jsonObj
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   i32.const 14880
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=12
   local.get $26
   local.get $start
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
   local.get $jsonObj
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   i32.const 14928
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=12
   local.get $26
   local.get $rollout
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=60
   local.get $26
   call $assembly/types/target/Rollout#get:startDate
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=56
   local.get $26
   call $~lib/date/Date#toISOString
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=16
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $jsonObj
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=12
   local.get $26
   call $assembly/types/target/RolloutStage#constructor
   local.tee $currentStage
   i32.store $0 offset=48
  end
  local.get $currentStage
  i32.eqz
  if
   f64.const 0
   local.set $27
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $27
   return
  end
  local.get $nextStage
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $nextStage
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=16
   local.get $26
   call $assembly/types/target/RolloutStage#get:type
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   i32.const 2144
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=12
   local.get $26
   call $~lib/string/String.__eq
  end
  if
   local.get $currentStage
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $assembly/types/target/RolloutStage#get:percentage
   local.set $27
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $27
   return
  end
  local.get $currentDateTime
  block $~lib/date/Date#getTime|inlined.3 (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $currentStage
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $assembly/types/target/RolloutStage#get:date
   local.tee $this|22
   i32.store $0 offset=64
   local.get $this|22
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $~lib/date/Date#get:epochMillis
   br $~lib/date/Date#getTime|inlined.3
  end
  i64.sub
  f64.convert_i64_s
  block $~lib/date/Date#getTime|inlined.4 (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $nextStage
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $assembly/types/target/RolloutStage#get:date
   local.tee $this|23
   i32.store $0 offset=68
   local.get $this|23
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $~lib/date/Date#get:epochMillis
   br $~lib/date/Date#getTime|inlined.4
  end
  block $~lib/date/Date#getTime|inlined.5 (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $currentStage
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $assembly/types/target/RolloutStage#get:date
   local.tee $this|24
   i32.store $0 offset=72
   local.get $this|24
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0
   local.get $26
   call $~lib/date/Date#get:epochMillis
   br $~lib/date/Date#getTime|inlined.5
  end
  i64.sub
  f64.convert_i64_s
  f64.div
  local.set $currentDatePercentage
  local.get $currentDatePercentage
  f64.const 0
  f64.eq
  if
   f64.const 0
   local.set $27
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $27
   return
  end
  local.get $currentStage
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/types/target/RolloutStage#get:percentage
  local.get $nextStage
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/types/target/RolloutStage#get:percentage
  local.get $currentStage
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0
  local.get $26
  call $assembly/types/target/RolloutStage#get:percentage
  f64.sub
  f64.add
  local.get $currentDatePercentage
  f64.mul
  local.set $27
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $27
  return
 )
 (func $assembly/bucketing/bucketing/_doesUserPassRollout (param $rollout i32) (param $boundedHash f64) (result i32)
  (local $rolloutPercentage f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $rollout
  i32.eqz
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $rollout
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  block $~lib/date/Date.now|inlined.2 (result i64)
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   br $~lib/date/Date.now|inlined.2
  end
  call $~lib/date/Date#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/bucketing/bucketing/getCurrentRolloutPercentage
  local.set $rolloutPercentage
  local.get $rolloutPercentage
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  i32.eqz
  if (result i32)
   local.get $boundedHash
   local.get $rolloutPercentage
   f64.le
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#constructor (param $this i32) (param $result i32) (param $reasonDetails i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 147
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/bucketing/segmentation/SegmentationResult#set:result
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/bucketing/segmentation/SegmentationResult#set:reasonDetails
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $result
  call $assembly/bucketing/segmentation/SegmentationResult#set:result
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $reasonDetails
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/bucketing/segmentation/SegmentationResult#set:reasonDetails
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#get:_arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/bucketing/segmentation/getFilterAudiences~anonymous|0 (param $accumulator i32) (param $audience i32) (param $$2 i32) (param $$3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $audience
  i32.const 0
  i32.ne
  if
   local.get $accumulator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $audience
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#push
   drop
  end
  local.get $accumulator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $initialValue
  local.tee $acc
  i32.store $0
  i32.const 0
  local.set $i
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $acc
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $i
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.tee $acc
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/bucketing/segmentation/getFilterAudiences (param $filter i32) (result i32)
  (local $_audiences i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/AudienceMatchFilter#get:_audiences
  local.tee $_audiences
  i32.store $0 offset=4
  local.get $_audiences
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 16944
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 0
  i32.const 2
  i32.const 129
  i32.const 16976
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/segmentation/getFilterAudiencesAsStrings~anonymous|0 (param $accumulator i32) (param $audience i32) (param $$2 i32) (param $$3 i32) (result i32)
  (local $4 i32)
  (local $str i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $audience
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $audience
   local.tee $4
   i32.store $0 offset=4
   local.get $4
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
   if (result i32)
    local.get $4
   else
    i32.const 7328
    i32.const 16848
    i32.const 476
    i32.const 41
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $str
  i32.store $0 offset=8
  local.get $str
  if
   local.get $accumulator
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=16
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $accumulator
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/string/String>> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $initialValue
  local.tee $acc
  i32.store $0
  i32.const 0
  local.set $i
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $acc
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $i
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.tee $acc
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/bucketing/segmentation/getFilterAudiencesAsStrings (param $filter i32) (result i32)
  (local $jsonAudiences i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/bucketing/segmentation/getFilterAudiences
  local.tee $jsonAudiences
  i32.store $0 offset=4
  local.get $jsonAudiences
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 17008
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 17040
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/string/String>>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/segmentation/filterForAudienceMatch (param $filter i32) (param $configAudiences i32) (param $user i32) (param $clientCustomData i32) (result i32)
  (local $audiences i32)
  (local $comparator i32)
  (local $i i32)
  (local $audience i32)
  (local $result i32)
  (local $matchResult i32)
  (local $10 i32)
  (local $reasonDetails i32)
  (local $matchResult|12 i32)
  (local $reasonDetails|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  call $assembly/bucketing/segmentation/getFilterAudiencesAsStrings
  local.tee $audiences
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  call $assembly/types/target/AudienceMatchFilter#get:comparator
  local.tee $comparator
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $audiences
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    local.get $configAudiences
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    local.get $audiences
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#has
    i32.eqz
    if
     i32.const 17072
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     call $~lib/console/console.log
     i32.const 0
     i32.const 0
     i32.const 0
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 48
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $configAudiences
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    local.get $audiences
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get
    local.tee $audience
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $audience
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=28
    local.get $14
    call $assembly/types/target/Audience#get:filters
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    local.get $configAudiences
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    local.get $user
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    local.get $clientCustomData
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=24
    local.get $14
    call $assembly/bucketing/segmentation/_evaluateOperator
    local.tee $result
    i32.store $0 offset=32
    local.get $result
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    call $assembly/bucketing/segmentation/SegmentationResult#get:result
    if
     local.get $comparator
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     i32.const 944
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=12
     local.get $14
     call $~lib/string/String.__eq
     local.set $matchResult
     global.get $~lib/memory/__stack_pointer
     local.get $matchResult
     if (result i32)
      global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.AUDIENCE_MATCH
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0
      local.get $14
      local.get $result
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=16
      local.get $14
      call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
      if (result i32)
       i32.const 17280
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store $0 offset=16
       local.get $14
       global.get $~lib/memory/__stack_pointer
       local.get $result
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store $0 offset=28
       local.get $14
       call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
       local.tee $10
       i32.store $0 offset=36
       local.get $10
       if (result i32)
        local.get $10
       else
        i32.const 7088
        i32.const 16848
        i32.const 158
        i32.const 89
        call $~lib/builtins/abort
        unreachable
       end
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store $0 offset=24
       local.get $14
       call $~lib/string/String.__concat
      else
       i32.const 6144
      end
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=12
      local.get $14
      call $~lib/string/String.__concat
     else
      i32.const 0
     end
     local.tee $reasonDetails
     i32.store $0 offset=40
     i32.const 0
     local.get $matchResult
     local.get $reasonDetails
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 48
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $comparator
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0
  local.get $14
  i32.const 976
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=12
  local.get $14
  call $~lib/string/String.__eq
  local.set $matchResult|12
  global.get $~lib/memory/__stack_pointer
  local.get $matchResult|12
  if (result i32)
   global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.NOT_IN_AUDIENCE
  else
   i32.const 0
  end
  local.tee $reasonDetails|13
  i32.store $0 offset=44
  i32.const 0
  local.get $matchResult|12
  local.get $reasonDetails|13
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $assembly/bucketing/segmentation/SegmentationResult#constructor
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $assembly/types/target/UserFilter#getStringValues (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:_compiledStringValues
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/types/target/UserFilter#get:_compiledStringValues
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 7088
    i32.const 17312
    i32.const 292
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 17392
   call $~lib/rt/__newArray
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/lodashHelpers/findString (param $array i32) (param $findStr i32) (result i32)
  (local $i i32)
  (local $value i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $array
  i32.eqz
  if
   i32.const 0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $array
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $array
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $value
    i32.store $0 offset=4
    local.get $findStr
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $value
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    i32.const 0
    call $~lib/string/String#includes
    if
     local.get $findStr
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String.__not (param $str i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $str
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $str
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/string/String#get:length
   i32.eqz
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/string/String#charAt (param $this i32) (param $pos i32) (result i32)
  (local $out i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $pos
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 6144
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  local.get $out
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/lodashHelpers/stringStartsWith (param $string i32) (param $prefix i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $prefix
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $prefix
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  local.get $string
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.gt_s
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $prefix
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/string/String#get:length
   i32.lt_s
   if
    local.get $string
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/string/String#charAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $prefix
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/string/String#charAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/string/String.__ne
    if
     i32.const 0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/segmentation/_checkValueStartsWith (param $string i32) (param $values i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $values
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $values
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    local.get $string
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $values
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/helpers/lodashHelpers/stringStartsWith
    if
     i32.const 1
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/lodashHelpers/stringEndsWith (param $string i32) (param $suffix i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $suffix
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $suffix
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  local.get $string
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String#get:length
  i32.gt_s
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $suffix
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/string/String#get:length
   i32.lt_s
   if
    local.get $string
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $string
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/string/String#get:length
    local.get $suffix
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/string/String#get:length
    i32.sub
    local.get $i
    i32.add
    call $~lib/string/String#charAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $suffix
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/string/String#charAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/string/String.__ne
    if
     i32.const 0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/segmentation/_checkValueEndsWith (param $string i32) (param $values i32) (result i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $values
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $values
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    local.get $string
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $values
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/helpers/lodashHelpers/stringEndsWith
    if
     i32.const 1
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/segmentation/_checkStringsFilter (param $string i32) (param $filter i32) (result i32)
  (local $operator i32)
  (local $values i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:comparator
  local.tee $operator
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#getStringValues
  local.tee $values
  i32.store $0 offset=8
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 944
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $string
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   call $~lib/string/String.__ne
   if (result i32)
    local.get $values
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $string
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    i32.const 0
    call $~lib/array/Array<~lib/string/String>#includes
   else
    i32.const 0
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   local.get $operator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 976
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/string/String.__eq
   if
    local.get $string
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 0
    call $~lib/string/String.__ne
    if (result i32)
     local.get $values
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     local.get $string
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=12
     local.get $4
     i32.const 0
     call $~lib/array/Array<~lib/string/String>#includes
     i32.eqz
    else
     i32.const 0
    end
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    return
   else
    local.get $operator
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 1136
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $~lib/string/String.__eq
    if
     local.get $string
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     i32.const 0
     call $~lib/string/String.__ne
     if (result i32)
      local.get $string
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      i32.const 6144
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=12
      local.get $4
      call $~lib/string/String.__ne
     else
      i32.const 0
     end
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    else
     local.get $operator
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     i32.const 1168
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=12
     local.get $4
     call $~lib/string/String.__eq
     if
      local.get $string
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      i32.const 0
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       local.get $string
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       local.get $4
       i32.const 6144
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=12
       local.get $4
       call $~lib/string/String.__eq
      end
      local.set $4
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $4
      return
     else
      local.get $operator
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      i32.const 1200
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=12
      local.get $4
      call $~lib/string/String.__eq
      if
       local.get $string
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       local.get $4
       i32.const 0
       call $~lib/string/String.__ne
       if (result i32)
        local.get $values
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0 offset=12
        local.get $4
        local.get $string
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0 offset=16
        local.get $4
        call $assembly/helpers/lodashHelpers/findString
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        call $~lib/string/String.__not
        i32.eqz
       else
        i32.const 0
       end
       local.set $4
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $4
       return
      else
       local.get $operator
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       local.get $4
       i32.const 1248
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=12
       local.get $4
       call $~lib/string/String.__eq
       if
        local.get $string
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        i32.const 0
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         local.get $values
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=12
         local.get $4
         local.get $string
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=16
         local.get $4
         call $assembly/helpers/lodashHelpers/findString
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         local.get $4
         call $~lib/string/String.__not
        end
        local.set $4
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $4
        return
       else
        local.get $operator
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        i32.const 1296
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0 offset=12
        local.get $4
        call $~lib/string/String.__eq
        if
         local.get $string
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         local.get $4
         i32.const 0
         call $~lib/string/String.__ne
         if (result i32)
          local.get $string
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0
          local.get $4
          local.get $values
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=12
          local.get $4
          call $assembly/bucketing/segmentation/_checkValueStartsWith
         else
          i32.const 0
         end
         local.set $4
         global.get $~lib/memory/__stack_pointer
         i32.const 20
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $4
         return
        else
         local.get $operator
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         local.get $4
         i32.const 1344
         local.set $4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=12
         local.get $4
         call $~lib/string/String.__eq
         if
          local.get $string
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0
          local.get $4
          i32.const 0
          call $~lib/string/String.__eq
          if (result i32)
           i32.const 1
          else
           local.get $string
           local.set $4
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0
           local.get $4
           local.get $values
           local.set $4
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0 offset=12
           local.get $4
           call $assembly/bucketing/segmentation/_checkValueStartsWith
           i32.eqz
          end
          local.set $4
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $4
          return
         else
          local.get $operator
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0
          local.get $4
          i32.const 1392
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=12
          local.get $4
          call $~lib/string/String.__eq
          if
           local.get $string
           local.set $4
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0
           local.get $4
           i32.const 0
           call $~lib/string/String.__ne
           if (result i32)
            local.get $string
            local.set $4
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store $0
            local.get $4
            local.get $values
            local.set $4
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store $0 offset=12
            local.get $4
            call $assembly/bucketing/segmentation/_checkValueEndsWith
           else
            i32.const 0
           end
           local.set $4
           global.get $~lib/memory/__stack_pointer
           i32.const 20
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $4
           return
          else
           local.get $operator
           local.set $4
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0
           local.get $4
           i32.const 1440
           local.set $4
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0 offset=12
           local.get $4
           call $~lib/string/String.__eq
           if
            local.get $string
            local.set $4
            global.get $~lib/memory/__stack_pointer
            local.get $4
            i32.store $0
            local.get $4
            i32.const 0
            call $~lib/string/String.__eq
            if (result i32)
             i32.const 1
            else
             local.get $string
             local.set $4
             global.get $~lib/memory/__stack_pointer
             local.get $4
             i32.store $0
             local.get $4
             local.get $values
             local.set $4
             global.get $~lib/memory/__stack_pointer
             local.get $4
             i32.store $0 offset=12
             local.get $4
             call $assembly/bucketing/segmentation/_checkValueEndsWith
             i32.eqz
            end
            local.set $4
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $4
            return
           else
            i32.const 1
            local.set $4
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $4
            return
           end
           unreachable
          end
          unreachable
         end
         unreachable
        end
        unreachable
       end
       unreachable
      end
      unreachable
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/string/String#replace (param $this i32) (param $search i32) (param $replacement i32) (result i32)
  (local $len i32)
  (local $slen i32)
  (local $index i32)
  (local $rlen i32)
  (local $olen i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/string/String#get:length
  local.set $len
  local.get $search
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/string/String#get:length
  local.set $slen
  local.get $len
  local.get $slen
  i32.le_u
  if
   local.get $len
   local.get $slen
   i32.lt_u
   if (result i32)
    local.get $this
   else
    local.get $replacement
    local.get $this
    local.get $search
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    call $~lib/string/String.__eq
    select
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $search
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  call $~lib/string/String#indexOf
  local.set $index
  local.get $index
  i32.const -1
  i32.xor
  if
   local.get $replacement
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/string/String#get:length
   local.set $rlen
   local.get $len
   local.get $slen
   i32.sub
   local.set $len
   local.get $len
   local.get $rlen
   i32.add
   local.set $olen
   local.get $olen
   if
    global.get $~lib/memory/__stack_pointer
    local.get $olen
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0 offset=8
    local.get $out
    local.get $this
    local.get $index
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $out
    local.get $index
    i32.const 1
    i32.shl
    i32.add
    local.get $replacement
    local.get $rlen
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $out
    local.get $index
    local.get $rlen
    i32.add
    i32.const 1
    i32.shl
    i32.add
    local.get $this
    local.get $index
    local.get $slen
    i32.add
    i32.const 1
    i32.shl
    i32.add
    local.get $len
    local.get $index
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $out
    local.set $9
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   end
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/helpers/lodashHelpers/replace (param $str i32) (param $regex i32) (param $replaceStr i32) (result i32)
  (local $result i32)
  (local $matches i32)
  (local $replacedString i32)
  (local $i i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $regex
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $str
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
  local.tee $result
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $result
  if (result i32)
   local.get $result
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/assemblyscript-regex/assembly/regexp/Match#get:matches
  else
   i32.const 0
  end
  if (result i32)
   local.get $result
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/assemblyscript-regex/assembly/regexp/Match#get:matches
  else
   i32.const 0
  end
  local.tee $matches
  i32.store $0 offset=12
  local.get $result
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $matches
   i32.eqz
  end
  if
   local.get $str
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.tee $replacedString
  i32.store $0 offset=16
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $matches
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $replacedString
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $matches
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=24
    local.get $7
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $replaceStr
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    call $~lib/string/String#replace
    local.tee $replacedString
    i32.store $0 offset=16
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $replacedString
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/bucketing/segmentation/convertToSemanticVersion (param $version i32) (result i32)
  (local $splitVersion i32)
  (local $i i32)
  (local $value i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $version
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 6064
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String#split@varargs
  local.tee $splitVersion
  i32.store $0 offset=8
  local.get $splitVersion
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 2
  i32.lt_s
  if
   local.get $splitVersion
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 7808
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $splitVersion
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 3
  i32.lt_s
  if
   local.get $splitVersion
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 7808
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $splitVersion
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $splitVersion
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $value
    i32.store $0 offset=12
    local.get $value
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 6144
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/string/String.__eq
    if
     local.get $splitVersion
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     local.get $i
     i32.const 7808
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=16
     local.get $4
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $splitVersion
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 6064
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/array/Array<~lib/string/String>#join
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/versionCompare/OptionsType#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/versionCompare/OptionsType#set:lexicographical
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/versionCompare/OptionsType#set:zeroExtend
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/helpers/lodashHelpers/includes (param $string i32) (param $other i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $string
  if (result i32)
   local.get $string
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $other
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   call $~lib/string/String#includes
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/bucketing/segmentation/checkVersionValue (param $filterVersion i32) (param $version i32) (param $operator i32) (result i32)
  (local $3 i32)
  (local $options i32)
  (local $result f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $version
  if (result i32)
   local.get $filterVersion
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/string/String#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $assembly/bucketing/versionCompare/OptionsType#constructor
   local.tee $3
   i32.store $0 offset=4
   local.get $3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 1
   call $assembly/bucketing/versionCompare/OptionsType#set:zeroExtend
   local.get $3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 0
   call $assembly/bucketing/versionCompare/OptionsType#set:lexicographical
   local.get $3
   local.tee $options
   i32.store $0 offset=8
   local.get $version
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $filterVersion
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   local.get $options
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=16
   local.get $6
   i32.const 3
   global.set $~argumentsLength
   global.get $assembly/bucketing/versionCompare/versionCompare
   i32.load $0
   call_indirect $0 (type $i32_i32_i32_=>_f64)
   local.set $result
   local.get $result
   local.get $result
   f64.ne
   if
    i32.const 0
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    return
   else
    local.get $result
    f64.const 0
    f64.eq
    if (result i32)
     local.get $operator
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 944
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $6
     call $assembly/helpers/lodashHelpers/includes
    else
     i32.const 0
    end
    if
     i32.const 1
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     return
    else
     local.get $result
     f64.const 1
     f64.eq
     if (result i32)
      local.get $operator
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      i32.const 1008
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $6
      call $assembly/helpers/lodashHelpers/includes
     else
      i32.const 0
     end
     if
      i32.const 1
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $6
      return
     else
      local.get $result
      f64.const -1
      f64.eq
      if (result i32)
       local.get $operator
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       i32.const 1072
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=12
       local.get $6
       call $assembly/helpers/lodashHelpers/includes
      else
       i32.const 0
      end
      if
       i32.const 1
       local.set $6
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $6
       return
      end
     end
    end
   end
  end
  i32.const 0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/bucketing/segmentation/checkVersionFilter (param $version i32) (param $filterVersions i32) (param $operator i32) (result i32)
  (local $parsedVersion i32)
  (local $parsedOperator i32)
  (local $not i32)
  (local $parsedFilterVersions i32)
  (local $regex1 i32)
  (local $regex2 i32)
  (local $9 i32)
  (local $10 i32)
  (local $mappedFilterVersions i32)
  (local $i i32)
  (local $passed i32)
  (local $i|14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 60
  memory.fill $0
  local.get $version
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/string/String.__not
  if
   i32.const 0
   local.set $15
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $15
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $version
  local.tee $parsedVersion
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $operator
  local.tee $parsedOperator
  i32.store $0 offset=8
  i32.const 0
  local.set $not
  local.get $parsedOperator
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  i32.const 976
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=12
  local.get $15
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 944
   local.tee $parsedOperator
   i32.store $0 offset=8
   i32.const 1
   local.set $not
  end
  global.get $~lib/memory/__stack_pointer
  local.get $filterVersions
  local.tee $parsedFilterVersions
  i32.store $0 offset=16
  local.get $parsedOperator
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  i32.const 944
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0 offset=12
  local.get $15
  call $~lib/string/String.__ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 17424
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=12
   local.get $15
   i32.const 6960
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=20
   local.get $15
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
   local.tee $regex1
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 17472
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=12
   local.get $15
   i32.const 6960
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=20
   local.get $15
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
   local.tee $regex2
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $parsedVersion
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=32
   local.get $15
   local.get $regex1
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=36
   local.get $15
   i32.const 6144
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=40
   local.get $15
   call $assembly/helpers/lodashHelpers/replace
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0
   local.get $15
   local.get $regex2
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=12
   local.get $15
   i32.const 6144
   local.set $15
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store $0 offset=20
   local.get $15
   call $assembly/helpers/lodashHelpers/replace
   local.tee $parsedVersion
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 17504
   call $~lib/rt/__newArray
   local.tee $mappedFilterVersions
   i32.store $0 offset=44
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $filterVersions
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     local.get $mappedFilterVersions
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0
     local.get $15
     local.get $filterVersions
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=56
     local.get $15
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=40
     local.get $15
     local.get $regex1
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=48
     local.get $15
     i32.const 6144
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=52
     local.get $15
     call $assembly/helpers/lodashHelpers/replace
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=20
     local.get $15
     local.get $regex2
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=32
     local.get $15
     i32.const 6144
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=36
     local.get $15
     call $assembly/helpers/lodashHelpers/replace
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=12
     local.get $15
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $mappedFilterVersions
   local.tee $parsedFilterVersions
   i32.store $0 offset=16
  end
  global.get $~lib/memory/__stack_pointer
  local.get $parsedVersion
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $assembly/bucketing/segmentation/convertToSemanticVersion
  local.tee $parsedVersion
  i32.store $0 offset=4
  i32.const 0
  local.set $passed
  i32.const 0
  local.set $i|14
  block $for-break1
   loop $for-loop|1
    local.get $i|14
    local.get $parsedFilterVersions
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store $0
    local.get $15
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     local.get $parsedFilterVersions
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=32
     local.get $15
     local.get $i|14
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0
     local.get $15
     local.get $parsedVersion
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=12
     local.get $15
     local.get $operator
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $15
     i32.store $0 offset=20
     local.get $15
     call $assembly/bucketing/segmentation/checkVersionValue
     if
      i32.const 1
      local.set $passed
      br $for-break1
     end
     local.get $i|14
     i32.const 1
     i32.add
     local.set $i|14
     br $for-loop|1
    end
   end
  end
  local.get $not
  i32.eqz
  if (result i32)
   local.get $passed
  else
   local.get $passed
   i32.eqz
  end
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $assembly/bucketing/segmentation/_checkVersionFilters (param $appVersion i32) (param $filter i32) (result i32)
  (local $operator i32)
  (local $values i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:comparator
  local.tee $operator
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#getStringValues
  local.tee $values
  i32.store $0 offset=8
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 944
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/string/String.__eq
  if
   local.get $appVersion
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $filter
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/bucketing/segmentation/_checkStringsFilter
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   local.get $appVersion
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $values
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   local.get $operator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/bucketing/segmentation/checkVersionFilter
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  unreachable
 )
 (func $assembly/bucketing/segmentation/checkValueExists (param $value i32) (result i32)
  (local $1 i32)
  (local $stringValue i32)
  (local $3 i32)
  (local $floatValue i32)
  (local $5 i32)
  (local $intValue i32)
  (local $7 i32)
  (local $boolValue i32)
  (local $9 f64)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $value
  i32.eqz
  if
   i32.const 0
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $value
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
   if (result i32)
    local.get $1
   else
    i32.const 7328
    i32.const 16848
    i32.const 503
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $stringValue
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $value
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 16848
    i32.const 504
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $floatValue
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $value
   local.tee $5
   i32.store $0 offset=20
   local.get $5
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
   if (result i32)
    local.get $5
   else
    i32.const 7328
    i32.const 16848
    i32.const 505
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $intValue
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $value
   local.tee $7
   i32.store $0 offset=28
   local.get $7
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
   if (result i32)
    local.get $7
   else
    i32.const 7328
    i32.const 16848
    i32.const 506
    i32.const 38
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $boolValue
  i32.store $0 offset=32
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   local.get $stringValue
   if (result i32)
    i32.const 1
   else
    local.get $floatValue
   end
   if (result i32)
    i32.const 1
   else
    local.get $intValue
   end
   if (result i32)
    i32.const 1
   else
    local.get $boolValue
   end
   i32.eqz
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $stringValue
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $stringValue
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=40
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 6144
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/string/String.__ne
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $floatValue
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $floatValue
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
    local.tee $9
    local.get $9
    f64.ne
    i32.eqz
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $intValue
   i32.eqz
   if (result i32)
    i32.const 1
   else
    local.get $intValue
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    drop
    i32.const 0
    i32.eqz
   end
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $assembly/types/target/UserFilter#getNumberValues (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:_compiledNumValues
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/types/target/UserFilter#get:_compiledNumValues
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 7088
    i32.const 17312
    i32.const 304
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   i32.const 3
   i32.const 62
   i32.const 17600
   call $~lib/rt/__newArray
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/segmentation/_checkNumberFilter (param $num f64) (param $filterNums i32) (param $operator i32) (result i32)
  (local $passesFilter i32)
  (local $i i32)
  (local $filterNum f64)
  (local $someValue i32)
  (local $i|7 i32)
  (local $filterNum|8 f64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $operator
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  if
   local.get $operator
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   i32.const 1136
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $~lib/string/String.__eq
   if
    local.get $num
    local.get $num
    f64.ne
    i32.eqz
    local.set $9
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   else
    local.get $operator
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    i32.const 1168
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=4
    local.get $9
    call $~lib/string/String.__eq
    if
     local.get $num
     local.get $num
     f64.ne
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $9
     return
    end
   end
  end
  local.get $num
  local.get $num
  f64.ne
  if
   i32.const 0
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $operator
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  i32.const 976
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/string/String.__eq
  if
   i32.const 1
   local.set $passesFilter
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $filterNums
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $~lib/array/Array<f64>#get:length
    i32.lt_s
    if
     local.get $filterNums
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     local.get $i
     call $~lib/array/Array<f64>#__get
     local.set $filterNum
     local.get $filterNum
     local.get $filterNum
     f64.ne
     if (result i32)
      i32.const 1
     else
      local.get $num
      local.get $filterNum
      f64.eq
     end
     if
      i32.const 0
      local.set $passesFilter
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $passesFilter
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  i32.const 0
  local.set $someValue
  i32.const 0
  local.set $i|7
  loop $for-loop|1
   local.get $i|7
   local.get $filterNums
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<f64>#get:length
   i32.lt_s
   if
    block $for-continue|1
     local.get $filterNums
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     local.get $i|7
     call $~lib/array/Array<f64>#__get
     local.set $filterNum|8
     local.get $filterNum|8
     local.get $filterNum|8
     f64.ne
     if
      br $for-continue|1
     end
     local.get $operator
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     i32.const 944
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     call $~lib/string/String.__eq
     if
      local.get $num
      local.get $filterNum|8
      f64.eq
      local.set $someValue
     else
      local.get $operator
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      i32.const 1008
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      call $~lib/string/String.__eq
      if
       local.get $num
       local.get $filterNum|8
       f64.gt
       local.set $someValue
      else
       local.get $operator
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       i32.const 1040
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=4
       local.get $9
       call $~lib/string/String.__eq
       if
        local.get $num
        local.get $filterNum|8
        f64.ge
        local.set $someValue
       else
        local.get $operator
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        i32.const 1072
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=4
        local.get $9
        call $~lib/string/String.__eq
        if
         local.get $num
         local.get $filterNum|8
         f64.lt
         local.set $someValue
        else
         local.get $operator
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         i32.const 1104
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=4
         local.get $9
         call $~lib/string/String.__eq
         if
          local.get $num
          local.get $filterNum|8
          f64.le
          local.set $someValue
         else
          br $for-continue|1
         end
        end
       end
      end
     end
     local.get $someValue
     if
      i32.const 1
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     end
    end
    local.get $i|7
    i32.const 1
    i32.add
    local.set $i|7
    br $for-loop|1
   end
  end
  local.get $someValue
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/bucketing/segmentation/_checkNumbersFilter (param $number f64) (param $filter i32) (result i32)
  (local $operator i32)
  (local $values i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:comparator
  local.tee $operator
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#getNumberValues
  local.tee $values
  i32.store $0 offset=8
  local.get $number
  local.get $values
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/bucketing/segmentation/_checkNumberFilter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/segmentation/checkNumbersFilterJSONValue (param $jsonValue i32) (param $filter i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $jsonValue
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/bucketing/segmentation/_checkNumbersFilter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#get:_bool
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/target/UserFilter#getBooleanValues (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:_compiledBoolValues
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/types/target/UserFilter#get:_compiledBoolValues
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 7088
    i32.const 17312
    i32.const 298
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   i32.const 0
   i32.const 152
   i32.const 17632
   call $~lib/rt/__newArray
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<bool>#indexOf (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<bool>#get:length_
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/array/Array<bool>#get:dataStart
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    i32.const 0
    i32.ne
    local.get $value
    i32.const 0
    i32.ne
    i32.eq
    if
     local.get $fromIndex
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<bool>#includes (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  local.get $fromIndex
  call $~lib/array/Array<bool>#indexOf
  i32.const 0
  i32.ge_s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/bucketing/segmentation/_checkBooleanFilter (param $bool i32) (param $filter i32) (result i32)
  (local $operator i32)
  (local $values i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#get:comparator
  local.tee $operator
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/UserFilter#getBooleanValues
  local.tee $values
  i32.store $0 offset=8
  local.get $operator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 1200
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $operator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 944
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/string/String.__eq
  end
  if
   local.get $values
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $bool
   i32.const 0
   call $~lib/array/Array<bool>#includes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   local.get $operator
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 1248
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else
    local.get $operator
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 976
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $~lib/string/String.__eq
   end
   if
    local.get $values
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $bool
    i32.const 0
    call $~lib/array/Array<bool>#includes
    i32.eqz
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    return
   else
    local.get $operator
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 1136
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $~lib/string/String.__eq
    if
     i32.const 1
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    else
     local.get $operator
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     i32.const 1168
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=12
     local.get $4
     call $~lib/string/String.__eq
     if
      i32.const 1
      i32.eqz
      local.set $4
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $4
      return
     else
      i32.const 0
      local.set $4
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $4
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkCustomData (param $data i32) (param $clientCustomData i32) (param $filter i32) (result i32)
  (local $operator i32)
  (local $dataValue i32)
  (local $5 i32)
  (local $jsonStr i32)
  (local $7 i32)
  (local $boolValue i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/types/target/UserFilter#get:comparator
  local.tee $operator
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $data
  if (result i32)
   local.get $data
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $filter
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   call $assembly/types/target/CustomDataFilter#get:dataKey
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  else
   i32.const 0
  end
  local.tee $dataValue
  i32.store $0 offset=16
  local.get $dataValue
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $clientCustomData
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $filter
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   call $assembly/types/target/CustomDataFilter#get:dataKey
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
   local.tee $dataValue
   i32.store $0 offset=16
  end
  local.get $operator
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  i32.const 1136
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/string/String.__eq
  if
   local.get $dataValue
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $assembly/bucketing/segmentation/checkValueExists
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  else
   local.get $operator
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   i32.const 1168
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/string/String.__eq
   if
    local.get $dataValue
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    call $assembly/bucketing/segmentation/checkValueExists
    i32.eqz
    local.set $9
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   else
    local.get $filter
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $assembly/types/target/CustomDataFilter#get:dataKeyType
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    i32.const 1696
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/string/String.__eq
    if (result i32)
     local.get $dataValue
    else
     i32.const 0
    end
    if (result i32)
     local.get $dataValue
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
     if (result i32)
      i32.const 1
     else
      local.get $dataValue
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
     end
    else
     i32.const 0
    end
    if
     local.get $dataValue
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
     if
      i32.const 0
      local.get $filter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=8
      local.get $9
      call $assembly/bucketing/segmentation/_checkStringsFilter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 36
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     else
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $dataValue
      local.tee $5
      i32.store $0 offset=20
      local.get $5
      call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
      if (result i32)
       local.get $5
      else
       i32.const 7328
       i32.const 16848
       i32.const 445
       i32.const 29
       call $~lib/builtins/abort
       unreachable
      end
      local.tee $jsonStr
      i32.store $0 offset=24
      local.get $jsonStr
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $9
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      local.get $filter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=8
      local.get $9
      call $assembly/bucketing/segmentation/_checkStringsFilter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 36
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     end
     unreachable
    else
     local.get $filter
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     call $assembly/types/target/CustomDataFilter#get:dataKeyType
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     i32.const 1776
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $9
     call $~lib/string/String.__eq
     if (result i32)
      local.get $dataValue
     else
      i32.const 0
     end
     if (result i32)
      local.get $dataValue
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
      if (result i32)
       i32.const 1
      else
       local.get $dataValue
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
      end
     else
      i32.const 0
     end
     if
      local.get $dataValue
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      local.get $filter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=8
      local.get $9
      call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
      local.set $9
      global.get $~lib/memory/__stack_pointer
      i32.const 36
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $9
      return
     else
      local.get $filter
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $9
      call $assembly/types/target/CustomDataFilter#get:dataKeyType
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      i32.const 1728
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=8
      local.get $9
      call $~lib/string/String.__eq
      if (result i32)
       local.get $dataValue
      else
       i32.const 0
      end
      if (result i32)
       local.get $dataValue
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $dataValue
       local.tee $7
       i32.store $0 offset=28
       local.get $7
       call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
       if (result i32)
        local.get $7
       else
        i32.const 7328
        i32.const 16848
        i32.const 452
        i32.const 27
        call $~lib/builtins/abort
        unreachable
       end
       local.tee $boolValue
       i32.store $0 offset=32
       local.get $boolValue
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
       local.get $filter
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=8
       local.get $9
       call $assembly/bucketing/segmentation/_checkBooleanFilter
       local.set $9
       global.get $~lib/memory/__stack_pointer
       i32.const 36
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $9
       return
      else
       local.get $dataValue
       i32.eqz
       if (result i32)
        local.get $operator
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        i32.const 976
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=8
        local.get $9
        call $~lib/string/String.__eq
       else
        i32.const 0
       end
       if
        i32.const 1
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 36
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       else
        i32.const 0
        local.set $9
        global.get $~lib/memory/__stack_pointer
        i32.const 36
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $9
        return
       end
       unreachable
      end
      unreachable
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/bucketing/segmentation/filterFunctionsBySubtype (param $subType i32) (param $user i32) (param $filter i32) (param $clientCustomData i32) (result i32)
  (local $result i32)
  (local $result|5 i32)
  (local $result|6 i32)
  (local $result|7 i32)
  (local $result|8 i32)
  (local $result|9 i32)
  (local $result|10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $result|13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $reason i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $subType
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0
  local.get $18
  i32.const 528
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $~lib/string/String.__eq
  if
   local.get $user
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=8
   local.get $18
   call $assembly/types/dvcUser/DVCPopulatedUser#get:country
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0
   local.get $18
   local.get $filter
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $assembly/bucketing/segmentation/_checkStringsFilter
   local.set $result
   i32.const 0
   local.get $result
   local.get $result
   if (result i32)
    global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.COUNTRY
   else
    i32.const 0
   end
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=8
   local.get $18
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  else
   local.get $subType
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0
   local.get $18
   i32.const 464
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/string/String.__eq
   if
    local.get $user
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=8
    local.get $18
    call $assembly/types/dvcUser/DVCPopulatedUser#get:email
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0
    local.get $18
    local.get $filter
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $assembly/bucketing/segmentation/_checkStringsFilter
    local.set $result|5
    i32.const 0
    local.get $result|5
    local.get $result|5
    if (result i32)
     global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.EMAIL
    else
     i32.const 0
    end
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=8
    local.get $18
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $18
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $18
    return
   else
    local.get $subType
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0
    local.get $18
    i32.const 416
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $~lib/string/String.__eq
    if
     local.get $user
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=8
     local.get $18
     call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0
     local.get $18
     local.get $filter
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     call $assembly/bucketing/segmentation/_checkStringsFilter
     local.set $result|6
     i32.const 0
     local.get $result|6
     local.get $result|6
     if (result i32)
      global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.USER_ID
     else
      i32.const 0
     end
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=8
     local.get $18
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
     local.set $18
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $18
     return
    else
     local.get $subType
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0
     local.get $18
     i32.const 688
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     call $~lib/string/String.__eq
     if
      local.get $user
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=8
      local.get $18
      call $assembly/types/dvcUser/DVCPopulatedUser#get:appVersion
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      local.get $filter
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=4
      local.get $18
      call $assembly/bucketing/segmentation/_checkVersionFilters
      local.set $result|7
      i32.const 0
      local.get $result|7
      local.get $result|7
      if (result i32)
       global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.APP_VERSION
      else
       i32.const 0
      end
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=8
      local.get $18
      call $assembly/bucketing/segmentation/SegmentationResult#constructor
      local.set $18
      global.get $~lib/memory/__stack_pointer
      i32.const 40
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $18
      return
     else
      local.get $subType
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      i32.const 624
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=4
      local.get $18
      call $~lib/string/String.__eq
      if
       local.get $user
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=8
       local.get $18
       call $assembly/types/dvcUser/DVCPopulatedUser#get:platformVersion
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       local.get $filter
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=4
       local.get $18
       call $assembly/bucketing/segmentation/_checkVersionFilters
       local.set $result|8
       i32.const 0
       local.get $result|8
       local.get $result|8
       if (result i32)
        global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM_VERSION
       else
        i32.const 0
       end
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=8
       local.get $18
       call $assembly/bucketing/segmentation/SegmentationResult#constructor
       local.set $18
       global.get $~lib/memory/__stack_pointer
       i32.const 40
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $18
       return
      else
       local.get $subType
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       i32.const 736
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=4
       local.get $18
       call $~lib/string/String.__eq
       if
        local.get $user
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=8
        local.get $18
        call $assembly/types/dvcUser/DVCPopulatedUser#get:deviceModel
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0
        local.get $18
        local.get $filter
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=4
        local.get $18
        call $assembly/bucketing/segmentation/_checkStringsFilter
        local.set $result|9
        i32.const 0
        local.get $result|9
        local.get $result|9
        if (result i32)
         global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.DEVICE_MODEL
        else
         i32.const 0
        end
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=8
        local.get $18
        call $assembly/bucketing/segmentation/SegmentationResult#constructor
        local.set $18
        global.get $~lib/memory/__stack_pointer
        i32.const 40
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $18
        return
       else
        local.get $subType
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0
        local.get $18
        i32.const 576
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=4
        local.get $18
        call $~lib/string/String.__eq
        if
         local.get $user
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=8
         local.get $18
         call $assembly/types/dvcUser/DVCPopulatedUser#get:platform
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0
         local.get $18
         local.get $filter
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=4
         local.get $18
         call $assembly/bucketing/segmentation/_checkStringsFilter
         local.set $result|10
         i32.const 0
         local.get $result|10
         local.get $result|10
         if (result i32)
          global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.PLATFORM
         else
          i32.const 0
         end
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=8
         local.get $18
         call $assembly/bucketing/segmentation/SegmentationResult#constructor
         local.set $18
         global.get $~lib/memory/__stack_pointer
         i32.const 40
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $18
         return
        else
         local.get $subType
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0
         local.get $18
         i32.const 784
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=4
         local.get $18
         call $~lib/string/String.__eq
         if
          global.get $~lib/memory/__stack_pointer
          local.get $filter
          local.tee $11
          i32.store $0 offset=12
          local.get $11
          i32.eqz
          if (result i32)
           i32.const 0
          else
           local.get $11
           call $~instanceof|assembly/types/target/CustomDataFilter
          end
          i32.eqz
          if
           i32.const 17536
           i32.const 16848
           i32.const 198
           i32.const 13
           call $~lib/builtins/abort
           unreachable
          end
          local.get $user
          local.set $18
          global.get $~lib/memory/__stack_pointer
          local.get $18
          i32.store $0 offset=16
          local.get $18
          call $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData
          local.set $18
          global.get $~lib/memory/__stack_pointer
          local.get $18
          i32.store $0
          local.get $18
          local.get $clientCustomData
          local.set $18
          global.get $~lib/memory/__stack_pointer
          local.get $18
          i32.store $0 offset=4
          local.get $18
          global.get $~lib/memory/__stack_pointer
          local.get $filter
          local.tee $12
          i32.store $0 offset=20
          local.get $12
          call $~instanceof|assembly/types/target/CustomDataFilter
          if (result i32)
           local.get $12
          else
           i32.const 7328
           i32.const 16848
           i32.const 200
           i32.const 89
           call $~lib/builtins/abort
           unreachable
          end
          local.set $18
          global.get $~lib/memory/__stack_pointer
          local.get $18
          i32.store $0 offset=8
          local.get $18
          call $assembly/bucketing/segmentation/_checkCustomData
          local.set $result|13
          global.get $~lib/memory/__stack_pointer
          local.get $result|13
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.CUSTOM_DATA
           local.tee $14
           i32.store $0 offset=24
           global.get $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           local.get $filter
           local.tee $16
           i32.store $0 offset=28
           local.get $16
           call $~instanceof|assembly/types/target/CustomDataFilter
           if (result i32)
            local.get $16
           else
            i32.const 7328
            i32.const 16848
            i32.const 201
            i32.const 75
            call $~lib/builtins/abort
            unreachable
           end
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0
           local.get $18
           call $assembly/types/target/CustomDataFilter#get:dataKey
           local.tee $15
           i32.store $0 offset=32
           i32.const 17664
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0
           local.get $18
           i32.const 0
           local.get $14
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0 offset=8
           local.get $18
           call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
           i32.const 17664
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0
           local.get $18
           i32.const 2
           local.get $15
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0 offset=8
           local.get $18
           call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
           i32.const 17664
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0
           local.get $18
           i32.const 6144
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0 offset=4
           local.get $18
           call $~lib/staticarray/StaticArray<~lib/string/String>#join
          else
           i32.const 0
          end
          local.tee $reason
          i32.store $0 offset=36
          i32.const 0
          local.get $result|13
          local.get $reason
          local.set $18
          global.get $~lib/memory/__stack_pointer
          local.get $18
          i32.store $0 offset=8
          local.get $18
          call $assembly/bucketing/segmentation/SegmentationResult#constructor
          local.set $18
          global.get $~lib/memory/__stack_pointer
          i32.const 40
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $18
          return
         else
          i32.const 0
          i32.const 0
          i32.const 0
          call $assembly/bucketing/segmentation/SegmentationResult#constructor
          local.set $18
          global.get $~lib/memory/__stack_pointer
          i32.const 40
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $18
          return
         end
         unreachable
        end
        unreachable
       end
       unreachable
      end
      unreachable
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/bucketing/segmentation/doesUserPassFilter (param $filter i32) (param $audiences i32) (param $user i32) (param $clientCustomData i32) (result i32)
  (local $isValid i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $userFilter i32)
  (local $subType i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  i32.const 1
  local.set $isValid
  local.get $filter
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=8
  local.get $12
  call $assembly/types/target/AudienceFilter#get:type
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  i32.const 176
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $~lib/string/String.__eq
  if
   i32.const 0
   i32.const 1
   global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ALL_USERS
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=8
   local.get $12
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  else
   local.get $filter
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=8
   local.get $12
   call $assembly/types/target/AudienceFilter#get:type
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0
   local.get $12
   i32.const 240
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=4
   local.get $12
   call $~lib/string/String.__eq
   if
    i32.const 0
    i32.const 0
    i32.const 0
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $12
    global.get $~lib/memory/__stack_pointer
    i32.const 44
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $12
    return
   else
    local.get $filter
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=8
    local.get $12
    call $assembly/types/target/AudienceFilter#get:type
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0
    local.get $12
    i32.const 272
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=4
    local.get $12
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $filter
     local.tee $5
     i32.store $0 offset=12
     local.get $5
     call $~instanceof|assembly/types/target/AudienceMatchFilter
     if (result i32)
      local.get $5
     else
      i32.const 7328
      i32.const 16848
      i32.const 112
      i32.const 15
      call $~lib/builtins/abort
      unreachable
     end
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0
     local.get $12
     call $assembly/types/target/AudienceMatchFilter#get:isValid
     i32.eqz
     if
      i32.const 0
      local.set $isValid
     else
      global.get $~lib/memory/__stack_pointer
      local.get $filter
      local.tee $6
      i32.store $0 offset=20
      local.get $6
      call $~instanceof|assembly/types/target/AudienceMatchFilter
      if (result i32)
       local.get $6
      else
       i32.const 7328
       i32.const 16848
       i32.const 115
       i32.const 43
       call $~lib/builtins/abort
       unreachable
      end
      local.set $12
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0
      local.get $12
      local.get $audiences
      local.set $12
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0 offset=4
      local.get $12
      local.get $user
      local.set $12
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0 offset=8
      local.get $12
      local.get $clientCustomData
      local.set $12
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0 offset=16
      local.get $12
      call $assembly/bucketing/segmentation/filterForAudienceMatch
      local.set $12
      global.get $~lib/memory/__stack_pointer
      i32.const 44
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $12
      return
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.get $filter
     local.tee $7
     i32.store $0 offset=24
     local.get $7
     i32.eqz
     if (result i32)
      i32.const 0
     else
      local.get $7
      call $~instanceof|assembly/types/target/UserFilter
     end
     i32.eqz
     if
      i32.const 0
      local.set $isValid
     end
    end
   end
  end
  local.get $isValid
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $filter
   local.tee $8
   i32.store $0 offset=28
   local.get $8
   call $~instanceof|assembly/types/target/UserFilter
   if (result i32)
    local.get $8
   else
    i32.const 7328
    i32.const 16848
    i32.const 122
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $userFilter
   i32.store $0 offset=32
   local.get $userFilter
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0
   local.get $12
   call $assembly/types/target/UserFilter#get:isValid
   if
    global.get $~lib/memory/__stack_pointer
    local.get $userFilter
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0
    local.get $12
    call $assembly/types/target/UserFilter#get:subType
    local.tee $subType
    i32.store $0 offset=36
    global.get $assembly/types/target/validSubTypes
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0
    local.get $12
    local.get $subType
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=4
    local.get $12
    i32.const 0
    call $~lib/array/Array<~lib/string/String>#includes
    if
     local.get $subType
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0
     local.get $12
     local.get $user
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=4
     local.get $12
     local.get $userFilter
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=8
     local.get $12
     local.get $clientCustomData
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=16
     local.get $12
     call $assembly/bucketing/segmentation/filterFunctionsBySubtype
     local.set $12
     global.get $~lib/memory/__stack_pointer
     i32.const 44
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $12
     return
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
  local.tee $11
  i32.store $0 offset=40
  i32.const 18048
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  i32.const 1
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=16
  local.get $12
  call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
  i32.const 18048
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  i32.const 6144
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=8
  local.get $12
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $~lib/console/console.log
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/bucketing/segmentation/SegmentationResult#constructor
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $assembly/bucketing/segmentation/_evaluateOperator (param $operator i32) (param $audiences i32) (param $user i32) (param $clientCustomData i32) (result i32)
  (local $i i32)
  (local $filter i32)
  (local $6 i32)
  (local $evalResult i32)
  (local $8 i32)
  (local $evalResult|9 i32)
  (local $reasons i32)
  (local $i|11 i32)
  (local $filter|12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $evalResult|15 i32)
  (local $16 i32)
  (local $allReasons i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 68
  memory.fill $0
  local.get $operator
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $assembly/types/target/AudienceOperator#get:filters
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0
  local.get $18
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length
  i32.eqz
  if
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 68
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  local.get $operator
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=8
  local.get $18
  call $assembly/types/target/AudienceOperator#get:operator
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0
  local.get $18
  i32.const 64
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $~lib/string/String.__eq
  if
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $operator
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $assembly/types/target/AudienceOperator#get:filters
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0
    local.get $18
    call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $operator
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     call $assembly/types/target/AudienceOperator#get:filters
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0
     local.get $18
     local.get $i
     call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__get
     local.tee $filter
     i32.store $0 offset=12
     local.get $filter
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0
     local.get $18
     call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
     i32.const 0
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $filter
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=20
      local.get $18
      call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
      local.tee $6
      i32.store $0 offset=24
      local.get $6
      if (result i32)
       local.get $6
      else
       i32.const 7088
       i32.const 16848
       i32.const 60
       i32.const 39
       call $~lib/builtins/abort
       unreachable
      end
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      local.get $audiences
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=4
      local.get $18
      local.get $user
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=8
      local.get $18
      local.get $clientCustomData
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=16
      local.get $18
      call $assembly/bucketing/segmentation/_evaluateOperator
      local.tee $evalResult
      i32.store $0 offset=28
      local.get $evalResult
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      call $assembly/bucketing/segmentation/SegmentationResult#get:result
      if
       local.get $evalResult
       local.set $18
       global.get $~lib/memory/__stack_pointer
       i32.const 68
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $18
       return
      end
     else
      local.get $filter
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
      i32.const 0
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $filter
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=20
       local.get $18
       call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
       local.tee $8
       i32.store $0 offset=32
       local.get $8
       if (result i32)
        local.get $8
       else
        i32.const 7088
        i32.const 16848
        i32.const 68
        i32.const 40
        call $~lib/builtins/abort
        unreachable
       end
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       local.get $audiences
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=4
       local.get $18
       local.get $user
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=8
       local.get $18
       local.get $clientCustomData
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=16
       local.get $18
       call $assembly/bucketing/segmentation/doesUserPassFilter
       local.tee $evalResult|9
       i32.store $0 offset=36
       local.get $evalResult|9
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       call $assembly/bucketing/segmentation/SegmentationResult#get:result
       if
        local.get $evalResult|9
        local.set $18
        global.get $~lib/memory/__stack_pointer
        i32.const 68
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $18
        return
       end
      end
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 68
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  else
   local.get $operator
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=8
   local.get $18
   call $assembly/types/target/AudienceOperator#get:operator
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0
   local.get $18
   i32.const 32
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 0
    call $~lib/array/Array<~lib/string/String>#constructor
    local.tee $reasons
    i32.store $0 offset=40
    i32.const 0
    local.set $i|11
    loop $for-loop|1
     local.get $i|11
     local.get $operator
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     call $assembly/types/target/AudienceOperator#get:filters
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0
     local.get $18
     call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $operator
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0 offset=4
      local.get $18
      call $assembly/types/target/AudienceOperator#get:filters
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      local.get $i|11
      call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__get
      local.tee $filter|12
      i32.store $0 offset=44
      local.get $filter|12
      local.set $18
      global.get $~lib/memory/__stack_pointer
      local.get $18
      i32.store $0
      local.get $18
      call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
      i32.const 0
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $filter|12
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=20
       local.get $18
       call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
       local.tee $13
       i32.store $0 offset=48
       local.get $13
       if (result i32)
        local.get $13
       else
        i32.const 7088
        i32.const 16848
        i32.const 81
        i32.const 41
        call $~lib/builtins/abort
        unreachable
       end
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       local.get $audiences
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=4
       local.get $18
       local.get $user
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=8
       local.get $18
       local.get $clientCustomData
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0 offset=16
       local.get $18
       call $assembly/bucketing/segmentation/_evaluateOperator
       local.set $18
       global.get $~lib/memory/__stack_pointer
       i32.const 68
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $18
       return
      else
       local.get $filter|12
       local.set $18
       global.get $~lib/memory/__stack_pointer
       local.get $18
       i32.store $0
       local.get $18
       call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
       i32.const 0
       i32.ne
       if
        global.get $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $filter|12
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=20
        local.get $18
        call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
        local.tee $14
        i32.store $0 offset=52
        local.get $14
        if (result i32)
         local.get $14
        else
         i32.const 7088
         i32.const 16848
         i32.const 84
         i32.const 40
         call $~lib/builtins/abort
         unreachable
        end
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0
        local.get $18
        local.get $audiences
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=4
        local.get $18
        local.get $user
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=8
        local.get $18
        local.get $clientCustomData
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=16
        local.get $18
        call $assembly/bucketing/segmentation/doesUserPassFilter
        local.tee $evalResult|15
        i32.store $0 offset=56
        local.get $evalResult|15
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0
        local.get $18
        call $assembly/bucketing/segmentation/SegmentationResult#get:result
        i32.const 0
        i32.ne
        i32.const 0
        i32.eq
        if
         i32.const 0
         i32.const 0
         i32.const 0
         call $assembly/bucketing/segmentation/SegmentationResult#constructor
         local.set $18
         global.get $~lib/memory/__stack_pointer
         i32.const 68
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $18
         return
        end
        local.get $evalResult|15
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0 offset=4
        local.get $18
        call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
        local.set $18
        global.get $~lib/memory/__stack_pointer
        local.get $18
        i32.store $0
        local.get $18
        i32.const 0
        call $~lib/string/String.__ne
        if
         local.get $reasons
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0
         local.get $18
         global.get $~lib/memory/__stack_pointer
         local.get $evalResult|15
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=8
         local.get $18
         call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
         local.tee $16
         i32.store $0 offset=60
         local.get $16
         if (result i32)
          local.get $16
         else
          i32.const 7088
          i32.const 16848
          i32.const 89
          i32.const 34
          call $~lib/builtins/abort
          unreachable
         end
         local.set $18
         global.get $~lib/memory/__stack_pointer
         local.get $18
         i32.store $0 offset=4
         local.get $18
         call $~lib/array/Array<~lib/string/String>#push
         drop
        end
       end
      end
      local.get $i|11
      i32.const 1
      i32.add
      local.set $i|11
      br $for-loop|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $reasons
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0
    local.get $18
    i32.const 18080
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $~lib/array/Array<~lib/string/String>#join
    local.tee $allReasons
    i32.store $0 offset=64
    i32.const 0
    i32.const 1
    local.get $allReasons
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=8
    local.get $18
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $18
    global.get $~lib/memory/__stack_pointer
    i32.const 68
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $18
    return
   else
    i32.const 0
    i32.const 0
    i32.const 0
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $18
    global.get $~lib/memory/__stack_pointer
    i32.const 68
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $18
    return
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/bucketing/bucketing/TargetResult#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 146
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/TargetResult#set:target
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/TargetResult#set:reasonDetails
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/evaluateSegmentationForFeature (param $config i32) (param $feature i32) (param $user i32) (param $clientCustomData i32) (result i32)
  (local $i i32)
  (local $target i32)
  (local $passthroughRolloutEnabled i32)
  (local $doesUserPassRollout i32)
  (local $bucketingValue i32)
  (local $boundedHashData i32)
  (local $rolloutHash f64)
  (local $evalResult i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $feature
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0 offset=8
   local.get $14
   call $assembly/types/featureV2/FeatureV2#get:configuration
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0 offset=4
   local.get $14
   call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:targets
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $feature
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    call $assembly/types/featureV2/FeatureV2#get:configuration
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=4
    local.get $14
    call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:targets
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    local.get $i
    call $~lib/array/Array<assembly/types/targetV2/TargetV2>#__get
    local.tee $target
    i32.store $0 offset=12
    local.get $config
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    call $assembly/types/configBodyV2/ConfigBodyV2#get:project
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=4
    local.get $14
    call $assembly/types/configBody/PublicProject#get:settings
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    call $assembly/types/configBody/Settings#get:disablePassthroughRollouts
    i32.eqz
    local.set $passthroughRolloutEnabled
    i32.const 1
    local.set $doesUserPassRollout
    local.get $target
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    call $assembly/types/targetV2/TargetV2#get:rollout
    if (result i32)
     local.get $passthroughRolloutEnabled
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $user
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     local.get $target
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=4
     local.get $14
     call $assembly/bucketing/bucketing/_getUserValueForBucketingKey
     local.tee $bucketingValue
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $bucketingValue
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     local.get $target
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $assembly/types/targetV2/TargetV2#get:_id
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=4
     local.get $14
     call $assembly/bucketing/bucketing/_generateBoundedHashes
     local.tee $boundedHashData
     i32.store $0 offset=20
     local.get $boundedHashData
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     call $assembly/bucketing/bucketing/BoundedHash#get:rolloutHash
     local.set $rolloutHash
     local.get $target
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=4
     local.get $14
     call $assembly/types/targetV2/TargetV2#get:rollout
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     local.get $rolloutHash
     call $assembly/bucketing/bucketing/_doesUserPassRollout
     local.set $doesUserPassRollout
    end
    local.get $doesUserPassRollout
    if
     global.get $~lib/memory/__stack_pointer
     local.get $target
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=32
     local.get $14
     call $assembly/types/targetV2/TargetV2#get:_audience
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     call $assembly/types/target/Audience#get:filters
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     local.get $config
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     call $assembly/types/configBodyV2/ConfigBodyV2#get:audiences
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=4
     local.get $14
     local.get $user
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     local.get $clientCustomData
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=24
     local.get $14
     call $assembly/bucketing/segmentation/_evaluateOperator
     local.tee $evalResult
     i32.store $0 offset=36
     local.get $evalResult
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     call $assembly/bucketing/segmentation/SegmentationResult#get:result
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      call $assembly/bucketing/bucketing/TargetResult#constructor
      local.tee $12
      i32.store $0 offset=40
      local.get $12
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0
      local.get $14
      local.get $target
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=4
      local.get $14
      call $assembly/bucketing/bucketing/TargetResult#set:target
      local.get $12
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0
      local.get $14
      global.get $~lib/memory/__stack_pointer
      local.get $evalResult
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=8
      local.get $14
      call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
      local.tee $13
      i32.store $0 offset=44
      local.get $13
      if (result i32)
       local.get $13
      else
       i32.const 6144
      end
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=4
      local.get $14
      call $assembly/bucketing/bucketing/TargetResult#set:reasonDetails
      local.get $12
      local.set $14
      global.get $~lib/memory/__stack_pointer
      i32.const 48
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $14
      return
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $assembly/bucketing/bucketing/TargetAndHashes#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 145
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/TargetAndHashes#set:target
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/TargetAndHashes#set:boundedHashData
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/TargetAndHashes#set:reasonDetails
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/doesUserQualifyForFeature (param $config i32) (param $feature i32) (param $user i32) (param $clientCustomData i32) (result i32)
  (local $targetResult i32)
  (local $target i32)
  (local $reasonDetails i32)
  (local $bucketingValue i32)
  (local $boundedHashData i32)
  (local $rolloutHash f64)
  (local $passthroughRolloutEnabled i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $feature
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  local.get $user
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=8
  local.get $12
  local.get $clientCustomData
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=12
  local.get $12
  call $assembly/bucketing/bucketing/evaluateSegmentationForFeature
  local.tee $targetResult
  i32.store $0 offset=16
  local.get $targetResult
  i32.eqz
  if
   i32.const 0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $targetResult
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/bucketing/bucketing/TargetResult#get:target
  local.tee $target
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $targetResult
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/bucketing/bucketing/TargetResult#get:reasonDetails
  local.tee $reasonDetails
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $target
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/_getUserValueForBucketingKey
  local.tee $bucketingValue
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $bucketingValue
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $target
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=8
  local.get $12
  call $assembly/types/targetV2/TargetV2#get:_id
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/_generateBoundedHashes
  local.tee $boundedHashData
  i32.store $0 offset=32
  local.get $boundedHashData
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/bucketing/bucketing/BoundedHash#get:rolloutHash
  local.set $rolloutHash
  local.get $config
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=8
  local.get $12
  call $assembly/types/configBodyV2/ConfigBodyV2#get:project
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/types/configBody/PublicProject#get:settings
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/types/configBody/Settings#get:disablePassthroughRollouts
  i32.eqz
  local.set $passthroughRolloutEnabled
  local.get $target
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/types/targetV2/TargetV2#get:rollout
  if (result i32)
   local.get $passthroughRolloutEnabled
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $target
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=4
   local.get $12
   call $assembly/types/targetV2/TargetV2#get:rollout
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0
   local.get $12
   local.get $rolloutHash
   call $assembly/bucketing/bucketing/_doesUserPassRollout
   i32.eqz
  else
   i32.const 0
  end
  if
   i32.const 0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/bucketing/bucketing/TargetAndHashes#constructor
  local.tee $11
  i32.store $0 offset=36
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $target
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/TargetAndHashes#set:target
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $boundedHashData
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/TargetAndHashes#set:boundedHashData
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $reasonDetails
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/TargetAndHashes#set:reasonDetails
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/targetV2/TargetV2#decideTargetVariation (param $this i32) (param $boundedHash f64) (result i32)
  (local $distributionIndex f64)
  (local $i i32)
  (local $distribution i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  f64.const 0
  local.set $distributionIndex
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/types/targetV2/TargetV2#get:_sortedDistribution
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/types/targetV2/TargetV2#get:_sortedDistribution
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.tee $distribution
    i32.store $0 offset=8
    local.get $distributionIndex
    local.get $distribution
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/types/target/TargetDistribution#get:percentage
    f64.add
    local.set $distributionIndex
    local.get $boundedHash
    f64.const 0
    f64.ge
    if (result i32)
     local.get $boundedHash
     local.get $distributionIndex
     f64.lt
     if (result i32)
      i32.const 1
     else
      local.get $distributionIndex
      f64.const 1
      f64.eq
      if (result i32)
       local.get $boundedHash
       f64.const 1
       f64.eq
      else
       i32.const 0
      end
     end
    else
     i32.const 0
    end
    if
     local.get $distribution
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $assembly/types/target/TargetDistribution#get:_variation
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 18112
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/types/targetV2/TargetV2#get:_id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/string/String#concat
  i32.const 18208
  i32.const 66
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/featureV2/FeatureV2#getVariationById (param $this i32) (param $variationId i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:_variationsById
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variationId
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#has
  i32.eqz
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:_variationsById
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variationId
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/bucketing/bucketing/bucketUserForVariation (param $feature i32) (param $targetAndHashes i32) (result i32)
  (local $variation_id i32)
  (local $variation i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $targetAndHashes
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/bucketing/bucketing/TargetAndHashes#get:target
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $targetAndHashes
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/bucketing/bucketing/TargetAndHashes#get:boundedHashData
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/bucketing/bucketing/BoundedHash#get:bucketingHash
  call $assembly/types/targetV2/TargetV2#decideTargetVariation
  local.tee $variation_id
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $feature
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $variation_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/featureV2/FeatureV2#getVariationById
  local.tee $variation
  i32.store $0 offset=16
  local.get $variation
  if
   local.get $variation
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   i32.const 18288
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $variation_id
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/string/String#concat
   i32.const 18368
   i32.const 258
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#constructor (param $this i32) (param $reason i32) (param $details i32) (param $target_id i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 139
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/bucketedUserConfig/EvalReason#set:reason
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/bucketedUserConfig/EvalReason#set:details
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/bucketedUserConfig/EvalReason#set:target_id
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $reason
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/bucketedUserConfig/EvalReason#set:reason
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $details
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/bucketedUserConfig/EvalReason#set:details
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $target_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/bucketedUserConfig/EvalReason#set:target_id
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/bucketing/bucketing/_getEvalReason (param $targetAndHashes i32) (result i32)
  (local $target i32)
  (local $hasRollout i32)
  (local $hasMultipleDistributions i32)
  (local $reason i32)
  (local $reasonDetails i32)
  (local $6 i32)
  (local $7 i32)
  (local $evalReasonPrefix i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $targetAndHashes
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/bucketing/bucketing/TargetAndHashes#get:target
  local.tee $target
  i32.store $0 offset=4
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/targetV2/TargetV2#get:rollout
  i32.const 0
  i32.ne
  local.set $hasRollout
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#get:distribution
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
  i32.const 1
  i32.ne
  local.set $hasMultipleDistributions
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.TARGETING_MATCH
  local.tee $reason
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $targetAndHashes
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/bucketing/bucketing/TargetAndHashes#get:reasonDetails
  local.tee $reasonDetails
  i32.store $0 offset=16
  local.get $hasMultipleDistributions
  if (result i32)
   i32.const 1
  else
   local.get $hasRollout
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.SPLIT
   local.tee $reason
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $hasMultipleDistributions
   if (result i32)
    local.get $hasRollout
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.RANDOM_DISTRIBUTION
    local.tee $6
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ROLLOUT
    local.tee $7
    i32.store $0 offset=24
    i32.const 18496
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0
    local.get $11
    i32.const 0
    local.get $6
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=28
    local.get $11
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 18496
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0
    local.get $11
    i32.const 2
    local.get $7
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=28
    local.get $11
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 18496
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0
    local.get $11
    i32.const 6144
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
   else
    local.get $hasMultipleDistributions
    if (result i32)
     global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.RANDOM_DISTRIBUTION
    else
     global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.ROLLOUT
    end
   end
   local.tee $evalReasonPrefix
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $evalReasonPrefix
   local.tee $9
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $reasonDetails
   local.tee $10
   i32.store $0 offset=40
   i32.const 18528
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 0
   local.get $9
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=28
   local.get $11
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 18528
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 2
   local.get $10
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=28
   local.get $11
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 18528
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 6144
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=8
   local.get $11
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $reasonDetails
   i32.store $0 offset=16
  end
  i32.const 0
  local.get $reason
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  local.get $reasonDetails
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=28
  local.get $11
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=44
  local.get $11
  call $assembly/types/targetV2/TargetV2#get:_id
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=44
  local.get $11
  call $assembly/types/bucketedUserConfig/EvalReason#constructor
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#constructor (param $this i32) (param $_id i32) (param $type i32) (param $key i32) (param $_variation i32) (param $variationName i32) (param $variationKey i32) (param $evalReason i32) (result i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 138
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $_id
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $type
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:type
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:key
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $_variation
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:_variation
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variationName
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:variationName
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variationKey
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:variationKey
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $evalReason
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/bucketedUserConfig/SDKFeature#set:evalReason
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#getVariableForId (param $this i32) (param $variable_id i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdMap
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variable_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#has
  if (result i32)
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdMap
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $variable_id
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#constructor (param $this i32) (param $_feature i32) (param $_variation i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 141
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $_feature
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/bucketedUserConfig/FeatureVariation#set:_feature
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $_variation
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/bucketedUserConfig/FeatureVariation#set:_variation
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#constructor (param $this i32) (param $_id i32) (param $type i32) (param $key i32) (param $value i32) (param $_feature i32) (param $evalReason i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 143
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $_id
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:_id
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $type
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:type
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $key
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:key
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $value
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:value
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $_feature
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:_feature
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $evalReason
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/SDKVariable#set:evalReason
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor (param $this i32) (param $project i32) (param $environment i32) (param $features i32) (param $featureVariationMap i32) (param $variableVariationMap i32) (param $variables i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 137
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $project
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:project
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $environment
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:environment
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $features
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:features
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $featureVariationMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:featureVariationMap
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $variableVariationMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:variableVariationMap
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $variables
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#set:variables
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/bucketing/bucketing/_generateBucketedConfig (param $config i32) (param $user i32) (param $clientCustomData i32) (param $overrides i32) (result i32)
  (local $variableMap i32)
  (local $featureKeyMap i32)
  (local $featureVariationMap i32)
  (local $variableVariationMap i32)
  (local $i i32)
  (local $feature i32)
  (local $targetAndHashes i32)
  (local $featureOverride i32)
  (local $bucketedVariation i32)
  (local $overrideVariation i32)
  (local $variation i32)
  (local $15 i32)
  (local $evalReason i32)
  (local $y i32)
  (local $variationVar i32)
  (local $variable i32)
  (local $newVar i32)
  (local $21 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 104
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 104
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
  local.tee $variableMap
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
  local.tee $featureKeyMap
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  local.tee $featureVariationMap
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
  local.tee $variableVariationMap
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $config
   local.set $21
   global.get $~lib/memory/__stack_pointer
   local.get $21
   i32.store $0 offset=20
   local.get $21
   call $assembly/types/configBodyV2/ConfigBodyV2#get:features
   local.set $21
   global.get $~lib/memory/__stack_pointer
   local.get $21
   i32.store $0 offset=16
   local.get $21
   call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length
   i32.lt_s
   if
    block $for-continue|0
     global.get $~lib/memory/__stack_pointer
     local.get $config
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=20
     local.get $21
     call $assembly/types/configBodyV2/ConfigBodyV2#get:features
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=16
     local.get $21
     local.get $i
     call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#__get
     local.tee $feature
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $config
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=16
     local.get $21
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=20
     local.get $21
     local.get $user
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=28
     local.get $21
     local.get $clientCustomData
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=32
     local.get $21
     call $assembly/bucketing/bucketing/doesUserQualifyForFeature
     local.tee $targetAndHashes
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     local.get $overrides
     if (result i32)
      local.get $overrides
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      local.get $feature
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=28
      local.get $21
      call $assembly/types/featureV2/FeatureV2#get:_id
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=20
      local.get $21
      call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
     else
      i32.const 0
     end
     local.tee $featureOverride
     i32.store $0 offset=40
     local.get $targetAndHashes
     i32.eqz
     if (result i32)
      local.get $featureOverride
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      call $~lib/string/String.__not
     else
      i32.const 0
     end
     if
      br $for-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $targetAndHashes
     if (result i32)
      local.get $feature
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      local.get $targetAndHashes
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=20
      local.get $21
      call $assembly/bucketing/bucketing/bucketUserForVariation
     else
      i32.const 0
     end
     local.tee $bucketedVariation
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $featureOverride
     if (result i32)
      local.get $feature
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      local.get $featureOverride
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=20
      local.get $21
      call $assembly/types/featureV2/FeatureV2#getVariationById
     else
      i32.const 0
     end
     local.tee $overrideVariation
     i32.store $0 offset=48
     global.get $~lib/memory/__stack_pointer
     local.get $overrideVariation
     if (result i32)
      local.get $overrideVariation
     else
      local.get $bucketedVariation
     end
     local.tee $variation
     i32.store $0 offset=52
     local.get $variation
     i32.eqz
     if
      br $for-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $featureOverride
     if (result i32)
      i32.const 0
      global.get $assembly/types/bucketedUserConfig/EVAL_REASONS.OVERRIDE
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=20
      local.get $21
      global.get $assembly/types/bucketedUserConfig/EVAL_REASON_DETAILS.OVERRIDE
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=28
      local.get $21
      i32.const 6144
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=32
      local.get $21
      call $assembly/types/bucketedUserConfig/EvalReason#constructor
     else
      global.get $~lib/memory/__stack_pointer
      local.get $targetAndHashes
      local.tee $15
      i32.store $0 offset=56
      local.get $15
      if (result i32)
       local.get $15
      else
       i32.const 7088
       i32.const 18368
       i32.const 328
       i32.const 30
       call $~lib/builtins/abort
       unreachable
      end
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      call $assembly/bucketing/bucketing/_getEvalReason
     end
     local.tee $evalReason
     i32.store $0 offset=60
     local.get $featureKeyMap
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=16
     local.get $21
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=32
     local.get $21
     call $assembly/types/featureV2/FeatureV2#get:key
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=20
     local.get $21
     i32.const 0
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/featureV2/FeatureV2#get:_id
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=64
     local.get $21
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/featureV2/FeatureV2#get:type
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=68
     local.get $21
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/featureV2/FeatureV2#get:key
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=72
     local.get $21
     local.get $variation
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/feature/Variation#get:_id
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=76
     local.get $21
     local.get $variation
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/feature/Variation#get:name
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=80
     local.get $21
     local.get $variation
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/feature/Variation#get:key
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=84
     local.get $21
     local.get $evalReason
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=88
     local.get $21
     call $assembly/types/bucketedUserConfig/SDKFeature#constructor
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=28
     local.get $21
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#set
     drop
     local.get $featureVariationMap
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=16
     local.get $21
     local.get $feature
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=32
     local.get $21
     call $assembly/types/featureV2/FeatureV2#get:_id
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=20
     local.get $21
     local.get $variation
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=32
     local.get $21
     call $assembly/types/feature/Variation#get:_id
     local.set $21
     global.get $~lib/memory/__stack_pointer
     local.get $21
     i32.store $0 offset=28
     local.get $21
     call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
     drop
     i32.const 0
     local.set $y
     loop $for-loop|1
      local.get $y
      local.get $variation
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=20
      local.get $21
      call $assembly/types/feature/Variation#get:variables
      local.set $21
      global.get $~lib/memory/__stack_pointer
      local.get $21
      i32.store $0 offset=16
      local.get $21
      call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $variation
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=20
       local.get $21
       call $assembly/types/feature/Variation#get:variables
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=16
       local.get $21
       local.get $y
       call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
       local.tee $variationVar
       i32.store $0 offset=92
       global.get $~lib/memory/__stack_pointer
       local.get $config
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=16
       local.get $21
       local.get $variationVar
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=28
       local.get $21
       call $assembly/types/feature/VariationVariable#get:_var
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=20
       local.get $21
       call $assembly/types/configBodyV2/ConfigBodyV2#getVariableForId
       local.tee $variable
       i32.store $0 offset=96
       local.get $variable
       i32.eqz
       if
        i32.const 18560
        local.set $21
        global.get $~lib/memory/__stack_pointer
        local.get $21
        i32.store $0 offset=16
        local.get $21
        local.get $variationVar
        local.set $21
        global.get $~lib/memory/__stack_pointer
        local.get $21
        i32.store $0 offset=28
        local.get $21
        call $assembly/types/feature/VariationVariable#get:_var
        local.set $21
        global.get $~lib/memory/__stack_pointer
        local.get $21
        i32.store $0 offset=20
        local.get $21
        call $~lib/string/String#concat
        i32.const 18368
        i32.const 350
        i32.const 17
        call $~lib/builtins/abort
        unreachable
       end
       local.get $variableVariationMap
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=16
       local.get $21
       local.get $variable
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=32
       local.get $21
       call $assembly/types/configBody/Variable#get:key
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=20
       local.get $21
       i32.const 0
       local.get $feature
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=68
       local.get $21
       call $assembly/types/featureV2/FeatureV2#get:_id
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=64
       local.get $21
       local.get $variation
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=68
       local.get $21
       call $assembly/types/feature/Variation#get:_id
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=68
       local.get $21
       call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=28
       local.get $21
       call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set
       drop
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       local.get $variable
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/configBody/Variable#get:_id
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=20
       local.get $21
       local.get $variable
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/configBody/Variable#get:type
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=28
       local.get $21
       local.get $variable
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/configBody/Variable#get:key
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=32
       local.get $21
       local.get $variationVar
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/feature/VariationVariable#get:value
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=64
       local.get $21
       local.get $feature
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/featureV2/FeatureV2#get:_id
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=68
       local.get $21
       local.get $evalReason
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=72
       local.get $21
       call $assembly/types/bucketedUserConfig/SDKVariable#constructor
       local.tee $newVar
       i32.store $0 offset=100
       local.get $variableMap
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=16
       local.get $21
       local.get $variable
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=32
       local.get $21
       call $assembly/types/configBody/Variable#get:key
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=20
       local.get $21
       local.get $newVar
       local.set $21
       global.get $~lib/memory/__stack_pointer
       local.get $21
       i32.store $0 offset=28
       local.get $21
       call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set
       drop
       local.get $y
       i32.const 1
       i32.add
       local.set $y
       br $for-loop|1
      end
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.get $config
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=72
  local.get $21
  call $assembly/types/configBodyV2/ConfigBodyV2#get:project
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=20
  local.get $21
  local.get $config
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=72
  local.get $21
  call $assembly/types/configBodyV2/ConfigBodyV2#get:environment
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=28
  local.get $21
  local.get $featureKeyMap
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=32
  local.get $21
  local.get $featureVariationMap
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=64
  local.get $21
  local.get $variableVariationMap
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=68
  local.get $21
  local.get $variableMap
  local.set $21
  global.get $~lib/memory/__stack_pointer
  local.get $21
  i32.store $0 offset=72
  local.get $21
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
  local.set $21
  global.get $~lib/memory/__stack_pointer
  i32.const 104
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $21
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicProject> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicEnvironment> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/SDKFeature> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature> (param $objMap i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $objMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    local.get $jsonObj
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $objMap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/SDKFeature>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String> (param $objMap i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $objMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    local.get $jsonObj
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $objMap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/FeatureVariation> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/FeatureVariation> (param $objMap i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $objMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    local.get $jsonObj
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $objMap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/FeatureVariation>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/SDKVariable> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKVariable> (param $objMap i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $objMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    local.get $jsonObj
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $objMap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/SDKVariable>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18640
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicProject>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18688
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicEnvironment>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18736
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:features
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18784
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:featureVariationMap
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:variableVariationMap
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/FeatureVariation>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18912
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:variables
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKVariable>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/index/generateBucketedConfigForUser (param $sdkKey i32) (param $userJSONStr i32) (result i32)
  (local $config i32)
  (local $user i32)
  (local $bucketedConfig i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $config
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $userJSONStr
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $user
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $user
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  i32.const 0
  call $assembly/bucketing/bucketing/_generateBucketedConfig
  local.tee $bucketedConfig
  i32.store $0 offset=24
  local.get $bucketedConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array> (param $str i32) (result i32)
  (local $arr i32)
  (local $res i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.tee $arr
  i32.store $0
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $arr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $res
  i32.store $0 offset=12
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  local.get $res
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcUser/DVCUser.fromUTF8 (param $userStr i32) (result i32)
  (local $str i32)
  (local $userJSON i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $userStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.0
  end
  local.tee $userJSON
  i32.store $0 offset=8
  local.get $userJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 18960
   i32.const 13648
   i32.const 142
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $userJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 13648
   i32.const 143
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcUser/DVCUser.fromJSONObj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8 (param $userBytes i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $userBytes
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcUser/DVCUser.fromUTF8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/index/generateBucketedConfigForUserUTF8 (param $sdkKey i32) (param $userJSONStr i32) (result i32)
  (local $config i32)
  (local $user i32)
  (local $bucketedConfig i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $config
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $userJSONStr
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8
  local.tee $user
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $user
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  i32.const 0
  call $assembly/bucketing/bucketing/_generateBucketedConfig
  local.tee $bucketedConfig
  i32.store $0 offset=24
  local.get $bucketedConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/index/generateBucketedConfigForUserWithOverrides (param $sdkKey i32) (param $userJSONStr i32) (param $overridesJSONStr i32) (result i32)
  (local $config i32)
  (local $user i32)
  (local $str i32)
  (local $overridesJSON i32)
  (local $7 i32)
  (local $overrides i32)
  (local $bucketedConfig i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $config
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $userJSONStr
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8
  local.tee $user
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $overridesJSONStr
   local.tee $str
   i32.store $0 offset=12
   local.get $str
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.1
  end
  local.tee $overridesJSON
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $overridesJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $overridesJSON
   local.tee $7
   i32.store $0 offset=20
   local.get $7
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $7
   else
    i32.const 7328
    i32.const 19056
    i32.const 91
    i32.const 46
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $overrides
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $user
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=28
  local.get $10
  local.get $sdkKey
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=40
  local.get $10
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=32
  local.get $10
  local.get $overrides
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=36
  local.get $10
  call $assembly/bucketing/bucketing/_generateBucketedConfig
  local.tee $bucketedConfig
  i32.store $0 offset=44
  local.get $bucketedConfig
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=32
  local.get $10
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=28
  local.get $10
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.UTF8.encode@varargs
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/typedarray/Uint8Array#slice (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $start i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $slice i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $~lib/typedarray/SLICE<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $array
   i32.store $0
   local.get $begin
   local.set $start
   local.get $end
   local.set $end|5
   local.get $array
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $start
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $start
    local.get $len
    i32.add
    local.tee $7
    i32.const 0
    local.tee $8
    local.get $7
    local.get $8
    i32.gt_s
    select
   else
    local.get $start
    local.tee $9
    local.get $len
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_s
    select
   end
   local.set $start
   local.get $end|5
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $end|5
    local.get $len
    i32.add
    local.tee $11
    i32.const 0
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_s
    select
   else
    local.get $end|5
    local.tee $13
    local.get $len
    local.tee $14
    local.get $13
    local.get $14
    i32.lt_s
    select
   end
   local.set $end|5
   local.get $end|5
   local.get $start
   i32.sub
   local.tee $15
   i32.const 0
   local.tee $16
   local.get $15
   local.get $16
   i32.gt_s
   select
   local.set $len
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $len
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $slice
   i32.store $0 offset=8
   local.get $slice
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/arraybuffer/ArrayBufferView#get:dataStart
   local.get $array
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/arraybuffer/ArrayBufferView#get:dataStart
   local.get $start
   i32.const 0
   i32.shl
   i32.add
   local.get $len
   i32.const 0
   i32.shl
   memory.copy $0 $0
   local.get $slice
   br $~lib/typedarray/SLICE<~lib/typedarray/Uint8Array,u8>|inlined.0
  end
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
  return
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#constructor (param $this i32) (param $sdkKey i32) (param $variableKey i32) (param $variableType i32) (param $user i32) (param $shouldTrackEvent i32) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 17
   i32.const 154
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:sdkKey
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableKey
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableType
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:user
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:shouldTrackEvent
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $sdkKey
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:sdkKey
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $variableKey
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableKey
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $variableType
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableType
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $user
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:user
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $shouldTrackEvent
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:shouldTrackEvent
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor (param $this i32) (param $userId i32) (param $email i32) (param $name i32) (param $language i32) (param $country i32) (param $appBuild i32) (param $appVersion i32) (param $deviceModel i32) (param $customData i32) (param $privateCustomData i32) (result i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 155
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:userId
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:email
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:name
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:language
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:country
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appBuild
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appVersion
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:deviceModel
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:customData
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:privateCustomData
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $userId
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:userId
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $email
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:email
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $name
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:name
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $language
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:language
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $country
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:country
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $appBuild
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appBuild
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $appVersion
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appVersion
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $deviceModel
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:deviceModel
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $customData
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:customData
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $privateCustomData
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:privateCustomData
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#constructor (param $this i32) (param $value i32) (param $isNull i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 156
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/protobuf-generated/NullableString/NullableString#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/protobuf-generated/NullableString/NullableString#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/protobuf-generated/NullableString/NullableString#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $isNull
  call $assembly/types/protobuf-generated/NullableString/NullableString#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.tee $message
  i32.store $0 offset=8
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $tag
        i32.const 3
        i32.shr_u
        local.set $5
        local.get $5
        i32.const 1
        i32.eq
        br_if $case0|1
        local.get $5
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=12
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#string@override
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $assembly/types/protobuf-generated/NullableString/NullableString#set:value
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      call $assembly/types/protobuf-generated/NullableString/NullableString#set:isNull
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor (param $this i32) (param $value f64) (param $isNull i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 157
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  f64.const 0
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $isNull
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  f64.const 0
  i32.const 0
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor
  local.tee $message
  i32.store $0 offset=4
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $tag
        i32.const 3
        i32.shr_u
        local.set $5
        local.get $5
        i32.const 1
        i32.eq
        br_if $case0|1
        local.get $5
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=8
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#double@override
       call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:value
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#set:isNull
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor (param $this i32) (param $value i32) (param $isNull i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 158
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $isNull
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:isNull
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 160
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor@varargs (param $this i32) (param $value i32) (param $isNull i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
    local.tee $value
    i32.store $0
   end
   i32.const 0
   local.set $isNull
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $isNull
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor (param $this i32) (param $type i32) (param $boolValue i32) (param $doubleValue f64) (param $stringValue i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 159
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:type
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:boolValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  f64.const 0
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:doubleValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:stringValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $type
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:type
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $boolValue
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:boolValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $doubleValue
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:doubleValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $stringValue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:stringValue
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  f64.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
  local.tee $message
  i32.store $0 offset=8
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case4|1
      block $case3|1
       block $case2|1
        block $case1|1
         block $case0|1
          local.get $tag
          i32.const 3
          i32.shr_u
          local.set $5
          local.get $5
          i32.const 1
          i32.eq
          br_if $case0|1
          local.get $5
          i32.const 2
          i32.eq
          br_if $case1|1
          local.get $5
          i32.const 3
          i32.eq
          br_if $case2|1
          local.get $5
          i32.const 4
          i32.eq
          br_if $case3|1
          br $case4|1
         end
         local.get $message
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $6
         local.get $reader
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=12
         local.get $6
         call $~lib/as-proto/assembly/Reader/Reader#int32@override
         call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:type
         br $break|1
        end
        local.get $message
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=12
        local.get $6
        call $~lib/as-proto/assembly/Reader/Reader#bool@override
        call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:boolValue
        br $break|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=12
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#double@override
       call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:doubleValue
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=16
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#string@override
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $6
      call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#set:stringValue
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $valueKey i32)
  (local $valueValue i32)
  (local $valueHasKey i32)
  (local $valueHasValue i32)
  (local $end|10 i32)
  (local $tag|11 i32)
  (local $12 i32)
  (local $value i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor@varargs
  local.tee $message
  i32.store $0 offset=4
  loop $while-continue|0
   local.get $reader
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store $0
   local.get $14
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0
    local.get $14
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $tag
        i32.const 3
        i32.shr_u
        local.set $5
        local.get $5
        i32.const 1
        i32.eq
        br_if $case0|1
        local.get $5
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 6144
       local.tee $valueKey
       i32.store $0 offset=8
       i32.const 0
       local.set $valueValue
       i32.const 0
       local.set $valueHasKey
       i32.const 0
       local.set $valueHasValue
       local.get $reader
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store $0
       local.get $14
       call $~lib/as-proto/assembly/Reader/Reader#get:ptr
       local.get $reader
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store $0
       local.get $14
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       i32.add
       local.set $end|10
       loop $for-loop|2
        local.get $reader
        local.set $14
        global.get $~lib/memory/__stack_pointer
        local.get $14
        i32.store $0
        local.get $14
        call $~lib/as-proto/assembly/Reader/Reader#get:ptr
        local.get $end|10
        i32.lt_u
        if
         local.get $reader
         local.set $14
         global.get $~lib/memory/__stack_pointer
         local.get $14
         i32.store $0
         local.get $14
         call $~lib/as-proto/assembly/Reader/Reader#uint32@override
         local.set $tag|11
         block $break|3
          block $case2|3
           block $case1|3
            block $case0|3
             local.get $tag|11
             i32.const 3
             i32.shr_u
             local.set $12
             local.get $12
             i32.const 1
             i32.eq
             br_if $case0|3
             local.get $12
             i32.const 2
             i32.eq
             br_if $case1|3
             br $case2|3
            end
            global.get $~lib/memory/__stack_pointer
            local.get $reader
            local.set $14
            global.get $~lib/memory/__stack_pointer
            local.get $14
            i32.store $0
            local.get $14
            call $~lib/as-proto/assembly/Reader/Reader#string@override
            local.tee $valueKey
            i32.store $0 offset=8
            i32.const 1
            local.set $valueHasKey
            br $break|3
           end
           global.get $~lib/memory/__stack_pointer
           local.get $reader
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0
           local.get $14
           local.get $reader
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0 offset=12
           local.get $14
           call $~lib/as-proto/assembly/Reader/Reader#uint32@override
           call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue.decode
           local.tee $valueValue
           i32.store $0 offset=16
           i32.const 1
           local.set $valueHasValue
           br $break|3
          end
          local.get $reader
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0
          local.get $14
          local.get $tag|11
          i32.const 7
          i32.and
          call $~lib/as-proto/assembly/Reader/Reader#skipType@override
          br $break|3
         end
         local.get $message
         local.set $14
         global.get $~lib/memory/__stack_pointer
         local.get $14
         i32.store $0
         local.get $14
         call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value
         i32.const 0
         i32.eq
         if
          local.get $message
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0
          local.get $14
          i32.const 0
          call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0 offset=12
          local.get $14
          call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:value
         end
         global.get $~lib/memory/__stack_pointer
         local.get $message
         local.set $14
         global.get $~lib/memory/__stack_pointer
         local.get $14
         i32.store $0
         local.get $14
         call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value
         local.tee $value
         i32.store $0 offset=20
         local.get $value
         i32.const 0
         i32.ne
         if (result i32)
          local.get $valueHasKey
         else
          i32.const 0
         end
         if (result i32)
          local.get $valueHasValue
         else
          i32.const 0
         end
         if (result i32)
          local.get $valueValue
          i32.const 0
          i32.ne
         else
          i32.const 0
         end
         if
          local.get $value
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0
          local.get $14
          local.get $valueKey
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0 offset=12
          local.get $14
          local.get $valueValue
          local.set $14
          global.get $~lib/memory/__stack_pointer
          local.get $14
          i32.store $0 offset=24
          local.get $14
          call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set
          drop
         end
         br $for-loop|2
        end
       end
       br $break|1
      end
      local.get $message
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0
      local.get $14
      local.get $reader
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0 offset=12
      local.get $14
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#set:isNull
      br $break|1
     end
     local.get $reader
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0
     local.get $14
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor
  local.tee $message
  i32.store $0 offset=8
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $tag
                i32.const 3
                i32.shr_u
                local.set $5
                local.get $5
                i32.const 1
                i32.eq
                br_if $case0|1
                local.get $5
                i32.const 2
                i32.eq
                br_if $case1|1
                local.get $5
                i32.const 3
                i32.eq
                br_if $case2|1
                local.get $5
                i32.const 4
                i32.eq
                br_if $case3|1
                local.get $5
                i32.const 5
                i32.eq
                br_if $case4|1
                local.get $5
                i32.const 6
                i32.eq
                br_if $case5|1
                local.get $5
                i32.const 7
                i32.eq
                br_if $case6|1
                local.get $5
                i32.const 8
                i32.eq
                br_if $case7|1
                local.get $5
                i32.const 9
                i32.eq
                br_if $case8|1
                local.get $5
                i32.const 10
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $message
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store $0
               local.get $6
               local.get $reader
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store $0 offset=12
               local.get $6
               call $~lib/as-proto/assembly/Reader/Reader#string@override
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store $0 offset=4
               local.get $6
               call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:userId
               br $break|1
              end
              local.get $message
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0
              local.get $6
              local.get $reader
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0 offset=12
              local.get $6
              local.get $reader
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0 offset=16
              local.get $6
              call $~lib/as-proto/assembly/Reader/Reader#uint32@override
              call $assembly/types/protobuf-generated/NullableString/NullableString.decode
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0 offset=4
              local.get $6
              call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:email
              br $break|1
             end
             local.get $message
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0
             local.get $6
             local.get $reader
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0 offset=12
             local.get $6
             local.get $reader
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0 offset=16
             local.get $6
             call $~lib/as-proto/assembly/Reader/Reader#uint32@override
             call $assembly/types/protobuf-generated/NullableString/NullableString.decode
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0 offset=4
             local.get $6
             call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:name
             br $break|1
            end
            local.get $message
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0
            local.get $6
            local.get $reader
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=12
            local.get $6
            local.get $reader
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=16
            local.get $6
            call $~lib/as-proto/assembly/Reader/Reader#uint32@override
            call $assembly/types/protobuf-generated/NullableString/NullableString.decode
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=4
            local.get $6
            call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:language
            br $break|1
           end
           local.get $message
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0
           local.get $6
           local.get $reader
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=12
           local.get $6
           local.get $reader
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=16
           local.get $6
           call $~lib/as-proto/assembly/Reader/Reader#uint32@override
           call $assembly/types/protobuf-generated/NullableString/NullableString.decode
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=4
           local.get $6
           call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:country
           br $break|1
          end
          local.get $message
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          local.get $reader
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=12
          local.get $6
          local.get $reader
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=16
          local.get $6
          call $~lib/as-proto/assembly/Reader/Reader#uint32@override
          call $assembly/types/protobuf-generated/NullableDouble/NullableDouble.decode
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=4
          local.get $6
          call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appBuild
          br $break|1
         end
         local.get $message
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $6
         local.get $reader
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=12
         local.get $6
         local.get $reader
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=16
         local.get $6
         call $~lib/as-proto/assembly/Reader/Reader#uint32@override
         call $assembly/types/protobuf-generated/NullableString/NullableString.decode
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=4
         local.get $6
         call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:appVersion
         br $break|1
        end
        local.get $message
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=12
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=16
        local.get $6
        call $~lib/as-proto/assembly/Reader/Reader#uint32@override
        call $assembly/types/protobuf-generated/NullableString/NullableString.decode
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=4
        local.get $6
        call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:deviceModel
        br $break|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=12
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=16
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:customData
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=16
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#uint32@override
      call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#set:privateCustomData
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#constructor
  local.tee $message
  i32.store $0 offset=12
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case5|1
      block $case4|1
       block $case3|1
        block $case2|1
         block $case1|1
          block $case0|1
           local.get $tag
           i32.const 3
           i32.shr_u
           local.set $5
           local.get $5
           i32.const 1
           i32.eq
           br_if $case0|1
           local.get $5
           i32.const 2
           i32.eq
           br_if $case1|1
           local.get $5
           i32.const 3
           i32.eq
           br_if $case2|1
           local.get $5
           i32.const 4
           i32.eq
           br_if $case3|1
           local.get $5
           i32.const 5
           i32.eq
           br_if $case4|1
           br $case5|1
          end
          local.get $message
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          local.get $reader
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=8
          local.get $6
          call $~lib/as-proto/assembly/Reader/Reader#string@override
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=4
          local.get $6
          call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:sdkKey
          br $break|1
         end
         local.get $message
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $6
         local.get $reader
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=8
         local.get $6
         call $~lib/as-proto/assembly/Reader/Reader#string@override
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=4
         local.get $6
         call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableKey
         br $break|1
        end
        local.get $message
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=4
        local.get $6
        call $~lib/as-proto/assembly/Reader/Reader#int32@override
        call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:variableType
        br $break|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=8
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=16
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:user
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#set:shouldTrackEvent
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#reset (param $this i32) (param $buf i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  call $~lib/as-proto/assembly/Reader/Reader#set:ptr
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.add
  call $~lib/as-proto/assembly/Reader/Reader#set:end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $buf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#set:buf
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB> (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#reset
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $length
  i32.const 2
  global.set $~argumentsLength
  local.get $decoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $length
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB (param $buffer i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $buffer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 19120
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Null> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/types/dvcUser/getJSONObjFromPBCustomData (param $nullableCustomData i32) (result i32)
  (local $customDataObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $value i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $nullableCustomData
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $nullableCustomData
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:isNull
  end
  if
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $customDataObj
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $nullableCustomData
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#keys
  local.tee $keys
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $nullableCustomData
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=20
    local.get $6
    call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $key
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get
    local.tee $value
    i32.store $0 offset=24
    local.get $value
    if (result i32)
     local.get $value
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type
     global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Bool
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $customDataObj
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $key
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $6
     local.get $value
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=20
     local.get $6
     call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:boolValue
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
    else
     local.get $value
     if (result i32)
      local.get $value
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type
      global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Num
      i32.eq
     else
      i32.const 0
     end
     if
      local.get $customDataObj
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $key
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      local.get $value
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=20
      local.get $6
      call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:doubleValue
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
     else
      local.get $value
      if (result i32)
       local.get $value
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type
       global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Str
       i32.eq
      else
       i32.const 0
      end
      if
       local.get $customDataObj
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $key
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=8
       local.get $6
       local.get $value
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=28
       local.get $6
       call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:stringValue
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=20
       local.get $6
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
      else
       local.get $value
       if (result i32)
        local.get $value
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type
        global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Null
        i32.eq
       else
        i32.const 0
       end
       if
        local.get $customDataObj
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $key
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=8
        local.get $6
        i32.const 0
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=20
        local.get $6
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Null>
       else
        i32.const 13728
        i32.const 13648
        i32.const 47
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
      end
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $customDataObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/dvcUser/DVCUser.fromPBUser (param $userPB i32) (result i32)
  (local $nullableEmail i32)
  (local $nullableName i32)
  (local $nullableLanguage i32)
  (local $nullableCountry i32)
  (local $nullableAppBuild i32)
  (local $nullableAppVersion i32)
  (local $nullableDeviceModel i32)
  (local $nullableCustomData i32)
  (local $nullablePrivateCustomData i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:email
  local.tee $nullableEmail
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:name
  local.tee $nullableName
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:language
  local.tee $nullableLanguage
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:country
  local.tee $nullableCountry
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appBuild
  local.tee $nullableAppBuild
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appVersion
  local.tee $nullableAppVersion
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:deviceModel
  local.tee $nullableDeviceModel
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:customData
  local.tee $nullableCustomData
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:privateCustomData
  local.tee $nullablePrivateCustomData
  i32.store $0 offset=36
  i32.const 0
  local.get $userPB
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=68
  local.get $10
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:userId
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=40
  local.get $10
  local.get $nullableEmail
  if (result i32)
   local.get $nullableEmail
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableEmail
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=44
  local.get $10
  local.get $nullableName
  if (result i32)
   local.get $nullableName
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableName
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=48
  local.get $10
  local.get $nullableLanguage
  if (result i32)
   local.get $nullableLanguage
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableLanguage
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=52
  local.get $10
  local.get $nullableCountry
  if (result i32)
   local.get $nullableCountry
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableCountry
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=56
  local.get $10
  local.get $nullableAppBuild
  if (result i32)
   local.get $nullableAppBuild
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result f64)
   local.get $nullableAppBuild
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:value
  else
   f64.const nan:0x8000000000000
  end
  local.get $nullableAppVersion
  if (result i32)
   local.get $nullableAppVersion
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableAppVersion
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=60
  local.get $10
  local.get $nullableDeviceModel
  if (result i32)
   local.get $nullableDeviceModel
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $nullableDeviceModel
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=68
   local.get $10
   call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=64
  local.get $10
  local.get $nullableCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=68
  local.get $10
  call $assembly/types/dvcUser/getJSONObjFromPBCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=68
  local.get $10
  local.get $nullablePrivateCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=68
  local.get $10
  call $assembly/types/dvcUser/getJSONObjFromPBCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=72
  local.get $10
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $assembly/index/variableTypeFromPB (param $pbVariableType i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $case4|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $pbVariableType
       local.set $1
       local.get $1
       global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Boolean
       i32.eq
       br_if $case0|0
       local.get $1
       global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Number
       i32.eq
       br_if $case1|0
       local.get $1
       global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.String
       i32.eq
       br_if $case2|0
       local.get $1
       global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.JSON
       i32.eq
       br_if $case3|0
       br $case4|0
      end
      global.get $assembly/index/VariableType.Boolean
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      return
     end
     global.get $assembly/index/VariableType.Number
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    global.get $assembly/index/VariableType.String
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $assembly/index/VariableType.JSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 19264
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $pbVariableType
  i32.const 10
  call $~lib/number/I32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/string/String#concat
  i32.const 19056
  i32.const 125
  i32.const 13
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#getVariableForKey (param $this i32) (param $variableKey i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableKeyMap
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variableKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#has
  if (result i32)
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableKeyMap
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $variableKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#getFeatureForVariableId (param $this i32) (param $variable_id i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdToFeatureMap
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variable_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#has
  if (result i32)
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   call $assembly/types/configBodyV2/ConfigBodyV2#get:_variableIdToFeatureMap
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $variable_id
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/feature/Variation#getVariableById (param $this i32) (param $variableId i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/feature/Variation#get:_variablesById
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $variableId
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#has
  if (result i32)
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   call $assembly/types/feature/Variation#get:_variablesById
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $variableId
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/bucketing/bucketing/BucketedVariableResponse#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 162
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:variable
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:variation
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:feature
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/_generateBucketedVariableForUser (param $config i32) (param $user i32) (param $key i32) (param $clientCustomData i32) (result i32)
  (local $variable i32)
  (local $featureForVariable i32)
  (local $targetAndHashes i32)
  (local $variation i32)
  (local $variationVar i32)
  (local $evalReason i32)
  (local $sdkVar i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 60
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $key
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/types/configBodyV2/ConfigBodyV2#getVariableForKey
  local.tee $variable
  i32.store $0 offset=8
  local.get $variable
  i32.eqz
  if
   i32.const 0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $variable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=12
  local.get $12
  call $assembly/types/configBody/Variable#get:_id
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/types/configBodyV2/ConfigBodyV2#getFeatureForVariableId
  local.tee $featureForVariable
  i32.store $0 offset=16
  local.get $featureForVariable
  i32.eqz
  if
   i32.const 0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $featureForVariable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  local.get $user
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=12
  local.get $12
  local.get $clientCustomData
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=20
  local.get $12
  call $assembly/bucketing/bucketing/doesUserQualifyForFeature
  local.tee $targetAndHashes
  i32.store $0 offset=24
  local.get $targetAndHashes
  i32.eqz
  if
   i32.const 0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $featureForVariable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $targetAndHashes
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/bucketUserForVariation
  local.tee $variation
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $variation
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $variable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=12
  local.get $12
  call $assembly/types/configBody/Variable#get:_id
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/types/feature/Variation#getVariableById
  local.tee $variationVar
  i32.store $0 offset=32
  local.get $variationVar
  i32.eqz
  if
   i32.const 19344
   i32.const 18368
   i32.const 413
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $targetAndHashes
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  call $assembly/bucketing/bucketing/_getEvalReason
  local.tee $evalReason
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $variable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/configBody/Variable#get:_id
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  local.get $variable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/configBody/Variable#get:type
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=12
  local.get $12
  local.get $variable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/configBody/Variable#get:key
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=20
  local.get $12
  local.get $variationVar
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/feature/VariationVariable#get:value
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=40
  local.get $12
  local.get $featureForVariable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/featureV2/FeatureV2#get:_id
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=44
  local.get $12
  local.get $evalReason
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=48
  local.get $12
  call $assembly/types/bucketedUserConfig/SDKVariable#constructor
  local.tee $sdkVar
  i32.store $0 offset=52
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/bucketing/bucketing/BucketedVariableResponse#constructor
  local.tee $11
  i32.store $0 offset=56
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $sdkVar
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:variable
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $variation
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:variation
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0
  local.get $12
  local.get $featureForVariable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store $0 offset=4
  local.get $12
  call $assembly/bucketing/bucketing/BucketedVariableResponse#set:feature
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/managers/eventQueueManager/getEventQueue (param $sdkKey i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#has
  i32.eqz
  if
   i32.const 19456
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $sdkKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String#concat
   i32.const 19552
   i32.const 23
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/dvcEvent/DVCEvent#constructor (param $this i32) (param $type i32) (param $target i32) (param $date i32) (param $value f64) (param $metaData i32) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 109
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $type
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#set:type
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $target
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#set:target
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $date
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#set:date
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $value
  call $assembly/types/dvcEvent/DVCEvent#set:value
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $metaData
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#set:metaData
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/set/Set<~lib/string/String>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/set/Set<~lib/string/String>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled (param $this i32) (param $event i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $event
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/dvcEvent/DVCEvent#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/set/Set<~lib/string/String>#has
  i32.eqz
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $assembly/eventQueue/eventQueue/EventQueue#get:options
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableCustomEventLogging
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  else
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $assembly/eventQueue/eventQueue/EventQueue#get:options
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableAutomaticEventLogging
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 115
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.1
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.2 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.2
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.3 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.3
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.4 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.4
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 114
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 112
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,i64>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,i64>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.0 (result i32)
   i32.const 24
   br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,i64>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,i64>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,i64>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,i64>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 113
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#has
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,i64>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,i64>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,i64>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,i64>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,i64>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get (param $this i32) (param $key i32) (result i64)
  (local $entry i32)
  (local $3 i32)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,i64>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,i64>#get:value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.1 (result i32)
   i32.const 24
   br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,i64>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.2 (result i32)
   i32.const 24
   br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,i64>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,i64>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,i64>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,i64>#get:value
     call $~lib/map/MapEntry<~lib/string/String,i64>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,i64>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.3 (result i32)
      i32.const 24
      br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.4 (result i32)
     i32.const 24
     br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,i64>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,i64>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,i64>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,i64>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,i64>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,i64>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set (param $this i32) (param $key i32) (param $value i64) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,i64>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   call $~lib/map/MapEntry<~lib/string/String,i64>#set:value
   i32.const 0
   drop
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,i64>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,i64>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,i64>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,i64>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,i64>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,i64>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.5 (result i32)
    i32.const 24
    br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,i64>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   call $~lib/map/MapEntry<~lib/string/String,i64>#set:value
   i32.const 0
   drop
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,i64>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,i64>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,i64>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap (param $this i32) (param $evalReasonAggMap i32) (param $eventMetadata i32)
  (local $evalReason i32)
  (local $evalReasonString i32)
  (local $evalReasonCount i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $eventMetadata
  if (result i32)
   local.get $eventMetadata
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 19648
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $eventMetadata
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 19648
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
   local.tee $evalReason
   i32.store $0 offset=8
   local.get $evalReason
   if
    global.get $~lib/memory/__stack_pointer
    local.get $evalReason
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.tee $evalReasonString
    i32.store $0 offset=12
    local.get $evalReasonAggMap
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $evalReasonString
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/map/Map<~lib/string/String,i64>#has
    if
     local.get $evalReasonAggMap
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $evalReasonString
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     call $~lib/map/Map<~lib/string/String,i64>#get
     local.set $evalReasonCount
     local.get $evalReasonAggMap
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $evalReason
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     local.get $evalReasonCount
     i64.const 1
     i64.add
     call $~lib/map/Map<~lib/string/String,i64>#set
     drop
    else
     local.get $evalReasonAggMap
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $evalReason
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     i64.const 1
     call $~lib/map/Map<~lib/string/String,i64>#set
     drop
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent (param $this i32) (param $event i32) (param $variableVariationMap i32) (param $aggByVariation i32)
  (local $type i32)
  (local $target i32)
  (local $variableFeatureVarAggMap i32)
  (local $featureVarAggMap i32)
  (local $8 i32)
  (local $featureVariation i32)
  (local $evalReasonAggMap i32)
  (local $variationAggMap i32)
  (local $variationAggMap|12 i32)
  (local $evalReasonAggMap|13 i32)
  (local $evalReasonAggMap|14 i32)
  (local $variationAggMap|15 i32)
  (local $16 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 64
  memory.fill $0
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  local.get $event
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  call $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $event
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $assembly/types/dvcEvent/DVCEvent#get:type
  local.tee $type
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $event
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $assembly/types/dvcEvent/DVCEvent#get:target
  local.tee $target
  i32.store $0 offset=12
  local.get $target
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  call $~lib/string/String.__not
  if
   i32.const 19696
   i32.const 19808
   i32.const 122
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=16
  local.get $16
  call $assembly/eventQueue/eventQueue/EventQueue#get:aggEventQueue
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  local.get $type
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#has
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $assembly/eventQueue/eventQueue/EventQueue#get:aggEventQueue
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $type
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get
   local.tee $variableFeatureVarAggMap
   i32.store $0 offset=20
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#constructor
   local.tee $variableFeatureVarAggMap
   i32.store $0 offset=20
   local.get $this
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=24
   local.get $16
   call $assembly/eventQueue/eventQueue/EventQueue#get:aggEventQueue
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $type
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   local.get $variableFeatureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set
   drop
  end
  local.get $variableFeatureVarAggMap
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0
  local.get $16
  local.get $target
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store $0 offset=4
  local.get $16
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#has
  if
   global.get $~lib/memory/__stack_pointer
   local.get $variableFeatureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $target
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get
   local.tee $featureVarAggMap
   i32.store $0 offset=28
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#constructor
   local.tee $featureVarAggMap
   i32.store $0 offset=28
   local.get $variableFeatureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $target
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   local.get $featureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#set
   drop
  end
  local.get $aggByVariation
  if
   local.get $variableVariationMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $target
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#has
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $target
    local.tee $8
    i32.store $0 offset=32
    i32.const 20112
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 1
    local.get $8
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 20112
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 6144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 19808
    i32.const 143
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $variableVariationMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $target
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get
   local.tee $featureVariation
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<~lib/string/String,i64>#constructor
   local.tee $evalReasonAggMap
   i32.store $0 offset=40
   local.get $featureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $featureVariation
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $assembly/types/bucketedUserConfig/FeatureVariation#get:_feature
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.get $featureVarAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $featureVariation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $assembly/types/bucketedUserConfig/FeatureVariation#get:_feature
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get
    local.tee $variationAggMap
    i32.store $0 offset=44
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor
    local.tee $variationAggMap
    i32.store $0 offset=44
    local.get $featureVarAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $featureVariation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=24
    local.get $16
    call $assembly/types/bucketedUserConfig/FeatureVariation#get:_feature
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    local.get $variationAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set
    drop
   end
   local.get $variationAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $featureVariation
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $assembly/types/bucketedUserConfig/FeatureVariation#get:_variation
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.get $variationAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $featureVariation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $assembly/types/bucketedUserConfig/FeatureVariation#get:_variation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get
    local.tee $evalReasonAggMap
    i32.store $0 offset=40
   else
    local.get $variationAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $featureVariation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=24
    local.get $16
    call $assembly/types/bucketedUserConfig/FeatureVariation#get:_variation
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    local.get $evalReasonAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set
    drop
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $assembly/eventQueue/eventQueue/EventQueue#get:eventQueueCount
    i32.const 1
    i32.add
    call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
   end
   local.get $this
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   local.get $evalReasonAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   local.get $event
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=24
   local.get $16
   call $assembly/types/dvcEvent/DVCEvent#get:metaData
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=16
   local.get $16
   call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
  else
   local.get $featureVarAggMap
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0
   local.get $16
   i32.const 20144
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store $0 offset=4
   local.get $16
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.get $featureVarAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 20144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get
    local.tee $variationAggMap|12
    i32.store $0 offset=48
    local.get $variationAggMap|12
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 20144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#has
    if
     global.get $~lib/memory/__stack_pointer
     local.get $variationAggMap|12
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     i32.const 20144
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=4
     local.get $16
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get
     local.tee $evalReasonAggMap|13
     i32.store $0 offset=52
     local.get $this
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0
     local.get $16
     local.get $evalReasonAggMap|13
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=4
     local.get $16
     local.get $event
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=24
     local.get $16
     call $assembly/types/dvcEvent/DVCEvent#get:metaData
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $16
     i32.store $0 offset=16
     local.get $16
     call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
    else
     i32.const 20176
     i32.const 19808
     i32.const 176
     i32.const 21
     call $~lib/builtins/abort
     unreachable
    end
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $~lib/map/Map<~lib/string/String,i64>#constructor
    local.tee $evalReasonAggMap|14
    i32.store $0 offset=56
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $evalReasonAggMap|14
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    local.get $event
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=24
    local.get $16
    call $assembly/types/dvcEvent/DVCEvent#get:metaData
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor
    local.tee $variationAggMap|15
    i32.store $0 offset=60
    local.get $variationAggMap|15
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 20144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    local.get $evalReasonAggMap|14
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#set
    drop
    local.get $featureVarAggMap
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    i32.const 20144
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    local.get $variationAggMap|15
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=16
    local.get $16
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#set
    drop
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0
    local.get $16
    local.get $this
    local.set $16
    global.get $~lib/memory/__stack_pointer
    local.get $16
    i32.store $0 offset=4
    local.get $16
    call $assembly/eventQueue/eventQueue/EventQueue#get:eventQueueCount
    i32.const 1
    i32.add
    call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent (param $sdkKey i32) (param $variableVariationMap i32) (param $variable i32) (param $variableKey i32)
  (local $eventQueue i32)
  (local $eventType i32)
  (local $metaData i32)
  (local $event i32)
  (local $aggByVariation i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $eventQueue
  i32.store $0 offset=4
  local.get $eventQueue
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $assembly/eventQueue/eventQueue/EventQueue#get:options
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableAutomaticEventLogging
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $variable
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 5664
  else
   i32.const 5792
  end
  local.tee $eventType
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $metaData
  i32.store $0 offset=16
  local.get $variable
  if
   local.get $metaData
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   i32.const 19648
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   local.get $variable
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=28
   local.get $9
   call $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=24
   local.get $9
   call $assembly/types/bucketedUserConfig/EvalReason#get:reason
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=20
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  else
   local.get $metaData
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   i32.const 19648
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   i32.const 3408
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=20
   local.get $9
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $eventType
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  local.get $variableKey
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=20
  local.get $9
  i32.const 0
  f64.const nan:0x8000000000000
  local.get $metaData
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=32
  local.get $9
  call $assembly/types/dvcEvent/DVCEvent#constructor
  local.tee $event
  i32.store $0 offset=36
  local.get $eventType
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  i32.const 5664
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $~lib/string/String.__eq
  local.set $aggByVariation
  local.get $eventQueue
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $event
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  local.get $variableVariationMap
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=20
  local.get $9
  local.get $aggByVariation
  call $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/_variableForDVCUser (param $sdkKey i32) (param $dvcUser i32) (param $variableKey i32) (param $variableType i32) (param $shouldTrackEvent i32) (result i32)
  (local $config i32)
  (local $response i32)
  (local $variable i32)
  (local $variableVariationMap i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $config
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $config
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $dvcUser
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  local.get $variableKey
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  local.get $sdkKey
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=20
  local.get $9
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=16
  local.get $9
  call $assembly/bucketing/bucketing/_generateBucketedVariableForUser
  local.tee $response
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $response
  if (result i32)
   local.get $response
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $assembly/bucketing/bucketing/BucketedVariableResponse#get:variable
  else
   i32.const 0
  end
  if (result i32)
   local.get $response
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $assembly/bucketing/bucketing/BucketedVariableResponse#get:variable
  else
   i32.const 0
  end
  local.tee $variable
  i32.store $0 offset=28
  local.get $variable
  if (result i32)
   local.get $variable
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   call $assembly/types/bucketedUserConfig/SDKVariable#get:type
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   global.get $assembly/index/VariableTypeStrings
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   local.get $variableType
   call $~lib/array/Array<~lib/string/String>#__get
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   i32.const 0
   local.set $variable
  end
  local.get $shouldTrackEvent
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $variableVariationMap
   i32.store $0 offset=32
   local.get $response
   if
    local.get $variableVariationMap
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $variableKey
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 0
    local.get $response
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=40
    local.get $9
    call $assembly/bucketing/bucketing/BucketedVariableResponse#get:feature
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=36
    local.get $9
    call $assembly/types/featureV2/FeatureV2#get:_id
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=20
    local.get $9
    local.get $response
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=40
    local.get $9
    call $assembly/bucketing/bucketing/BucketedVariableResponse#get:variation
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=36
    local.get $9
    call $assembly/types/feature/Variation#get:_id
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=36
    local.get $9
    call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set
    drop
   end
   local.get $sdkKey
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $variableVariationMap
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   local.get $variable
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   local.get $variableKey
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=16
   local.get $9
   call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
  end
  local.get $variable
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor (param $this i32) (param $reason i32) (param $details i32) (param $targetId i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 163
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:reason
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:details
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:targetId
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $reason
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:reason
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $details
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:details
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $targetId
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:targetId
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor (param $this i32) (param $id i32) (param $type i32) (param $key i32) (param $boolValue i32) (param $doubleValue f64) (param $stringValue i32) (param $evalReason i32) (param $feature i32) (param $eval i32) (result i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 164
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:type
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:key
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:boolValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  f64.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:doubleValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:stringValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:evalReason
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:feature
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:eval
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $id
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $type
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:type
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $key
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:key
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $boolValue
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:boolValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $doubleValue
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:doubleValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $stringValue
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:stringValue
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $evalReason
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:evalReason
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $feature
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:feature
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $eval
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:eval
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable.variableTypeFromString (param $str i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 1728
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__eq
  if
   global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Boolean
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  else
   local.get $str
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1776
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String.__eq
   if
    global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.Number
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   else
    local.get $str
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 1696
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/string/String.__eq
    if
     global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.String
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     return
    else
     local.get $str
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     i32.const 2624
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $1
     call $~lib/string/String.__eq
     if
      global.get $assembly/types/protobuf-generated/VariableType_PB/VariableType_PB.JSON
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
      return
     else
      i32.const 20400
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $str
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $1
      call $~lib/string/String#concat
      i32.const 20304
      i32.const 306
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString.encode (param $message i32) (param $writer i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/protobuf-generated/NullableString/NullableString#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/NullableString/NullableString#get:isNull
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB.encode (param $message i32) (param $writer i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:reason
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 18
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:details
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 26
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#get:targetId
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.encode (param $message i32) (param $writer i32)
  (local $evalReason i32)
  (local $feature i32)
  (local $eval i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:type
  call $~lib/as-proto/assembly/Writer/Writer#int32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 26
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 32
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:boolValue
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 41
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:doubleValue
  call $~lib/as-proto/assembly/Writer/Writer#double@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  i32.const 50
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:stringValue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:evalReason
  local.tee $evalReason
  i32.store $0 offset=12
  local.get $evalReason
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 58
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $evalReason
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:feature
  local.tee $feature
  i32.store $0 offset=16
  local.get $feature
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 66
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $feature
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#get:eval
  local.tee $eval
  i32.store $0 offset=20
  local.get $eval
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 74
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $eval
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB.encode
   local.get $writer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<u32>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<i32>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#reset (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:pos
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<u32>#set:length
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#set:length
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlenidx
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#reset (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:buf
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:buf
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#finish (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:buf
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB> (param $message i32) (param $encoder i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#finish
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB (param $message i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 20464
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#toProtobuf (param $this i32) (result i32)
  (local $1 i32)
  (local $boolValue i32)
  (local $3 i32)
  (local $4 i32)
  (local $numValue f64)
  (local $6 i32)
  (local $stringValue i32)
  (local $jsonValue i32)
  (local $evalReasonPb i32)
  (local $10 i32)
  (local $11 i32)
  (local $pbVariable i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  i32.const 1728
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  call $~lib/string/String.__eq
  if (result i32)
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.tee $1
   i32.store $0 offset=12
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
   if (result i32)
    local.get $1
   else
    i32.const 7328
    i32.const 20304
    i32.const 312
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
  else
   i32.const 0
  end
  local.set $boolValue
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  i32.const 1776
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  call $~lib/string/String.__eq
  if (result i32)
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  else
   i32.const 0
  end
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.tee $3
   i32.store $0 offset=16
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 20304
    i32.const 315
    i32.const 20
    call $~lib/builtins/abort
    unreachable
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
   f64.convert_i64_s
  else
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=8
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:type
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   i32.const 1776
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $~lib/string/String.__eq
   if (result i32)
    local.get $this
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=4
    local.get $13
    call $assembly/types/bucketedUserConfig/SDKVariable#get:value
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
   else
    i32.const 0
   end
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=4
    local.get $13
    call $assembly/types/bucketedUserConfig/SDKVariable#get:value
    local.tee $4
    i32.store $0 offset=20
    local.get $4
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
    if (result i32)
     local.get $4
    else
     i32.const 7328
     i32.const 20304
     i32.const 316
     i32.const 65
     call $~lib/builtins/abort
     unreachable
    end
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0
    local.get $13
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
   else
    f64.const 0
   end
  end
  local.set $numValue
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  i32.const 1696
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  call $~lib/string/String.__eq
  if (result i32)
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.tee $6
   i32.store $0 offset=24
   local.get $6
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
   if (result i32)
    local.get $6
   else
    i32.const 7328
    i32.const 20304
    i32.const 318
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  else
   i32.const 0
  end
  local.tee $stringValue
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  i32.const 2624
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  call $~lib/string/String.__eq
  if (result i32)
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  else
   i32.const 0
  end
  if (result i32)
   local.get $this
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable#get:value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
  else
   i32.const 0
  end
  local.tee $jsonValue
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=40
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  call $assembly/types/bucketedUserConfig/EvalReason#get:reason
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=40
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  call $assembly/types/bucketedUserConfig/EvalReason#get:details
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=8
  local.get $13
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=40
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  call $assembly/types/bucketedUserConfig/EvalReason#get:target_id
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor
  local.tee $evalReasonPb
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=48
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:_id
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=48
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable.variableTypeFromString
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=48
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:key
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  local.get $boolValue
  local.get $numValue
  global.get $~lib/memory/__stack_pointer
  local.get $stringValue
  if (result i32)
   local.get $stringValue
  else
   local.get $jsonValue
  end
  local.tee $10
  i32.store $0 offset=64
  local.get $10
  if (result i32)
   local.get $10
  else
   i32.const 6144
  end
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=48
  local.get $13
  i32.const 0
  i32.const 6144
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  i32.const 1
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:_feature
  local.tee $11
  i32.store $0 offset=68
  local.get $11
  if (result i32)
   local.get $11
  else
   i32.const 6144
  end
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  local.get $this
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=56
  local.get $13
  call $assembly/types/bucketedUserConfig/SDKVariable#get:_feature
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=52
  local.get $13
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=56
  local.get $13
  local.get $evalReasonPb
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=60
  local.get $13
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor
  local.tee $pbVariable
  i32.store $0 offset=72
  local.get $pbVariable
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0
  local.get $13
  call $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $assembly/index/variableForUser_PB (param $protobuf i32) (result i32)
  (local $params i32)
  (local $user i32)
  (local $dvcUser i32)
  (local $variable i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $protobuf
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB
  local.tee $params
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $params
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:user
  local.tee $user
  i32.store $0 offset=8
  local.get $user
  i32.eqz
  if
   i32.const 19152
   i32.const 19056
   i32.const 149
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $user
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/types/dvcUser/DVCUser.fromPBUser
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.tee $dvcUser
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $params
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $dvcUser
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  local.get $params
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  local.get $params
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableType
  call $assembly/index/variableTypeFromPB
  local.get $params
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:shouldTrackEvent
  call $assembly/index/_variableForDVCUser
  local.tee $variable
  i32.store $0 offset=28
  local.get $variable
  if (result i32)
   local.get $variable
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $assembly/types/bucketedUserConfig/SDKVariable#toProtobuf
  else
   i32.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/index/variableForUser_PB_Preallocated (param $protobuf i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $protobuf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#slice
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/index/variableForUser_PB
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/EvalReason> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/string/String|null> (param $val i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $val
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 7088
   i32.const 11968
   i32.const 435
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/string/String|null>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20144
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20560
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:evalReason
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/EvalReason>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKVariable#get:_feature
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 20592
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/bucketedUserConfig/SDKVariable#get:_feature
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/index/variableForUser (param $sdkKey i32) (param $userJSONStr i32) (param $variableKey i32) (param $variableType i32) (param $shouldTrackEvent i32) (result i32)
  (local $user i32)
  (local $variable i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $userJSONStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $user
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $user
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $variableKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  local.get $variableType
  local.get $shouldTrackEvent
  call $assembly/index/_variableForDVCUser
  local.tee $variable
  i32.store $0 offset=16
  local.get $variable
  if (result i32)
   local.get $variable
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $assembly/types/bucketedUserConfig/SDKVariable#stringify
  else
   i32.const 0
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/index/variableForUserPreallocated (param $sdkKey i32) (param $userStr i32) (param $userStrLength i32) (param $variableKey i32) (param $variableKeyLength i32) (param $variableType i32) (param $shouldTrackEvent i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $userStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  i32.const 0
  local.get $userStrLength
  call $~lib/string/String#substr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $variableKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  i32.const 0
  local.get $variableKeyLength
  call $~lib/string/String#substr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $variableType
  local.get $shouldTrackEvent
  call $assembly/index/variableForUser
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/platformData/PlatformData#constructor (param $this i32) (param $platformJSONObj i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:platform
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:platformVersion
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:sdkType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:sdkVersion
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:sdkPlatform
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/platformData/PlatformData#set:hostname
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 576
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:platform
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:platformVersion
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20832
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:sdkType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:sdkVersion
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:sdkPlatform
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $platformJSONObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20976
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/platformData/PlatformData#set:hostname
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/platformData/PlatformData.fromString (param $platformDataStr i32) (result i32)
  (local $str i32)
  (local $platformJSON i32)
  (local $3 i32)
  (local $platformJSONObj i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $platformDataStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.1
  end
  local.tee $platformJSON
  i32.store $0 offset=8
  local.get $platformJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 20640
   i32.const 20752
   i32.const 24
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $platformJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 20752
   i32.const 25
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $platformJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $platformJSONObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/types/platformData/PlatformData#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/index/setPlatformData (param $platformDataJSONStr i32)
  (local $platformData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $platformDataJSONStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData.fromString
  local.tee $platformData
  i32.store $0 offset=4
  local.get $platformData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/managers/platformDataManager/_setPlatformData
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/platformData/PlatformData.fromUTF8 (param $platformDataUTF8 i32) (result i32)
  (local $str i32)
  (local $platformJSON i32)
  (local $3 i32)
  (local $platformJSONObj i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $platformDataUTF8
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.2
  end
  local.tee $platformJSON
  i32.store $0 offset=8
  local.get $platformJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21024
   i32.const 20752
   i32.const 17
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $platformJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 20752
   i32.const 18
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $platformJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $platformJSONObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/types/platformData/PlatformData#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/index/setPlatformDataUTF8 (param $platformDataJSONStr i32)
  (local $platformData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $platformDataJSONStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData.fromUTF8
  local.tee $platformData
  i32.store $0 offset=4
  local.get $platformData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/managers/platformDataManager/_setPlatformData
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/clearPlatformData@varargs (param $empty i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $empty
  end
  local.get $empty
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/index/clearPlatformData
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool (param $this i32) (param $key i32) (result i32)
  (local $jsonValue i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $jsonValue
  i32.store $0 offset=8
  local.get $jsonValue
  i32.const 0
  i32.ne
  if (result i32)
   local.get $jsonValue
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 11968
    i32.const 402
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/jsonHelpers/getBoolFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $bool i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
  local.tee $bool
  i32.store $0 offset=8
  local.get $bool
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $jsonObj
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $4
   i32.store $0 offset=16
   i32.const 21600
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21600
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 3
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21600
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 6144
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 12
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  else
   local.get $bool
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  unreachable
 )
 (func $assembly/types/configBody/Settings#constructor (param $this i32) (param $settings i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 67
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/Settings#set:disablePassthroughRollouts
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $settings
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21440
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $settings
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   i32.const 21440
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $assembly/helpers/jsonHelpers/getBoolFromJSON
   call $assembly/types/configBody/Settings#set:disablePassthroughRollouts
  else
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   call $assembly/types/configBody/Settings#set:disablePassthroughRollouts
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/helpers/jsonHelpers/getJSONObjFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $obj i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $obj
  i32.store $0 offset=8
  local.get $obj
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $jsonObj
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $4
   i32.store $0 offset=16
   i32.const 21776
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21776
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 3
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21776
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 6144
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 5
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  local.get $obj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/types/configBody/PublicProject#constructor (param $this i32) (param $project i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 66
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicProject#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicProject#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicProject#set:a0_organization
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicProject#set:settings
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicProject#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicProject#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 21376
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicProject#set:a0_organization
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  i32.const 21648
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/Settings#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicProject#set:settings
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/PublicEnvironment#constructor (param $this i32) (param $environment i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 74
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicEnvironment#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/PublicEnvironment#set:key
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr (param $this i32) (param $key i32) (result i32)
  (local $jsonValue i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $jsonValue
  i32.store $0 offset=8
  local.get $jsonValue
  i32.const 0
  i32.ne
  if (result i32)
   local.get $jsonValue
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
   if (result i32)
    local.get $3
   else
    i32.const 7328
    i32.const 11968
    i32.const 410
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/jsonHelpers/getJSONArrayFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $obj i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $obj
  i32.store $0 offset=8
  local.get $obj
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $jsonObj
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $4
   i32.store $0 offset=16
   i32.const 21904
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21904
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 3
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 21904
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 6144
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 28
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  local.get $obj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 95
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 99
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 80
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/feature/Variation>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/feature/Variation>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/feature/Variation>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/feature/Variation>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 94
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 78
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 79
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/helpers/jsonHelpers/getJSONValueFromJSON (param $jsonObj i32) (param $key i32) (result i32)
  (local $value i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $key
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $value
  i32.store $0 offset=8
  local.get $value
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $key
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $jsonObj
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $4
   i32.store $0 offset=16
   i32.const 22112
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 1
   local.get $3
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 22112
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 3
   local.get $4
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 22112
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.const 6144
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 14288
   i32.const 172
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  else
   local.get $value
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  unreachable
 )
 (func $assembly/types/feature/VariationVariable#constructor (param $this i32) (param $variable i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 77
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/feature/VariationVariable#set:_var
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/feature/VariationVariable#set:value
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/feature/VariationVariable#set:_var
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20144
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/feature/VariationVariable#set:value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/feature/Variation#constructor (param $this i32) (param $variation i32) (result i32)
  (local $variablesJSON i32)
  (local $variables i32)
  (local $variablesById i32)
  (local $i i32)
  (local $6 i32)
  (local $variable i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 76
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Variation#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Variation#set:name
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Variation#set:key
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Variation#set:variables
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Variation#set:_variablesById
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variation
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Variation#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variation
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 14384
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Variation#set:name
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variation
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20528
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Variation#set:key
  global.get $~lib/memory/__stack_pointer
  local.get $variation
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 18912
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $variablesJSON
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#constructor
  local.tee $variables
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#constructor
  local.tee $variablesById
  i32.store $0 offset=28
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $variablesJSON
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $variablesJSON
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $6
    i32.store $0 offset=32
    local.get $6
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 22160
     i32.const 82
     i32.const 52
     call $~lib/builtins/abort
     unreachable
    end
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $assembly/types/feature/VariationVariable#constructor
    local.tee $variable
    i32.store $0 offset=36
    local.get $variables
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variable
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/array/Array<assembly/types/feature/VariationVariable>#push
    drop
    local.get $variablesById
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variable
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $assembly/types/feature/VariationVariable#get:_var
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $variable
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#set
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variables
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Variation#set:variables
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variablesById
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Variation#set:_variablesById
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/Variation>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/Variation>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/feature/Variation>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#constructor (param $this i32) (param $featurePrerequisites i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 82
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:_feature
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:comparator
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $featurePrerequisites
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:_feature
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $featurePrerequisites
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/featureConfigurationV2/comparatorValues
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#set:comparator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|0 (param $preq i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $preq
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 22416
   i32.const 26
   i32.const 49
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/featureConfigurationV2/FeaturePrerequisites> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 83
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#constructor (param $this i32) (param $winningVar i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 84
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:updatedAt
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $winningVar
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $winningVar
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#set:updatedAt
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/jsonHelpers/isValidStringOptional (param $jsonObj i32) (param $key i32) (param $validStrings i32) (param $shouldThrow i32) (result i32)
  (local $value i32)
  (local $str i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $key
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $value
  i32.store $0 offset=8
  local.get $value
  i32.eqz
  if
   i32.const 0
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $value
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#toString
  local.tee $str
  i32.store $0 offset=12
  local.get $validStrings
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $str
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#includes
  i32.eqz
  if
   local.get $shouldThrow
   if
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#toString
    local.tee $6
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $key
    local.tee $7
    i32.store $0 offset=20
    i32.const 22896
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 1
    local.get $6
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 22896
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 3
    local.get $7
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 22896
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    i32.const 6144
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 14288
    i32.const 108
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#toString
    local.tee $8
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $key
    local.tee $9
    i32.store $0 offset=32
    i32.const 22944
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 1
    local.get $8
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 22944
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 3
    local.get $9
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=36
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 22944
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    i32.const 6144
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=24
    local.get $10
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0
    local.get $10
    call $~lib/console/console.log
   end
  end
  local.get $str
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $assembly/types/target/AudienceFilter#constructor (param $this i32) (param $filter i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 71
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/AudienceFilter#set:type
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/target/validTypes
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/AudienceFilter#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<bool>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 152
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<bool>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<bool>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<bool>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<bool>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 0
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 0
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<bool>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<bool>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<bool>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<bool>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<bool>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<bool>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 0
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<bool>#get:dataStart
  local.get $oldLen
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8 $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<bool>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<f64>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 62
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 3
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 3
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<f64>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<f64>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<f64>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<f64>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<f64>#push (param $this i32) (param $value f64) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<f64>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<f64>#get:dataStart
  local.get $oldLen
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  f64.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<f64>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/target/UserFilter#compileValues (param $this i32) (param $values i32)
  (local $firstValue i32)
  (local $boolValues i32)
  (local $i i32)
  (local $value i32)
  (local $6 i32)
  (local $stringValues i32)
  (local $i|8 i32)
  (local $value|9 i32)
  (local $10 i32)
  (local $numValues i32)
  (local $i|12 i32)
  (local $value|13 i32)
  (local $14 i32)
  (local $float i32)
  (local $16 i32)
  (local $int i32)
  (local $numValue f64)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  local.get $values
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $values
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0
   local.get $19
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.const 0
   i32.eq
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $values
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  i32.const 0
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
  local.tee $firstValue
  i32.store $0 offset=4
  local.get $firstValue
  local.set $19
  global.get $~lib/memory/__stack_pointer
  local.get $19
  i32.store $0
  local.get $19
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/array/Array<bool>#constructor
   local.tee $boolValues
   i32.store $0 offset=8
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $values
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0
    local.get $19
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
    i32.lt_s
    if
     block $for-continue|0
      global.get $~lib/memory/__stack_pointer
      local.get $values
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0
      local.get $19
      local.get $i
      call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
      local.tee $value
      i32.store $0 offset=12
      local.get $value
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0
      local.get $19
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
      i32.eqz
      if
       i32.const 23072
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=16
       local.get $19
       i32.const 23232
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=24
       local.get $19
       local.get $value
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=32
       local.get $19
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=28
       local.get $19
       call $~lib/string/String#concat
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=20
       local.get $19
       call $~lib/string/String.__concat
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0
       local.get $19
       call $~lib/console/console.log
       br $for-continue|0
      end
      local.get $boolValues
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0
      local.get $19
      global.get $~lib/memory/__stack_pointer
      local.get $value
      local.tee $6
      i32.store $0 offset=36
      local.get $6
      call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
      if (result i32)
       local.get $6
      else
       i32.const 7328
       i32.const 17312
       i32.const 247
       i32.const 34
       call $~lib/builtins/abort
       unreachable
      end
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0 offset=16
      local.get $19
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
      call $~lib/array/Array<bool>#push
      drop
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $this
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0
   local.get $19
   local.get $boolValues
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=16
   local.get $19
   call $assembly/types/target/UserFilter#set:_compiledBoolValues
  else
   local.get $firstValue
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0
   local.get $19
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 0
    call $~lib/array/Array<~lib/string/String>#constructor
    local.tee $stringValues
    i32.store $0 offset=40
    i32.const 0
    local.set $i|8
    loop $for-loop|1
     local.get $i|8
     local.get $values
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0
     local.get $19
     call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
     i32.lt_s
     if
      block $for-continue|1
       global.get $~lib/memory/__stack_pointer
       local.get $values
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0
       local.get $19
       local.get $i|8
       call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
       local.tee $value|9
       i32.store $0 offset=44
       local.get $value|9
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0
       local.get $19
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
       i32.eqz
       if
        i32.const 23072
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=16
        local.get $19
        i32.const 23296
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=24
        local.get $19
        local.get $value|9
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=32
        local.get $19
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=28
        local.get $19
        call $~lib/string/String#concat
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0 offset=20
        local.get $19
        call $~lib/string/String.__concat
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/console/console.log
        br $for-continue|1
       end
       local.get $stringValues
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0
       local.get $19
       global.get $~lib/memory/__stack_pointer
       local.get $value|9
       local.tee $10
       i32.store $0 offset=48
       local.get $10
       call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
       if (result i32)
        local.get $10
       else
        i32.const 7328
        i32.const 17312
        i32.const 261
        i32.const 36
        call $~lib/builtins/abort
        unreachable
       end
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=20
       local.get $19
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
       local.set $19
       global.get $~lib/memory/__stack_pointer
       local.get $19
       i32.store $0 offset=16
       local.get $19
       call $~lib/array/Array<~lib/string/String>#push
       drop
      end
      local.get $i|8
      i32.const 1
      i32.add
      local.set $i|8
      br $for-loop|1
     end
    end
    local.get $this
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0
    local.get $19
    local.get $stringValues
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0 offset=16
    local.get $19
    call $assembly/types/target/UserFilter#set:_compiledStringValues
   else
    local.get $firstValue
    local.set $19
    global.get $~lib/memory/__stack_pointer
    local.get $19
    i32.store $0
    local.get $19
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
    if (result i32)
     i32.const 1
    else
     local.get $firstValue
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0
     local.get $19
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 0
     call $~lib/array/Array<f64>#constructor
     local.tee $numValues
     i32.store $0 offset=52
     i32.const 0
     local.set $i|12
     loop $for-loop|2
      local.get $i|12
      local.get $values
      local.set $19
      global.get $~lib/memory/__stack_pointer
      local.get $19
      i32.store $0
      local.get $19
      call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
      i32.lt_s
      if
       block $for-continue|2
        global.get $~lib/memory/__stack_pointer
        local.get $values
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        local.get $i|12
        call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
        local.tee $value|13
        i32.store $0 offset=56
        global.get $~lib/memory/__stack_pointer
        local.get $value|13
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $value|13
         local.tee $14
         i32.store $0 offset=60
         local.get $14
         call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
         if (result i32)
          local.get $14
         else
          i32.const 7328
          i32.const 17312
          i32.const 269
          i32.const 47
          call $~lib/builtins/abort
          unreachable
         end
        else
         i32.const 0
        end
        local.tee $float
        i32.store $0 offset=64
        global.get $~lib/memory/__stack_pointer
        local.get $value|13
        local.set $19
        global.get $~lib/memory/__stack_pointer
        local.get $19
        i32.store $0
        local.get $19
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $value|13
         local.tee $16
         i32.store $0 offset=68
         local.get $16
         call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
         if (result i32)
          local.get $16
         else
          i32.const 7328
          i32.const 17312
          i32.const 270
          i32.const 47
          call $~lib/builtins/abort
          unreachable
         end
        else
         i32.const 0
        end
        local.tee $int
        i32.store $0 offset=72
        local.get $float
        i32.const 0
        i32.eq
        if (result i32)
         local.get $int
         i32.const 0
         i32.eq
        else
         i32.const 0
        end
        if
         i32.const 23072
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=16
         local.get $19
         i32.const 23376
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=24
         local.get $19
         local.get $value|13
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=32
         local.get $19
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=28
         local.get $19
         call $~lib/string/String#concat
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=20
         local.get $19
         call $~lib/string/String.__concat
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0
         local.get $19
         call $~lib/console/console.log
         br $for-continue|2
        end
        local.get $float
        i32.const 0
        i32.ne
        if (result f64)
         local.get $float
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0
         local.get $19
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
        else
         local.get $int
         i32.const 0
         i32.ne
         if (result f64)
          local.get $int
          local.set $19
          global.get $~lib/memory/__stack_pointer
          local.get $19
          i32.store $0
          local.get $19
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
          f64.convert_i64_s
         else
          f64.const nan:0x8000000000000
         end
        end
        local.set $numValue
        local.get $numValue
        local.get $numValue
        f64.ne
        i32.eqz
        if
         local.get $numValues
         local.set $19
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0
         local.get $19
         local.get $numValue
         call $~lib/array/Array<f64>#push
         drop
        end
       end
       local.get $i|12
       i32.const 1
       i32.add
       local.set $i|12
       br $for-loop|2
      end
     end
     local.get $this
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0
     local.get $19
     local.get $numValues
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=16
     local.get $19
     call $assembly/types/target/UserFilter#set:_compiledNumValues
    else
     i32.const 23456
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0
     local.get $19
     local.get $firstValue
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=20
     local.get $19
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
     local.set $19
     global.get $~lib/memory/__stack_pointer
     local.get $19
     i32.store $0 offset=16
     local.get $19
     call $~lib/string/String#concat
     i32.const 17312
     i32.const 286
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/target/UserFilter#constructor (param $this i32) (param $filter i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 151
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:subType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:values
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:comparator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:isValid
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:_compiledStringValues
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:_compiledBoolValues
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/UserFilter#set:_compiledNumValues
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/AudienceFilter#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 23040
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/UserFilter#set:values
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22992
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/target/validSubTypes
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/UserFilter#set:subType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/target/validComparators
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/UserFilter#set:comparator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/types/target/validComparators
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/UserFilter#get:comparator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#includes
  call $assembly/types/target/UserFilter#set:isValid
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/UserFilter#get:values
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/UserFilter#compileValues
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/CustomDataFilter#constructor (param $this i32) (param $filter i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 153
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/CustomDataFilter#set:dataKeyType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/CustomDataFilter#set:dataKey
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/UserFilter#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 23552
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/CustomDataFilter#set:dataKey
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $filter
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 23600
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/target/validDataKeyTypes
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/CustomDataFilter#set:dataKeyType
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/AudienceMatchFilter#constructor (param $this i32) (param $filter i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 13
   i32.const 148
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/target/AudienceMatchFilter#set:_audiences
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/target/AudienceMatchFilter#set:comparator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  call $assembly/types/target/AudienceMatchFilter#set:isValid
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/target/AudienceFilter#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 23648
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/target/AudienceMatchFilter#set:_audiences
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 14848
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  i32.const 1
  i32.const 2
  i32.const 4
  i32.const 23696
  call $~lib/rt/__newArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/target/AudienceFilter#set:type
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $filter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 22368
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  global.get $assembly/types/target/validAudienceMatchComparators
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/target/AudienceMatchFilter#set:comparator
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  global.get $assembly/types/target/validAudienceMatchComparators
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/types/target/AudienceMatchFilter#get:comparator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#includes
  call $assembly/types/target/AudienceMatchFilter#set:isValid
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/types/target/initializeFilterClass (param $filter i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $filter
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 14848
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 208
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__eq
  if
   local.get $filter
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 22992
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 784
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String.__eq
   if
    i32.const 0
    local.get $filter
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $assembly/types/target/CustomDataFilter#constructor
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   end
   i32.const 0
   local.get $filter
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $assembly/types/target/UserFilter#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  else
   local.get $filter
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 14848
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $1
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 272
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String.__eq
   if
    i32.const 0
    local.get $filter
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $assembly/types/target/AudienceMatchFilter#constructor
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   else
    i32.const 0
    local.get $filter
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $assembly/types/target/AudienceFilter#constructor
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   end
   unreachable
  end
  unreachable
 )
 (func $assembly/types/target/AudienceFilterOrOperator#constructor (param $this i32) (param $filter i32) (result i32)
  (local $operator i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 70
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/target/AudienceFilterOrOperator#set:operatorClass
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/target/AudienceFilterOrOperator#set:filterClass
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 22768
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  global.get $assembly/types/target/validAudienceOperators
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $operator
  i32.store $0 offset=16
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $operator
  if (result i32)
   i32.const 0
   local.get $filter
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $3
   call $assembly/types/target/AudienceOperator#constructor
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/target/AudienceFilterOrOperator#set:operatorClass
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $operator
  if (result i32)
   i32.const 0
  else
   local.get $filter
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/types/target/initializeFilterClass
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/target/AudienceFilterOrOperator#set:filterClass
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/target/AudienceOperator#constructor (param $this i32) (param $filter i32) (result i32)
  (local $filters i32)
  (local $3 i32)
  (local $4 i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 69
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $assembly/types/target/AudienceOperator#set:operator
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  call $assembly/types/target/AudienceOperator#set:filters
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $filter
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  i32.const 22768
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=16
  local.get $7
  global.get $assembly/types/target/validAudienceOperators
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/target/AudienceOperator#set:operator
  global.get $~lib/memory/__stack_pointer
  local.get $filter
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 22816
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $filters
  i32.store $0 offset=24
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 0
  i32.const 2
  i32.const 72
  i32.const 22864
  call $~lib/rt/__newArray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  call $assembly/types/target/AudienceOperator#set:filters
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $filters
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=12
    local.get $7
    call $assembly/types/target/AudienceOperator#get:filters
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $filters
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=16
    local.get $7
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $6
    i32.store $0 offset=28
    local.get $6
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 17312
     i32.const 133
     i32.const 60
     call $~lib/builtins/abort
     unreachable
    end
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=16
    local.get $7
    call $assembly/types/target/AudienceFilterOrOperator#constructor
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/types/target/Audience#constructor (param $this i32) (param $audience i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 68
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/Audience#set:filters
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  local.get $audience
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22816
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/target/AudienceOperator#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/Audience#set:filters
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/Rollout#constructor~anonymous|0 (param $stage i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $stage
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 17312
   i32.const 391
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/RolloutStage#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/RolloutStage> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 90
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/target/Rollout#constructor (param $this i32) (param $rollout i32) (result i32)
  (local $stages i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 88
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/target/Rollout#set:type
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  f64.const 0
  call $assembly/types/target/Rollout#set:startPercentage
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/target/Rollout#set:startDate
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/target/Rollout#set:stages
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $rollout
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 14848
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  global.get $assembly/types/target/validRolloutTypes
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/target/Rollout#set:type
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $rollout
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 23824
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  f64.const 1
  call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
  call $assembly/types/target/Rollout#set:startPercentage
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $rollout
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 23888
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/target/Rollout#set:startDate
  global.get $~lib/memory/__stack_pointer
  local.get $rollout
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 23936
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $stages
  i32.store $0 offset=24
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $stages
  if (result i32)
   local.get $stages
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   i32.const 23968
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/RolloutStage>
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/target/Rollout#set:stages
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/target/TargetDistribution#constructor (param $this i32) (param $distribution i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 91
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/target/TargetDistribution#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f64.const 0
  call $assembly/types/target/TargetDistribution#set:percentage
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $distribution
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/target/TargetDistribution#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $distribution
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 14880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/helpers/jsonHelpers/getF64FromJSONObj
  call $assembly/types/target/TargetDistribution#set:percentage
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/targetV2/TargetV2#constructor~anonymous|0 (param $dist i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $dist
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 18208
   i32.const 32
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/TargetDistribution#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 92
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 169
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:value
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:entry
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  (local $cursor i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $cursor
  loop $while-continue|0
   local.get $a
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   local.get $b
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   i32.eq
   if (result i32)
    local.get $cursor
    local.get $a
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/string/String#get:length
    i32.lt_s
   else
    i32.const 0
   end
   if
    local.get $cursor
    i32.const 1
    i32.add
    local.set $cursor
    br $while-continue|0
   end
  end
  local.get $a
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  drop
  i32.const 0
  if
   local.get $b
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   drop
   i32.const 0
   if
    i32.const 0
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   else
    i32.const -1
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   unreachable
  end
  local.get $b
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  drop
  i32.const 0
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $a
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  local.get $b
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  i32.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $b
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $b
    local.tee $min
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $a
    local.tee $max
    i32.store $0 offset=12
    local.get $a
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=16
    local.get $12
    local.get $b
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=20
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.tee $min
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $b
     local.tee $max
     i32.store $0 offset=12
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=16
       local.get $12
       local.get $max
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=20
       local.get $12
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=16
       local.get $12
       local.get $min
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=20
       local.get $12
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $k i32)
  (local $tmp i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $tmp
     i32.store $0 offset=8
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $k i32)
  (local $a i32)
  (local $b i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $b
    i32.store $0 offset=4
    local.get $a
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=8
    local.get $12
    local.get $b
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=12
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $20 i32)
  (local $21 i32)
  (local $top i32)
  (local $startA i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $27 i32)
  (local $28 i32)
  (local $k i32)
  (local $i|30 i32)
  (local $start i32)
  (local $i|32 i32)
  (local $start|33 i32)
  (local $34 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=4
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=8
     local.get $34
     local.get $b
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=12
     local.get $34
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.get $b
     local.get $c
     select
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=8
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=8
     local.get $34
     local.get $b
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=12
     local.get $34
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0
    local.tee $a|7
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0 offset=4
    local.tee $b|8
    i32.store $0 offset=20
    local.get $a|7
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=8
    local.get $34
    local.get $b|8
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=12
    local.get $34
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   local.set $34
   global.get $~lib/memory/__stack_pointer
   local.get $34
   i32.store $0 offset=24
   local.get $34
   call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  block $~lib/util/sort/log2u|inlined.0 (result i32)
   local.get $len
   local.set $n
   i32.const 31
   local.get $n
   i32.clz
   i32.sub
   br $~lib/util/sort/log2u|inlined.0
  end
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  local.set $34
  global.get $~lib/memory/__stack_pointer
  local.get $34
  i32.store $0 offset=28
  local.get $34
  call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $20
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $21
   local.get $20
   local.get $21
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   local.set $34
   global.get $~lib/memory/__stack_pointer
   local.get $34
   i32.store $0 offset=24
   local.get $34
   call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=28
    local.get $34
    call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $27
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $28
     local.get $27
     local.get $28
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=24
     local.get $34
     call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|30
    loop $for-loop|3
     local.get $i|30
     local.get $k
     i32.gt_u
     if
      local.get $leftRunStartBuf
      local.get $i|30
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|30
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       local.set $34
       global.get $~lib/memory/__stack_pointer
       local.get $34
       i32.store $0 offset=32
       local.get $34
       call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|30
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|30
      i32.const 1
      i32.sub
      local.set $i|30
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|32
  loop $for-loop|4
   local.get $i|32
   i32.const 0
   i32.ne
   if
    local.get $leftRunStartBuf
    local.get $i|32
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|33
    local.get $start|33
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|33
     local.get $leftRunEndBuf
     local.get $i|32
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=32
     local.get $34
     call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
    end
    local.get $i|32
    i32.const 1
    i32.sub
    local.set $i|32
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#sort (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:dataStart
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_
  local.get $comparator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#reverse (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_
  call $~lib/util/bytes/REVERSE<assembly/types/target/TargetDistribution>
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution> (param $arr i32) (param $direction i32) (result i32)
  (local $sorted i32)
  (local $3 i32)
  (local $4 i32)
  (local $result i32)
  (local $i i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $arr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 24192
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#sort
  local.tee $sorted
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 92
  i32.const 24224
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sorted
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length
   i32.lt_s
   if
    local.get $result
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $sorted
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    local.get $i
    call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=16
    local.get $7
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#get:entry
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $direction
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 24160
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/string/String.__eq
  if (result i32)
   local.get $result
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#reverse
  else
   local.get $result
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/targetV2/TargetV2#constructor (param $this i32) (param $target i32) (result i32)
  (local $rollout i32)
  (local $distributionJSON i32)
  (local $distribution i32)
  (local $5 i32)
  (local $6 i32)
  (local $sortingArray i32)
  (local $i i32)
  (local $9 i32)
  (local $bucketingKey i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 87
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:_id
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:_audience
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:rollout
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:distribution
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:bucketingKey
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/targetV2/TargetV2#set:_sortedDistribution
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=12
  local.get $11
  i32.const 20496
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=16
  local.get $11
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#set:_id
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=16
  local.get $11
  i32.const 23728
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=20
  local.get $11
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=16
  local.get $11
  call $assembly/types/target/Audience#constructor
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#set:_audience
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 23776
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $rollout
  i32.store $0 offset=24
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $rollout
  if (result i32)
   i32.const 0
   local.get $rollout
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=16
   local.get $11
   call $assembly/types/target/Rollout#constructor
  else
   i32.const 0
  end
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#set:rollout
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 24000
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $distributionJSON
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $distributionJSON
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=12
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 24048
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution>
  local.tee $distribution
  i32.store $0 offset=32
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $distribution
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#set:distribution
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 170
  i32.const 24080
  call $~lib/rt/__newArray
  local.tee $sortingArray
  i32.store $0 offset=36
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $distribution
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
   i32.lt_s
   if
    local.get $sortingArray
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor
    local.tee $9
    i32.store $0 offset=40
    local.get $9
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=12
    local.get $11
    local.get $distribution
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=20
    local.get $11
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=16
    local.get $11
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:entry
    local.get $9
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=12
    local.get $11
    local.get $distribution
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=44
    local.get $11
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=20
    local.get $11
    call $assembly/types/target/TargetDistribution#get:_variation
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=16
    local.get $11
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:value
    local.get $9
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 24112
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $bucketingKey
  i32.store $0 offset=48
  local.get $bucketingKey
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   local.get $bucketingKey
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=8
   local.get $11
   call $assembly/types/targetV2/TargetV2#set:bucketingKey
  else
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   i32.const 416
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=8
   local.get $11
   call $assembly/types/targetV2/TargetV2#set:bucketingKey
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $sortingArray
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=12
  local.get $11
  i32.const 24160
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=16
  local.get $11
  call $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/targetV2/TargetV2#set:_sortedDistribution
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|1 (param $target i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 22416
   i32.const 33
   i32.const 81
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/targetV2/TargetV2#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/targetV2/TargetV2> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 93
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor (param $this i32) (param $featureConfig i32) (result i32)
  (local $prerequisites i32)
  (local $winningVar i32)
  (local $targets i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 81
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:_id
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:prerequisites
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:winningVariation
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:forcedUsers
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:targets
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 20496
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:_id
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22320
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $prerequisites
  i32.store $0 offset=20
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $prerequisites
  if (result i32)
   local.get $prerequisites
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=24
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   i32.const 22528
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/featureConfigurationV2/FeaturePrerequisites>
  else
   i32.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:prerequisites
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22560
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $winningVar
  i32.store $0 offset=28
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $winningVar
  if (result i32)
   i32.const 0
   local.get $winningVar
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/types/featureConfigurationV2/FeatureWinningVariation#constructor
  else
   i32.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:winningVariation
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22720
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $targets
  i32.store $0 offset=32
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $targets
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 24256
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/targetV2/TargetV2>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:targets
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#set:forcedUsers
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional (param $jsonObj i32) (param $key i32) (result i32)
  (local $obj i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $obj
  i32.store $0 offset=8
  local.get $obj
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/featureV2/FeatureV2#constructor (param $this i32) (param $feature i32) (result i32)
  (local $variationsJSON i32)
  (local $variations i32)
  (local $variationsById i32)
  (local $i i32)
  (local $6 i32)
  (local $variation i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 75
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:type
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:key
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:variations
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:configuration
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:settings
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/featureV2/FeatureV2#set:_variationsById
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 14848
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  global.get $assembly/types/featureV2/validTypes
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:type
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20528
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:key
  global.get $~lib/memory/__stack_pointer
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 21952
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $variationsJSON
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#constructor
  local.tee $variations
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor
  local.tee $variationsById
  i32.store $0 offset=32
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $variationsJSON
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $variationsJSON
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $6
    i32.store $0 offset=36
    local.get $6
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 22240
     i32.const 36
     i32.const 45
     call $~lib/builtins/abort
     unreachable
    end
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $assembly/types/feature/Variation#constructor
    local.tee $variation
    i32.store $0 offset=40
    local.get $variations
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/array/Array<assembly/types/feature/Variation>#push
    drop
    local.get $variationsById
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $assembly/types/feature/Variation#get:_id
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variations
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:variations
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variationsById
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:_variationsById
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  i32.const 24288
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:configuration
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 21648
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/featureV2/FeatureV2#set:settings
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/Variation>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/Variation>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/Variation>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 73
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 97
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 98
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/configBody/Variable#constructor (param $this i32) (param $variable i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 96
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/Variable#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/Variable#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/Variable#set:key
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/Variable#set:_id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/configBody/validVariableTypes
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/Variable#set:type
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/Variable#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/configBody/Variable>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#constructor (param $this i32) (param $configJSONObj i32) (param $etag i32) (result i32)
  (local $featuresJSON i32)
  (local $features i32)
  (local $_varIdToFeatureMap i32)
  (local $_featureIdMap i32)
  (local $i i32)
  (local $8 i32)
  (local $feature i32)
  (local $j i32)
  (local $k i32)
  (local $audiencesJSON i32)
  (local $audiences i32)
  (local $audienceKeys i32)
  (local $i|15 i32)
  (local $audience_id i32)
  (local $aud i32)
  (local $18 i32)
  (local $19 i32)
  (local $variablesJSON i32)
  (local $variables i32)
  (local $_variableKeyMap i32)
  (local $_variableIdMap i32)
  (local $i|24 i32)
  (local $25 i32)
  (local $variable i32)
  (local $27 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 112
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 65
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:project
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:audiences
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:environment
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:features
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:variables
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:etag
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:clientSDKKey
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableKeyMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdToFeatureMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $etag
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:etag
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  i32.const 21328
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:clientSDKKey
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  i32.const 18640
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=20
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/types/configBody/PublicProject#constructor
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:project
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  i32.const 18688
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=20
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/types/configBody/PublicEnvironment#constructor
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:environment
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  i32.const 18736
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $featuresJSON
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#constructor
  local.tee $features
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor
  local.tee $_varIdToFeatureMap
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor
  local.tee $_featureIdMap
  i32.store $0 offset=36
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $featuresJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $featuresJSON
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $8
    i32.store $0 offset=40
    local.get $8
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $8
    else
     i32.const 7328
     i32.const 21248
     i32.const 78
     i32.const 43
     call $~lib/builtins/abort
     unreachable
    end
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $assembly/types/featureV2/FeatureV2#constructor
    local.tee $feature
    i32.store $0 offset=44
    local.get $features
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $feature
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#push
    drop
    local.get $_featureIdMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $feature
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $assembly/types/featureV2/FeatureV2#get:_id
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#has
    i32.eqz
    if
     local.get $_featureIdMap
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=16
     local.get $27
     call $assembly/types/featureV2/FeatureV2#get:_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=12
     local.get $27
     call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set
     drop
    end
    i32.const 0
    local.set $j
    loop $for-loop|1
     local.get $j
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     call $assembly/types/featureV2/FeatureV2#get:variations
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     call $~lib/array/Array<assembly/types/feature/Variation>#get:length
     i32.lt_s
     if
      i32.const 0
      local.set $k
      loop $for-loop|2
       local.get $k
       local.get $feature
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=16
       local.get $27
       call $assembly/types/featureV2/FeatureV2#get:variations
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=12
       local.get $27
       local.get $j
       call $~lib/array/Array<assembly/types/feature/Variation>#__get
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=8
       local.get $27
       call $assembly/types/feature/Variation#get:variables
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=4
       local.get $27
       call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length
       i32.lt_s
       if
        local.get $_varIdToFeatureMap
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=4
        local.get $27
        local.get $feature
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=52
        local.get $27
        call $assembly/types/featureV2/FeatureV2#get:variations
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=48
        local.get $27
        local.get $j
        call $~lib/array/Array<assembly/types/feature/Variation>#__get
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=20
        local.get $27
        call $assembly/types/feature/Variation#get:variables
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=16
        local.get $27
        local.get $k
        call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=12
        local.get $27
        call $assembly/types/feature/VariationVariable#get:_var
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=8
        local.get $27
        call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#has
        i32.eqz
        if
         local.get $_varIdToFeatureMap
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=4
         local.get $27
         local.get $feature
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=56
         local.get $27
         call $assembly/types/featureV2/FeatureV2#get:variations
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=52
         local.get $27
         local.get $j
         call $~lib/array/Array<assembly/types/feature/Variation>#__get
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=48
         local.get $27
         call $assembly/types/feature/Variation#get:variables
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=20
         local.get $27
         local.get $k
         call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=16
         local.get $27
         call $assembly/types/feature/VariationVariable#get:_var
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=8
         local.get $27
         local.get $feature
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=12
         local.get $27
         call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#set
         drop
        end
        local.get $k
        i32.const 1
        i32.add
        local.set $k
        br $for-loop|2
       end
      end
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|1
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $features
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:features
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_varIdToFeatureMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdToFeatureMap
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 24336
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.tee $audiencesJSON
  i32.store $0 offset=60
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
  local.tee $audiences
  i32.store $0 offset=64
  local.get $audiencesJSON
  if
   global.get $~lib/memory/__stack_pointer
   local.get $audiencesJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $audienceKeys
   i32.store $0 offset=68
   i32.const 0
   local.set $i|15
   loop $for-loop|3
    local.get $i|15
    local.get $audienceKeys
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $audienceKeys
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $i|15
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $audience_id
     i32.store $0 offset=72
     global.get $~lib/memory/__stack_pointer
     local.get $audiencesJSON
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $audience_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $aud
     i32.store $0 offset=76
     local.get $audiences
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $audience_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     i32.const 0
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $aud
     local.tee $18
     i32.store $0 offset=80
     local.get $18
     if (result i32)
      local.get $18
     else
      i32.const 7088
      i32.const 21248
      i32.const 117
      i32.const 57
      call $~lib/builtins/abort
      unreachable
     end
     local.tee $19
     i32.store $0 offset=84
     local.get $19
     call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     if (result i32)
      local.get $19
     else
      i32.const 7328
      i32.const 21248
      i32.const 117
      i32.const 57
      call $~lib/builtins/abort
      unreachable
     end
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=20
     local.get $27
     call $assembly/types/target/Audience#constructor
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=12
     local.get $27
     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set
     drop
     local.get $i|15
     i32.const 1
     i32.add
     local.set $i|15
     br $for-loop|3
    end
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $audiences
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:audiences
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  i32.const 18912
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $variablesJSON
  i32.store $0 offset=88
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#constructor
  local.tee $variables
  i32.store $0 offset=92
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
  local.tee $_variableKeyMap
  i32.store $0 offset=96
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
  local.tee $_variableIdMap
  i32.store $0 offset=100
  i32.const 0
  local.set $i|24
  loop $for-loop|4
   local.get $i|24
   local.get $variablesJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $variablesJSON
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $i|24
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $25
    i32.store $0 offset=104
    local.get $25
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $25
    else
     i32.const 7328
     i32.const 21248
     i32.const 130
     i32.const 43
     call $~lib/builtins/abort
     unreachable
    end
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $assembly/types/configBody/Variable#constructor
    local.tee $variable
    i32.store $0 offset=108
    local.get $variables
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/array/Array<assembly/types/configBody/Variable>#push
    drop
    local.get $_variableKeyMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=16
    local.get $27
    call $assembly/types/configBody/Variable#get:key
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set
    drop
    local.get $_variableIdMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=16
    local.get $27
    call $assembly/types/configBody/Variable#get:_id
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set
    drop
    local.get $i|24
    i32.const 1
    i32.add
    local.set $i|24
    br $for-loop|4
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $variables
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:variables
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_variableKeyMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableKeyMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_variableIdMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBodyV2/ConfigBodyV2#set:_variableIdMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $27
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8 (param $configUTF8 i32) (param $etag i32) (result i32)
  (local $str i32)
  (local $configJSON i32)
  (local $4 i32)
  (local $configJSONObj i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.3 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $configUTF8
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.3
  end
  local.tee $configJSON
  i32.store $0 offset=8
  local.get $configJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21120
   i32.const 21248
   i32.const 33
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $configJSON
  local.tee $4
  i32.store $0 offset=12
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 21248
   i32.const 37
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $configJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $configJSONObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  local.get $etag
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=24
  local.get $6
  call $assembly/types/configBodyV2/ConfigBodyV2#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/configBody/ProjectMetadata#constructor (param $this i32) (param $project i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 174
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/ProjectMetadata#set:id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/ProjectMetadata#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/PublicProject#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/ProjectMetadata#set:id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/PublicProject#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/ProjectMetadata#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/EnvironmentMetadata#constructor (param $this i32) (param $environment i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 175
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/EnvironmentMetadata#set:id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/configBody/EnvironmentMetadata#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/EnvironmentMetadata#set:id
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/configBody/EnvironmentMetadata#set:key
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/ConfigMetadata#constructor (param $this i32) (param $project i32) (param $environment i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 173
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/configBody/ConfigMetadata#set:project
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/configBody/ConfigMetadata#set:environment
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $project
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/types/configBody/ProjectMetadata#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/configBody/ConfigMetadata#set:project
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  local.get $environment
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/types/configBody/EnvironmentMetadata#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/configBody/ConfigMetadata#set:environment
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/configBody/ConfigMetadata#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $project i32)
  (local $environment i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $project
  i32.store $0 offset=4
  local.get $project
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 24384
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  call $assembly/types/configBody/ConfigMetadata#get:project
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/configBody/ProjectMetadata#get:id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $project
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 20528
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  call $assembly/types/configBody/ConfigMetadata#get:project
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/configBody/ProjectMetadata#get:key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $environment
  i32.store $0 offset=28
  local.get $environment
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 24384
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  call $assembly/types/configBody/ConfigMetadata#get:environment
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/configBody/EnvironmentMetadata#get:id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $environment
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 20528
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  call $assembly/types/configBody/ConfigMetadata#get:environment
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/configBody/EnvironmentMetadata#get:key
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 18640
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $project
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  i32.const 18688
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $environment
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/managers/configDataManager/_setConfigData (param $sdkKey i32) (param $configData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $assembly/managers/configDataManager/_configData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $configData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#set
  drop
  global.get $assembly/managers/configDataManager/_configMetadata
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  local.get $configData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  local.get $configData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBody/ConfigMetadata#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/ConfigMetadata#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setConfigDataUTF8 (param $sdkKey i32) (param $configDataJSONStr i32)
  (local $configData i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configDataJSONStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8
  local.tee $configData
  i32.store $0 offset=4
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $configData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/managers/configDataManager/_setConfigData
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setConfigDataUTF8Preallocated (param $sdkKey i32) (param $configDataJSONStr i32) (param $length i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $configDataJSONStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#slice
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/index/setConfigDataUTF8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2.fromString (param $configStr i32) (param $etag i32) (result i32)
  (local $str i32)
  (local $configJSON i32)
  (local $4 i32)
  (local $configJSONObj i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $configStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.2
  end
  local.tee $configJSON
  i32.store $0 offset=8
  local.get $configJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21120
   i32.const 21248
   i32.const 47
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $configJSON
  local.tee $4
  i32.store $0 offset=12
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 21248
   i32.const 51
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $configJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $configJSONObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  local.get $etag
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=24
  local.get $6
  call $assembly/types/configBodyV2/ConfigBodyV2#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/index/setConfigData (param $sdkKey i32) (param $configDataJSONStr i32)
  (local $configData i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configDataJSONStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2.fromString
  local.tee $configData
  i32.store $0 offset=4
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $configData
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/managers/configDataManager/_setConfigData
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setConfigDataWithEtag (param $sdkKey i32) (param $configDataJSONStr i32) (param $etag i32)
  (local $configData i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configDataJSONStr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $etag
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/configBodyV2/ConfigBodyV2.fromString
  local.tee $configData
  i32.store $0 offset=8
  local.get $sdkKey
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $configData
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/managers/configDataManager/_setConfigData
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/configDataManager/_hasConfigData (param $sdkKey i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/managers/configDataManager/_configData
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/index/hasConfigDataForEtag (param $sdkKey i32) (param $etag i32) (result i32)
  (local $configData i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/managers/configDataManager/_hasConfigData
  i32.eqz
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $configData
  i32.store $0 offset=4
  local.get $configData
  if (result i32)
   local.get $configData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $assembly/types/configBodyV2/ConfigBodyV2#get:etag
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $configData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/types/configBodyV2/ConfigBodyV2#get:etag
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $etag
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/string/String.__eq
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/index/setClientCustomData (param $sdkKey i32) (param $clientCustomDataJSONStr i32)
  (local $str i32)
  (local $parsed i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.3 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $clientCustomDataJSONStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.3
  end
  local.tee $parsed
  i32.store $0 offset=8
  local.get $parsed
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 24416
   i32.const 19056
   i32.const 374
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  global.get $~lib/memory/__stack_pointer
  local.get $parsed
  local.tee $4
  i32.store $0 offset=16
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 19056
   i32.const 377
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/managers/clientCustomDataManager/_setClientCustomData
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setClientCustomDataUTF8 (param $sdkKey i32) (param $clientCustomDataUTF8 i32)
  (local $str i32)
  (local $parsed i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.4 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $clientCustomDataUTF8
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.4
  end
  local.tee $parsed
  i32.store $0 offset=8
  local.get $parsed
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 24416
   i32.const 19056
   i32.const 393
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  global.get $~lib/memory/__stack_pointer
  local.get $parsed
  local.tee $4
  i32.store $0 offset=16
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 19056
   i32.const 396
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/managers/clientCustomDataManager/_setClientCustomData
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/getSDKKeyFromConfig (param $sdkKey i32) (result i32)
  (local $config i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $config
  i32.store $0 offset=4
  local.get $config
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:clientSDKKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/managers/configDataManager/_getConfigMetadata (param $sdkKey i32) (result i32)
  (local $config i32)
  (local $metadata i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $assembly/managers/configDataManager/_configMetadata
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#has
  if
   global.get $assembly/managers/configDataManager/_configMetadata
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $sdkKey
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  else
   global.get $assembly/managers/configDataManager/_configData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $sdkKey
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.get $sdkKey
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/managers/configDataManager/_getConfigData
    local.tee $config
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    local.get $config
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/types/configBodyV2/ConfigBodyV2#get:project
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $config
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/types/configBodyV2/ConfigBodyV2#get:environment
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/types/configBody/ConfigMetadata#constructor
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $assembly/types/configBody/ConfigMetadata#stringify
    local.tee $metadata
    i32.store $0 offset=20
    global.get $assembly/managers/configDataManager/_configMetadata
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    local.get $sdkKey
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $metadata
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
    drop
    local.get $metadata
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 24512
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  unreachable
 )
 (func $assembly/index/getConfigMetadata (param $sdkKey i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/managers/configDataManager/_getConfigMetadata
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/murmurhash/murmurhashV3_js (param $key i32) (param $seed i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $seed
  call $assembly/helpers/murmurhash/murmurhashV3
  i32.const 10
  call $~lib/number/U32#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/jsonHelpers/getI32FromJSONValue (param $jsonValue i32) (result i32)
  (local $1 i32)
  (local $int i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonValue
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $jsonValue
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
   if (result i32)
    local.get $1
   else
    i32.const 7328
    i32.const 14288
    i32.const 189
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $int
  i32.store $0 offset=8
  local.get $int
  i32.eqz
  if
   i32.const 25360
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $jsonValue
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/string/String#concat
   i32.const 14288
   i32.const 191
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $int
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
  i32.wrap_i64
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#constructor (param $this i32) (param $str i32) (result i32)
  (local $str|2 i32)
  (local $json i32)
  (local $4 i32)
  (local $jsonObj i32)
  (local $disableAutomaticEventLogging i32)
  (local $disableCustomEventLogging i32)
  (local $chunkSizeValue i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 103
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 100
  call $assembly/types/eventQueueOptions/EventQueueOptions#set:eventRequestChunkSize
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/eventQueueOptions/EventQueueOptions#set:disableAutomaticEventLogging
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 0
  call $assembly/types/eventQueueOptions/EventQueueOptions#set:disableCustomEventLogging
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $this
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.4 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $str
   local.tee $str|2
   i32.store $0 offset=8
   local.get $str|2
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.4
  end
  local.tee $json
  i32.store $0 offset=12
  local.get $json
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 24944
   i32.const 25040
   i32.const 12
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $json
  local.tee $4
  i32.store $0 offset=16
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 25040
   i32.const 13
   i32.const 25
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $jsonObj
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 25136
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=24
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
  local.tee $disableAutomaticEventLogging
  i32.store $0 offset=28
  local.get $disableAutomaticEventLogging
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   local.get $disableAutomaticEventLogging
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=24
   local.get $11
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
   call $assembly/types/eventQueueOptions/EventQueueOptions#set:disableAutomaticEventLogging
  end
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 25216
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=24
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
  local.tee $disableCustomEventLogging
  i32.store $0 offset=32
  local.get $disableCustomEventLogging
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   local.get $disableCustomEventLogging
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=24
   local.get $11
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
   call $assembly/types/eventQueueOptions/EventQueueOptions#set:disableCustomEventLogging
  end
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  i32.const 25296
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=24
  local.get $11
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $chunkSizeValue
  i32.store $0 offset=36
  local.get $chunkSizeValue
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   local.get $chunkSizeValue
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=24
   local.get $11
   call $assembly/helpers/jsonHelpers/getI32FromJSONValue
   call $assembly/types/eventQueueOptions/EventQueueOptions#set:eventRequestChunkSize
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
  i32.const 10
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $9
   i32.store $0 offset=40
   i32.const 25632
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   i32.const 1
   local.get $9
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=44
   local.get $11
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 25632
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   i32.const 6144
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=24
   local.get $11
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 25040
   i32.const 30
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  else
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
   i32.const 10000
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $10
    i32.store $0 offset=48
    i32.const 25744
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    i32.const 1
    local.get $10
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=44
    local.get $11
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 25744
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    i32.const 6144
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=24
    local.get $11
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 25040
    i32.const 32
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 111
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 116
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.5 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.5
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#constructor (param $this i32) (param $sdkKey i32) (param $options i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 102
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:sdkKey
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:options
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:userEventQueue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:aggEventQueue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/eventQueue/EventQueue#set:sdkKey
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $options
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/eventQueue/EventQueue#set:options
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/eventQueue/EventQueue#set:userEventQueue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/eventQueue/EventQueue#set:aggEventQueue
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 121
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructor (param $this i32) (param $options i32) (param $clientUUID i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 118
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:pendingPayloads
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:chunkSize
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:clientUUID
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:pendingPayloads
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $options
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:chunkSize
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $clientUUID
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#set:clientUUID
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/managers/eventQueueManager/initEventQueue (param $sdkKey i32) (param $clientUUID i32) (param $optionsStr i32)
  (local $3 i32)
  (local $options i32)
  (local $queue i32)
  (local $requestPayloadManager i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/string/String.__not
  if
   i32.const 24544
   i32.const 19552
   i32.const 46
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#has
  if (result i32)
   i32.const 1
  else
   global.get $assembly/managers/eventQueueManager/_requestPayloadMap
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $sdkKey
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#has
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $sdkKey
   local.tee $3
   i32.store $0 offset=8
   i32.const 24768
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $7
   i32.const 1
   local.get $3
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 24768
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $7
   i32.const 6144
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=20
   local.get $7
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 24800
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/string/String.__concat
   i32.const 19552
   i32.const 49
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $optionsStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $assembly/types/eventQueueOptions/EventQueueOptions#constructor
  local.tee $options
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $options
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $assembly/eventQueue/eventQueue/EventQueue#constructor
  local.tee $queue
  i32.store $0 offset=28
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $queue
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $options
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $clientUUID
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructor
  local.tee $requestPayloadManager
  i32.store $0 offset=32
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  local.get $requestPayloadManager
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/managers/eventQueueManager/getRequestPayloadManager (param $sdkKey i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#has
  i32.eqz
  if
   i32.const 25776
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $sdkKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String#concat
   i32.const 19552
   i32.const 32
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/eventQueue/eventQueue/FlushEventQueues#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 176
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/eventQueue/eventQueue/FlushEventQueues#set:userEventQueue
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $assembly/eventQueue/eventQueue/FlushEventQueues#set:aggEventQueue
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#flushAndResetEventQueue (param $this i32) (result i32)
  (local $userEventQueue i32)
  (local $aggEventQueue i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/eventQueue/eventQueue/EventQueue#get:userEventQueue
  local.tee $userEventQueue
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/eventQueue/eventQueue/EventQueue#get:aggEventQueue
  local.tee $aggEventQueue
  i32.store $0 offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/eventQueue/eventQueue/EventQueue#set:userEventQueue
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/eventQueue/eventQueue/EventQueue#set:aggEventQueue
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/eventQueue/eventQueue/FlushEventQueues#constructor
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $userEventQueue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/eventQueue/eventQueue/FlushEventQueues#set:userEventQueue
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $aggEventQueue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $assembly/eventQueue/eventQueue/FlushEventQueues#set:aggEventQueue
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 177
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $values i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#constructor
  local.tee $values
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.1 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.1
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $values
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:value
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#set:length
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads~anonymous|0 (param $payload i32) (param $$1 i32) (param $$2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $payload
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $assembly/types/dvcEvent/FlushPayload#get:status
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 25888
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/string/String.__ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $payload
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $assembly/types/dvcEvent/FlushPayload#get:payloadId
   local.tee $3
   i32.store $0 offset=12
   i32.const 26064
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 1
   local.get $3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 26064
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 6144
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 26096
   i32.const 281
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#forEach (param $this i32) (param $fn i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $i
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $i
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 26208
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#forEach
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 120
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $newLength
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#values (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $values i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
  local.tee $values
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.1 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.1
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $values
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:value
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromUserEvents (param $this i32) (param $userEventQueue i32) (result i32)
  (local $records i32)
  (local $userEventQueueValues i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
  local.tee $records
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $userEventQueue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#values
  local.tee $userEventQueueValues
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $userEventQueueValues
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
   i32.lt_s
   if
    local.get $records
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $userEventQueueValues
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $records
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,i64>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,i64>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.6 (result i32)
     i32.const 24
     br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,i64>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,i64>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#constructor (param $this i32) (param $event i32) (param $user_id i32) (param $featureVars i32) (result i32)
  (local $isCustomEvent i32)
  (local $eventDate i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 108
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:type
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:target
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:customType
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:user_id
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:date
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:clientDate
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  f64.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:value
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:featureVars
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $assembly/types/dvcEvent/DVCRequestEvent#set:metaData
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  global.get $assembly/types/dvcEvent/EventTypes
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $event
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#get:type
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/set/Set<~lib/string/String>#has
  i32.eqz
  local.set $isCustomEvent
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $isCustomEvent
  if (result i32)
   i32.const 26384
  else
   local.get $event
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $assembly/types/dvcEvent/DVCEvent#get:type
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:type
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $event
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#get:target
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:target
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $isCustomEvent
  if (result i32)
   local.get $event
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $assembly/types/dvcEvent/DVCEvent#get:type
  else
   i32.const 0
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:customType
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $user_id
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:user_id
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  block $~lib/date/Date.now|inlined.3 (result i64)
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   br $~lib/date/Date.now|inlined.3
  end
  call $~lib/date/Date#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:date
  global.get $~lib/memory/__stack_pointer
  local.get $event
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#get:date
  if (result i32)
   local.get $event
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/types/dvcEvent/DVCEvent#get:date
  else
   i32.const 0
  end
  local.tee $eventDate
  i32.store $0 offset=16
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $eventDate
  if (result i32)
   local.get $eventDate
  else
   i32.const 0
   block $~lib/date/Date.now|inlined.4 (result i64)
    call $~lib/bindings/dom/Date.now
    i64.trunc_sat_f64_s
    br $~lib/date/Date.now|inlined.4
   end
   call $~lib/date/Date#constructor
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:clientDate
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $event
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#get:value
  call $assembly/types/dvcEvent/DVCRequestEvent#set:value
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $featureVars
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:featureVars
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $event
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#get:metaData
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcEvent/DVCRequestEvent#set:metaData
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#constructor (param $this i32) (param $user i32) (param $events i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 104
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcEvent/UserEventsBatchRecord#set:user
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $events
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcEvent/UserEventsBatchRecord#set:events
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $assembly/types/dvcUser/DVCPopulatedUser#set:privateCustomData
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromAggEvents (param $this i32) (param $aggEventQueue i32) (result i32)
  (local $aggEventQueueKeys i32)
  (local $3 i32)
  (local $4 i32)
  (local $aggEvents i32)
  (local $platformData i32)
  (local $user_id i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $emptyFeatureVars i32)
  (local $i i32)
  (local $type i32)
  (local $variableAggMap i32)
  (local $variableFeatureVarAggMapKeys i32)
  (local $y i32)
  (local $variableKey i32)
  (local $featureVarAggMap i32)
  (local $value f64)
  (local $varAggMap i32)
  (local $evalReasonAggMap i32)
  (local $evalReasonKeys i32)
  (local $i|24 i32)
  (local $evalReasonKey i32)
  (local $evalMetadata i32)
  (local $metaData i32)
  (local $dvcEvent i32)
  (local $featureVarAggMapKeys i32)
  (local $x i32)
  (local $_feature i32)
  (local $variationAggMap i32)
  (local $variationAggMapKeys i32)
  (local $z i32)
  (local $variationId i32)
  (local $evalReasonAggMap|36 i32)
  (local $evalMetadata|37 i32)
  (local $evalReasonKeys|38 i32)
  (local $i|39 i32)
  (local $evalReasonKey|40 i32)
  (local $evalReasonValue f64)
  (local $metaData|42 i32)
  (local $dvcEvent|43 i32)
  (local $dvcUser i32)
  (local $45 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 156
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 156
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $aggEventQueue
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0
  local.get $45
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#keys
  local.tee $aggEventQueueKeys
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 110
  i32.const 26240
  call $~lib/rt/__newArray
  local.tee $aggEvents
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/managers/platformDataManager/_getPlatformData
  local.tee $platformData
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 26272
  local.tee $user_id
  i32.store $0 offset=16
  local.get $platformData
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0
  local.get $45
  call $assembly/types/platformData/PlatformData#get:hostname
  if (result i32)
   local.get $this
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:clientUUID
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:clientUUID
   local.tee $8
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $platformData
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   call $assembly/types/platformData/PlatformData#get:hostname
   local.tee $10
   i32.store $0 offset=24
   local.get $10
   if (result i32)
    local.get $10
   else
    i32.const 7088
    i32.const 26096
    i32.const 75
    i32.const 45
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $9
   i32.store $0 offset=28
   i32.const 26352
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   i32.const 0
   local.get $8
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0 offset=32
   local.get $45
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 26352
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   i32.const 2
   local.get $9
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0 offset=32
   local.get $45
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 26352
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   i32.const 6144
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0 offset=36
   local.get $45
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $user_id
   i32.store $0 offset=16
  else
   local.get $platformData
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   call $assembly/types/platformData/PlatformData#get:hostname
   if
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $platformData
    local.set $45
    global.get $~lib/memory/__stack_pointer
    local.get $45
    i32.store $0
    local.get $45
    call $assembly/types/platformData/PlatformData#get:hostname
    local.tee $11
    i32.store $0 offset=40
    local.get $11
    if (result i32)
     local.get $11
    else
     i32.const 7088
     i32.const 26096
     i32.const 77
     i32.const 23
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $user_id
    i32.store $0 offset=16
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  local.tee $emptyFeatureVars
  i32.store $0 offset=44
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $aggEventQueueKeys
   local.set $45
   global.get $~lib/memory/__stack_pointer
   local.get $45
   i32.store $0
   local.get $45
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $aggEventQueueKeys
    local.set $45
    global.get $~lib/memory/__stack_pointer
    local.get $45
    i32.store $0
    local.get $45
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $type
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $aggEventQueue
    local.set $45
    global.get $~lib/memory/__stack_pointer
    local.get $45
    i32.store $0
    local.get $45
    local.get $type
    local.set $45
    global.get $~lib/memory/__stack_pointer
    local.get $45
    i32.store $0 offset=36
    local.get $45
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get
    local.tee $variableAggMap
    i32.store $0 offset=52
    global.get $~lib/memory/__stack_pointer
    local.get $variableAggMap
    local.set $45
    global.get $~lib/memory/__stack_pointer
    local.get $45
    i32.store $0
    local.get $45
    call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#keys
    local.tee $variableFeatureVarAggMapKeys
    i32.store $0 offset=56
    i32.const 0
    local.set $y
    loop $for-loop|1
     local.get $y
     local.get $variableFeatureVarAggMapKeys
     local.set $45
     global.get $~lib/memory/__stack_pointer
     local.get $45
     i32.store $0
     local.get $45
     call $~lib/array/Array<~lib/string/String>#get:length
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $variableFeatureVarAggMapKeys
      local.set $45
      global.get $~lib/memory/__stack_pointer
      local.get $45
      i32.store $0
      local.get $45
      local.get $y
      call $~lib/array/Array<~lib/string/String>#__get
      local.tee $variableKey
      i32.store $0 offset=60
      global.get $~lib/memory/__stack_pointer
      local.get $variableAggMap
      local.set $45
      global.get $~lib/memory/__stack_pointer
      local.get $45
      i32.store $0
      local.get $45
      local.get $variableKey
      local.set $45
      global.get $~lib/memory/__stack_pointer
      local.get $45
      i32.store $0 offset=36
      local.get $45
      call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get
      local.tee $featureVarAggMap
      i32.store $0 offset=64
      f64.const nan:0x8000000000000
      local.set $value
      local.get $featureVarAggMap
      local.set $45
      global.get $~lib/memory/__stack_pointer
      local.get $45
      i32.store $0
      local.get $45
      i32.const 20144
      local.set $45
      global.get $~lib/memory/__stack_pointer
      local.get $45
      i32.store $0 offset=36
      local.get $45
      call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#has
      if
       global.get $~lib/memory/__stack_pointer
       local.get $featureVarAggMap
       local.set $45
       global.get $~lib/memory/__stack_pointer
       local.get $45
       i32.store $0
       local.get $45
       i32.const 20144
       local.set $45
       global.get $~lib/memory/__stack_pointer
       local.get $45
       i32.store $0 offset=36
       local.get $45
       call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get
       local.tee $varAggMap
       i32.store $0 offset=68
       local.get $varAggMap
       local.set $45
       global.get $~lib/memory/__stack_pointer
       local.get $45
       i32.store $0
       local.get $45
       i32.const 20144
       local.set $45
       global.get $~lib/memory/__stack_pointer
       local.get $45
       i32.store $0 offset=36
       local.get $45
       call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#has
       if
        global.get $~lib/memory/__stack_pointer
        local.get $varAggMap
        local.set $45
        global.get $~lib/memory/__stack_pointer
        local.get $45
        i32.store $0
        local.get $45
        i32.const 20144
        local.set $45
        global.get $~lib/memory/__stack_pointer
        local.get $45
        i32.store $0 offset=36
        local.get $45
        call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get
        local.tee $evalReasonAggMap
        i32.store $0 offset=72
        local.get $evalReasonAggMap
        if
         global.get $~lib/memory/__stack_pointer
         local.get $evalReasonAggMap
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         call $~lib/map/Map<~lib/string/String,i64>#keys
         local.tee $evalReasonKeys
         i32.store $0 offset=76
         i32.const 0
         local.set $i|24
         loop $for-loop|2
          local.get $i|24
          local.get $evalReasonKeys
          local.set $45
          global.get $~lib/memory/__stack_pointer
          local.get $45
          i32.store $0
          local.get $45
          call $~lib/array/Array<~lib/string/String>#get:length
          i32.lt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.get $evalReasonKeys
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           local.get $i|24
           call $~lib/array/Array<~lib/string/String>#__get
           local.tee $evalReasonKey
           i32.store $0 offset=80
           local.get $evalReasonAggMap
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           local.get $evalReasonKey
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           call $~lib/map/Map<~lib/string/String,i64>#get
           f64.convert_i64_s
           local.set $value
           local.get $i|24
           i32.const 1
           i32.add
           local.set $i|24
           br $for-loop|2
          end
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
         local.tee $evalMetadata
         i32.store $0 offset=84
         local.get $evalMetadata
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         i32.const 3408
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         local.get $value
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
         local.tee $metaData
         i32.store $0 offset=88
         local.get $metaData
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         i32.const 22624
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         i32.const 3408
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=32
         local.get $45
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
         local.get $metaData
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         i32.const 20560
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         local.get $evalMetadata
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=32
         local.get $45
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         local.get $type
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         local.get $variableKey
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=32
         local.get $45
         i32.const 0
         local.get $value
         local.get $metaData
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=92
         local.get $45
         call $assembly/types/dvcEvent/DVCEvent#constructor
         local.tee $dvcEvent
         i32.store $0 offset=96
         local.get $aggEvents
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         i32.const 0
         local.get $dvcEvent
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=100
         local.get $45
         local.get $user_id
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=104
         local.get $45
         local.get $emptyFeatureVars
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=92
         local.get $45
         call $assembly/types/dvcEvent/DVCRequestEvent#constructor
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#push
         drop
        else
         i32.const 26432
         i32.const 26096
         i32.const 126
         i32.const 29
         call $~lib/builtins/abort
         unreachable
        end
       else
        i32.const 26528
        i32.const 26096
        i32.const 129
        i32.const 25
        call $~lib/builtins/abort
        unreachable
       end
      else
       global.get $~lib/memory/__stack_pointer
       local.get $featureVarAggMap
       local.set $45
       global.get $~lib/memory/__stack_pointer
       local.get $45
       i32.store $0
       local.get $45
       call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#keys
       local.tee $featureVarAggMapKeys
       i32.store $0 offset=108
       i32.const 0
       local.set $x
       loop $for-loop|3
        local.get $x
        local.get $featureVarAggMapKeys
        local.set $45
        global.get $~lib/memory/__stack_pointer
        local.get $45
        i32.store $0
        local.get $45
        call $~lib/array/Array<~lib/string/String>#get:length
        i32.lt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.get $featureVarAggMapKeys
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         local.get $x
         call $~lib/array/Array<~lib/string/String>#__get
         local.tee $_feature
         i32.store $0 offset=112
         global.get $~lib/memory/__stack_pointer
         local.get $featureVarAggMap
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         local.get $_feature
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0 offset=36
         local.get $45
         call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get
         local.tee $variationAggMap
         i32.store $0 offset=116
         global.get $~lib/memory/__stack_pointer
         local.get $variationAggMap
         local.set $45
         global.get $~lib/memory/__stack_pointer
         local.get $45
         i32.store $0
         local.get $45
         call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#keys
         local.tee $variationAggMapKeys
         i32.store $0 offset=120
         i32.const 0
         local.set $z
         loop $for-loop|4
          local.get $z
          local.get $variationAggMapKeys
          local.set $45
          global.get $~lib/memory/__stack_pointer
          local.get $45
          i32.store $0
          local.get $45
          call $~lib/array/Array<~lib/string/String>#get:length
          i32.lt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.get $variationAggMapKeys
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           local.get $z
           call $~lib/array/Array<~lib/string/String>#__get
           local.tee $variationId
           i32.store $0 offset=124
           global.get $~lib/memory/__stack_pointer
           local.get $variationAggMap
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           local.get $variationId
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get
           local.tee $evalReasonAggMap|36
           i32.store $0 offset=128
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $evalMetadata|37
           i32.store $0 offset=132
           f64.const 0
           local.set $value
           local.get $evalReasonAggMap|36
           if
            global.get $~lib/memory/__stack_pointer
            local.get $evalReasonAggMap|36
            local.set $45
            global.get $~lib/memory/__stack_pointer
            local.get $45
            i32.store $0
            local.get $45
            call $~lib/map/Map<~lib/string/String,i64>#keys
            local.tee $evalReasonKeys|38
            i32.store $0 offset=136
            i32.const 0
            local.set $i|39
            loop $for-loop|5
             local.get $i|39
             local.get $evalReasonKeys|38
             local.set $45
             global.get $~lib/memory/__stack_pointer
             local.get $45
             i32.store $0
             local.get $45
             call $~lib/array/Array<~lib/string/String>#get:length
             i32.lt_s
             if
              global.get $~lib/memory/__stack_pointer
              local.get $evalReasonKeys|38
              local.set $45
              global.get $~lib/memory/__stack_pointer
              local.get $45
              i32.store $0
              local.get $45
              local.get $i|39
              call $~lib/array/Array<~lib/string/String>#__get
              local.tee $evalReasonKey|40
              i32.store $0 offset=140
              local.get $evalReasonAggMap|36
              local.set $45
              global.get $~lib/memory/__stack_pointer
              local.get $45
              i32.store $0
              local.get $45
              local.get $evalReasonKey|40
              local.set $45
              global.get $~lib/memory/__stack_pointer
              local.get $45
              i32.store $0 offset=36
              local.get $45
              call $~lib/map/Map<~lib/string/String,i64>#get
              f64.convert_i64_s
              local.set $evalReasonValue
              local.get $evalMetadata|37
              local.set $45
              global.get $~lib/memory/__stack_pointer
              local.get $45
              i32.store $0
              local.get $45
              local.get $evalReasonKey|40
              local.set $45
              global.get $~lib/memory/__stack_pointer
              local.get $45
              i32.store $0 offset=36
              local.get $45
              local.get $evalReasonValue
              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
              local.get $value
              local.get $evalReasonValue
              f64.add
              local.set $value
              local.get $i|39
              i32.const 1
              i32.add
              local.set $i|39
              br $for-loop|5
             end
            end
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $metaData|42
           i32.store $0 offset=144
           local.get $evalMetadata|37
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=32
           local.get $45
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           i32.const 24512
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           call $~lib/string/String.__ne
           if
            local.get $metaData|42
            local.set $45
            global.get $~lib/memory/__stack_pointer
            local.get $45
            i32.store $0
            local.get $45
            i32.const 20560
            local.set $45
            global.get $~lib/memory/__stack_pointer
            local.get $45
            i32.store $0 offset=36
            local.get $45
            local.get $evalMetadata|37
            local.set $45
            global.get $~lib/memory/__stack_pointer
            local.get $45
            i32.store $0 offset=32
            local.get $45
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
           end
           local.get $metaData|42
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           i32.const 20592
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           local.get $_feature
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=32
           local.get $45
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           local.get $metaData|42
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           i32.const 22624
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           local.get $variationId
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=32
           local.get $45
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           local.get $type
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           local.get $variableKey
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=32
           local.get $45
           i32.const 0
           local.get $value
           local.get $metaData|42
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=92
           local.get $45
           call $assembly/types/dvcEvent/DVCEvent#constructor
           local.tee $dvcEvent|43
           i32.store $0 offset=148
           local.get $aggEvents
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0
           local.get $45
           i32.const 0
           local.get $dvcEvent|43
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=100
           local.get $45
           local.get $user_id
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=104
           local.get $45
           local.get $emptyFeatureVars
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=92
           local.get $45
           call $assembly/types/dvcEvent/DVCRequestEvent#constructor
           local.set $45
           global.get $~lib/memory/__stack_pointer
           local.get $45
           i32.store $0 offset=36
           local.get $45
           call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#push
           drop
           local.get $z
           i32.const 1
           i32.add
           local.set $z
           br $for-loop|4
          end
         end
         local.get $x
         i32.const 1
         i32.add
         local.set $x
         br $for-loop|3
        end
       end
      end
      local.get $y
      i32.const 1
      i32.add
      local.set $y
      br $for-loop|1
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  local.get $user_id
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0 offset=32
  local.get $45
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  f64.const nan:0x8000000000000
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0 offset=36
  local.get $45
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.tee $dvcUser
  i32.store $0 offset=152
  i32.const 0
  local.get $dvcUser
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0 offset=36
  local.get $45
  local.get $aggEvents
  local.set $45
  global.get $~lib/memory/__stack_pointer
  local.get $45
  i32.store $0 offset=32
  local.get $45
  call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
  local.set $45
  global.get $~lib/memory/__stack_pointer
  i32.const 156
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $45
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#eventCount (param $this i32) (result i32)
  (local $count i32)
  (local $i i32)
  (local $record i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  local.set $count
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/types/dvcEvent/FlushPayload#get:records
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/types/dvcEvent/FlushPayload#get:records
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get
    local.tee $record
    i32.store $0 offset=8
    local.get $count
    local.get $record
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length
    i32.add
    local.set $count
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $count
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/typedarray/Uint8Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $~lib/typedarray/SUBARRAY<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $array
   i32.store $0
   local.get $begin
   local.set $begin|4
   local.get $end
   local.set $end|5
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=4
   local.get $19
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $begin|4
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $len
    local.get $begin|4
    i32.add
    local.tee $7
    i32.const 0
    local.tee $8
    local.get $7
    local.get $8
    i32.gt_s
    select
   else
    local.get $begin|4
    local.tee $9
    local.get $len
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_s
    select
   end
   local.set $begin|4
   local.get $end|5
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $len
    local.get $end|5
    i32.add
    local.tee $11
    i32.const 0
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_s
    select
   else
    local.get $end|5
    local.tee $13
    local.get $len
    local.tee $14
    local.get $13
    local.get $14
    i32.lt_s
    select
   end
   local.set $end|5
   local.get $end|5
   local.tee $15
   local.get $begin|4
   local.tee $16
   local.get $15
   local.get $16
   i32.gt_s
   select
   local.set $end|5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0 offset=8
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=4
   local.get $19
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $buf
   local.get $out
   local.get $buf
   i32.store $0
   local.get $out
   local.get $buf
   i32.const 0
   call $~lib/rt/itcms/__link
   local.get $out
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store $0 offset=4
   local.get $19
   call $~lib/arraybuffer/ArrayBufferView#get:dataStart
   local.get $begin|4
   i32.const 0
   i32.shl
   i32.add
   i32.store $0 offset=4
   local.get $out
   local.get $end|5
   local.get $begin|4
   i32.sub
   i32.const 0
   i32.shl
   i32.store $0 offset=8
   local.get $out
   br $~lib/typedarray/SUBARRAY<~lib/typedarray/Uint8Array,u8>|inlined.0
  end
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
  return
 )
 (func $~lib/as-uuid/assembly/rng/rng (param $gen i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/as-uuid/assembly/rng/poolPtr
  global.get $~lib/as-uuid/assembly/rng/POOL_SIZE
  global.get $~lib/as-uuid/assembly/rng/CHUNK_SIZE
  i32.sub
  i32.gt_s
  if
   global.get $~lib/as-uuid/assembly/rng/rnds8Pool
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   global.set $~argumentsLength
   local.get $gen
   i32.load $0
   call_indirect $0 (type $i32_=>_none)
   i32.const 0
   global.set $~lib/as-uuid/assembly/rng/poolPtr
  end
  global.get $~lib/as-uuid/assembly/rng/rnds8Pool
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  global.get $~lib/as-uuid/assembly/rng/poolPtr
  global.get $~lib/as-uuid/assembly/rng/poolPtr
  global.get $~lib/as-uuid/assembly/rng/CHUNK_SIZE
  i32.add
  global.set $~lib/as-uuid/assembly/rng/poolPtr
  global.get $~lib/as-uuid/assembly/rng/poolPtr
  call $~lib/typedarray/Uint8Array#subarray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/typedarray/Uint8Array#__uset (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-uuid/assembly/rng/randomFill (param $array i32)
  (local $i i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   global.get $~lib/as-uuid/assembly/rng/POOL_SIZE
   i32.lt_s
   if
    local.get $array
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    local.get $i
    call $~lib/math/NativeMath.random
    f64.const 256
    f64.mul
    i32.trunc_sat_f64_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__uset
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-uuid/assembly/rng/rng@varargs (param $gen i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 26720
   local.tee $gen
   i32.store $0
  end
  local.get $gen
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-uuid/assembly/rng/rng
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/typedarray/Uint8Array#__uget (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.add
  i32.load8_u $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/as-uuid/assembly/stringify/stringify (param $arr i32) (param $offset i32) (result i32)
  (local $src i32)
  (local $dst i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $arr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $offset
  i32.add
  local.set $src
  i32.const 16
  i32.const 4
  i32.mul
  i32.const 4
  i32.const 2
  i32.mul
  i32.add
  i32.const 2
  call $~lib/rt/itcms/__new
  local.set $dst
  local.get $dst
  i32.const 0
  i32.add
  local.get $src
  i32.const 0
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 4
  i32.add
  local.get $src
  i32.const 1
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 8
  i32.add
  local.get $src
  i32.const 2
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 12
  i32.add
  local.get $src
  i32.const 3
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 16
  i32.add
  global.get $~lib/as-uuid/assembly/stringify/MINUS_CODE
  i32.store16 $0
  local.get $dst
  i32.const 18
  i32.add
  local.get $src
  i32.const 4
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 22
  i32.add
  local.get $src
  i32.const 5
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 26
  i32.add
  global.get $~lib/as-uuid/assembly/stringify/MINUS_CODE
  i32.store16 $0
  local.get $dst
  i32.const 28
  i32.add
  local.get $src
  i32.const 6
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 32
  i32.add
  local.get $src
  i32.const 7
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 36
  i32.add
  global.get $~lib/as-uuid/assembly/stringify/MINUS_CODE
  i32.store16 $0
  local.get $dst
  i32.const 38
  i32.add
  local.get $src
  i32.const 8
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 42
  i32.add
  local.get $src
  i32.const 9
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 46
  i32.add
  global.get $~lib/as-uuid/assembly/stringify/MINUS_CODE
  i32.store16 $0
  local.get $dst
  i32.const 48
  i32.add
  local.get $src
  i32.const 10
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 52
  i32.add
  local.get $src
  i32.const 11
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 56
  i32.add
  local.get $src
  i32.const 12
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 60
  i32.add
  local.get $src
  i32.const 13
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 64
  i32.add
  local.get $src
  i32.const 14
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  i32.const 68
  i32.add
  local.get $src
  i32.const 15
  i32.add
  i32.load8_u $0
  call $~lib/as-uuid/assembly/stringify/byteToHex
  i32.store $0
  local.get $dst
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/as-uuid/assembly/uuid/uuid (result i32)
  (local $rnds i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $~lib/as-uuid/assembly/v4/v4|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   call $~lib/as-uuid/assembly/rng/rng@varargs
   local.tee $rnds
   i32.store $0
   local.get $rnds
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 6
   local.get $rnds
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 6
   call $~lib/typedarray/Uint8Array#__uget
   i32.const 15
   i32.and
   i32.const 64
   i32.or
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__uset
   local.get $rnds
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 8
   local.get $rnds
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 8
   call $~lib/typedarray/Uint8Array#__uget
   i32.const 63
   i32.and
   i32.const 128
   i32.or
   i32.const 255
   i32.and
   call $~lib/typedarray/Uint8Array#__uset
   local.get $rnds
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   call $~lib/as-uuid/assembly/stringify/stringify
   br $~lib/as-uuid/assembly/v4/v4|inlined.0
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#constructor (param $this i32) (param $records i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 119
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $records
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#set:records
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/dvcEvent/FlushPayload#set:payloadId
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/dvcEvent/FlushPayload#set:status
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 26672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#set:status
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-uuid/assembly/uuid/uuid
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#set:payloadId
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#getFlushPayload (param $this i32) (result i32)
  (local $payloads i32)
  (local $i i32)
  (local $payload i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
  local.tee $payloads
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $payloads
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length
   i32.lt_s
   if
    block $for-continue|0
     global.get $~lib/memory/__stack_pointer
     local.get $payloads
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $i
     call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__get
     local.tee $payload
     i32.store $0 offset=12
     local.get $payload
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $assembly/types/dvcEvent/FlushPayload#get:status
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 25888
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     call $~lib/string/String.__eq
     if
      br $for-continue|0
     end
     local.get $payload
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/types/dvcEvent/FlushPayload#eventCount
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:chunkSize
     i32.lt_s
     if
      local.get $payload
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $6
      return
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  i32.const 0
  i32.const 2
  i32.const 120
  i32.const 26752
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/dvcEvent/FlushPayload#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#recordForUser (param $this i32) (param $user_id i32) (result i32)
  (local $i i32)
  (local $record i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $assembly/types/dvcEvent/FlushPayload#get:records
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $assembly/types/dvcEvent/FlushPayload#get:records
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get
    local.tee $record
    i32.store $0 offset=8
    local.get $record
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=16
    local.get $4
    call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $user_id
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/string/String.__eq
    if
     local.get $record
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#splice (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  global.get $~lib/memory/__stack_pointer
  local.get $deleteCount
  i32.const 2
  i32.const 110
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $resultStart
  local.get $this
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store $0
  local.get $17
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#set:length_
  local.get $result
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#concat (param $this i32) (param $other i32) (result i32)
  (local $thisLen i32)
  (local $otherLen i32)
  (local $outLen i32)
  (local $out i32)
  (local $outStart i32)
  (local $thisSize i32)
  (local $thisStart i32)
  (local $offset i32)
  (local $ref i32)
  (local $otherStart i32)
  (local $otherSize i32)
  (local $offset|13 i32)
  (local $ref|14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  local.set $thisLen
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  local.set $otherLen
  local.get $thisLen
  local.get $otherLen
  i32.add
  local.set $outLen
  local.get $outLen
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outLen
  i32.const 2
  i32.const 110
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $outStart
  local.get $thisLen
  i32.const 2
  i32.shl
  local.set $thisSize
  i32.const 1
  drop
  local.get $this
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $thisStart
  i32.const 0
  local.set $offset
  loop $for-loop|0
   local.get $offset
   local.get $thisSize
   i32.lt_u
   if
    local.get $thisStart
    local.get $offset
    i32.add
    i32.load $0
    local.set $ref
    local.get $outStart
    local.get $offset
    i32.add
    local.get $ref
    i32.store $0
    local.get $out
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset
    i32.const 4
    i32.add
    local.set $offset
    br $for-loop|0
   end
  end
  local.get $outStart
  local.get $thisSize
  i32.add
  local.set $outStart
  local.get $other
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store $0
  local.get $15
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $otherStart
  local.get $otherLen
  i32.const 2
  i32.shl
  local.set $otherSize
  i32.const 0
  local.set $offset|13
  loop $for-loop|1
   local.get $offset|13
   local.get $otherSize
   i32.lt_u
   if
    local.get $otherStart
    local.get $offset|13
    i32.add
    i32.load $0
    local.set $ref|14
    local.get $outStart
    local.get $offset|13
    i32.add
    local.get $ref|14
    i32.store $0
    local.get $out
    local.get $ref|14
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $offset|13
    i32.const 4
    i32.add
    local.set $offset|13
    br $for-loop|1
   end
  end
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#addBatchRecordForUser (param $this i32) (param $record i32) (param $chunkSize i32)
  (local $userRecord i32)
  (local $splicedEvents i32)
  (local $newBatchRecord i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $record
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/dvcEvent/FlushPayload#recordForUser
  local.tee $userRecord
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $record
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 0
  local.get $chunkSize
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $assembly/types/dvcEvent/FlushPayload#eventCount
  i32.sub
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#splice
  local.tee $splicedEvents
  i32.store $0 offset=20
  local.get $splicedEvents
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $userRecord
  if
   local.get $userRecord
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $record
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#set:user
   local.get $userRecord
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $userRecord
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=24
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   local.get $splicedEvents
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#concat
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#set:events
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $record
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $splicedEvents
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
   local.tee $newBatchRecord
   i32.store $0 offset=28
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/types/dvcEvent/FlushPayload#get:records
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $newBatchRecord
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#push
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.2
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.3 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.3
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.4 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.4
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.5 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.5
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.6 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.6
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#addEventRecordsToPendingPayloads (param $this i32) (param $records i32)
  (local $i i32)
  (local $record i32)
  (local $flushPayload i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $records
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $records
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get
    local.tee $record
    i32.store $0 offset=4
    loop $while-continue|1
     local.get $record
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $5
     call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#getFlushPayload
      local.tee $flushPayload
      i32.store $0 offset=12
      local.get $flushPayload
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      local.get $record
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      local.get $5
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=16
      local.get $5
      call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:chunkSize
      call $assembly/types/dvcEvent/FlushPayload#addBatchRecordForUser
      local.get $flushPayload
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      local.get $5
      call $assembly/types/dvcEvent/FlushPayload#get:records
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
      i32.const 0
      i32.gt_s
      if
       local.get $this
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=20
       local.get $5
       call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       local.get $flushPayload
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=20
       local.get $5
       call $assembly/types/dvcEvent/FlushPayload#get:payloadId
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=8
       local.get $5
       local.get $flushPayload
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=16
       local.get $5
       call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set
       drop
      end
      br $while-continue|1
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads~anonymous|0 (param $payload i32) (param $$1 i32) (param $$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $payload
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcEvent/FlushPayload#get:status
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 25888
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/string/String.__eq
  if
   local.get $payload
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 26672
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/types/dvcEvent/FlushPayload#set:status
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 26784
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#forEach
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructFlushPayloads (param $this i32) (param $userEventQueue i32) (param $aggEventQueue i32) (result i32)
  (local $records i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $userEventQueue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromUserEvents
  local.tee $records
  i32.store $0 offset=8
  local.get $records
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  local.get $aggEventQueue
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromAggEvents
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#push
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $records
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#addEventRecordsToPendingPayloads
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0 (param $val i32) (param $i i32) (param $_arr i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<~lib/string/String> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  i32.const 12960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=32
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#get:_arr
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=24
  local.get $1
  i32.const 26816
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=28
  local.get $1
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  i32.const 11072
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  local.get $1
  call $~lib/array/Array<~lib/string/String>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 12992
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/managers/eventQueueManager/flushEventQueue (param $sdkKey i32) (result i32)
  (local $eventQueue i32)
  (local $requestPayloadManager i32)
  (local $eventQueues i32)
  (local $payloads i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $eventQueue
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/managers/eventQueueManager/getRequestPayloadManager
  local.tee $requestPayloadManager
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $eventQueue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $assembly/eventQueue/eventQueue/EventQueue#flushAndResetEventQueue
  local.tee $eventQueues
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $requestPayloadManager
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $eventQueues
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/eventQueue/eventQueue/FlushEventQueues#get:userEventQueue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  local.get $eventQueues
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $assembly/eventQueue/eventQueue/FlushEventQueues#get:aggEventQueue
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructFlushPayloads
  local.tee $payloads
  i32.store $0 offset=28
  local.get $payloads
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $halfBucketsMask i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $entry
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext
  i32.const 1
  i32.or
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:taggedNext
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#set:entriesCount
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:bucketsMask
  i32.const 1
  i32.shr_u
  local.set $halfBucketsMask
  local.get $halfBucketsMask
  i32.const 1
  i32.add
  i32.const 4
  local.tee $4
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_u
  select
  i32.ge_u
  if (result i32)
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCount
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesCapacity
   i32.const 3
   i32.mul
   i32.const 4
   i32.div_s
   i32.lt_s
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $halfBucketsMask
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#rehash
  end
  i32.const 1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#markPayloadSuccess (param $this i32) (param $payloadId i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $payloadId
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $payloadId
   local.tee $2
   i32.store $0 offset=12
   i32.const 26992
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 1
   local.get $2
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 26992
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 6144
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 26096
   i32.const 251
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $payloadId
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/eventQueueManager/onPayloadSuccess (param $sdkKey i32) (param $payloadId i32)
  (local $requestPayloadManager i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/managers/eventQueueManager/getRequestPayloadManager
  local.tee $requestPayloadManager
  i32.store $0 offset=4
  local.get $requestPayloadManager
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $payloadId
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#markPayloadSuccess
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#markPayloadFailure (param $this i32) (param $payloadId i32) (param $retryable i32)
  (local $3 i32)
  (local $4 i32)
  (local $payload i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $payloadId
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $payloadId
   local.tee $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $retryable
   i32.const 0
   call $~lib/number/Bool#toString
   local.tee $4
   i32.store $0 offset=16
   i32.const 27216
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 1
   local.get $3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 27216
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 3
   local.get $4
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 27216
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 6144
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 26096
   i32.const 261
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $retryable
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $payloadId
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get
   local.tee $payload
   i32.store $0 offset=20
   local.get $payload
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 25888
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/types/dvcEvent/FlushPayload#set:status
  else
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $payloadId
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/eventQueueManager/onPayloadFailure (param $sdkKey i32) (param $payloadId i32) (param $retryable i32)
  (local $requestPayloadManager i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/managers/eventQueueManager/getRequestPayloadManager
  local.tee $requestPayloadManager
  i32.store $0 offset=4
  local.get $requestPayloadManager
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $payloadId
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $retryable
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#markPayloadFailure
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/getDateFromJSONOptional (param $jsonObj i32) (param $key i32) (result i32)
  (local $dateStr i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $dateStr
  i32.store $0 offset=8
  local.get $dateStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/string/String.__not
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $dateStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/date/Date.fromString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcEvent/DVCEvent.fromJSONString (param $eventStr i32) (result i32)
  (local $str i32)
  (local $eventJSON i32)
  (local $3 i32)
  (local $event i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.5 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $eventStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.5
  end
  local.tee $eventJSON
  i32.store $0 offset=8
  local.get $eventJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 27264
   i32.const 27360
   i32.const 57
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $eventJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 27360
   i32.const 58
   i32.const 23
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $event
  i32.store $0 offset=16
  i32.const 0
  local.get $event
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=36
  local.get $5
  i32.const 14848
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  local.get $event
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=36
  local.get $5
  i32.const 27440
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  local.get $event
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=36
  local.get $5
  i32.const 14928
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  call $assembly/helpers/jsonHelpers/getDateFromJSONOptional
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=28
  local.get $5
  local.get $event
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=36
  local.get $5
  i32.const 20144
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  f64.const nan:0x8000000000000
  call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
  local.get $event
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=36
  local.get $5
  i32.const 27472
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=32
  local.get $5
  call $assembly/types/dvcEvent/DVCEvent#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#mergeClientCustomData (param $this i32) (param $clientCustomData i32)
  (local $i i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/types/dvcUser/DVCPopulatedUser#get:customData
  i32.eqz
  if (result i32)
   local.get $clientCustomData
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $assembly/types/dvcUser/DVCPopulatedUser#set:customData
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $clientCustomData
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    call $assembly/types/dvcUser/DVCPopulatedUser#get:customData
    local.tee $3
    i32.store $0 offset=12
    local.get $3
    if (result i32)
     local.get $3
    else
     i32.const 7088
     i32.const 13648
     i32.const 273
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $clientCustomData
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
    i32.eqz
    if (result i32)
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $assembly/types/dvcUser/DVCPopulatedUser#get:privateCustomData
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $this
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      call $assembly/types/dvcUser/DVCPopulatedUser#get:privateCustomData
      local.tee $4
      i32.store $0 offset=20
      local.get $4
      if (result i32)
       local.get $4
      else
       i32.const 7088
       i32.const 13648
       i32.const 274
       i32.const 52
       call $~lib/builtins/abort
       unreachable
      end
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $clientCustomData
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=16
      local.get $6
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      local.get $i
      call $~lib/array/Array<~lib/string/String>#__get
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
      i32.eqz
     else
      i32.const 0
     end
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $assembly/types/dvcUser/DVCPopulatedUser#get:customData
     local.tee $5
     i32.store $0 offset=24
     local.get $5
     if (result i32)
      local.get $5
     else
      i32.const 7088
      i32.const 13648
      i32.const 275
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $clientCustomData
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=28
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     local.get $clientCustomData
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     local.get $clientCustomData
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=36
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=32
     local.get $6
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=28
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.2
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.3 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.3
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.4 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.4
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.5 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.5
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.6 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.6
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 10864
   i32.const 10928
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#queueEvent (param $this i32) (param $user i32) (param $event i32) (param $featureVariationMap i32)
  (local $requestEvent i32)
  (local $user_id i32)
  (local $userEvents i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $event
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $event
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  local.get $user
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  local.get $featureVariationMap
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  call $assembly/types/dvcEvent/DVCRequestEvent#constructor
  local.tee $requestEvent
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $user
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
  local.tee $user_id
  i32.store $0 offset=20
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $assembly/eventQueue/eventQueue/EventQueue#get:userEventQueue
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $user_id
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $user
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   i32.const 0
   i32.const 2
   i32.const 110
   i32.const 27520
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
   local.tee $userEvents
   i32.store $0 offset=24
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   call $assembly/eventQueue/eventQueue/EventQueue#get:userEventQueue
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $user_id
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   local.get $userEvents
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#set
   drop
  else
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $assembly/eventQueue/eventQueue/EventQueue#get:userEventQueue
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $user_id
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get
   local.tee $userEvents
   i32.store $0 offset=24
   local.get $userEvents
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   local.get $user
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $assembly/types/dvcEvent/UserEventsBatchRecord#set:user
  end
  local.get $userEvents
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $requestEvent
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#push
  drop
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $assembly/eventQueue/eventQueue/EventQueue#get:eventQueueCount
  i32.const 1
  i32.add
  call $assembly/eventQueue/eventQueue/EventQueue#set:eventQueueCount
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/eventQueueManager/queueEvent (param $sdkKey i32) (param $userStr i32) (param $eventStr i32)
  (local $eventQueue i32)
  (local $dvcUser i32)
  (local $event i32)
  (local $bucketedConfig i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $eventQueue
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $userStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $dvcUser
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $eventStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $assembly/types/dvcEvent/DVCEvent.fromJSONString
  local.tee $event
  i32.store $0 offset=12
  local.get $dvcUser
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=16
  local.get $7
  call $assembly/types/dvcUser/DVCPopulatedUser#mergeClientCustomData
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=24
  local.get $7
  call $assembly/managers/configDataManager/_getConfigData
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $dvcUser
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=16
  local.get $7
  local.get $sdkKey
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=24
  local.get $7
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  i32.const 0
  call $assembly/bucketing/bucketing/_generateBucketedConfig
  local.tee $bucketedConfig
  i32.store $0 offset=28
  local.get $eventQueue
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $dvcUser
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=16
  local.get $7
  local.get $event
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  local.get $bucketedConfig
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=32
  local.get $7
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#get:featureVariationMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=24
  local.get $7
  call $assembly/eventQueue/eventQueue/EventQueue#queueEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj (param $jsonObj i32) (result i32)
  (local $_feature i32)
  (local $_variation i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 20592
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $_feature
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 22624
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $_variation
  i32.store $0 offset=12
  local.get $_feature
  i32.eqz
  if
   i32.const 27664
   i32.const 20304
   i32.const 120
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  local.get $_variation
  i32.eqz
  if
   i32.const 27760
   i32.const 20304
   i32.const 121
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.get $_feature
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $_variation
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation.getVariableVariationMapFromJSONObj (param $jsonObj i32) (result i32)
  (local $featureVarMap i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $featureVarJSON i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
  local.tee $featureVarMap
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $jsonObj
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    local.get $key
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
    local.tee $featureVarJSON
    i32.store $0 offset=20
    local.get $featureVarJSON
    if
     local.get $featureVarMap
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $6
     local.get $key
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     local.get $featureVarJSON
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=28
     local.get $6
     call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=24
     local.get $6
     call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set
     drop
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $featureVarMap
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/managers/eventQueueManager/queueAggregateEvent (param $sdkKey i32) (param $eventStr i32) (param $variableVariationMapStr i32)
  (local $eventQueue i32)
  (local $event i32)
  (local $str i32)
  (local $variableVariationMapJSON i32)
  (local $7 i32)
  (local $variableVariationMap i32)
  (local $aggByVariation i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $eventQueue
  i32.store $0 offset=4
  local.get $eventQueue
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/eventQueue/eventQueue/EventQueue#get:options
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableAutomaticEventLogging
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $eventStr
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/dvcEvent/DVCEvent.fromJSONString
  local.tee $event
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.6 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $variableVariationMapStr
   local.tee $str
   i32.store $0 offset=16
   local.get $str
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.6
  end
  local.tee $variableVariationMapJSON
  i32.store $0 offset=20
  local.get $variableVariationMapJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 27552
   i32.const 19552
   i32.const 144
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $variableVariationMapJSON
  local.tee $7
  i32.store $0 offset=24
  local.get $7
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $7
  else
   i32.const 7328
   i32.const 19552
   i32.const 147
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $assembly/types/bucketedUserConfig/FeatureVariation.getVariableVariationMapFromJSONObj
  local.tee $variableVariationMap
  i32.store $0 offset=28
  local.get $event
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=32
  local.get $10
  call $assembly/types/dvcEvent/DVCEvent#get:type
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  i32.const 5664
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/string/String.__eq
  local.set $aggByVariation
  local.get $eventQueue
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $event
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  local.get $variableVariationMap
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=32
  local.get $10
  local.get $aggByVariation
  call $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj (param $jsonObj i32) (result i32)
  (local $reason i32)
  (local $details i32)
  (local $targetId i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 28144
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $reason
  i32.store $0 offset=8
  local.get $reason
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   local.tee $reason
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 28176
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $details
  i32.store $0 offset=12
  local.get $details
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   local.tee $details
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 28224
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $targetId
  i32.store $0 offset=16
  local.get $targetId
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   local.tee $targetId
   i32.store $0 offset=16
  end
  i32.const 0
  local.get $reason
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $details
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  local.get $targetId
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  call $assembly/types/bucketedUserConfig/EvalReason#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj (param $variableObj i32) (result i32)
  (local $evalObj i32)
  (local $evalObjJSON i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 20560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $evalObj
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $evalObj
  if (result i32)
   local.get $evalObj
  else
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  end
  local.tee $evalObjJSON
  i32.store $0 offset=12
  i32.const 0
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  i32.const 20496
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  i32.const 14848
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  i32.const 20528
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  i32.const 20144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=24
  local.get $3
  local.get $variableObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  i32.const 20592
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=28
  local.get $3
  local.get $evalObjJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  call $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  call $assembly/types/bucketedUserConfig/SDKVariable#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable.fromJSONString (param $userConfigStr i32) (result i32)
  (local $str i32)
  (local $configJSON i32)
  (local $3 i32)
  (local $configJSONObj i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.8 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $userConfigStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.8
  end
  local.tee $configJSON
  i32.store $0 offset=8
  local.get $configJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 28064
   i32.const 20304
   i32.const 276
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $configJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 20304
   i32.const 278
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $configJSONObj
  i32.store $0 offset=16
  local.get $configJSONObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON (param $sdkKey i32) (param $varVariationMapString i32) (param $variable i32) (param $variableKey i32)
  (local $str i32)
  (local $varVariationMapJSON i32)
  (local $6 i32)
  (local $varVariationObj i32)
  (local $varVariationMap i32)
  (local $i i32)
  (local $key i32)
  (local $value i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.7 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $varVariationMapString
   local.tee $str
   i32.store $0
   local.get $str
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.7
  end
  local.tee $varVariationMapJSON
  i32.store $0 offset=8
  local.get $varVariationMapJSON
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 27856
   i32.const 19552
   i32.const 165
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $varVariationMapJSON
  local.tee $6
  i32.store $0 offset=12
  local.get $6
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $6
  else
   i32.const 7328
   i32.const 19552
   i32.const 166
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $varVariationObj
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
  local.tee $varVariationMap
  i32.store $0 offset=20
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $varVariationObj
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=24
   local.get $13
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=4
   local.get $13
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $varVariationObj
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=24
    local.get $13
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=4
    local.get $13
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $varVariationObj
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=4
    local.get $13
    local.get $key
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=24
    local.get $13
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $value
    i32.store $0 offset=32
    local.get $value
    i32.eqz
    if (result i32)
     i32.const 1
    else
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=4
     local.get $13
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     i32.eqz
    end
    if
     i32.const 27952
     i32.const 19552
     i32.const 173
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    local.get $varVariationMap
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=4
    local.get $13
    local.get $key
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=24
    local.get $13
    global.get $~lib/memory/__stack_pointer
    local.get $value
    local.tee $12
    i32.store $0 offset=44
    local.get $12
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $12
    else
     i32.const 7328
     i32.const 19552
     i32.const 176
     i32.const 42
     call $~lib/builtins/abort
     unreachable
    end
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=40
    local.get $13
    call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
    local.set $13
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=36
    local.get $13
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $sdkKey
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=4
  local.get $13
  local.get $varVariationMap
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=24
  local.get $13
  local.get $variable
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=48
  local.get $13
  i32.const 0
  call $~lib/string/String.__ne
  if (result i32)
   local.get $variable
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0 offset=48
   local.get $13
   call $assembly/types/bucketedUserConfig/SDKVariable.fromJSONString
  else
   i32.const 0
  end
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=36
  local.get $13
  local.get $variableKey
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store $0 offset=40
  local.get $13
  call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#delete (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $halfBucketsMask i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $entry
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:taggedNext
  i32.const 1
  i32.or
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:taggedNext
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#set:entriesCount
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:bucketsMask
  i32.const 1
  i32.shr_u
  local.set $halfBucketsMask
  local.get $halfBucketsMask
  i32.const 1
  i32.add
  i32.const 4
  local.tee $4
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_u
  select
  i32.ge_u
  if (result i32)
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCount
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesCapacity
   i32.const 3
   i32.mul
   i32.const 4
   i32.div_s
   i32.lt_s
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $halfBucketsMask
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#rehash
  end
  i32.const 1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#delete (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $halfBucketsMask i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $key
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 0
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $entry
  local.get $entry
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:taggedNext
  i32.const 1
  i32.or
  call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:taggedNext
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#set:entriesCount
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:bucketsMask
  i32.const 1
  i32.shr_u
  local.set $halfBucketsMask
  local.get $halfBucketsMask
  i32.const 1
  i32.add
  i32.const 4
  local.tee $4
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_u
  select
  i32.ge_u
  if (result i32)
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCount
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesCapacity
   i32.const 3
   i32.mul
   i32.const 4
   i32.div_s
   i32.lt_s
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   local.get $halfBucketsMask
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#rehash
  end
  i32.const 1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/managers/eventQueueManager/cleanupEventQueue (param $sdkKey i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#has
  if
   global.get $assembly/managers/eventQueueManager/_eventQueueMap
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $sdkKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#delete
   drop
  end
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $sdkKey
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#has
  if
   global.get $assembly/managers/eventQueueManager/_requestPayloadMap
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $sdkKey
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#delete
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount~anonymous|0 (param $count i32) (param $payload i32) (param $$2 i32) (param $$3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $count
  local.get $payload
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/dvcEvent/FlushPayload#eventCount
  i32.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#reduce<i32> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $initialValue
  local.set $acc
  i32.const 0
  local.set $i
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $acc
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $i
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#get:pendingPayloads
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 28272
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#reduce<i32>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/managers/eventQueueManager/eventQueueSize (param $sdkKey i32) (result i32)
  (local $eventQueue i32)
  (local $requestPayloadManager i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $eventQueue
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/managers/eventQueueManager/getRequestPayloadManager
  local.tee $requestPayloadManager
  i32.store $0 offset=8
  local.get $eventQueue
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/eventQueue/eventQueue/EventQueue#get:eventQueueCount
  local.get $requestPayloadManager
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount
  i32.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble.encode (param $message i32) (param $writer i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 9
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:value
  call $~lib/as-proto/assembly/Writer/Writer#double@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#get:isNull
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue.encode (param $message i32) (param $writer i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 8
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:type
  call $~lib/as-proto/assembly/Writer/Writer#int32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:boolValue
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 25
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:doubleValue
  call $~lib/as-proto/assembly/Writer/Writer#double@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 34
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#get:stringValue
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode (param $message i32) (param $writer i32)
  (local $value i32)
  (local $valueKeys i32)
  (local $i i32)
  (local $valueKey i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:value
  local.tee $value
  i32.store $0 offset=4
  local.get $value
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $value
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#keys
   local.tee $valueKeys
   i32.store $0 offset=8
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $valueKeys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $valueKeys
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $valueKey
     i32.store $0 offset=12
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 10
     call $~lib/as-proto/assembly/Writer/Writer#uint32@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $~lib/as-proto/assembly/Writer/Writer#fork@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 10
     call $~lib/as-proto/assembly/Writer/Writer#uint32@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $valueKey
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $~lib/as-proto/assembly/Writer/Writer#string@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     i32.const 18
     call $~lib/as-proto/assembly/Writer/Writer#uint32@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $~lib/as-proto/assembly/Writer/Writer#fork@override
     local.get $value
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=20
     local.get $6
     local.get $valueKey
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=24
     local.get $6
     call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     local.get $6
     call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue.encode
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
     local.get $writer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
  end
  local.get $writer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#get:isNull
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode (param $message i32) (param $writer i32)
  (local $email i32)
  (local $name i32)
  (local $language i32)
  (local $country i32)
  (local $appBuild i32)
  (local $appVersion i32)
  (local $deviceModel i32)
  (local $customData i32)
  (local $privateCustomData i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $writer
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:userId
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:email
  local.tee $email
  i32.store $0 offset=12
  local.get $email
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 18
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $email
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:name
  local.tee $name
  i32.store $0 offset=16
  local.get $name
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 26
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $name
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:language
  local.tee $language
  i32.store $0 offset=20
  local.get $language
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 34
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $language
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:country
  local.tee $country
  i32.store $0 offset=24
  local.get $country
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 42
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $country
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appBuild
  local.tee $appBuild
  i32.store $0 offset=28
  local.get $appBuild
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 50
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $appBuild
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableDouble/NullableDouble.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:appVersion
  local.tee $appVersion
  i32.store $0 offset=32
  local.get $appVersion
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 58
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $appVersion
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:deviceModel
  local.tee $deviceModel
  i32.store $0 offset=36
  local.get $deviceModel
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 66
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $deviceModel
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableString/NullableString.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:customData
  local.tee $customData
  i32.store $0 offset=40
  local.get $customData
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 74
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $customData
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#get:privateCustomData
  local.tee $privateCustomData
  i32.store $0 offset=44
  local.get $privateCustomData
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   i32.const 82
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $privateCustomData
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode
   local.get $writer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.encode (param $message i32) (param $writer i32)
  (local $user i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $message
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:sdkKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 18
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $message
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableKey
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 24
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $message
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:variableType
  call $~lib/as-proto/assembly/Writer/Writer#int32@override
  global.get $~lib/memory/__stack_pointer
  local.get $message
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:user
  local.tee $user
  i32.store $0 offset=12
  local.get $user
  i32.const 0
  i32.ne
  if
   local.get $writer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 34
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   local.get $writer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   local.get $user
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $writer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode
   local.get $writer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 40
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  local.get $writer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $message
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB#get:shouldTrackEvent
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB> (param $message i32) (param $encoder i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#finish
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/encodeVariableForUserParams_PB (param $message i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 28304
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/testHelpers/testVariableForUserParams_PB (param $buffer i32) (result i32)
  (local $params i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB
  local.tee $params
  i32.store $0 offset=4
  local.get $params
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/protobuf-generated/VariableForUserParams_PB/encodeVariableForUserParams_PB
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB> (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#reset
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $length
  i32.const 2
  global.set $~argumentsLength
  local.get $decoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>@varargs (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $length
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/decodeDVCUser_PB (param $buffer i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $buffer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 28336
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/dvcUser/nullableCustomDataFromJSONObj (param $jsonObj i32) (result i32)
  (local $keys i32)
  (local $customDataMap i32)
  (local $i i32)
  (local $key i32)
  (local $value i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $jsonObj
  i32.eqz
  if
   i32.const 0
   i32.const 0
   call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   i32.const 1
   call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $jsonObj
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
  local.tee $keys
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
  local.tee $customDataMap
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    block $for-continue|0
     global.get $~lib/memory/__stack_pointer
     local.get $keys
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $key
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $jsonObj
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     local.get $key
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0
     local.get $9
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $value
     i32.store $0 offset=20
     local.get $value
     i32.eqz
     if
      br $for-continue|0
     end
     local.get $value
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
     if
      local.get $customDataMap
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      local.get $key
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      local.get $9
      i32.const 0
      global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Bool
      global.get $~lib/memory/__stack_pointer
      local.get $value
      local.tee $6
      i32.store $0 offset=36
      local.get $6
      call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
      if (result i32)
       local.get $6
      else
       i32.const 7328
       i32.const 13648
       i32.const 65
       i32.const 78
       call $~lib/builtins/abort
       unreachable
      end
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=32
      local.get $9
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
      f64.const 0
      i32.const 6144
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=28
      local.get $9
      call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=24
      local.get $9
      call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set
      drop
     else
      local.get $value
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNum
      if
       local.get $customDataMap
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=4
       local.get $9
       local.get $key
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0
       local.get $9
       i32.const 0
       global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Num
       i32.const 0
       global.get $~lib/memory/__stack_pointer
       local.get $value
       local.tee $7
       i32.store $0 offset=40
       local.get $7
       call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num
       if (result i32)
        local.get $7
       else
        i32.const 7328
        i32.const 13648
        i32.const 67
        i32.const 84
        call $~lib/builtins/abort
        unreachable
       end
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=32
       local.get $9
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
       i32.const 6144
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=28
       local.get $9
       call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=24
       local.get $9
       call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set
       drop
      else
       local.get $value
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=4
       local.get $9
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
       if
        local.get $customDataMap
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=4
        local.get $9
        local.get $key
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        local.get $9
        i32.const 0
        global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Str
        i32.const 0
        f64.const 0
        global.get $~lib/memory/__stack_pointer
        local.get $value
        local.tee $8
        i32.store $0 offset=44
        local.get $8
        call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
        if (result i32)
         local.get $8
        else
         i32.const 7328
         i32.const 13648
         i32.const 69
         i32.const 87
         call $~lib/builtins/abort
         unreachable
        end
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=32
        local.get $9
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=28
        local.get $9
        call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=24
        local.get $9
        call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set
        drop
       else
        local.get $value
        local.set $9
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=4
        local.get $9
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
        if
         local.get $customDataMap
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=4
         local.get $9
         local.get $key
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         i32.const 0
         global.get $assembly/types/protobuf-generated/CustomDataType/CustomDataType.Null
         i32.const 0
         f64.const 0
         i32.const 6144
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=28
         local.get $9
         call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
         local.set $9
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=24
         local.get $9
         call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#set
         drop
        end
       end
      end
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.get $customDataMap
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  i32.const 0
  call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB> (param $message i32) (param $encoder i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#reset
  local.get $message
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  local.get $encoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_none)
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#finish
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/encodeDVCUser_PB (param $message i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 28368
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/dvcUser/DVCUser#toProtoBuf (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  i32.const 0
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:user_id
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:email
  local.tee $1
  i32.store $0 offset=48
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:email
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:name
  local.tee $2
  i32.store $0 offset=56
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:name
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:language
  local.tee $3
  i32.store $0 offset=60
  local.get $3
  if (result i32)
   local.get $3
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:language
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=16
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:country
  local.tee $4
  i32.store $0 offset=64
  local.get $4
  if (result i32)
   local.get $4
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:country
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=20
  local.get $9
  i32.const 0
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:appBuild
  local.tee $5
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $5
  else
   f64.const 0
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:appBuild
  local.tee $6
  local.get $6
  f64.ne
  call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=24
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:appVersion
  local.tee $7
  i32.store $0 offset=68
  local.get $7
  if (result i32)
   local.get $7
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:appVersion
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=28
  local.get $9
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:deviceModel
  local.tee $8
  i32.store $0 offset=72
  local.get $8
  if (result i32)
   local.get $8
  else
   i32.const 6144
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=52
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:deviceModel
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  i32.const 0
  call $~lib/string/String.__eq
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=32
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:customData
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/dvcUser/nullableCustomDataFromJSONObj
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=36
  local.get $9
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=44
  local.get $9
  call $assembly/types/dvcUser/DVCUser#get:privateCustomData
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/dvcUser/nullableCustomDataFromJSONObj
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=40
  local.get $9
  call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $assembly/types/protobuf-generated/DVCUser_PB/encodeDVCUser_PB
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/testHelpers/testDVCUser_PB (param $buffer i32) (result i32)
  (local $user i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/protobuf-generated/DVCUser_PB/decodeDVCUser_PB
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/dvcUser/DVCUser.fromPBUser
  local.tee $user
  i32.store $0 offset=8
  local.get $user
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/dvcUser/DVCUser#toProtoBuf
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor
  local.tee $message
  i32.store $0 offset=16
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case3|1
      block $case2|1
       block $case1|1
        block $case0|1
         local.get $tag
         i32.const 3
         i32.shr_u
         local.set $5
         local.get $5
         i32.const 1
         i32.eq
         br_if $case0|1
         local.get $5
         i32.const 2
         i32.eq
         br_if $case1|1
         local.get $5
         i32.const 3
         i32.eq
         br_if $case2|1
         br $case3|1
        end
        local.get $message
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=8
        local.get $6
        call $~lib/as-proto/assembly/Reader/Reader#string@override
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=4
        local.get $6
        call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:reason
        br $break|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=8
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#string@override
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:details
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#string@override
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#set:targetId
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.decode (param $reader i32) (param $length i32) (result i32)
  (local $end i32)
  (local $message i32)
  (local $tag i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $length
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
  else
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $length
   i32.add
  end
  local.set $end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  i32.const 0
  f64.const 0
  i32.const 6144
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor
  local.tee $message
  i32.store $0 offset=16
  loop $while-continue|0
   local.get $reader
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $end
   i32.lt_u
   if
    local.get $reader
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/as-proto/assembly/Reader/Reader#uint32@override
    local.set $tag
    block $break|1
     block $case9|1
      block $case8|1
       block $case7|1
        block $case6|1
         block $case5|1
          block $case4|1
           block $case3|1
            block $case2|1
             block $case1|1
              block $case0|1
               local.get $tag
               i32.const 3
               i32.shr_u
               local.set $5
               local.get $5
               i32.const 1
               i32.eq
               br_if $case0|1
               local.get $5
               i32.const 2
               i32.eq
               br_if $case1|1
               local.get $5
               i32.const 3
               i32.eq
               br_if $case2|1
               local.get $5
               i32.const 4
               i32.eq
               br_if $case3|1
               local.get $5
               i32.const 5
               i32.eq
               br_if $case4|1
               local.get $5
               i32.const 6
               i32.eq
               br_if $case5|1
               local.get $5
               i32.const 7
               i32.eq
               br_if $case6|1
               local.get $5
               i32.const 8
               i32.eq
               br_if $case7|1
               local.get $5
               i32.const 9
               i32.eq
               br_if $case8|1
               br $case9|1
              end
              local.get $message
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0
              local.get $6
              local.get $reader
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0 offset=20
              local.get $6
              call $~lib/as-proto/assembly/Reader/Reader#string@override
              local.set $6
              global.get $~lib/memory/__stack_pointer
              local.get $6
              i32.store $0 offset=4
              local.get $6
              call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:id
              br $break|1
             end
             local.get $message
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0
             local.get $6
             local.get $reader
             local.set $6
             global.get $~lib/memory/__stack_pointer
             local.get $6
             i32.store $0 offset=4
             local.get $6
             call $~lib/as-proto/assembly/Reader/Reader#int32@override
             call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:type
             br $break|1
            end
            local.get $message
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0
            local.get $6
            local.get $reader
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=20
            local.get $6
            call $~lib/as-proto/assembly/Reader/Reader#string@override
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=4
            local.get $6
            call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:key
            br $break|1
           end
           local.get $message
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0
           local.get $6
           local.get $reader
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=4
           local.get $6
           call $~lib/as-proto/assembly/Reader/Reader#bool@override
           call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:boolValue
           br $break|1
          end
          local.get $message
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          local.get $reader
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=4
          local.get $6
          call $~lib/as-proto/assembly/Reader/Reader#double@override
          call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:doubleValue
          br $break|1
         end
         local.get $message
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $6
         local.get $reader
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=20
         local.get $6
         call $~lib/as-proto/assembly/Reader/Reader#string@override
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=4
         local.get $6
         call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:stringValue
         br $break|1
        end
        local.get $message
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=20
        local.get $6
        local.get $reader
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=8
        local.get $6
        call $~lib/as-proto/assembly/Reader/Reader#uint32@override
        call $assembly/types/protobuf-generated/NullableString/NullableString.decode
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=4
        local.get $6
        call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:evalReason
        br $break|1
       end
       local.get $message
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=20
       local.get $6
       local.get $reader
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=8
       local.get $6
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/NullableString/NullableString.decode
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:feature
       br $break|1
      end
      local.get $message
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=20
      local.get $6
      local.get $reader
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      local.get $6
      call $~lib/as-proto/assembly/Reader/Reader#uint32@override
      call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB.decode
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $6
      call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#set:eval
      br $break|1
     end
     local.get $reader
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     local.get $tag
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $break|1
    end
    br $while-continue|0
   end
  end
  local.get $message
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB> (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#reset
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $length
  i32.const 2
  global.set $~argumentsLength
  local.get $decoder
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>@varargs (param $buffer i32) (param $decoder i32) (param $length i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $decoder
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $length
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/decodeSDKVariable_PB (param $buffer i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $buffer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 28400
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/testHelpers/testSDKVariable_PB (param $buffer i32) (result i32)
  (local $variable i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/protobuf-generated/SDKVariable_PB/decodeSDKVariable_PB
  local.tee $variable
  i32.store $0 offset=4
  local.get $variable
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/testHelpers/checkNumbersFilterFromJSON (param $number i32) (param $filterStr i32) (result i32)
  (local $str i32)
  (local $filterJSON i32)
  (local $str|4 i32)
  (local $parsedNumber i32)
  (local $6 i32)
  (local $filter i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $filterStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.9
  end
  local.tee $filterJSON
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.10 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $number
   local.tee $str|4
   i32.store $0 offset=12
   local.get $str|4
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.10
  end
  local.tee $parsedNumber
  i32.store $0 offset=16
  local.get $filterJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 28432
   i32.const 28576
   i32.const 55
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $filterJSON
  local.tee $6
  i32.store $0 offset=24
  local.get $6
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $6
  else
   i32.const 7328
   i32.const 28576
   i32.const 56
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $assembly/types/target/UserFilter#constructor
  local.tee $filter
  i32.store $0 offset=28
  local.get $parsedNumber
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $filter
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/testHelpers/checkVersionFiltersFromJSON (param $appVersion i32) (param $filterStr i32) (result i32)
  (local $str i32)
  (local $filterJSON i32)
  (local $4 i32)
  (local $filter i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.11 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $filterStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.11
  end
  local.tee $filterJSON
  i32.store $0 offset=8
  local.get $filterJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 28656
   i32.const 28576
   i32.const 62
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $filterJSON
  local.tee $4
  i32.store $0 offset=16
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 28576
   i32.const 63
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/target/UserFilter#constructor
  local.tee $filter
  i32.store $0 offset=20
  local.get $appVersion
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $filter
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/bucketing/segmentation/_checkVersionFilters
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/testHelpers/checkCustomDataFromJSON (param $data i32) (param $filterStr i32) (result i32)
  (local $str i32)
  (local $filterJSON i32)
  (local $str|4 i32)
  (local $dataJSON i32)
  (local $6 i32)
  (local $filter i32)
  (local $8 i32)
  (local $dataJSONObj i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.12 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $filterStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.12
  end
  local.tee $filterJSON
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.13 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $data
   if (result i32)
    local.get $data
   else
    i32.const 10528
   end
   local.tee $str|4
   i32.store $0 offset=12
   local.get $str|4
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.13
  end
  local.tee $dataJSON
  i32.store $0 offset=16
  local.get $filterJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 28800
   i32.const 28576
   i32.const 71
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $dataJSON
  if (result i32)
   local.get $dataJSON
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $dataJSON
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
  else
   i32.const 0
  end
  if
   i32.const 28944
   i32.const 28576
   i32.const 73
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $filterJSON
  local.tee $6
  i32.store $0 offset=24
  local.get $6
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $6
  else
   i32.const 7328
   i32.const 28576
   i32.const 76
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=20
  local.get $10
  call $assembly/types/target/CustomDataFilter#constructor
  local.tee $filter
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $dataJSON
  if (result i32)
   local.get $dataJSON
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $dataJSON
   local.tee $8
   i32.store $0 offset=32
   local.get $8
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $8
   else
    i32.const 7328
    i32.const 28576
    i32.const 77
    i32.const 54
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $dataJSONObj
  i32.store $0 offset=36
  local.get $dataJSONObj
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=20
  local.get $10
  local.get $filter
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=40
  local.get $10
  call $assembly/bucketing/segmentation/_checkCustomData
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null> (param $str i32) (result i32)
  (local $arr i32)
  (local $2 i32)
  (local $res i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $str
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 7088
   i32.const 11968
   i32.const 99
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $arr
  i32.store $0 offset=8
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $arr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $res
  i32.store $0 offset=16
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:handler
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 29248
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/bucketing/segmentation/SegmentationResult#get:result
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  call $~lib/string/String.__ne
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 29280
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/bucketing/segmentation/SegmentationResult#get:reasonDetails
   local.tee $2
   i32.store $0 offset=20
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 7088
    i32.const 16848
    i32.const 32
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/evaluateOperatorFromJSON (param $operatorStr i32) (param $userStr i32) (param $audiencesStr i32) (result i32)
  (local $str i32)
  (local $operatorJSON i32)
  (local $audiences i32)
  (local $str|6 i32)
  (local $7 i32)
  (local $audiencesJSON i32)
  (local $keys i32)
  (local $i i32)
  (local $11 i32)
  (local $12 i32)
  (local $aud i32)
  (local $14 i32)
  (local $operator i32)
  (local $user i32)
  (local $resultReason i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 76
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.14 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $operatorStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.14
  end
  local.tee $operatorJSON
  i32.store $0 offset=8
  local.get $operatorJSON
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 29072
   i32.const 28576
   i32.const 88
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
  local.tee $audiences
  i32.store $0 offset=12
  local.get $audiencesStr
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  i32.const 6144
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=16
  local.get $18
  call $~lib/string/String.__ne
  if (result i32)
   local.get $audiencesStr
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   i32.const 24512
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=16
   local.get $18
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String|null>|inlined.0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $audiencesStr
    local.tee $str|6
    i32.store $0 offset=20
    local.get $str|6
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
    br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String|null>|inlined.0
   end
   local.tee $7
   i32.store $0 offset=24
   local.get $7
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $7
   else
    i32.const 7328
    i32.const 28576
    i32.const 92
    i32.const 31
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $audiencesJSON
   i32.store $0 offset=28
   local.get $audiencesJSON
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 29072
    i32.const 28576
    i32.const 94
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $audiencesJSON
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $keys
   i32.store $0 offset=32
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $keys
    local.set $18
    global.get $~lib/memory/__stack_pointer
    local.get $18
    i32.store $0 offset=4
    local.get $18
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $audiencesJSON
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     local.get $keys
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=36
     local.get $18
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=16
     local.get $18
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $11
     i32.store $0 offset=40
     local.get $11
     if (result i32)
      local.get $11
     else
      i32.const 7088
      i32.const 28576
      i32.const 98
      i32.const 25
      call $~lib/builtins/abort
      unreachable
     end
     local.tee $12
     i32.store $0 offset=44
     local.get $12
     call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     if (result i32)
      local.get $12
     else
      i32.const 7328
      i32.const 28576
      i32.const 98
      i32.const 25
      call $~lib/builtins/abort
      unreachable
     end
     local.tee $aud
     i32.store $0 offset=48
     local.get $audiences
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=4
     local.get $18
     local.get $keys
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=52
     local.get $18
     local.get $i
     call $~lib/array/Array<~lib/string/String>#__get
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=16
     local.get $18
     i32.const 0
     local.get $aud
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=56
     local.get $18
     call $assembly/types/target/Audience#constructor
     local.set $18
     global.get $~lib/memory/__stack_pointer
     local.get $18
     i32.store $0 offset=36
     local.get $18
     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set
     drop
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $operatorJSON
  local.tee $14
  i32.store $0 offset=60
  local.get $14
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $14
  else
   i32.const 7328
   i32.const 28576
   i32.const 103
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=16
  local.get $18
  call $assembly/types/target/AudienceOperator#constructor
  local.tee $operator
  i32.store $0 offset=64
  global.get $~lib/memory/__stack_pointer
  local.get $userStr
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $user
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $operator
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  local.get $audiences
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=16
  local.get $18
  local.get $user
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=36
  local.get $18
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=52
  local.get $18
  call $assembly/bucketing/segmentation/_evaluateOperator
  local.tee $resultReason
  i32.store $0 offset=72
  local.get $resultReason
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  call $assembly/bucketing/segmentation/SegmentationResult#stringify
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
  return
 )
 (func $assembly/testHelpers/evaluateOperatorFromJSON@varargs (param $operatorStr i32) (param $userStr i32) (param $audiencesStr i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   local.tee $audiencesStr
   i32.store $0
  end
  local.get $operatorStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $userStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $audiencesStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/testHelpers/evaluateOperatorFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/target/Target#constructor~anonymous|0 (param $dist i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $dist
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 17312
   i32.const 35
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/TargetDistribution#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/target/Target#constructor (param $this i32) (param $target i32) (result i32)
  (local $rollout i32)
  (local $distributionJSON i32)
  (local $distribution i32)
  (local $5 i32)
  (local $6 i32)
  (local $sortingArray i32)
  (local $i i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 186
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/target/Target#set:_id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/target/Target#set:_audience
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/target/Target#set:rollout
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/target/Target#set:distribution
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  call $assembly/types/target/Target#set:_sortedDistribution
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $target
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  i32.const 20496
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=16
  local.get $10
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/target/Target#set:_id
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  local.get $target
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=16
  local.get $10
  i32.const 23728
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=20
  local.get $10
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=16
  local.get $10
  call $assembly/types/target/Audience#constructor
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/target/Target#set:_audience
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 23776
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $rollout
  i32.store $0 offset=24
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $rollout
  if (result i32)
   i32.const 0
   local.get $rollout
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=16
   local.get $10
   call $assembly/types/target/Rollout#constructor
  else
   i32.const 0
  end
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/target/Target#set:rollout
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 24000
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $distributionJSON
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $distributionJSON
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 29488
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution>
  local.tee $distribution
  i32.store $0 offset=32
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $distribution
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/target/Target#set:distribution
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 170
  i32.const 29520
  call $~lib/rt/__newArray
  local.tee $sortingArray
  i32.store $0 offset=36
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $distribution
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=4
   local.get $10
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
   i32.lt_s
   if
    local.get $sortingArray
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor
    local.tee $9
    i32.store $0 offset=40
    local.get $9
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=12
    local.get $10
    local.get $distribution
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=20
    local.get $10
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:entry
    local.get $9
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=12
    local.get $10
    local.get $distribution
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=44
    local.get $10
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=20
    local.get $10
    call $assembly/types/target/TargetDistribution#get:_variation
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=16
    local.get $10
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#set:value
    local.get $9
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=8
    local.get $10
    call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $sortingArray
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  i32.const 24160
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=16
  local.get $10
  call $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  call $assembly/types/target/Target#set:_sortedDistribution
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $assembly/types/target/Target#decideTargetVariation (param $this i32) (param $boundedHash f64) (result i32)
  (local $distributionIndex f64)
  (local $i i32)
  (local $distribution i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  f64.const 0
  local.set $distributionIndex
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $assembly/types/target/Target#get:_sortedDistribution
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $assembly/types/target/Target#get:_sortedDistribution
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.tee $distribution
    i32.store $0 offset=8
    local.get $distributionIndex
    local.get $distribution
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $assembly/types/target/TargetDistribution#get:percentage
    f64.add
    local.set $distributionIndex
    local.get $boundedHash
    f64.const 0
    f64.ge
    if (result i32)
     local.get $boundedHash
     local.get $distributionIndex
     f64.lt
     if (result i32)
      i32.const 1
     else
      local.get $distributionIndex
      f64.const 1
      f64.eq
      if (result i32)
       local.get $boundedHash
       f64.const 1
       f64.eq
      else
       i32.const 0
      end
     end
    else
     i32.const 0
    end
    if
     local.get $distribution
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $assembly/types/target/TargetDistribution#get:_variation
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 18112
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $assembly/types/target/Target#get:_id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/string/String#concat
  i32.const 17312
  i32.const 64
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/testHelpers/decideTargetVariationFromJSON (param $targetStr i32) (param $boundedHash f64) (result i32)
  (local $str i32)
  (local $targetJSON i32)
  (local $4 i32)
  (local $target i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.15 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $targetStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.15
  end
  local.tee $targetJSON
  i32.store $0 offset=8
  local.get $targetJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 29328
   i32.const 28576
   i32.const 111
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $targetJSON
  local.tee $4
  i32.store $0 offset=16
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 28576
   i32.const 112
   i32.const 37
   call $~lib/builtins/abort
   unreachable
  end
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $assembly/types/target/Target#constructor
  local.tee $target
  i32.store $0 offset=20
  local.get $target
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $boundedHash
  call $assembly/types/target/Target#decideTargetVariation
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/testHelpers/doesUserPassRolloutFromJSON (param $rolloutStr i32) (param $boundedHash f64) (result i32)
  (local $str i32)
  (local $rolloutJSON i32)
  (local $4 i32)
  (local $rollout i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $rolloutStr
  if (result i32)
   block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String|null>|inlined.1 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $rolloutStr
    local.tee $str
    i32.store $0
    local.get $str
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
    br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String|null>|inlined.1
   end
  else
   i32.const 0
  end
  local.tee $rolloutJSON
  i32.store $0 offset=8
  local.get $rolloutJSON
  if (result i32)
   local.get $rolloutJSON
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
  else
   i32.const 0
  end
  if
   i32.const 29552
   i32.const 28576
   i32.const 119
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $rolloutJSON
  if (result i32)
   i32.const 0
   global.get $~lib/memory/__stack_pointer
   local.get $rolloutJSON
   local.tee $4
   i32.store $0 offset=16
   local.get $4
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   if (result i32)
    local.get $4
   else
    i32.const 7328
    i32.const 28576
    i32.const 121
    i32.const 53
    call $~lib/builtins/abort
    unreachable
   end
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $assembly/types/target/Rollout#constructor
  else
   i32.const 0
  end
  local.tee $rollout
  i32.store $0 offset=20
  local.get $rollout
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $boundedHash
  call $assembly/bucketing/bucketing/_doesUserPassRollout
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 194
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Feature>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Feature>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Feature>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Feature>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6096
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=12
  local.get $6
  call $~lib/array/Array<assembly/types/feature/Feature>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/types/feature/Feature>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/types/feature/Feature>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/types/feature/Feature>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 195
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:buckets
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:bucketsMask
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.0 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.0
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entries
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCapacity
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesOffset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#constructor (param $this i32) (param $featurePrerequisites i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 190
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfiguration/FeaturePrerequisites#set:_feature
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfiguration/FeaturePrerequisites#set:comparator
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $featurePrerequisites
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 20592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfiguration/FeaturePrerequisites#set:_feature
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $featurePrerequisites
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  global.get $assembly/types/featureConfiguration/comparatorValues
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfiguration/FeaturePrerequisites#set:comparator
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 (param $preq i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $preq
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 29776
   i32.const 26
   i32.const 49
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/featureConfiguration/FeaturePrerequisites#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/featureConfiguration/FeaturePrerequisites> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 191
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#constructor (param $this i32) (param $winningVar i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 192
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureWinningVariation#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureWinningVariation#set:updatedAt
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $winningVar
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfiguration/FeatureWinningVariation#set:_variation
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $winningVar
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 22672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/featureConfiguration/FeatureWinningVariation#set:updatedAt
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 (param $target i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  local.get $target
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 29776
   i32.const 33
   i32.const 77
   call $~lib/builtins/abort
   unreachable
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $assembly/types/target/Target#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/Target> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 193
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<assembly/types/target/Target>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor (param $this i32) (param $featureConfig i32) (result i32)
  (local $prerequisites i32)
  (local $winningVar i32)
  (local $targets i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 189
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:_id
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:prerequisites
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:winningVariation
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:forcedUsers
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:targets
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 20496
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:_id
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22320
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $prerequisites
  i32.store $0 offset=20
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $prerequisites
  if (result i32)
   local.get $prerequisites
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=24
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   i32.const 29872
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/featureConfiguration/FeaturePrerequisites>
  else
   i32.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:prerequisites
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22560
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $winningVar
  i32.store $0 offset=28
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $winningVar
  if (result i32)
   i32.const 0
   local.get $winningVar
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/types/featureConfiguration/FeatureWinningVariation#constructor
  else
   i32.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:winningVariation
  global.get $~lib/memory/__stack_pointer
  local.get $featureConfig
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22720
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $targets
  i32.store $0 offset=32
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $targets
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=24
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  i32.const 29904
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/Target>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:targets
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  call $assembly/types/featureConfiguration/FeatureConfiguration#set:forcedUsers
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/types/feature/Feature#constructor (param $this i32) (param $feature i32) (result i32)
  (local $variationsJSON i32)
  (local $variations i32)
  (local $variationsById i32)
  (local $i i32)
  (local $6 i32)
  (local $variation i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 188
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:type
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:key
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:variations
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:configuration
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:settings
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  call $assembly/types/feature/Feature#set:_variationsById
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20496
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:_id
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 14848
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  global.get $assembly/types/feature/validTypes
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:type
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 20528
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:key
  global.get $~lib/memory/__stack_pointer
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  i32.const 21952
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $variationsJSON
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Variation>#constructor
  local.tee $variations
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor
  local.tee $variationsById
  i32.store $0 offset=32
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $variationsJSON
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $variationsJSON
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $6
    i32.store $0 offset=36
    local.get $6
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $6
    else
     i32.const 7328
     i32.const 22160
     i32.const 35
     i32.const 45
     call $~lib/builtins/abort
     unreachable
    end
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $assembly/types/feature/Variation#constructor
    local.tee $variation
    i32.store $0 offset=40
    local.get $variations
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/array/Array<assembly/types/feature/Variation>#push
    drop
    local.get $variationsById
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $assembly/types/feature/Variation#get:_id
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    local.get $variation
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#set
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variations
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:variations
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $variationsById
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:_variationsById
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  i32.const 0
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  i32.const 24288
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/types/featureConfiguration/FeatureConfiguration#constructor
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:configuration
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $feature
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=12
  local.get $8
  i32.const 21648
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=16
  local.get $8
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=8
  local.get $8
  call $assembly/types/feature/Feature#set:settings
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/Feature>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/types/feature/Feature>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/types/feature/Feature>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:buckets
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:bucketsMask
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:taggedNext
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $key
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#has (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#find
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.1 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.1
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entries
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.2 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.2
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     global.get $~lib/memory/__stack_pointer
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:key
     local.tee $oldEntryKey
     i32.store $0 offset=12
     local.get $newEntry
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:key
     local.get $newEntry
     local.get $oldEntry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:value
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:value
     local.get $oldEntryKey
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load $0
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:taggedNext
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.3 (result i32)
      i32.const 12
      br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.3
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.4 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.4
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:buckets
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newBucketsMask
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:bucketsMask
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entries
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCapacity
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store $0 offset=16
  local.get $14
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCount
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $key
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  local.get $hashCode
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesOffset
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCapacity
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCount
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCapacity
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:bucketsMask
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:bucketsMask
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entries
   local.tee $entries
   i32.store $0 offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesOffset
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesOffset
   local.get $6
   block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.5 (result i32)
    i32.const 12
    br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.5
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:key
   i32.const 1
   drop
   local.get $this
   local.get $key
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:value
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesCount
   i32.const 1
   i32.add
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set:entriesCount
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:buckets
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:bucketsMask
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load $0
   call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#set:taggedNext
   local.get $bucketPtrBase
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/types/configBody/ConfigBody#constructor (param $this i32) (param $configJSONObj i32) (param $etag i32) (result i32)
  (local $featuresJSON i32)
  (local $features i32)
  (local $_varIdToFeatureMap i32)
  (local $_featureIdMap i32)
  (local $i i32)
  (local $8 i32)
  (local $feature i32)
  (local $j i32)
  (local $k i32)
  (local $audiencesJSON i32)
  (local $audiences i32)
  (local $audienceKeys i32)
  (local $i|15 i32)
  (local $audience_id i32)
  (local $aud i32)
  (local $18 i32)
  (local $19 i32)
  (local $variablesJSON i32)
  (local $variables i32)
  (local $_variableKeyMap i32)
  (local $_variableIdMap i32)
  (local $i|24 i32)
  (local $25 i32)
  (local $variable i32)
  (local $27 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 112
  memory.fill $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 187
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:project
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:audiences
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:environment
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:features
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:variables
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:etag
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:clientSDKKey
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:_variableKeyMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:_variableIdMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  call $assembly/types/configBody/ConfigBody#set:_variableIdToFeatureMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $etag
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:etag
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  i32.const 21328
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:clientSDKKey
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  i32.const 18640
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=20
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/types/configBody/PublicProject#constructor
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:project
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 0
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  i32.const 18688
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=20
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=16
  local.get $27
  call $assembly/types/configBody/PublicEnvironment#constructor
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:environment
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  i32.const 18736
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $featuresJSON
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/feature/Feature>#constructor
  local.tee $features
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor
  local.tee $_varIdToFeatureMap
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor
  local.tee $_featureIdMap
  i32.store $0 offset=36
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $featuresJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $featuresJSON
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $i
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $8
    i32.store $0 offset=40
    local.get $8
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $8
    else
     i32.const 7328
     i32.const 29696
     i32.const 164
     i32.const 41
     call $~lib/builtins/abort
     unreachable
    end
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $assembly/types/feature/Feature#constructor
    local.tee $feature
    i32.store $0 offset=44
    local.get $features
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $feature
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/array/Array<assembly/types/feature/Feature>#push
    drop
    local.get $_featureIdMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $feature
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $assembly/types/feature/Feature#get:_id
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#has
    i32.eqz
    if
     local.get $_featureIdMap
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=16
     local.get $27
     call $assembly/types/feature/Feature#get:_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=12
     local.get $27
     call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set
     drop
    end
    i32.const 0
    local.set $j
    loop $for-loop|1
     local.get $j
     local.get $feature
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     call $assembly/types/feature/Feature#get:variations
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     call $~lib/array/Array<assembly/types/feature/Variation>#get:length
     i32.lt_s
     if
      i32.const 0
      local.set $k
      loop $for-loop|2
       local.get $k
       local.get $feature
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=16
       local.get $27
       call $assembly/types/feature/Feature#get:variations
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=12
       local.get $27
       local.get $j
       call $~lib/array/Array<assembly/types/feature/Variation>#__get
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=8
       local.get $27
       call $assembly/types/feature/Variation#get:variables
       local.set $27
       global.get $~lib/memory/__stack_pointer
       local.get $27
       i32.store $0 offset=4
       local.get $27
       call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length
       i32.lt_s
       if
        local.get $_varIdToFeatureMap
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=4
        local.get $27
        local.get $feature
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=52
        local.get $27
        call $assembly/types/feature/Feature#get:variations
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=48
        local.get $27
        local.get $j
        call $~lib/array/Array<assembly/types/feature/Variation>#__get
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=20
        local.get $27
        call $assembly/types/feature/Variation#get:variables
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=16
        local.get $27
        local.get $k
        call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=12
        local.get $27
        call $assembly/types/feature/VariationVariable#get:_var
        local.set $27
        global.get $~lib/memory/__stack_pointer
        local.get $27
        i32.store $0 offset=8
        local.get $27
        call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#has
        i32.eqz
        if
         local.get $_varIdToFeatureMap
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=4
         local.get $27
         local.get $feature
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=56
         local.get $27
         call $assembly/types/feature/Feature#get:variations
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=52
         local.get $27
         local.get $j
         call $~lib/array/Array<assembly/types/feature/Variation>#__get
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=48
         local.get $27
         call $assembly/types/feature/Variation#get:variables
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=20
         local.get $27
         local.get $k
         call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=16
         local.get $27
         call $assembly/types/feature/VariationVariable#get:_var
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=8
         local.get $27
         local.get $feature
         local.set $27
         global.get $~lib/memory/__stack_pointer
         local.get $27
         i32.store $0 offset=12
         local.get $27
         call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#set
         drop
        end
        local.get $k
        i32.const 1
        i32.add
        local.set $k
        br $for-loop|2
       end
      end
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|1
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $features
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:features
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_varIdToFeatureMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:_variableIdToFeatureMap
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  i32.const 24336
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.tee $audiencesJSON
  i32.store $0 offset=60
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
  local.tee $audiences
  i32.store $0 offset=64
  local.get $audiencesJSON
  if
   global.get $~lib/memory/__stack_pointer
   local.get $audiencesJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $audienceKeys
   i32.store $0 offset=68
   i32.const 0
   local.set $i|15
   loop $for-loop|3
    local.get $i|15
    local.get $audienceKeys
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $audienceKeys
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $i|15
     call $~lib/array/Array<~lib/string/String>#__get
     local.tee $audience_id
     i32.store $0 offset=72
     global.get $~lib/memory/__stack_pointer
     local.get $audiencesJSON
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $audience_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $aud
     i32.store $0 offset=76
     local.get $audiences
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=4
     local.get $27
     local.get $audience_id
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=8
     local.get $27
     i32.const 0
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $aud
     local.tee $18
     i32.store $0 offset=80
     local.get $18
     if (result i32)
      local.get $18
     else
      i32.const 7088
      i32.const 29696
      i32.const 203
      i32.const 57
      call $~lib/builtins/abort
      unreachable
     end
     local.tee $19
     i32.store $0 offset=84
     local.get $19
     call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     if (result i32)
      local.get $19
     else
      i32.const 7328
      i32.const 29696
      i32.const 203
      i32.const 57
      call $~lib/builtins/abort
      unreachable
     end
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=20
     local.get $27
     call $assembly/types/target/Audience#constructor
     local.set $27
     global.get $~lib/memory/__stack_pointer
     local.get $27
     i32.store $0 offset=12
     local.get $27
     call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#set
     drop
     local.get $i|15
     i32.const 1
     i32.add
     local.set $i|15
     br $for-loop|3
    end
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $audiences
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:audiences
  global.get $~lib/memory/__stack_pointer
  local.get $configJSONObj
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  i32.const 18912
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=12
  local.get $27
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#valueOf
  local.tee $variablesJSON
  i32.store $0 offset=88
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<assembly/types/configBody/Variable>#constructor
  local.tee $variables
  i32.store $0 offset=92
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
  local.tee $_variableKeyMap
  i32.store $0 offset=96
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
  local.tee $_variableIdMap
  i32.store $0 offset=100
  i32.const 0
  local.set $i|24
  loop $for-loop|4
   local.get $i|24
   local.get $variablesJSON
   local.set $27
   global.get $~lib/memory/__stack_pointer
   local.get $27
   i32.store $0 offset=4
   local.get $27
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    global.get $~lib/memory/__stack_pointer
    local.get $variablesJSON
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $i|24
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__get
    local.tee $25
    i32.store $0 offset=104
    local.get $25
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $25
    else
     i32.const 7328
     i32.const 29696
     i32.const 216
     i32.const 43
     call $~lib/builtins/abort
     unreachable
    end
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $assembly/types/configBody/Variable#constructor
    local.tee $variable
    i32.store $0 offset=108
    local.get $variables
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    call $~lib/array/Array<assembly/types/configBody/Variable>#push
    drop
    local.get $_variableKeyMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=16
    local.get $27
    call $assembly/types/configBody/Variable#get:key
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set
    drop
    local.get $_variableIdMap
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=4
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=16
    local.get $27
    call $assembly/types/configBody/Variable#get:_id
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=8
    local.get $27
    local.get $variable
    local.set $27
    global.get $~lib/memory/__stack_pointer
    local.get $27
    i32.store $0 offset=12
    local.get $27
    call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#set
    drop
    local.get $i|24
    i32.const 1
    i32.add
    local.set $i|24
    br $for-loop|4
   end
  end
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $variables
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:variables
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_variableKeyMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:_variableKeyMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=4
  local.get $27
  local.get $_variableIdMap
  local.set $27
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.store $0 offset=8
  local.get $27
  call $assembly/types/configBody/ConfigBody#set:_variableIdMap
  local.get $this
  local.set $27
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $27
 )
 (func $assembly/types/configBody/ConfigBody.fromString (param $configStr i32) (param $etag i32) (result i32)
  (local $str i32)
  (local $configJSON i32)
  (local $4 i32)
  (local $configJSONObj i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.16 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $configStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.16
  end
  local.tee $configJSON
  i32.store $0 offset=8
  local.get $configJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21120
   i32.const 29696
   i32.const 133
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $configJSON
  local.tee $4
  i32.store $0 offset=12
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 29696
   i32.const 137
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $configJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $configJSONObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  local.get $etag
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=24
  local.get $6
  call $assembly/types/configBody/ConfigBody#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#keys (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entries
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $keys
  i32.store $0 offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.6 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.6
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:key
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/array/Array<~lib/string/String>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  local.get $length
  call $~lib/array/Array<~lib/string/String>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Audience> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/target/Audience> (param $objMap i32) (result i32)
  (local $jsonObj i32)
  (local $keys i32)
  (local $i i32)
  (local $key i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $objMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#keys
  local.tee $keys
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $keys
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    local.get $jsonObj
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $5
    local.get $objMap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=24
    local.get $5
    local.get $key
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $5
    call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Audience>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonObj
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/feature/Feature>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/Feature>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/feature/Feature>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/feature/Feature>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/feature/Feature>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/configBody/Variable> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/configBody/Variable>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/configBody/Variable>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/configBody/ConfigBody#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18640
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicProject>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18688
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicEnvironment>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:audiences
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/target/Audience>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18736
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:features
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18912
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:variables
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/configBody/Variable>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/configBody/ConfigBody#get:clientSDKKey
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 21328
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/configBody/ConfigBody#get:clientSDKKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/testHelpers/testConfigBodyClass (param $configStr i32) (param $etag i32) (result i32)
  (local $config i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $etag
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/configBody/ConfigBody.fromString
  local.tee $config
  i32.store $0 offset=8
  local.get $config
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/configBody/ConfigBody#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testConfigBodyClass@varargs (param $configStr i32) (param $etag i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $etag
  end
  local.get $configStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $etag
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/testHelpers/testConfigBodyClass
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/ConfigBody.fromUTF8 (param $configUTF8 i32) (param $etag i32) (result i32)
  (local $str i32)
  (local $configJSON i32)
  (local $4 i32)
  (local $configJSONObj i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.5 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $configUTF8
   local.tee $str
   i32.store $0
   local.get $str
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/typedarray/Uint8Array>|inlined.5
  end
  local.tee $configJSON
  i32.store $0 offset=8
  local.get $configJSON
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21120
   i32.const 29696
   i32.const 119
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $configJSON
  local.tee $4
  i32.store $0 offset=12
  local.get $4
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $4
  else
   i32.const 7328
   i32.const 29696
   i32.const 123
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $configJSONObj
  i32.store $0 offset=16
  i32.const 0
  local.get $configJSONObj
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=20
  local.get $6
  local.get $etag
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=24
  local.get $6
  call $assembly/types/configBody/ConfigBody#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/testHelpers/testConfigBodyClassFromUTF8 (param $configStr i32) (param $etag i32) (result i32)
  (local $config i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $etag
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/configBody/ConfigBody.fromUTF8
  local.tee $config
  i32.store $0 offset=8
  local.get $config
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/configBody/ConfigBody#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testConfigBodyClassFromUTF8@varargs (param $configStr i32) (param $etag i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $etag
  end
  local.get $configStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $etag
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/testHelpers/testConfigBodyClassFromUTF8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureV2/FeatureV2> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18640
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:project
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicProject>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18688
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:environment
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/PublicEnvironment>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24336
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:audiences
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/target/Audience>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18736
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:features
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureV2/FeatureV2>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18912
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:variables
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/configBody/Variable>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/configBodyV2/ConfigBodyV2#get:clientSDKKey
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 21328
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/configBodyV2/ConfigBodyV2#get:clientSDKKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/testHelpers/testConfigBodyV2Class (param $configStr i32) (param $etag i32) (result i32)
  (local $config i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $etag
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/configBodyV2/ConfigBodyV2.fromString
  local.tee $config
  i32.store $0 offset=8
  local.get $config
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/configBodyV2/ConfigBodyV2#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testConfigBodyV2Class@varargs (param $configStr i32) (param $etag i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $etag
  end
  local.get $configStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $etag
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/testHelpers/testConfigBodyV2Class
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/testHelpers/testConfigBodyV2ClassFromUTF8 (param $configStr i32) (param $etag i32) (result i32)
  (local $config i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $configStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $etag
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8
  local.tee $config
  i32.store $0 offset=8
  local.get $config
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/configBodyV2/ConfigBodyV2#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs (param $configStr i32) (param $etag i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $etag
  end
  local.get $configStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $etag
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/testHelpers/testConfigBodyV2ClassFromUTF8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $key
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 416
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:user_id
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:email
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 464
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:email
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:name
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14384
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:name
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:language
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14416
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:language
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:country
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 528
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:country
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:appVersion
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 688
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:appVersion
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:appBuild
  local.tee $2
  local.get $2
  f64.ne
  i32.eqz
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14464
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:appBuild
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:deviceModel
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 736
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:deviceModel
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:customData
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 784
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:customData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:privateCustomData
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 13872
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:privateCustomData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 29936
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:createdDate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/date/Date#toISOString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 29984
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:lastSeenDate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/date/Date#toISOString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 576
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:platform
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 624
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:platformVersion
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 20832
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:sdkType
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 20880
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:sdkVersion
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:sdkPlatform
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 20928
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:sdkPlatform
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#get:hostname
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 20976
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCPopulatedUser#get:hostname
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testDVCUserClass (param $userStr i32) (result i32)
  (local $user i32)
  (local $populatedUser i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $userStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/dvcUser/DVCUser.fromJSONString
  local.tee $user
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.tee $populatedUser
  i32.store $0 offset=12
  local.get $populatedUser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/testHelpers/testDVCUserClassFromUTF8 (param $userStr i32) (result i32)
  (local $user i32)
  (local $populatedUser i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $userStr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/dvcUser/DVCUser.fromUTF8
  local.tee $user
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $user
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.tee $populatedUser
  i32.store $0 offset=12
  local.get $populatedUser
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/dvcUser/DVCPopulatedUser#stringify
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature.fromJSONObj (param $featureObj i32) (result i32)
  (local $evalObj i32)
  (local $evalObjJSON i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 20560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $evalObj
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $evalObj
  if (result i32)
   local.get $evalObj
  else
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  end
  local.tee $evalObjJSON
  i32.store $0 offset=12
  i32.const 0
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 20496
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 14848
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 20528
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 22624
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=24
  local.get $3
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 30160
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=28
  local.get $3
  local.get $featureObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  i32.const 30208
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=40
  local.get $3
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=32
  local.get $3
  local.get $evalObjJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=36
  local.get $3
  call $assembly/types/bucketedUserConfig/SDKFeature#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/getStringMapFromJSONObj (param $jsonObj i32) (result i32)
  (local $stringMap i32)
  (local $i i32)
  (local $key i32)
  (local $4 i32)
  (local $5 i32)
  (local $jsonString i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  local.tee $stringMap
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $jsonObj
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $jsonObj
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $jsonObj
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $key
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $4
    i32.store $0 offset=16
    local.get $4
    if (result i32)
     local.get $4
    else
     i32.const 7088
     i32.const 14288
     i32.const 201
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $5
    i32.store $0 offset=20
    local.get $5
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
    if (result i32)
     local.get $5
    else
     i32.const 7328
     i32.const 14288
     i32.const 201
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $jsonString
    i32.store $0 offset=24
    local.get $stringMap
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    local.get $key
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=8
    local.get $7
    local.get $jsonString
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=32
    local.get $7
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=28
    local.get $7
    call $~lib/map/Map<~lib/string/String,~lib/string/String>#set
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $stringMap
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig.fromJSONString (param $userConfigStr i32) (result i32)
  (local $str i32)
  (local $userConfigJSON i32)
  (local $3 i32)
  (local $userConfigJSONObj i32)
  (local $project i32)
  (local $environment i32)
  (local $features i32)
  (local $featuresMap i32)
  (local $i i32)
  (local $key i32)
  (local $11 i32)
  (local $12 i32)
  (local $featureVar i32)
  (local $featureVarMap i32)
  (local $variableFeatureVariation i32)
  (local $variableVariationMap i32)
  (local $i|17 i32)
  (local $key|18 i32)
  (local $json i32)
  (local $variables i32)
  (local $variablesMap i32)
  (local $i|22 i32)
  (local $key|23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 116
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 116
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.17 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $userConfigStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.17
  end
  local.tee $userConfigJSON
  i32.store $0 offset=8
  local.get $userConfigJSON
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 30032
   i32.const 20304
   i32.const 165
   i32.const 36
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigJSON
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $3
  else
   i32.const 7328
   i32.const 20304
   i32.const 166
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $userConfigJSONObj
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  i32.const 18640
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=24
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/types/configBody/PublicProject#constructor
  local.tee $project
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  i32.const 18688
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=24
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/types/configBody/PublicEnvironment#constructor
  local.tee $environment
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  i32.const 18736
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.tee $features
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
  local.tee $featuresMap
  i32.store $0 offset=40
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $features
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $features
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $i
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key
    i32.store $0 offset=44
    local.get $features
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $key
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $features
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=52
    local.get $26
    local.get $key
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=56
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $11
    i32.store $0 offset=60
    local.get $11
    if (result i32)
     local.get $11
    else
     i32.const 7088
     i32.const 20304
     i32.const 176
     i32.const 54
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $12
    i32.store $0 offset=64
    local.get $12
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $12
    else
     i32.const 7328
     i32.const 20304
     i32.const 176
     i32.const 54
     call $~lib/builtins/abort
     unreachable
    end
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=48
    local.get $26
    call $assembly/types/bucketedUserConfig/SDKFeature.fromJSONObj
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=24
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/SDKFeature>
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  i32.const 18784
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.tee $featureVar
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $featureVar
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  call $assembly/helpers/jsonHelpers/getStringMapFromJSONObj
  local.tee $featureVarMap
  i32.store $0 offset=72
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  i32.const 18848
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.tee $variableFeatureVariation
  i32.store $0 offset=76
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
  local.tee $variableVariationMap
  i32.store $0 offset=80
  i32.const 0
  local.set $i|17
  loop $for-loop|1
   local.get $i|17
   local.get $variableFeatureVariation
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $variableFeatureVariation
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $i|17
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key|18
    i32.store $0 offset=84
    global.get $~lib/memory/__stack_pointer
    local.get $variableFeatureVariation
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $key|18
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
    local.tee $json
    i32.store $0 offset=88
    local.get $json
    i32.eqz
    if
     i32.const 30256
     i32.const 20304
     i32.const 187
     i32.const 24
     call $~lib/builtins/abort
     unreachable
    end
    local.get $variableVariationMap
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $key|18
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    local.get $json
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=48
    local.get $26
    call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=24
    local.get $26
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#set
    drop
    local.get $i|17
    i32.const 1
    i32.add
    local.set $i|17
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigJSONObj
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=4
  local.get $26
  i32.const 18912
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.tee $variables
  i32.store $0 offset=92
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
  local.tee $variablesMap
  i32.store $0 offset=96
  i32.const 0
  local.set $i|22
  loop $for-loop|2
   local.get $i|22
   local.get $variables
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=20
   local.get $26
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $26
   global.get $~lib/memory/__stack_pointer
   local.get $26
   i32.store $0 offset=4
   local.get $26
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $variables
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $i|22
    call $~lib/array/Array<~lib/string/String>#__get
    local.tee $key|23
    i32.store $0 offset=100
    local.get $variablesMap
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=4
    local.get $26
    local.get $key|23
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=20
    local.get $26
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $variables
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=52
    local.get $26
    local.get $key|23
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=56
    local.get $26
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $24
    i32.store $0 offset=104
    local.get $24
    if (result i32)
     local.get $24
    else
     i32.const 7088
     i32.const 20304
     i32.const 195
     i32.const 59
     call $~lib/builtins/abort
     unreachable
    end
    local.tee $25
    i32.store $0 offset=108
    local.get $25
    call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    if (result i32)
     local.get $25
    else
     i32.const 7328
     i32.const 20304
     i32.const 195
     i32.const 59
     call $~lib/builtins/abort
     unreachable
    end
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=48
    local.get $26
    call $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj
    local.set $26
    global.get $~lib/memory/__stack_pointer
    local.get $26
    i32.store $0 offset=24
    local.get $26
    call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#set
    drop
    local.get $i|22
    i32.const 1
    i32.add
    local.set $i|22
    br $for-loop|2
   end
  end
  i32.const 0
  local.get $project
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=20
  local.get $26
  local.get $environment
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=24
  local.get $26
  local.get $featuresMap
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=48
  local.get $26
  local.get $featureVarMap
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=52
  local.get $26
  local.get $variableVariationMap
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=56
  local.get $26
  local.get $variablesMap
  local.set $26
  global.get $~lib/memory/__stack_pointer
  local.get $26
  i32.store $0 offset=112
  local.get $26
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
  local.set $26
  global.get $~lib/memory/__stack_pointer
  i32.const 116
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $26
  return
 )
 (func $assembly/testHelpers/testBucketedUserConfigClass (param $userConfigStr i32) (result i32)
  (local $userConfig i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $userConfigStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig.fromJSONString
  local.tee $userConfig
  i32.store $0 offset=4
  local.get $userConfig
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/testHelpers/TestData>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  (local $cursor i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.set $cursor
  loop $while-continue|0
   local.get $a
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   local.get $b
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   i32.eq
   if (result i32)
    local.get $cursor
    local.get $a
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/string/String#get:length
    i32.lt_s
   else
    i32.const 0
   end
   if
    local.get $cursor
    i32.const 1
    i32.add
    local.set $cursor
    br $while-continue|0
   end
  end
  local.get $a
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  drop
  i32.const 0
  if
   local.get $b
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $cursor
   call $~lib/string/String#charCodeAt
   drop
   i32.const 0
   if
    i32.const 0
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   else
    i32.const -1
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   unreachable
  end
  local.get $b
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  drop
  i32.const 0
  if
   i32.const 1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $a
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  local.get $b
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $cursor
  call $~lib/string/String#charCodeAt
  i32.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $b
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $b
    local.tee $min
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $a
    local.tee $max
    i32.store $0 offset=12
    local.get $a
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=16
    local.get $12
    local.get $b
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=20
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.tee $min
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $b
     local.tee $max
     i32.store $0 offset=12
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=16
       local.get $12
       local.get $max
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=20
       local.get $12
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=16
       local.get $12
       local.get $min
       local.set $12
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0 offset=20
       local.get $12
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $k i32)
  (local $tmp i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $tmp
     i32.store $0 offset=8
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $k i32)
  (local $a i32)
  (local $b i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $b
    i32.store $0 offset=4
    local.get $a
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=8
    local.get $12
    local.get $b
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store $0 offset=12
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $20 i32)
  (local $21 i32)
  (local $top i32)
  (local $startA i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $27 i32)
  (local $28 i32)
  (local $k i32)
  (local $i|30 i32)
  (local $start i32)
  (local $i|32 i32)
  (local $start|33 i32)
  (local $34 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=4
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=8
     local.get $34
     local.get $b
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=12
     local.get $34
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.get $b
     local.get $c
     select
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=8
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=8
     local.get $34
     local.get $b
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=12
     local.get $34
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0
    local.tee $a|7
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0 offset=4
    local.tee $b|8
    i32.store $0 offset=20
    local.get $a|7
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=8
    local.get $34
    local.get $b|8
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=12
    local.get $34
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   local.set $34
   global.get $~lib/memory/__stack_pointer
   local.get $34
   i32.store $0 offset=24
   local.get $34
   call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  block $~lib/util/sort/log2u|inlined.1 (result i32)
   local.get $len
   local.set $n
   i32.const 31
   local.get $n
   i32.clz
   i32.sub
   br $~lib/util/sort/log2u|inlined.1
  end
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  local.set $34
  global.get $~lib/memory/__stack_pointer
  local.get $34
  i32.store $0 offset=28
  local.get $34
  call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $20
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $21
   local.get $20
   local.get $21
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   local.set $34
   global.get $~lib/memory/__stack_pointer
   local.get $34
   i32.store $0 offset=24
   local.get $34
   call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    local.set $34
    global.get $~lib/memory/__stack_pointer
    local.get $34
    i32.store $0 offset=28
    local.get $34
    call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $27
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $28
     local.get $27
     local.get $28
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=24
     local.get $34
     call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|30
    loop $for-loop|3
     local.get $i|30
     local.get $k
     i32.gt_u
     if
      local.get $leftRunStartBuf
      local.get $i|30
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|30
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       local.set $34
       global.get $~lib/memory/__stack_pointer
       local.get $34
       i32.store $0 offset=32
       local.get $34
       call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|30
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|30
      i32.const 1
      i32.sub
      local.set $i|30
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|32
  loop $for-loop|4
   local.get $i|32
   i32.const 0
   i32.ne
   if
    local.get $leftRunStartBuf
    local.get $i|32
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|33
    local.get $start|33
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|33
     local.get $leftRunEndBuf
     local.get $i|32
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     local.set $34
     global.get $~lib/memory/__stack_pointer
     local.get $34
     i32.store $0 offset=32
     local.get $34
     call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
    end
    local.get $i|32
    i32.const 1
    i32.sub
    local.set $i|32
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#sort (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:dataStart
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length_
  local.get $comparator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/testHelpers/TestData>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#reverse (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:dataStart
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:length_
  call $~lib/util/bytes/REVERSE<assembly/testHelpers/TestData>
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/testHelpers/TestData> (param $arr i32) (param $direction i32) (result i32)
  (local $sorted i32)
  (local $3 i32)
  (local $4 i32)
  (local $result i32)
  (local $i i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $arr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 30464
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#sort
  local.tee $sorted
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 201
  i32.const 30496
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0 offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sorted
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length
   i32.lt_s
   if
    local.get $result
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $sorted
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=20
    local.get $7
    local.get $i
    call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=16
    local.get $7
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>#get:entry
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    local.get $7
    call $~lib/array/Array<assembly/testHelpers/TestData>#push
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $direction
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 24160
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/string/String.__eq
  if (result i32)
   local.get $result
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<assembly/testHelpers/TestData>#reverse
  else
   local.get $result
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/testHelpers/testSortObjectsByString (param $arr i32) (param $direction i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $arr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $direction
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/testHelpers/TestData>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<i32>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 25136
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableAutomaticEventLogging
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 25216
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:disableCustomEventLogging
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 25296
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/eventQueueOptions/EventQueueOptions#get:eventRequestChunkSize
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/eventQueueOptions/testEventQueueOptionsClass (param $optionsStr i32) (result i32)
  (local $options i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $optionsStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/eventQueueOptions/EventQueueOptions#constructor
  local.tee $options
  i32.store $0 offset=4
  local.get $options
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/dvcEvent/DVCEvent#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $date i32)
  (local $3 f64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 14848
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/types/dvcEvent/DVCEvent#get:type
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCEvent#get:date
  local.tee $date
  i32.store $0 offset=20
  local.get $date
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 14928
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $date
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/date/Date#toISOString
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCEvent#get:target
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 27440
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/types/dvcEvent/DVCEvent#get:target
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCEvent#get:value
  local.tee $3
  local.get $3
  f64.ne
  i32.eqz
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 20144
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/types/dvcEvent/DVCEvent#get:value
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCEvent#get:metaData
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 27472
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/types/dvcEvent/DVCEvent#get:metaData
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/dvcEvent/testDVCEventClass (param $eventStr i32) (result i32)
  (local $event i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $eventStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/dvcEvent/DVCEvent.fromJSONString
  local.tee $event
  i32.store $0 offset=4
  local.get $event
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/dvcEvent/DVCEvent#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 f64)
  (local $featureVars i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 14848
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:type
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:target
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 27440
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/types/dvcEvent/DVCRequestEvent#get:target
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:customType
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 30624
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/types/dvcEvent/DVCRequestEvent#get:customType
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 416
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:user_id
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 14928
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:date
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/date/Date#toISOString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 30672
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:clientDate
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  call $~lib/date/Date#toISOString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:value
  local.tee $2
  local.get $2
  f64.ne
  i32.eqz
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 20144
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $assembly/types/dvcEvent/DVCRequestEvent#get:value
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:featureVars
  local.tee $featureVars
  i32.store $0 offset=24
  local.get $featureVars
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 30720
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $featureVars
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/types/dvcEvent/DVCRequestEvent#get:metaData
  if
   local.get $json
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 27472
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/types/dvcEvent/DVCRequestEvent#get:metaData
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $json
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/types/dvcEvent/testDVCRequestEventClass (param $eventStr i32) (param $user_id i32) (param $featureVarsStr i32) (result i32)
  (local $str i32)
  (local $featureVarsJSON i32)
  (local $5 i32)
  (local $requestEvent i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  block $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.18 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $featureVarsStr
   local.tee $str
   i32.store $0
   local.get $str
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   br $~lib/@devcycle/assemblyscript-json/assembly/JSON/parse<~lib/string/String>|inlined.18
  end
  local.tee $featureVarsJSON
  i32.store $0 offset=8
  local.get $featureVarsJSON
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 30528
   i32.const 27360
   i32.const 244
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $eventStr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  call $assembly/types/dvcEvent/DVCEvent.fromJSONString
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  local.get $user_id
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=16
  local.get $7
  global.get $~lib/memory/__stack_pointer
  local.get $featureVarsJSON
  local.tee $5
  i32.store $0 offset=24
  local.get $5
  call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  if (result i32)
   local.get $5
  else
   i32.const 7328
   i32.const 27360
   i32.const 249
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  call $assembly/helpers/jsonHelpers/getStringMapFromJSONObj
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=20
  local.get $7
  call $assembly/types/dvcEvent/DVCRequestEvent#constructor
  local.tee $requestEvent
  i32.store $0 offset=28
  local.get $requestEvent
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $assembly/types/dvcEvent/DVCRequestEvent#stringify
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/types/platformData/PlatformData#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 576
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/platformData/PlatformData#get:platform
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/platformData/PlatformData#get:platformVersion
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20832
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/platformData/PlatformData#get:sdkType
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/platformData/PlatformData#get:sdkVersion
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/platformData/PlatformData#get:sdkPlatform
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 20928
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/platformData/PlatformData#get:sdkPlatform
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/platformData/PlatformData#get:hostname
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 20976
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/platformData/PlatformData#get:hostname
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/platformData/testPlatformDataClass (param $dataStr i32) (result i32)
  (local $platformData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $dataStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData.fromString
  local.tee $platformData
  i32.store $0 offset=4
  local.get $platformData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/platformData/testPlatformDataClassFromUTF8 (param $dataStr i32) (result i32)
  (local $platformData i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $dataStr
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData.fromUTF8
  local.tee $platformData
  i32.store $0 offset=4
  local.get $platformData
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $assembly/types/platformData/PlatformData#stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $replacement
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#set:body
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/util/replaceAtIndex<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $arr i32) (param $index i32) (param $item i32) (result i32)
  (local $res i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $arr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
  local.tee $res
  i32.store $0 offset=4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  local.get $item
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $expressions i32)
  (local $index i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
  local.tee $expressions
  i32.store $0 offset=4
  local.get $expressions
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $node
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
  local.set $index
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $expressions
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  local.get $index
  local.get $replacement
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $~lib/assemblyscript-regex/assembly/util/replaceAtIndex<~lib/assemblyscript-regex/assembly/parser/node/Node>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#set:expressions
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $replacement
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#set:expression
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $replacement
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#set:expression
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:left
  local.get $node
  i32.eq
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $replacement
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:left
  else
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $replacement
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#set:right
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#replace (param $this i32) (param $node i32) (param $replacement i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $replacement
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#set:expression
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#clone (param $this i32) (result i32)
  (local $body i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
  local.tee $body
  i32.store $0 offset=4
  i32.const 0
  local.get $body
  i32.const 0
  i32.ne
  if (result i32)
   local.get $body
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 (param $s i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0
    local.get $9
    local.get $i
    local.get $this
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=12
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 30896
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#clone~anonymous|0 (param $s i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $s
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:expressions
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 30928
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#get:negated
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:from
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#get:to
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#get:char
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#get:kind
  call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#get:charClass
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:expression
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:quantifier
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:expression
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:from
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:to
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:left
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:right
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#clone (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:expression
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:capturing
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:id
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#children (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
  i32.const 0
  i32.ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 31
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=8
   local.get $1
   i32.const 0
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/assemblyscript-regex/assembly/parser/node/AST#get:body
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 7088
    i32.const 6640
    i32.const 39
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
   local.get $1
  else
   global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#children (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#get:expressions
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#get:expression
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#children (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#get:expression
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#children (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:left
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $1
  i32.const 1
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#get:right
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#children (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#get:expression
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
  local.get $1
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $position
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:location
  global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Ignore
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#get:startMarker
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:capturing
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#get:startMarker
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $input
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState#get:startMarker
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#get:location
   local.get $position
   call $~lib/string/String#substring
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState#set:capture
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Ignore
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches (param $this i32) (param $code i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#get:ignoreCase
  if
   local.get $code
   i32.const 32
   i32.or
   local.set $code
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#get:character
  local.get $code
  i32.eq
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher>#get:matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $input
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $position
  call $~lib/string/String#charCodeAt
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches
  if (result i32)
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Match
  else
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Fail
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#contains (param $this i32) (param $value i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/assemblyscript-regex/assembly/util/Range#get:from
  i32.ge_s
  if (result i32)
   local.get $value
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/assemblyscript-regex/assembly/util/Range#get:to
   i32.le_s
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches (param $this i32) (param $code i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#get:ranges
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#get:ranges
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    local.get $i
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $code
    call $~lib/assemblyscript-regex/assembly/util/Range#contains
    if
     i32.const 1
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches (param $this i32) (param $code i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $case12|0
   block $case11|0
    block $case10|0
     block $case9|0
      block $case8|0
       block $case7|0
        block $case6|0
         block $case5|0
          block $case4|0
           block $case3|0
            block $case2|0
             block $case1|0
              block $case0|0
               local.get $this
               local.set $3
               global.get $~lib/memory/__stack_pointer
               local.get $3
               i32.store $0
               local.get $3
               call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#get:charClass
               local.set $2
               local.get $2
               i32.const 100
               i32.eq
               br_if $case0|0
               local.get $2
               i32.const 68
               i32.eq
               br_if $case1|0
               local.get $2
               i32.const 46
               i32.eq
               br_if $case2|0
               local.get $2
               i32.const 119
               i32.eq
               br_if $case3|0
               local.get $2
               i32.const 87
               i32.eq
               br_if $case4|0
               local.get $2
               i32.const 115
               i32.eq
               br_if $case5|0
               local.get $2
               i32.const 83
               i32.eq
               br_if $case6|0
               local.get $2
               i32.const 116
               i32.eq
               br_if $case7|0
               local.get $2
               i32.const 114
               i32.eq
               br_if $case8|0
               local.get $2
               i32.const 110
               i32.eq
               br_if $case9|0
               local.get $2
               i32.const 118
               i32.eq
               br_if $case10|0
               local.get $2
               i32.const 102
               i32.eq
               br_if $case11|0
               br $case12|0
              end
              local.get $code
              call $~lib/assemblyscript-regex/assembly/char/isDigit
              local.set $3
              global.get $~lib/memory/__stack_pointer
              i32.const 12
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $3
              return
             end
             local.get $code
             call $~lib/assemblyscript-regex/assembly/char/isDigit
             i32.eqz
             local.set $3
             global.get $~lib/memory/__stack_pointer
             i32.const 12
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $3
             return
            end
            local.get $this
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store $0
            local.get $3
            call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#get:dotAll
            if (result i32)
             i32.const 1
            else
             local.get $code
             i32.const 13
             i32.ne
             if (result i32)
              local.get $code
              i32.const 10
              i32.ne
             else
              i32.const 0
             end
             if (result i32)
              local.get $code
              i32.const 8232
              i32.ne
             else
              i32.const 0
             end
             if (result i32)
              local.get $code
              i32.const 8233
              i32.ne
             else
              i32.const 0
             end
            end
            local.set $3
            global.get $~lib/memory/__stack_pointer
            i32.const 12
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $3
            return
           end
           local.get $code
           call $~lib/assemblyscript-regex/assembly/char/isAlpha
           if (result i32)
            i32.const 1
           else
            local.get $code
            i32.const 95
            i32.eq
           end
           if (result i32)
            i32.const 1
           else
            local.get $code
            call $~lib/assemblyscript-regex/assembly/char/isDigit
           end
           local.set $3
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $3
           return
          end
          local.get $code
          call $~lib/assemblyscript-regex/assembly/char/isAlpha
          if (result i32)
           i32.const 1
          else
           local.get $code
           i32.const 95
           i32.eq
          end
          if (result i32)
           i32.const 1
          else
           local.get $code
           call $~lib/assemblyscript-regex/assembly/char/isDigit
          end
          i32.eqz
          local.set $3
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $3
          return
         end
         local.get $code
         call $~lib/assemblyscript-regex/assembly/char/isWhitespace
         local.set $3
         global.get $~lib/memory/__stack_pointer
         i32.const 12
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $3
         return
        end
        local.get $code
        call $~lib/assemblyscript-regex/assembly/char/isWhitespace
        i32.eqz
        local.set $3
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $3
        return
       end
       local.get $code
       i32.const 9
       i32.eq
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $3
       return
      end
      local.get $code
      i32.const 13
      i32.eq
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      return
     end
     local.get $code
     i32.const 10
     i32.eq
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $code
    i32.const 11
    i32.eq
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   local.get $code
   i32.const 12
   i32.eq
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 30960
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#get:charClass
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.fromCharCode@varargs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/string/String.__concat
  i32.const 9760
  i32.const 172
  i32.const 9
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches (param $this i32) (param $code i32) (result i32)
  (local $match i32)
  (local $i i32)
  (local $len i32)
  (local $matcher i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  i32.const 0
  local.set $match
  i32.const 0
  local.set $i
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#get:matchers
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length
  local.set $len
  block $for-break2
   loop $for-loop|2
    local.get $i
    local.get $len
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=4
     local.get $11
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#get:matchers
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0
     local.get $11
     local.get $i
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__get
     local.tee $matcher
     i32.store $0 offset=8
     block $break|3
      block $case3|3
       block $case2|3
        block $case1|3
         block $case0|3
          local.get $matcher
          local.set $11
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store $0
          local.get $11
          call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#get:type
          local.set $6
          local.get $6
          i32.const 0
          i32.eq
          br_if $case0|3
          local.get $6
          i32.const 1
          i32.eq
          br_if $case1|3
          local.get $6
          i32.const 2
          i32.eq
          br_if $case2|3
          local.get $6
          i32.const 3
          i32.eq
          br_if $case3|3
          br $break|3
         end
         global.get $~lib/memory/__stack_pointer
         local.get $matcher
         local.tee $7
         i32.store $0 offset=12
         local.get $7
         call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher
         if (result i32)
          local.get $7
         else
          i32.const 7328
          i32.const 9760
          i32.const 190
          i32.const 20
          call $~lib/builtins/abort
          unreachable
         end
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store $0
         local.get $11
         local.get $code
         call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches
         local.set $match
         br $break|3
        end
        global.get $~lib/memory/__stack_pointer
        local.get $matcher
        local.tee $8
        i32.store $0 offset=16
        local.get $8
        call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher
        if (result i32)
         local.get $8
        else
         i32.const 7328
         i32.const 9760
         i32.const 194
         i32.const 20
         call $~lib/builtins/abort
         unreachable
        end
        local.set $11
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store $0
        local.get $11
        local.get $code
        call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches
        local.set $match
        br $break|3
       end
       global.get $~lib/memory/__stack_pointer
       local.get $matcher
       local.tee $9
       i32.store $0 offset=20
       local.get $9
       call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher
       if (result i32)
        local.get $9
       else
        i32.const 7328
        i32.const 9760
        i32.const 198
        i32.const 20
        call $~lib/builtins/abort
        unreachable
       end
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0
       local.get $11
       local.get $code
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
       local.set $match
       br $break|3
      end
      global.get $~lib/memory/__stack_pointer
      local.get $matcher
      local.tee $10
      i32.store $0 offset=24
      local.get $10
      call $~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher
      if (result i32)
       local.get $10
      else
       i32.const 7328
       i32.const 9760
       i32.const 202
       i32.const 20
       call $~lib/builtins/abort
       unreachable
      end
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store $0
      local.get $11
      local.get $code
      call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
      local.set $match
      br $break|3
     end
     local.get $match
     if
      br $for-break2
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|2
    end
   end
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0
  local.get $11
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#get:negated
  if (result i32)
   local.get $match
   i32.eqz
  else
   local.get $match
  end
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher>#get:matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $input
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $position
  call $~lib/string/String#charCodeAt
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
  if (result i32)
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Match
  else
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Fail
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#matches (param $this i32) (param $input i32) (param $position i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/MatcherState<~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher>#get:matcher
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $input
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $position
  call $~lib/string/String#charCodeAt
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
  if (result i32)
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Match
  else
   global.get $~lib/assemblyscript-regex/assembly/nfa/types/MatchResult.Fail
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/string/String#at (param $this i32) (param $pos i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String#get:length
  local.set $len
  local.get $pos
  i32.const 0
  local.get $len
  local.get $pos
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $pos
  local.get $pos
  local.get $len
  i32.ge_u
  if
   i32.const 5376
   i32.const 11664
   i32.const 57
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.set $out
  local.get $out
  local.get $this
  local.get $pos
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar (param $char i32) (result i32)
  (local $charCode i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $char
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.set $charCode
  block $case8|0
   block $case7|0
    block $case6|0
     block $case5|0
      block $case4|0
       block $case3|0
        block $case2|0
         block $case1|0
          block $case0|0
           local.get $charCode
           local.set $2
           local.get $2
           i32.const 34
           i32.eq
           br_if $case0|0
           local.get $2
           i32.const 92
           i32.eq
           br_if $case1|0
           local.get $2
           i32.const 8
           i32.eq
           br_if $case2|0
           local.get $2
           i32.const 10
           i32.eq
           br_if $case3|0
           local.get $2
           i32.const 13
           i32.eq
           br_if $case4|0
           local.get $2
           i32.const 9
           i32.eq
           br_if $case5|0
           local.get $2
           i32.const 12
           i32.eq
           br_if $case6|0
           local.get $2
           i32.const 11
           i32.eq
           br_if $case7|0
           br $case8|0
          end
          i32.const 31040
          local.set $3
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $3
          return
         end
         i32.const 31072
         local.set $3
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $3
         return
        end
        i32.const 31104
        local.set $3
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $3
        return
       end
       i32.const 31136
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $3
       return
      end
      i32.const 31168
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      return
     end
     i32.const 31200
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    i32.const 31232
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 31264
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $char
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#stringify (param $this i32) (result i32)
  (local $escaped i32)
  (local $i i32)
  (local $char i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/string/String#get:length
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $escaped
  i32.store $0 offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/string/String#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#get:_str
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    call $~lib/string/String#at
    local.tee $char
    i32.store $0 offset=12
    local.get $escaped
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $i
    local.get $char
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=16
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=16
    local.get $4
    call $~lib/array/Array<~lib/string/String>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 10976
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $4
  local.get $escaped
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=24
  local.get $4
  i32.const 6144
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=28
  local.get $4
  call $~lib/array/Array<~lib/string/String>#join
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=20
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 10976
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#stringify (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#get:_num
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#stringify (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#get:_num
  i32.const 10
  call $~lib/number/I64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#stringify (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#get:_bool
  i32.const 0
  call $~lib/number/Bool#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 28144
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/EvalReason#get:reason
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 28176
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/EvalReason#get:details
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 31296
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/EvalReason#get:target_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/FeatureVariation#get:_feature
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/FeatureVariation#get:_variation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:_variation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 30160
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:variationName
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 30208
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:variationKey
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20560
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/bucketedUserConfig/SDKFeature#get:evalReason
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/bucketedUserConfig/EvalReason>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/configBody/Settings#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21440
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/configBody/Settings#get:disablePassthroughRollouts
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/Settings> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/types/configBody/PublicProject#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicProject#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicProject#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21376
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicProject#get:a0_organization
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21648
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicProject#get:settings
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/configBody/Settings>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/configBody/PublicEnvironment#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/PublicEnvironment#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/configBody/Variable#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/Variable#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/Variable#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/configBody/Variable#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/dvcUser/DVCPopulatedUser> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/DVCRequestEvent> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 208
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:user
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/dvcUser/DVCPopulatedUser>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 31344
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/dvcEvent/UserEventsBatchRecord#get:events
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/DVCRequestEvent>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/UserEventsBatchRecord> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/dvcEvent/FlushPayload#stringify (param $this i32) (result i32)
  (local $jsonObj i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $jsonObj
  i32.store $0
  local.get $jsonObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 31376
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#get:records
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/UserEventsBatchRecord>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $jsonObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 31424
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#get:payloadId
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $jsonObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 31472
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/dvcEvent/FlushPayload#eventCount
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32>
  local.get $jsonObj
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/dvcUser/DVCUser#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 416
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:user_id
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:email
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 464
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:email
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:name
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14384
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:name
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:language
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14416
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:language
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:country
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 528
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:country
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:appVersion
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 688
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:appVersion
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:appBuild
  local.tee $2
  local.get $2
  f64.ne
  i32.eqz
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 14464
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:appBuild
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:deviceModel
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 736
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:deviceModel
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:customData
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 784
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:customData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/dvcUser/DVCUser#get:privateCustomData
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 13872
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/dvcUser/DVCUser#get:privateCustomData
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj|null>
  end
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Variation> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/feature/Variation>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/feature/Variation>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfiguration/FeatureConfiguration> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/types/feature/Feature#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Feature#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Feature#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Feature#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21952
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/feature/Feature#get:variations
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Variation>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24288
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Feature#get:configuration
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfiguration/FeatureConfiguration>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/VariationVariable> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/feature/VariationVariable>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/feature/Variation#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Variation#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14384
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Variation#get:name
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/Variation#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 18912
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/feature/Variation#get:variables
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/VariationVariable>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/feature/VariationVariable#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/VariationVariable#get:_var
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20144
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/feature/VariationVariable#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfigurationV2/FeatureConfigurationV2> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/types/featureV2/FeatureV2#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:key
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 21952
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:variations
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Variation>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24288
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureV2/FeatureV2#get:configuration
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfigurationV2/FeatureConfigurationV2>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureConfiguration/FeaturePrerequisites> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfiguration/FeatureWinningVariation> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $~lib/array/Array<assembly/types/target/Target>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/target/Target>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/target/Target>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/Target>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/target/Target>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/Target> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/target/Target>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/target/Target>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 20496
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#get:_id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#get:prerequisites
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 22320
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $assembly/types/featureConfiguration/FeatureConfiguration#get:prerequisites
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 7088
    i32.const 29776
    i32.const 42
    i32.const 61
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureConfiguration/FeaturePrerequisites>
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#get:winningVariation
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 22560
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/types/featureConfiguration/FeatureConfiguration#get:winningVariation
   local.tee $3
   i32.store $0 offset=28
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 7088
    i32.const 29776
    i32.const 45
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfiguration/FeatureWinningVariation>
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#get:forcedUsers
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 31520
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $assembly/types/featureConfiguration/FeatureConfiguration#get:forcedUsers
   local.tee $4
   i32.store $0 offset=32
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 7088
    i32.const 29776
    i32.const 48
    i32.const 52
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  end
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22720
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/types/featureConfiguration/FeatureConfiguration#get:targets
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/Target>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfiguration/FeaturePrerequisites#get:_feature
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfiguration/FeaturePrerequisites#get:comparator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfiguration/FeatureWinningVariation#get:_variation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/featureConfiguration/FeatureWinningVariation#get:updatedAt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0 offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 6352
   i32.const 6096
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureConfigurationV2/FeaturePrerequisites> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfigurationV2/FeatureWinningVariation> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/targetV2/TargetV2> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/targetV2/TargetV2>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 20496
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:_id
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:prerequisites
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 22320
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:prerequisites
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 7088
    i32.const 22416
    i32.const 42
    i32.const 61
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/featureConfigurationV2/FeaturePrerequisites>
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:winningVariation
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 22560
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:winningVariation
   local.tee $3
   i32.store $0 offset=28
   local.get $3
   if (result i32)
    local.get $3
   else
    i32.const 7088
    i32.const 22416
    i32.const 45
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/featureConfigurationV2/FeatureWinningVariation>
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:forcedUsers
  if
   local.get $json
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 31520
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=20
   local.get $5
   call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:forcedUsers
   local.tee $4
   i32.store $0 offset=32
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 7088
    i32.const 22416
    i32.const 48
    i32.const 52
    call $~lib/builtins/abort
    unreachable
   end
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   local.get $5
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $5
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>
  end
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  i32.const 22720
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  local.get $5
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=20
  local.get $5
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#get:targets
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $5
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/targetV2/TargetV2>
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=12
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/types/featureConfigurationV2/FeaturePrerequisites#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20592
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#get:_feature
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22368
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfigurationV2/FeaturePrerequisites#get:comparator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/featureConfigurationV2/FeatureWinningVariation#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#get:_variation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/featureConfigurationV2/FeatureWinningVariation#get:updatedAt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Rollout|null> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $key
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $value
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/from<assembly/types/target/Rollout|null>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/TargetDistribution> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/target/TargetDistribution>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/target/Target#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/Target#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 23728
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/Target#get:_audience
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Audience>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/Target#get:rollout
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23776
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/Target#get:rollout
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Rollout|null>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/target/Target#get:distribution
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/TargetDistribution>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/AudienceFilter#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceFilter#get:type
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 14848
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceFilter#get:type
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/AudienceFilterOrOperator> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/target/AudienceOperator#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceOperator#get:operator
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22768
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceOperator#get:operator
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceOperator#get:filters
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22816
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=20
   local.get $2
   call $assembly/types/target/AudienceOperator#get:filters
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/AudienceFilterOrOperator>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/AudienceFilterOrOperator#stringify (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/types/target/AudienceFilterOrOperator#get:operatorClass
   local.tee $1
   i32.store $0 offset=8
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 7088
    i32.const 17312
    i32.const 111
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/types/target/AudienceOperator#stringify
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $assembly/types/target/AudienceFilterOrOperator#get:filterClass
   local.tee $2
   i32.store $0 offset=12
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 7088
    i32.const 17312
    i32.const 114
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $assembly/types/target/AudienceFilter#stringify@override
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 6144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/AudienceOperator> (param $this i32) (param $key i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 1
  drop
  i32.const 1
  drop
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:_obj
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $key
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  return
 )
 (func $assembly/types/target/Audience#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22816
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/Audience#get:filters
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/AudienceOperator>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/AudienceMatchFilter#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceMatchFilter#get:comparator
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22368
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceMatchFilter#get:comparator
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceMatchFilter#get:_audiences
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23648
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceMatchFilter#get:_audiences
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceFilter#get:type
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 14848
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceFilter#get:type
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/UserFilter#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceFilter#get:type
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 14848
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceFilter#get:type
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:subType
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22992
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:subType
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:comparator
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22368
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:comparator
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:values
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23040
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:values
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/CustomDataFilter#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/CustomDataFilter#get:dataKey
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23552
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/CustomDataFilter#get:dataKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/CustomDataFilter#get:dataKeyType
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23600
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/CustomDataFilter#get:dataKeyType
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/AudienceFilter#get:type
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 14848
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/AudienceFilter#get:type
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:subType
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22992
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:subType
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:comparator
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 22368
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:comparator
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/target/UserFilter#get:values
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23040
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/target/UserFilter#get:values
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/RolloutStage> (param $valueArr i32) (result i32)
  (local $jsonArr i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $jsonArr
  i32.store $0
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $valueArr
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length
   i32.lt_s
   if
    local.get $jsonArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $valueArr
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=12
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/types/target/RolloutStage>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $jsonArr
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/target/Rollout#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 14848
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/target/Rollout#get:type
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 23824
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/types/target/Rollout#get:startPercentage
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 23888
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $assembly/types/target/Rollout#get:startDate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/date/Date#toISOString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $assembly/types/target/Rollout#get:stages
  if
   local.get $json
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 23936
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $3
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $3
   call $assembly/types/target/Rollout#get:stages
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   if (result i32)
    local.get $2
   else
    i32.const 7088
    i32.const 17312
    i32.const 401
    i32.const 54
    call $~lib/builtins/abort
    unreachable
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/RolloutStage>
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  end
  local.get $json
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/types/target/RolloutStage#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14848
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/RolloutStage#get:type
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/target/RolloutStage#get:date
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/target/RolloutStage#get:percentage
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/target/TargetDistribution#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 22624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/target/TargetDistribution#get:_variation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 14880
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $assembly/types/target/TargetDistribution#get:percentage
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/types/targetV2/TargetV2#stringify (param $this i32) (result i32)
  (local $json i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $json
  i32.store $0
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 20496
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/targetV2/TargetV2#get:_id
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 23728
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/types/targetV2/TargetV2#get:_audience
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Audience>
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/targetV2/TargetV2#get:rollout
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 23776
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/targetV2/TargetV2#get:rollout
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<assembly/types/target/Rollout|null>
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $assembly/types/targetV2/TargetV2#get:bucketingKey
  if
   local.get $json
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 24112
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/types/targetV2/TargetV2#get:bucketingKey
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 24000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $assembly/types/targetV2/TargetV2#get:distribution
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/target/TargetDistribution>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr>
  local.get $json
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32 (param $this i32) (result i32)
  (local $loaded i32)
  (local $value i32)
  (local $this|3 i32)
  (local $step i32)
  (local $ptr i32)
  (local $this|6 i32)
  (local $step|7 i32)
  (local $ptr|8 i32)
  (local $this|9 i32)
  (local $step|10 i32)
  (local $ptr|11 i32)
  (local $this|12 i32)
  (local $step|13 i32)
  (local $ptr|14 i32)
  (local $this|15 i32)
  (local $step|16 i32)
  (local $ptr|17 i32)
  (local $this|18 i32)
  (local $step|19 i32)
  (local $ptr|20 i32)
  (local $this|21 i32)
  (local $step|22 i32)
  (local $ptr|23 i32)
  (local $this|24 i32)
  (local $step|25 i32)
  (local $ptr|26 i32)
  (local $this|27 i32)
  (local $step|28 i32)
  (local $ptr|29 i32)
  (local $this|30 i32)
  (local $step|31 i32)
  (local $ptr|32 i32)
  (local $33 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill $0
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|3
   i32.store $0
   i32.const 1
   local.set $step
   local.get $this|3
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr
   local.get $this|3
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|3
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|3
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|3
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.0
  end
  i32.load8_u $0
  local.tee $loaded
  i32.const 127
  i32.and
  local.set $value
  local.get $loaded
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  local.get $value
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|6
   i32.store $0 offset=12
   i32.const 1
   local.set $step|7
   local.get $this|6
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|8
   local.get $this|6
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|6
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|7
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|6
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|6
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|8
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.1
  end
  i32.load8_u $0
  local.tee $loaded
  i32.const 127
  i32.and
  i32.const 7
  i32.shl
  i32.or
  local.set $value
  local.get $loaded
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  local.get $value
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|9
   i32.store $0 offset=16
   i32.const 1
   local.set $step|10
   local.get $this|9
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|11
   local.get $this|9
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|9
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|10
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|9
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|9
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|11
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.2
  end
  i32.load8_u $0
  local.tee $loaded
  i32.const 127
  i32.and
  i32.const 14
  i32.shl
  i32.or
  local.set $value
  local.get $loaded
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  local.get $value
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.3 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|12
   i32.store $0 offset=20
   i32.const 1
   local.set $step|13
   local.get $this|12
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|14
   local.get $this|12
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|12
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|13
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|12
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|12
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|14
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.3
  end
  i32.load8_u $0
  local.tee $loaded
  i32.const 127
  i32.and
  i32.const 21
  i32.shl
  i32.or
  local.set $value
  local.get $loaded
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  local.get $value
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.4 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|15
   i32.store $0 offset=24
   i32.const 1
   local.set $step|16
   local.get $this|15
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|17
   local.get $this|15
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|15
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|16
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|15
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|15
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|17
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.4
  end
  i32.load8_u $0
  local.tee $loaded
  i32.const 15
  i32.and
  i32.const 28
  i32.shl
  i32.or
  local.set $value
  local.get $loaded
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.5 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|18
   i32.store $0 offset=28
   i32.const 1
   local.set $step|19
   local.get $this|18
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|20
   local.get $this|18
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|18
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|19
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|18
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|18
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|20
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.5
  end
  i32.load8_u $0
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.6 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|21
   i32.store $0 offset=32
   i32.const 1
   local.set $step|22
   local.get $this|21
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|23
   local.get $this|21
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|21
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|22
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|21
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|21
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|23
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.6
  end
  i32.load8_u $0
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.7 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|24
   i32.store $0 offset=36
   i32.const 1
   local.set $step|25
   local.get $this|24
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|26
   local.get $this|24
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|24
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|25
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|24
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|24
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|26
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.7
  end
  i32.load8_u $0
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.8 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|27
   i32.store $0 offset=40
   i32.const 1
   local.set $step|28
   local.get $this|27
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|29
   local.get $this|27
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|27
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|28
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|27
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|27
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|29
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.8
  end
  i32.load8_u $0
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|30
   i32.store $0 offset=44
   i32.const 1
   local.set $step|31
   local.get $this|30
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr|32
   local.get $this|30
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   local.get $this|30
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=8
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step|31
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|30
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|30
   local.set $33
   global.get $~lib/memory/__stack_pointer
   local.get $33
   i32.store $0 offset=4
   local.get $33
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr|32
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.9
  end
  i32.load8_u $0
  i32.const 128
  i32.lt_u
  if
   local.get $value
   local.set $33
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $33
   return
  end
  local.get $value
  local.set $33
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $33
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32 (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#string (param $this i32) (result i32)
  (local $this|1 i32)
  (local $length i32)
  (local $this|3 i32)
  (local $step i32)
  (local $ptr i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|1
   i32.store $0
   local.get $this|1
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.0
  end
  local.set $length
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.10 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|3
   i32.store $0 offset=8
   local.get $length
   local.set $step
   local.get $this|3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr
   local.get $this|3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $this|3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=12
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|3
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.10
  end
  local.get $length
  i32.const 0
  call $~lib/string/String.UTF8.decodeUnsafe
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#int32 (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#bool (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
  i32.const 0
  i32.ne
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip (param $this i32) (param $length i32)
  (local $this|2 i32)
  (local $step i32)
  (local $ptr i32)
  (local $this|5 i32)
  (local $step|6 i32)
  (local $ptr|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $length
  i32.const 0
  i32.eq
  if
   loop $while-continue|0
    block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.11 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.tee $this|2
     i32.store $0
     i32.const 1
     local.set $step
     local.get $this|2
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/as-proto/assembly/Reader/Reader#get:ptr
     local.set $ptr
     local.get $this|2
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     local.get $this|2
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $8
     call $~lib/as-proto/assembly/Reader/Reader#get:ptr
     local.get $step
     i32.add
     call $~lib/as-proto/assembly/Reader/Reader#set:ptr
     local.get $this|2
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/as-proto/assembly/Reader/Reader#get:ptr
     local.get $this|2
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     local.get $8
     call $~lib/as-proto/assembly/Reader/Reader#get:end
     i32.le_u
     i32.eqz
     if
      i32.const 5376
      i32.const 31568
      i32.const 210
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $ptr
     br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.11
    end
    i32.load8_u $0
    i32.const 128
    i32.and
    if
     nop
     br $while-continue|0
    end
   end
  else
   block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.12 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.tee $this|5
    i32.store $0 offset=12
    local.get $length
    local.set $step|6
    local.get $this|5
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/as-proto/assembly/Reader/Reader#get:ptr
    local.set $ptr|7
    local.get $this|5
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    local.get $this|5
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $8
    call $~lib/as-proto/assembly/Reader/Reader#get:ptr
    local.get $step|6
    i32.add
    call $~lib/as-proto/assembly/Reader/Reader#set:ptr
    local.get $this|5
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/as-proto/assembly/Reader/Reader#get:ptr
    local.get $this|5
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/as-proto/assembly/Reader/Reader#get:end
    i32.le_u
    i32.eqz
    if
     i32.const 5376
     i32.const 31568
     i32.const 210
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $ptr|7
    br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.12
   end
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType (param $this i32) (param $wireType i32)
  (local $2 i32)
  (local $this|3 i32)
  (local $this|4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  block $break|0
   block $case5|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $wireType
         local.set $2
         local.get $2
         global.get $~lib/as-proto/assembly/WireType/WireType.VARINT
         i32.eq
         br_if $case0|0
         local.get $2
         global.get $~lib/as-proto/assembly/WireType/WireType.FIXED_64
         i32.eq
         br_if $case1|0
         local.get $2
         global.get $~lib/as-proto/assembly/WireType/WireType.LENGTH_DELIMITED
         i32.eq
         br_if $case2|0
         local.get $2
         global.get $~lib/as-proto/assembly/WireType/WireType.START_GROUP
         i32.eq
         br_if $case3|0
         local.get $2
         global.get $~lib/as-proto/assembly/WireType/WireType.FIXED_32
         i32.eq
         br_if $case4|0
         br $case5|0
        end
        local.get $this
        local.set $5
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0
        local.get $5
        i32.const 0
        call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
        br $break|0
       end
       local.get $this
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       i32.const 8
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
       br $break|0
      end
      local.get $this
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.1 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $this
       local.tee $this|3
       i32.store $0 offset=4
       local.get $this|3
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=8
       local.get $5
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
       br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.1
      end
      call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
      br $break|0
     end
     loop $while-continue|1
      block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.2 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $this
       local.tee $this|4
       i32.store $0 offset=12
       local.get $this|4
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
       br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#uint32|inlined.2
      end
      i32.const 7
      i32.and
      local.tee $wireType
      global.get $~lib/as-proto/assembly/WireType/WireType.END_GROUP
      i32.ne
      if
       local.get $this
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       local.get $wireType
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType
       br $while-continue|1
      end
     end
     br $break|0
    end
    local.get $this
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    i32.const 4
    call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
    br $break|0
   end
   i32.const 31680
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   local.get $wireType
   i32.const 10
   call $~lib/number/I32#toString
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $5
   call $~lib/string/String.__concat
   i32.const 31568
   i32.const 131
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#double (param $this i32) (result f64)
  (local $this|1 i32)
  (local $step i32)
  (local $ptr i32)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  block $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.13 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|1
   i32.store $0
   i32.const 8
   local.set $step
   local.get $this|1
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.set $ptr
   local.get $this|1
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   local.get $this|1
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $step
   i32.add
   call $~lib/as-proto/assembly/Reader/Reader#set:ptr
   local.get $this|1
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/as-proto/assembly/Reader/Reader#get:ptr
   local.get $this|1
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/as-proto/assembly/Reader/Reader#get:end
   i32.le_u
   i32.eqz
   if
    i32.const 5376
    i32.const 31568
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $ptr
   br $~lib/as-proto/assembly/internal/FixedReader/FixedReader#inc|inlined.13
  end
  f64.load $0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#uint32 (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $val i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|2
  i32.store $0
  local.get $value
  local.set $val
  loop $while-continue|0
   local.get $val
   i32.const 127
   i32.gt_u
   if
    local.get $this|2
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    local.get $this|2
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
    local.tee $4
    i32.const 1
    i32.add
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
    local.get $4
    local.get $val
    i32.const 127
    i32.and
    i32.const 128
    i32.or
    i32.store8 $0
    local.get $val
    i32.const 7
    i32.shr_u
    local.set $val
    br $while-continue|0
   end
  end
  local.get $this|2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=4
  local.get $6
  local.get $this|2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.tee $5
  i32.const 1
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $5
  local.get $val
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#uint32 (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $value|3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|2
  i32.store $0
  local.get $value
  local.set $value|3
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  local.get $value|3
  i32.const 0
  i32.lt_u
  if (result i32)
   i32.const 10
  else
   local.get $value|3
   i32.const 128
   i32.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $value|3
    i32.const 16384
    i32.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $value|3
     i32.const 2097152
     i32.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $value|3
      i32.const 268435456
      i32.lt_u
      if (result i32)
       i32.const 4
      else
       i32.const 5
      end
     end
    end
   end
  end
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<i32>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<i32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  i32.ge_u
  if
   i32.const 5376
   i32.const 6096
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#string (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $3 i32)
  (local $len i32)
  (local $this|5 i32)
  (local $value|6 i32)
  (local $this|7 i32)
  (local $val i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  block $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#varlen|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|2
   i32.store $0
   local.get $this|2
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:varlenidx
   local.get $this|2
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=12
   local.get $11
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=8
   local.get $11
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0 offset=4
   local.get $11
   call $~lib/array/Array<i32>#get:length
   i32.ge_s
   if (result i32)
    i32.const 0
   else
    local.get $this|2
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=12
    local.get $11
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    local.get $this|2
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    local.get $this|2
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=12
    local.get $11
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:varlenidx
    local.tee $3
    i32.const 1
    i32.add
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx
    local.get $3
    call $~lib/array/Array<i32>#__get
   end
   br $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#varlen|inlined.0
  end
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|5
  i32.store $0 offset=16
  local.get $len
  local.set $value|6
  global.get $~lib/memory/__stack_pointer
  local.get $this|5
  local.tee $this|7
  i32.store $0 offset=20
  local.get $value|6
  local.set $val
  loop $while-continue|0
   local.get $val
   i32.const 127
   i32.gt_u
   if
    local.get $this|7
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=4
    local.get $11
    local.get $this|7
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
    local.tee $9
    i32.const 1
    i32.add
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
    local.get $9
    local.get $val
    i32.const 127
    i32.and
    i32.const 128
    i32.or
    i32.store8 $0
    local.get $val
    i32.const 7
    i32.shr_u
    local.set $val
    br $while-continue|0
   end
  end
  local.get $this|7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $this|7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.tee $10
  i32.const 1
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $10
  local.get $val
  i32.store8 $0
  local.get $value
  local.get $value
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/string/String#get:length
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  i32.const 0
  i32.const 3
  global.set $~argumentsLength
  i32.const 0
  call $~lib/string/String.UTF8.encodeUnsafe@varargs
  drop
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=4
  local.get $11
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=8
  local.get $11
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.get $len
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<i32>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  call $~lib/array/Array<i32>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#string (param $this i32) (param $value i32)
  (local $len i32)
  (local $this|3 i32)
  (local $value|4 i32)
  (local $this|5 i32)
  (local $value|6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $value
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 0
  call $~lib/string/String.UTF8.byteLength
  local.set $len
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $len
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|3
  i32.store $0 offset=8
  local.get $len
  local.set $value|4
  global.get $~lib/memory/__stack_pointer
  local.get $this|3
  local.tee $this|5
  i32.store $0 offset=12
  local.get $value|4
  local.set $value|6
  local.get $this|5
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $this|5
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  local.get $value|6
  i32.const 0
  i32.lt_u
  if (result i32)
   i32.const 10
  else
   local.get $value|6
   i32.const 128
   i32.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $value|6
    i32.const 16384
    i32.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $value|6
     i32.const 2097152
     i32.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $value|6
      i32.const 268435456
      i32.lt_u
      if (result i32)
       i32.const 4
      else
       i32.const 5
      end
     end
    end
   end
  end
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  local.get $len
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#int32 (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $value|3 i64)
  (local $this|4 i32)
  (local $val i64)
  (local $6 i32)
  (local $7 i32)
  (local $this|8 i32)
  (local $val|9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $value
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|2
   i32.store $0
   local.get $value
   i64.extend_i32_s
   local.set $value|3
   global.get $~lib/memory/__stack_pointer
   local.get $this|2
   local.tee $this|4
   i32.store $0 offset=4
   local.get $value|3
   local.set $val
   loop $while-continue|0
    local.get $val
    i64.const 127
    i64.gt_u
    if
     local.get $this|4
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=8
     local.get $12
     local.get $this|4
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=12
     local.get $12
     call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
     local.tee $6
     i32.const 1
     i32.add
     call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
     local.get $6
     local.get $val
     i64.const 127
     i64.and
     i64.const 128
     i64.or
     i64.store8 $0
     local.get $val
     i64.const 7
     i64.shr_u
     local.set $val
     br $while-continue|0
    end
   end
   local.get $this|4
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=8
   local.get $12
   local.get $this|4
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=12
   local.get $12
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
   local.tee $7
   i32.const 1
   i32.add
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
   local.get $7
   local.get $val
   i64.store8 $0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|8
   i32.store $0 offset=16
   local.get $value
   local.set $val|9
   loop $while-continue|1
    local.get $val|9
    i32.const 127
    i32.gt_u
    if
     local.get $this|8
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=8
     local.get $12
     local.get $this|8
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=12
     local.get $12
     call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
     local.tee $10
     i32.const 1
     i32.add
     call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
     local.get $10
     local.get $val|9
     i32.const 127
     i32.and
     i32.const 128
     i32.or
     i32.store8 $0
     local.get $val|9
     i32.const 7
     i32.shr_u
     local.set $val|9
     br $while-continue|1
    end
   end
   local.get $this|8
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=8
   local.get $12
   local.get $this|8
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0 offset=12
   local.get $12
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
   local.tee $11
   i32.const 1
   i32.add
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
   local.get $11
   local.get $val|9
   i32.store8 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#int32 (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $value|3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $value
  i32.const 0
  i32.lt_s
  if
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
   i32.const 10
   i32.add
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  else
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|2
   i32.store $0 offset=8
   local.get $value
   local.set $value|3
   local.get $this|2
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $this|2
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
   local.get $value|3
   i32.const 0
   i32.lt_u
   if (result i32)
    i32.const 10
   else
    local.get $value|3
    i32.const 128
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $value|3
     i32.const 16384
     i32.lt_u
     if (result i32)
      i32.const 2
     else
      local.get $value|3
      i32.const 2097152
      i32.lt_u
      if (result i32)
       i32.const 3
      else
       local.get $value|3
       i32.const 268435456
       i32.lt_u
       if (result i32)
        i32.const 4
       else
        i32.const 5
       end
      end
     end
    end
   end
   i32.add
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#bool (param $this i32) (param $value i32)
  (local $this|2 i32)
  (local $val i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|2
  i32.store $0
  local.get $value
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  local.set $val
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.get $val
  i32.store8 $0
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  i32.const 1
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#bool (param $this i32) (param $value i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  i32.const 1
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#double (param $this i32) (param $value f64)
  (local $this|2 i32)
  (local $val f64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|2
  i32.store $0
  local.get $value
  local.set $val
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.get $val
  f64.store $0
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $this|2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  i32.const 8
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#double (param $this i32) (param $value f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  i32.const 8
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#fork (param $this i32)
  (local $this|1 i32)
  (local $2 i32)
  (local $this|3 i32)
  (local $value i32)
  (local $this|5 i32)
  (local $val i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|3
  i32.store $0
  block $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#varlen|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $this|1
   i32.store $0 offset=4
   local.get $this|1
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:varlenidx
   local.get $this|1
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=16
   local.get $9
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=12
   local.get $9
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $9
   call $~lib/array/Array<i32>#get:length
   i32.ge_s
   if (result i32)
    i32.const 0
   else
    local.get $this|1
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=16
    local.get $9
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:sizer
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    local.get $this|1
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    local.get $this|1
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=16
    local.get $9
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:varlenidx
    local.tee $2
    i32.const 1
    i32.add
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:varlenidx
    local.get $2
    call $~lib/array/Array<i32>#__get
   end
   br $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#varlen|inlined.1
  end
  local.set $value
  global.get $~lib/memory/__stack_pointer
  local.get $this|3
  local.tee $this|5
  i32.store $0 offset=20
  local.get $value
  local.set $val
  loop $while-continue|0
   local.get $val
   i32.const 127
   i32.gt_u
   if
    local.get $this|5
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=8
    local.get $9
    local.get $this|5
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store $0 offset=12
    local.get $9
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
    local.tee $7
    i32.const 1
    i32.add
    call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
    local.get $7
    local.get $val
    i32.const 127
    i32.and
    i32.const 128
    i32.or
    i32.store8 $0
    local.get $val
    i32.const 7
    i32.shr_u
    local.set $val
    br $while-continue|0
   end
  end
  local.get $this|5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=8
  local.get $9
  local.get $this|5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=12
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#get:ptr
  local.tee $8
  i32.const 1
  i32.add
  call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#set:ptr
  local.get $8
  local.get $val
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#fork (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:pos
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  call $~lib/array/Array<u32>#push
  drop
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlenidx
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/array/Array<i32>#get:length
  call $~lib/array/Array<i32>#push
  drop
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<u32>#get:length_
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 6480
   i32.const 6096
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<u32>#get:dataStart
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $val
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $len
  call $~lib/array/Array<u32>#set:length_
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<i32>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 6480
   i32.const 6096
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $val
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<i32>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 5376
    i32.const 6096
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<i32>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#ldelim (param $this i32)
  (local $endPos i32)
  (local $startPos i32)
  (local $idx i32)
  (local $len i32)
  (local $this|5 i32)
  (local $value i32)
  (local $this|7 i32)
  (local $value|8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:pos
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<u32>#get:length
  if (result i32)
   local.get $this
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=4
   local.get $9
   call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlenidx
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<i32>#get:length
  else
   i32.const 0
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 31744
   i32.const 31840
   i32.const 126
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  local.set $endPos
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:pos
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<u32>#pop
  local.set $startPos
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlenidx
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  call $~lib/array/Array<i32>#pop
  local.set $idx
  local.get $endPos
  local.get $startPos
  i32.sub
  local.set $len
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:varlen
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $idx
  local.get $len
  call $~lib/array/Array<i32>#__set
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $this|5
  i32.store $0 offset=8
  local.get $len
  local.set $value
  global.get $~lib/memory/__stack_pointer
  local.get $this|5
  local.tee $this|7
  i32.store $0 offset=12
  local.get $value
  local.set $value|8
  local.get $this|7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0
  local.get $9
  local.get $this|7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#get:len
  local.get $value|8
  i32.const 0
  i32.lt_u
  if (result i32)
   i32.const 10
  else
   local.get $value|8
   i32.const 128
   i32.lt_u
   if (result i32)
    i32.const 1
   else
    local.get $value|8
    i32.const 16384
    i32.lt_u
    if (result i32)
     i32.const 2
    else
     local.get $value|8
     i32.const 2097152
     i32.lt_u
     if (result i32)
      i32.const 3
     else
      local.get $value|8
      i32.const 268435456
      i32.lt_u
      if (result i32)
       i32.const 4
      else
       i32.const 5
      end
     end
    end
   end
  end
  i32.add
  call $~lib/as-proto/assembly/internal/FixedSizer/FixedSizer#set:len
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/set/Set<~lib/string/String>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/set/Set<~lib/string/String>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/set/Set<~lib/string/String>#get:entriesOffset
  block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.6 (result i32)
   i32.const 8
   br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/set/SetEntry<~lib/string/String>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $entry
     call $~lib/set/SetEntry<~lib/string/String>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.7 (result i32)
     i32.const 8
     br $~lib/set/ENTRY_SIZE<~lib/string/String>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<u32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/State>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/walker/NodeVisitor%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/util/Range>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/State%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f64>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<f64>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2Ci32%2C~lib/array/Array<~lib/string/String>%29=>f64>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%2Cassembly/bucketing/versionCompare/OptionsType|null%29=>f64>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/AudienceFilterOrOperator>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/target/Audience>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/target/Audience>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/feature/VariationVariable>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/VariationVariable>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/VariationVariable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/VariationVariable>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/VariationVariable>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Variation>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Variation>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Variation>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/string/String>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/string/String>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/target/RolloutStage>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/RolloutStage>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/TargetDistribution>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/targetV2/TargetV2>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/targetV2/TargetV2>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Variation>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Variation>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/featureV2/FeatureV2>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureV2/FeatureV2>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/configBody/Variable>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBody/Variable>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBody/Variable>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/featureV2/FeatureV2>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/featureV2/FeatureV2>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/DVCRequestEvent>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,i64>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/map/Map<~lib/string/String,i64>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/map/Map<~lib/string/String,i64>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $~lib/map/Map<~lib/string/String,i64>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.7 (result i32)
   i32.const 24
   br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,i64>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,i64>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 0
     drop
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.8 (result i32)
     i32.const 24
     br $~lib/map/ENTRY_SIZE<~lib/string/String,i64>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/eventQueue/EventQueue>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/dvcEvent/FlushPayload>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/eventQueue/requestPayloadManager/RequestPayloadManager>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/array/Array<~lib/string/String>%2C~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/array/Array<~lib/string/String>>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<bool>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<bool>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.7 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.7
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.8 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>|inlined.8
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfigurationV2/FeaturePrerequisites>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/RolloutStage>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/TargetDistribution>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/targetV2/TargetV2>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/dvcEvent/FlushPayload>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/typedarray/Uint8Array%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>~lib/string/String>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28i32%2Cassembly/types/dvcEvent/FlushPayload%2Ci32%2C~lib/array/Array<assembly/types/dvcEvent/FlushPayload>%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB%2C~lib/as-proto/assembly/Writer/Writer%29=>void>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/as-proto/assembly/Reader/Reader%2Ci32%29=>assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/featureConfiguration/FeaturePrerequisites>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/target/Target>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/Target>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/Target>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/target/Target>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/feature/Feature>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Feature>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Feature>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/types/feature/Feature>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $val|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:buckets
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entries
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#get:entriesOffset
  block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.6 (result i32)
   i32.const 12
   br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.6
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:key
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
     i32.const 1
     drop
     local.get $entry
     call $~lib/map/MapEntry<~lib/string/String,assembly/types/feature/Feature>#get:value
     local.set $val|7
     i32.const 0
     drop
     local.get $val|7
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.7 (result i32)
     i32.const 12
     br $~lib/map/ENTRY_SIZE<~lib/string/String,assembly/types/feature/Feature>|inlined.7
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/featureConfiguration/FeaturePrerequisites>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/@devcycle/assemblyscript-json/assembly/JSON/Value%2Ci32%2C~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>%29=>assembly/types/target/Target>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/testHelpers/TestData>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  call $~lib/array/Array<assembly/testHelpers/TestData>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28assembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%2Cassembly/helpers/arrayHelpers/SortingArrayItem<assembly/testHelpers/TestData>%29=>i32>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/function/Function<%28~lib/assemblyscript-regex/assembly/parser/node/Node%2Ci32%2C~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>%29=>~lib/assemblyscript-regex/assembly/parser/node/Node>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~start
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  call $start:assembly/index
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor
  global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#constructor
  global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
  i32.const 0
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#constructor
  global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 5072
   i32.const 5120
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/object/Object#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/staticarray/StaticArray<i32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 5072
   i32.const 6000
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 18
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/string/String.fromCharCode (param $unit i32) (param $surr i32) (result i32)
  (local $hasSur i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $surr
  i32.const 0
  i32.gt_s
  local.set $hasSur
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  local.get $hasSur
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $unit
  i32.store16 $0
  local.get $hasSur
  if
   local.get $out
   local.get $surr
   i32.store16 $0 offset=2
  end
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/util/number/itoa32 (param $value i32) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|8 i32)
  (local $buffer|9 i32)
  (local $num|10 i32)
  (local $offset|11 i32)
  (local $val32 i32)
  (local $decimals|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 7616
   i32.const 7744
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 7808
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $value
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   local.get $sign
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.get $sign
   i32.add
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|8
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|8
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|9
    local.get $value
    local.set $num|10
    local.get $decimals|8
    local.set $offset|11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|9
    local.get $num|10
    i64.extend_i32_u
    local.get $offset|11
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.set $val32
    local.get $val32
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.get $val32
    i64.extend_i32_u
    local.get $decimals|13
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16 $0
  end
  local.get $out
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $assembly/managers/platformDataManager/_getPlatformData (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/managers/platformDataManager/_platformData
  i32.const 0
  i32.eq
  if
   i32.const 11408
   i32.const 11488
   i32.const 11
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  else
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/managers/platformDataManager/_platformData
   local.tee $0
   i32.store $0
   local.get $0
   if (result i32)
    local.get $0
   else
    i32.const 7088
    i32.const 11488
    i32.const 13
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  unreachable
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $buf i32) (param $len i32) (param $nullTerminated i32) (result i32)
  (local $bufOff i32)
  (local $bufEnd i32)
  (local $str i32)
  (local $strOff i32)
  (local $u0 i32)
  (local $u1 i32)
  (local $u2 i32)
  (local $lo i32)
  (local $hi i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buf
  local.set $bufOff
  local.get $buf
  local.get $len
  i32.add
  local.set $bufEnd
  local.get $bufEnd
  local.get $bufOff
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 11664
   i32.const 770
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $str
  i32.store $0
  local.get $str
  local.set $strOff
  block $while-break|0
   loop $while-continue|0
    local.get $bufOff
    local.get $bufEnd
    i32.lt_u
    if
     local.get $bufOff
     i32.load8_u $0
     local.set $u0
     local.get $bufOff
     i32.const 1
     i32.add
     local.set $bufOff
     local.get $u0
     i32.const 128
     i32.and
     i32.eqz
     if
      local.get $nullTerminated
      local.get $u0
      i32.eqz
      i32.and
      if
       br $while-break|0
      end
      local.get $strOff
      local.get $u0
      i32.store16 $0
     else
      local.get $bufEnd
      local.get $bufOff
      i32.eq
      if
       br $while-break|0
      end
      local.get $bufOff
      i32.load8_u $0
      i32.const 63
      i32.and
      local.set $u1
      local.get $bufOff
      i32.const 1
      i32.add
      local.set $bufOff
      local.get $u0
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $strOff
       local.get $u0
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       local.get $u1
       i32.or
       i32.store16 $0
      else
       local.get $bufEnd
       local.get $bufOff
       i32.eq
       if
        br $while-break|0
       end
       local.get $bufOff
       i32.load8_u $0
       i32.const 63
       i32.and
       local.set $u2
       local.get $bufOff
       i32.const 1
       i32.add
       local.set $bufOff
       local.get $u0
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $u0
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $u1
        i32.const 6
        i32.shl
        i32.or
        local.get $u2
        i32.or
        local.set $u0
       else
        local.get $bufEnd
        local.get $bufOff
        i32.eq
        if
         br $while-break|0
        end
        local.get $u0
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $u1
        i32.const 12
        i32.shl
        i32.or
        local.get $u2
        i32.const 6
        i32.shl
        i32.or
        local.get $bufOff
        i32.load8_u $0
        i32.const 63
        i32.and
        i32.or
        local.set $u0
        local.get $bufOff
        i32.const 1
        i32.add
        local.set $bufOff
       end
       local.get $u0
       i32.const 65536
       i32.lt_u
       if
        local.get $strOff
        local.get $u0
        i32.store16 $0
       else
        local.get $u0
        i32.const 65536
        i32.sub
        local.set $u0
        local.get $u0
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.set $lo
        local.get $u0
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        local.set $hi
        local.get $strOff
        local.get $lo
        local.get $hi
        i32.const 16
        i32.shl
        i32.or
        i32.store $0
        local.get $strOff
        i32.const 2
        i32.add
        local.set $strOff
       end
      end
     end
     local.get $strOff
     i32.const 2
     i32.add
     local.set $strOff
     br $while-continue|0
    end
   end
  end
  local.get $str
  local.get $strOff
  local.get $str
  i32.sub
  call $~lib/rt/itcms/__renew
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/string/String.fromCodePoint (param $code i32) (result i32)
  (local $hasSur i32)
  (local $out i32)
  (local $hi i32)
  (local $lo i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $code
  i32.const 65535
  i32.gt_u
  local.set $hasSur
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  local.get $hasSur
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $hasSur
  i32.eqz
  if
   local.get $out
   local.get $code
   i32.store16 $0
  else
   local.get $code
   i32.const 1114111
   i32.le_u
   i32.eqz
   if
    i32.const 0
    i32.const 11664
    i32.const 39
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $code
   i32.const 65536
   i32.sub
   local.set $code
   local.get $code
   i32.const 1023
   i32.and
   i32.const 56320
   i32.or
   local.set $hi
   local.get $code
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.or
   local.set $lo
   local.get $out
   local.get $lo
   local.get $hi
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
  end
  local.get $out
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/number/dtoa (param $value f64) (result i32)
  (local $size i32)
  (local $result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  f64.const 0
  f64.eq
  if
   i32.const 15712
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $value
   local.get $value
   f64.ne
   if
    i32.const 15744
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 15776
   i32.const 15824
   local.get $value
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 15856
  local.get $value
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  local.get $result
  i32.const 15856
  local.get $size
  memory.copy $0 $0
  local.get $result
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Null
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/number/utoa32 (param $value i32) (param $radix i32) (result i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|7 i32)
  (local $buffer|8 i32)
  (local $num|9 i32)
  (local $offset|10 i32)
  (local $decimals|11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 7616
   i32.const 7744
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 7808
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|7
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|7
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $buffer|8
    local.get $value
    local.set $num|9
    local.get $decimals|7
    local.set $offset|10
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|8
    local.get $num|9
    i64.extend_i32_u
    local.get $offset|10
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|11
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|11
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $value
    i64.extend_i32_u
    local.get $decimals|11
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNum (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $1
  i32.store $0
  local.get $1
  i32.eqz
  if (result i32)
   i32.const 0
  else
   local.get $1
   call $~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/number/itoa64 (param $value i64) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $val32 i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|9 i32)
  (local $buffer|10 i32)
  (local $num|11 i64)
  (local $offset|12 i32)
  (local $decimals|13 i32)
  (local $buffer|14 i32)
  (local $num|15 i64)
  (local $offset|16 i32)
  (local $decimals|17 i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 7616
   i32.const 7744
   i32.const 431
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 7808
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  local.get $value
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i64.const 0
   local.get $value
   i64.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $value
    i32.wrap_i64
    local.set $val32
    local.get $val32
    call $~lib/util/number/decimalCount32
    local.set $decimals
    global.get $~lib/memory/__stack_pointer
    local.get $decimals
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer
    local.get $val32
    local.set $num
    local.get $decimals
    local.set $offset
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer
    local.get $num
    local.get $offset
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $value
    call $~lib/util/number/decimalCount64High
    local.set $decimals|9
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|9
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|10
    local.get $value
    local.set $num|11
    local.get $decimals|9
    local.set $offset|12
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|10
    local.get $num|11
    local.get $offset|12
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $value
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|14
    local.get $value
    local.set $num|15
    local.get $decimals|13
    local.set $offset|16
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|14
    local.get $num|15
    local.get $offset|16
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|17
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|17
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.get $value
    local.get $decimals|17
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16 $0
  end
  local.get $out
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
  return
 )
 (func $export:assembly/index/generateBoundedHashesFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/generateBoundedHashesFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/index/generateBucketedConfigForUser (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/generateBucketedConfigForUser
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/index/generateBucketedConfigForUserUTF8 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/generateBucketedConfigForUserUTF8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/index/generateBucketedConfigForUserWithOverrides (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/index/generateBucketedConfigForUserWithOverrides
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/index/variableForUser_PB_Preallocated (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/index/variableForUser_PB_Preallocated
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/index/variableForUser_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/variableForUser_PB
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/index/variableForUser (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/index/variableForUser
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/index/variableForUserPreallocated (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/index/variableForUserPreallocated
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/index/setPlatformData (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/setPlatformData
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setPlatformDataUTF8 (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/setPlatformDataUTF8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/clearPlatformData@varargs (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/clearPlatformData@varargs
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigDataUTF8Preallocated (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/index/setConfigDataUTF8Preallocated
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigDataUTF8 (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/setConfigDataUTF8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigData (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/setConfigData
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigDataWithEtag (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/index/setConfigDataWithEtag
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/hasConfigDataForEtag (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/hasConfigDataForEtag
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/index/setClientCustomData (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/setClientCustomData
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setClientCustomDataUTF8 (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/setClientCustomDataUTF8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/getSDKKeyFromConfig (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/getSDKKeyFromConfig
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/index/getConfigMetadata (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/getConfigMetadata
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/helpers/murmurhash/murmurhashV3
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3_js (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/helpers/murmurhash/murmurhashV3_js
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/managers/eventQueueManager/initEventQueue (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/initEventQueue
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/flushEventQueue (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/managers/eventQueueManager/flushEventQueue
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/managers/eventQueueManager/onPayloadSuccess (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/managers/eventQueueManager/onPayloadSuccess
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/onPayloadFailure (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/onPayloadFailure
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueEvent (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/queueEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueAggregateEvent (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/queueAggregateEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/cleanupEventQueue (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/managers/eventQueueManager/cleanupEventQueue
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/eventQueueSize (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/managers/eventQueueManager/eventQueueSize
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testVariableForUserParams_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testVariableForUserParams_PB
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testDVCUser_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testDVCUser_PB
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testSDKVariable_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testSDKVariable_PB
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/checkNumbersFilterFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/checkNumbersFilterFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/checkVersionFiltersFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/checkVersionFiltersFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/checkCustomDataFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/checkCustomDataFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/evaluateOperatorFromJSON@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/testHelpers/evaluateOperatorFromJSON@varargs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/testHelpers/decideTargetVariationFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/testHelpers/decideTargetVariationFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/doesUserPassRolloutFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/testHelpers/doesUserPassRolloutFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/testConfigBodyClass@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/testConfigBodyClass@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/testConfigBodyClassFromUTF8@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/testConfigBodyClassFromUTF8@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/testConfigBodyV2Class@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/testConfigBodyV2Class@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/testHelpers/testDVCUserClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testDVCUserClass
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testDVCUserClassFromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testDVCUserClassFromUTF8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testBucketedUserConfigClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/testBucketedUserConfigClass
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/echoString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/echoString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/echoUint8Array (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/testHelpers/echoUint8Array
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/testHelpers/testSortObjectsByString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/testSortObjectsByString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/types/eventQueueOptions/testEventQueueOptionsClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/eventQueueOptions/testEventQueueOptionsClass
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/types/dvcEvent/testDVCEventClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/dvcEvent/testDVCEventClass
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/types/dvcEvent/testDVCRequestEventClass (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/types/dvcEvent/testDVCRequestEventClass
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/types/platformData/testPlatformDataClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/platformData/testPlatformDataClass
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/types/platformData/testPlatformDataClassFromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/platformData/testPlatformDataClassFromUTF8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
)
