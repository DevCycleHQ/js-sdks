(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i32_i32_=>_f64 (func (param i32 i32 i32) (result f64)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $i64_i64_i32_i64_i32_=>_i32 (func (param i64 i64 i32 i64 i32) (result i32)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i32_i32_i32_i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 f64 i32 i32 i32 i32) (result i32)))
 (type $i32_=>_i64 (func (param i32) (result i64)))
 (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))
 (type $f64_i32_i32_=>_i32 (func (param f64 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $i32_i32_f64_i32_=>_i32 (func (param i32 i32 f64 i32) (result i32)))
 (type $i32_i32_i32_f64_i32_=>_i32 (func (param i32 i32 i32 f64 i32) (result i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i32_i32_i32_f64_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 f64 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 66548))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $assembly/managers/eventQueueManager/_requestPayloadMap (mut i32) (i32.const 0))
 (global $assembly/managers/eventQueueManager/_eventQueueMap (mut i32) (i32.const 0))
 (global $assembly/types/dvcEvent/EventTypes (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $assembly/eventQueue/eventQueue/EventTypesSet (mut i32) (i32.const 0))
 (global $assembly/managers/configDataManager/_configData (mut i32) (i32.const 0))
 (global $~lib/as-proto/assembly/Protobuf/WRITER (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $assembly/managers/configDataManager/_configMetadata (mut i32) (i32.const 0))
 (global $~lib/as-uuid/assembly/rng/poolPtr (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $assembly/managers/platformDataManager/_platformData (mut i32) (i32.const 0))
 (global $assembly/managers/clientCustomDataManager/_clientCustomData (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray (mut i32) (i32.const 0))
 (global $~lib/as-proto/assembly/Protobuf/READER (mut i32) (i32.const 0))
 (global $~lib/as-uuid/assembly/rng/rnds8Pool (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS (mut i32) (i32.const 0))
 (global $assembly/helpers/murmurhash/keyBuffer (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/date/_month (mut i32) (i32.const 0))
 (global $~lib/date/_day (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 32960))
 (global $assembly/index/VariableTypeStrings i32 (i32.const 11632))
 (global $assembly/index/VariableType.JSON i32 (i32.const 3))
 (global $assembly/index/VariableType.String i32 (i32.const 2))
 (global $assembly/index/VariableType.Number i32 (i32.const 1))
 (global $assembly/index/VariableType.Boolean i32 (i32.const 0))
 (global $assembly/helpers/murmurhash/murmurhashBufferSize i32 (i32.const 2000))
 (memory $0 100 10000)
 (data (i32.const 1036) "\1c")
 (data (i32.const 1048) "\02\00\00\00\06\00\00\00a\00n\00d")
 (data (i32.const 1068) "\1c")
 (data (i32.const 1080) "\02\00\00\00\04\00\00\00o\00r")
 (data (i32.const 1100) "\1c")
 (data (i32.const 1112) "\01\00\00\00\08\00\00\00 \04\00\00@\04")
 (data (i32.const 1132) ",")
 (data (i32.const 1144) "\04\00\00\00\10\00\00\00`\04\00\00`\04\00\00\08\00\00\00\02")
 (data (i32.const 1180) "\1c")
 (data (i32.const 1192) "\02\00\00\00\06\00\00\00a\00l\00l")
 (data (i32.const 1212) "\1c")
 (data (i32.const 1224) "\02\00\00\00\08\00\00\00u\00s\00e\00r")
 (data (i32.const 1244) "\1c")
 (data (i32.const 1256) "\02\00\00\00\n\00\00\00o\00p\00t\00I\00n")
 (data (i32.const 1276) ",")
 (data (i32.const 1288) "\02\00\00\00\1a\00\00\00a\00u\00d\00i\00e\00n\00c\00e\00M\00a\00t\00c\00h")
 (data (i32.const 1324) ",")
 (data (i32.const 1336) "\01\00\00\00\10\00\00\00\b0\04\00\00\d0\04\00\00\f0\04\00\00\10\05")
 (data (i32.const 1372) ",")
 (data (i32.const 1384) "\04\00\00\00\10\00\00\00@\05\00\00@\05\00\00\10\00\00\00\04")
 (data (i32.const 1420) ",")
 (data (i32.const 1432) "\02\00\00\00\0e\00\00\00u\00s\00e\00r\00_\00i\00d")
 (data (i32.const 1468) "\1c")
 (data (i32.const 1480) "\02\00\00\00\n\00\00\00e\00m\00a\00i\00l")
 (data (i32.const 1500) "\1c")
 (data (i32.const 1512) "\02\00\00\00\04\00\00\00i\00p")
 (data (i32.const 1532) ",")
 (data (i32.const 1544) "\02\00\00\00\0e\00\00\00c\00o\00u\00n\00t\00r\00y")
 (data (i32.const 1580) ",")
 (data (i32.const 1592) "\02\00\00\00\10\00\00\00p\00l\00a\00t\00f\00o\00r\00m")
 (data (i32.const 1628) "<")
 (data (i32.const 1640) "\02\00\00\00\1e\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 1692) ",")
 (data (i32.const 1704) "\02\00\00\00\14\00\00\00a\00p\00p\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 1740) ",")
 (data (i32.const 1752) "\02\00\00\00\16\00\00\00d\00e\00v\00i\00c\00e\00M\00o\00d\00e\00l")
 (data (i32.const 1788) ",")
 (data (i32.const 1800) "\02\00\00\00\14\00\00\00c\00u\00s\00t\00o\00m\00D\00a\00t\00a")
 (data (i32.const 1836) "<")
 (data (i32.const 1848) "\01\00\00\00$\00\00\00\a0\05\00\00\d0\05\00\00\f0\05\00\00\10\06\00\00@\06\00\00p\06\00\00\b0\06\00\00\e0\06\00\00\10\07")
 (data (i32.const 1900) ",")
 (data (i32.const 1912) "\04\00\00\00\10\00\00\00@\07\00\00@\07\00\00$\00\00\00\t")
 (data (i32.const 1948) "\1c")
 (data (i32.const 1960) "\02\00\00\00\02\00\00\00=")
 (data (i32.const 1980) "\1c")
 (data (i32.const 1992) "\02\00\00\00\04\00\00\00!\00=")
 (data (i32.const 2012) "\1c")
 (data (i32.const 2024) "\02\00\00\00\02\00\00\00>")
 (data (i32.const 2044) "\1c")
 (data (i32.const 2056) "\02\00\00\00\04\00\00\00>\00=")
 (data (i32.const 2076) "\1c")
 (data (i32.const 2088) "\02\00\00\00\02\00\00\00<")
 (data (i32.const 2108) "\1c")
 (data (i32.const 2120) "\02\00\00\00\04\00\00\00<\00=")
 (data (i32.const 2140) "\1c")
 (data (i32.const 2152) "\02\00\00\00\n\00\00\00e\00x\00i\00s\00t")
 (data (i32.const 2172) "\1c")
 (data (i32.const 2184) "\02\00\00\00\0c\00\00\00!\00e\00x\00i\00s\00t")
 (data (i32.const 2204) ",")
 (data (i32.const 2216) "\02\00\00\00\0e\00\00\00c\00o\00n\00t\00a\00i\00n")
 (data (i32.const 2252) ",")
 (data (i32.const 2264) "\02\00\00\00\10\00\00\00!\00c\00o\00n\00t\00a\00i\00n")
 (data (i32.const 2300) ",")
 (data (i32.const 2312) "\02\00\00\00\12\00\00\00s\00t\00a\00r\00t\00W\00i\00t\00h")
 (data (i32.const 2348) ",")
 (data (i32.const 2360) "\02\00\00\00\14\00\00\00!\00s\00t\00a\00r\00t\00W\00i\00t\00h")
 (data (i32.const 2396) ",")
 (data (i32.const 2408) "\02\00\00\00\0e\00\00\00e\00n\00d\00W\00i\00t\00h")
 (data (i32.const 2444) ",")
 (data (i32.const 2456) "\02\00\00\00\10\00\00\00!\00e\00n\00d\00W\00i\00t\00h")
 (data (i32.const 2492) "L")
 (data (i32.const 2504) "\01\00\00\008\00\00\00\b0\07\00\00\d0\07\00\00\f0\07\00\00\10\08\00\000\08\00\00P\08\00\00p\08\00\00\90\08\00\00\b0\08\00\00\e0\08\00\00\10\t\00\00@\t\00\00p\t\00\00\a0\t")
 (data (i32.const 2572) ",")
 (data (i32.const 2584) "\04\00\00\00\10\00\00\00\d0\t\00\00\d0\t\00\008\00\00\00\0e")
 (data (i32.const 2620) "\1c")
 (data (i32.const 2632) "\01\00\00\00\08\00\00\00\b0\07\00\00\d0\07")
 (data (i32.const 2652) ",")
 (data (i32.const 2664) "\04\00\00\00\10\00\00\00P\n\00\00P\n\00\00\08\00\00\00\02")
 (data (i32.const 2700) "\1c")
 (data (i32.const 2712) "\02\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g")
 (data (i32.const 2732) ",")
 (data (i32.const 2744) "\02\00\00\00\0e\00\00\00B\00o\00o\00l\00e\00a\00n")
 (data (i32.const 2780) "\1c")
 (data (i32.const 2792) "\02\00\00\00\0c\00\00\00N\00u\00m\00b\00e\00r")
 (data (i32.const 2812) "\1c")
 (data (i32.const 2824) "\01\00\00\00\0c\00\00\00\a0\n\00\00\c0\n\00\00\f0\n")
 (data (i32.const 2844) ",")
 (data (i32.const 2856) "\04\00\00\00\10\00\00\00\10\0b\00\00\10\0b\00\00\0c\00\00\00\03")
 (data (i32.const 2892) ",")
 (data (i32.const 2904) "\02\00\00\00\10\00\00\00s\00c\00h\00e\00d\00u\00l\00e")
 (data (i32.const 2940) ",")
 (data (i32.const 2952) "\02\00\00\00\0e\00\00\00g\00r\00a\00d\00u\00a\00l")
 (data (i32.const 2988) ",")
 (data (i32.const 3000) "\02\00\00\00\0e\00\00\00s\00t\00e\00p\00p\00e\00d")
 (data (i32.const 3036) "\1c")
 (data (i32.const 3048) "\01\00\00\00\0c\00\00\00`\0b\00\00\90\0b\00\00\c0\0b")
 (data (i32.const 3068) ",")
 (data (i32.const 3080) "\04\00\00\00\10\00\00\00\f0\0b\00\00\f0\0b\00\00\0c\00\00\00\03")
 (data (i32.const 3116) "\1c")
 (data (i32.const 3128) "\02\00\00\00\0c\00\00\00l\00i\00n\00e\00a\00r")
 (data (i32.const 3148) ",")
 (data (i32.const 3160) "\02\00\00\00\10\00\00\00d\00i\00s\00c\00r\00e\00t\00e")
 (data (i32.const 3196) "\1c")
 (data (i32.const 3208) "\01\00\00\00\08\00\00\00@\0c\00\00`\0c")
 (data (i32.const 3228) ",")
 (data (i32.const 3240) "\04\00\00\00\10\00\00\00\90\0c\00\00\90\0c\00\00\08\00\00\00\02")
 (data (i32.const 3276) "\1c")
 (data (i32.const 3288) "\01\00\00\00\08\00\00\00\b0\07\00\00\d0\07")
 (data (i32.const 3308) ",")
 (data (i32.const 3320) "\04\00\00\00\10\00\00\00\e0\0c\00\00\e0\0c\00\00\08\00\00\00\02")
 (data (i32.const 3356) ",")
 (data (i32.const 3368) "\02\00\00\00\0e\00\00\00r\00e\00l\00e\00a\00s\00e")
 (data (i32.const 3404) ",")
 (data (i32.const 3416) "\02\00\00\00\14\00\00\00e\00x\00p\00e\00r\00i\00m\00e\00n\00t")
 (data (i32.const 3452) ",")
 (data (i32.const 3464) "\02\00\00\00\14\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n")
 (data (i32.const 3500) "\1c")
 (data (i32.const 3512) "\02\00\00\00\06\00\00\00o\00p\00s")
 (data (i32.const 3532) ",")
 (data (i32.const 3544) "\01\00\00\00\10\00\00\000\r\00\00`\r\00\00\90\r\00\00\c0\r")
 (data (i32.const 3580) ",")
 (data (i32.const 3592) "\04\00\00\00\10\00\00\00\e0\r\00\00\e0\r\00\00\10\00\00\00\04")
 (data (i32.const 3628) "\1c")
 (data (i32.const 3640) "\02\00\00\00\08\00\00\00J\00S\00O\00N")
 (data (i32.const 3660) ",")
 (data (i32.const 3672) "\01\00\00\00\10\00\00\00\a0\n\00\00\c0\n\00\00\f0\n\00\00@\0e")
 (data (i32.const 3708) ",")
 (data (i32.const 3720) "\04\00\00\00\10\00\00\00`\0e\00\00`\0e\00\00\10\00\00\00\04")
 (data (i32.const 3756) ",")
 (data (i32.const 3768) "\02\00\00\00\1c\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00C\00O\00N\00F\00I\00G")
 (data (i32.const 3804) "<")
 (data (i32.const 3816) "\02\00\00\00 \00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00B\00L\00E")
 (data (i32.const 3868) "<")
 (data (i32.const 3880) "\02\00\00\00\1e\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00F\00E\00A\00T\00U\00R\00E")
 (data (i32.const 3932) "<")
 (data (i32.const 3944) "\02\00\00\00\"\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00T\00I\00O\00N")
 (data (i32.const 3996) "L")
 (data (i32.const 4008) "\02\00\00\00<\00\00\00M\00I\00S\00S\00I\00N\00G\00_\00V\00A\00R\00I\00A\00B\00L\00E\00_\00F\00O\00R\00_\00V\00A\00R\00I\00A\00T\00I\00O\00N")
 (data (i32.const 4076) "<")
 (data (i32.const 4088) "\02\00\00\00&\00\00\00U\00S\00E\00R\00_\00N\00O\00T\00_\00I\00N\00_\00R\00O\00L\00L\00O\00U\00T")
 (data (i32.const 4140) "<")
 (data (i32.const 4152) "\02\00\00\00\"\00\00\00U\00S\00E\00R\00_\00N\00O\00T\00_\00T\00A\00R\00G\00E\00T\00E\00D")
 (data (i32.const 4204) "<")
 (data (i32.const 4216) "\02\00\00\00*\00\00\00I\00N\00V\00A\00L\00I\00D\00_\00V\00A\00R\00I\00A\00B\00L\00E\00_\00T\00Y\00P\00E")
 (data (i32.const 4268) ",")
 (data (i32.const 4280) "\02\00\00\00\0e\00\00\00U\00N\00K\00N\00O\00W\00N")
 (data (i32.const 4316) "<")
 (data (i32.const 4328) "\02\00\00\00\1e\00\00\00T\00A\00R\00G\00E\00T\00I\00N\00G\00_\00M\00A\00T\00C\00H")
 (data (i32.const 4380) "\1c")
 (data (i32.const 4392) "\02\00\00\00\n\00\00\00S\00P\00L\00I\00T")
 (data (i32.const 4412) ",")
 (data (i32.const 4424) "\02\00\00\00\0e\00\00\00D\00E\00F\00A\00U\00L\00T")
 (data (i32.const 4460) ",")
 (data (i32.const 4472) "\02\00\00\00\10\00\00\00D\00I\00S\00A\00B\00L\00E\00D")
 (data (i32.const 4508) "\1c")
 (data (i32.const 4520) "\02\00\00\00\n\00\00\00E\00R\00R\00O\00R")
 (data (i32.const 4540) ",")
 (data (i32.const 4552) "\02\00\00\00\10\00\00\00O\00V\00E\00R\00R\00I\00D\00E")
 (data (i32.const 4588) "\1c")
 (data (i32.const 4600) "\02\00\00\00\0c\00\00\00O\00P\00T\00_\00I\00N")
 (data (i32.const 4620) ",")
 (data (i32.const 4632) "\02\00\00\00\12\00\00\00A\00l\00l\00 \00U\00s\00e\00r\00s")
 (data (i32.const 4668) ",")
 (data (i32.const 4680) "\02\00\00\00\1c\00\00\00A\00u\00d\00i\00e\00n\00c\00e\00 \00M\00a\00t\00c\00h")
 (data (i32.const 4716) "<")
 (data (i32.const 4728) "\02\00\00\00\1e\00\00\00N\00o\00t\00 \00i\00n\00 \00A\00u\00d\00i\00e\00n\00c\00e")
 (data (i32.const 4780) "\1c")
 (data (i32.const 4792) "\02\00\00\00\0c\00\00\00O\00p\00t\00-\00I\00n")
 (data (i32.const 4812) ",")
 (data (i32.const 4824) "\02\00\00\00\14\00\00\00N\00o\00t\00 \00O\00p\00t\00-\00I\00n")
 (data (i32.const 4860) ",")
 (data (i32.const 4872) "\02\00\00\00\10\00\00\00O\00v\00e\00r\00r\00i\00d\00e")
 (data (i32.const 4908) "<")
 (data (i32.const 4920) "\02\00\00\00&\00\00\00R\00a\00n\00d\00o\00m\00 \00D\00i\00s\00t\00r\00i\00b\00u\00t\00i\00o\00n")
 (data (i32.const 4972) ",")
 (data (i32.const 4984) "\02\00\00\00\0e\00\00\00R\00o\00l\00l\00o\00u\00t")
 (data (i32.const 5020) ",")
 (data (i32.const 5032) "\02\00\00\00\0e\00\00\00U\00s\00e\00r\00 \00I\00D")
 (data (i32.const 5068) "\1c")
 (data (i32.const 5080) "\02\00\00\00\n\00\00\00E\00m\00a\00i\00l")
 (data (i32.const 5100) ",")
 (data (i32.const 5112) "\02\00\00\00\0e\00\00\00C\00o\00u\00n\00t\00r\00y")
 (data (i32.const 5148) ",")
 (data (i32.const 5160) "\02\00\00\00\10\00\00\00P\00l\00a\00t\00f\00o\00r\00m")
 (data (i32.const 5196) "<")
 (data (i32.const 5208) "\02\00\00\00 \00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 5260) ",")
 (data (i32.const 5272) "\02\00\00\00\16\00\00\00A\00p\00p\00 \00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 5308) ",")
 (data (i32.const 5320) "\02\00\00\00\18\00\00\00D\00e\00v\00i\00c\00e\00 \00M\00o\00d\00e\00l")
 (data (i32.const 5356) ",")
 (data (i32.const 5368) "\02\00\00\00\16\00\00\00C\00u\00s\00t\00o\00m\00 \00D\00a\00t\00a")
 (data (i32.const 5404) ",")
 (data (i32.const 5416) "\01\00\00\00\10\00\00\00\b0\04\00\00\d0\04\00\00\f0\04\00\00\10\05")
 (data (i32.const 5452) ",")
 (data (i32.const 5464) "\04\00\00\00\10\00\00\000\15\00\000\15\00\00\10\00\00\00\04")
 (data (i32.const 5500) "<")
 (data (i32.const 5512) "\01\00\00\00$\00\00\00\a0\05\00\00\d0\05\00\00\f0\05\00\00\10\06\00\00@\06\00\00p\06\00\00\b0\06\00\00\e0\06\00\00\10\07")
 (data (i32.const 5564) ",")
 (data (i32.const 5576) "\04\00\00\00\10\00\00\00\90\15\00\00\90\15\00\00$\00\00\00\t")
 (data (i32.const 5612) "L")
 (data (i32.const 5624) "\01\00\00\008\00\00\00\b0\07\00\00\d0\07\00\00\f0\07\00\00\10\08\00\000\08\00\00P\08\00\00p\08\00\00\90\08\00\00\b0\08\00\00\e0\08\00\00\10\t\00\00@\t\00\00p\t\00\00\a0\t")
 (data (i32.const 5692) ",")
 (data (i32.const 5704) "\04\00\00\00\10\00\00\00\00\16\00\00\00\16\00\008\00\00\00\0e")
 (data (i32.const 5740) "\1c")
 (data (i32.const 5752) "\01\00\00\00\08\00\00\00\b0\07\00\00\d0\07")
 (data (i32.const 5772) ",")
 (data (i32.const 5784) "\04\00\00\00\10\00\00\00\80\16\00\00\80\16\00\00\08\00\00\00\02")
 (data (i32.const 5820) "\1c")
 (data (i32.const 5832) "\01\00\00\00\0c\00\00\00\a0\n\00\00\c0\n\00\00\f0\n")
 (data (i32.const 5852) ",")
 (data (i32.const 5864) "\04\00\00\00\10\00\00\00\d0\16\00\00\d0\16\00\00\0c\00\00\00\03")
 (data (i32.const 5900) "\1c")
 (data (i32.const 5912) "\01\00\00\00\08\00\00\00\b0\07\00\00\d0\07")
 (data (i32.const 5932) ",")
 (data (i32.const 5944) "\04\00\00\00\10\00\00\00 \17\00\00 \17\00\00\08\00\00\00\02")
 (data (i32.const 5980) ",")
 (data (i32.const 5992) "\01\00\00\00\10\00\00\000\r\00\00`\r\00\00\90\r\00\00\c0\r")
 (data (i32.const 6028) ",")
 (data (i32.const 6040) "\04\00\00\00\10\00\00\00p\17\00\00p\17\00\00\10\00\00\00\04")
 (data (i32.const 6076) ",")
 (data (i32.const 6088) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 6124) "<")
 (data (i32.const 6136) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data (i32.const 6188) "<")
 (data (i32.const 6200) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 6252) "<")
 (data (i32.const 6264) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 6380) "<")
 (data (i32.const 6392) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 6444) ",")
 (data (i32.const 6456) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 6524) "<")
 (data (i32.const 6536) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 6588) "0123456789abcdef")
 (data (i32.const 6604) "<")
 (data (i32.const 6616) "\02\00\00\00\"\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00E\00v\00a\00l\00u\00a\00t\00e\00d")
 (data (i32.const 6668) "<")
 (data (i32.const 6680) "\02\00\00\00(\00\00\00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00E\00v\00a\00l\00u\00a\00t\00e\00d")
 (data (i32.const 6732) "<")
 (data (i32.const 6744) "\02\00\00\00\"\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d")
 (data (i32.const 6796) "<")
 (data (i32.const 6808) "\02\00\00\00(\00\00\00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d")
 (data (i32.const 6860) ",")
 (data (i32.const 6872) "\02\00\00\00\12\00\00\00s\00d\00k\00C\00o\00n\00f\00i\00g")
 (data (i32.const 6908) "\1c")
 (data (i32.const 6920) "\01")
 (data (i32.const 6940) "\1c")
 (data (i32.const 6952) "\01")
 (data (i32.const 6972) "\1c")
 (data (i32.const 6984) "\01")
 (data (i32.const 7004) "<")
 (data (i32.const 7016) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 7068) "\1c")
 (data (i32.const 7080) "\02\00\00\00\02\00\00\00.")
 (data (i32.const 7100) ",")
 (data (i32.const 7112) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 7148) "\1c")
 (data (i32.const 7160) "\02")
 (data (i32.const 7180) ",")
 (data (i32.const 7192) "\02\00\00\00\1a\00\00\00i\00n\00v\00a\00l\00i\00d\00 \00t\00o\00k\00e\00n")
 (data (i32.const 7228) "|")
 (data (i32.const 7240) "\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00p\00a\00r\00s\00e\00r\00.\00t\00s")
 (data (i32.const 7356) "|")
 (data (i32.const 7368) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data (i32.const 7484) ",")
 (data (i32.const 7496) "\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data (i32.const 7532) "l")
 (data (i32.const 7544) "\02\00\00\00N\00\00\00T\00h\00e\00 \00p\00r\00e\00c\00e\00d\00i\00n\00g\00 \00t\00o\00k\00e\00n\00 \00i\00s\00 \00n\00o\00t\00 \00q\00u\00a\00n\00t\00i\00f\00i\00a\00b\00l\00e")
 (data (i32.const 7644) "|")
 (data (i32.const 7656) "\02\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00n\00o\00d\00e\00.\00t\00s")
 (data (i32.const 7772) "l")
 (data (i32.const 7784) "\02\00\00\00Z\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00r\00e\00g\00u\00l\00a\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00:\00 \00N\00o\00t\00h\00i\00n\00g\00 \00t\00o\00 \00r\00e\00p\00e\00a\00t")
 (data (i32.const 7884) "L")
 (data (i32.const 7896) "\02\00\00\008\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s")
 (data (i32.const 7964) "\1c")
 (data (i32.const 7976) "\02\00\00\00\02\00\00\00g")
 (data (i32.const 7996) "\1c")
 (data (i32.const 8008) "\02\00\00\00\02\00\00\00i")
 (data (i32.const 8028) "\1c")
 (data (i32.const 8040) "\02\00\00\00\02\00\00\00s")
 (data (i32.const 8060) "\1c")
 (data (i32.const 8072) "\02\00\00\00\02\00\00\00m")
 (data (i32.const 8092) "|")
 (data (i32.const 8104) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data (i32.const 8220) "l")
 (data (i32.const 8232) "\02\00\00\00X\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00r\00e\00g\00e\00x\00p\00.\00t\00s")
 (data (i32.const 8332) "<")
 (data (i32.const 8344) "\02\00\00\00 \00\00\00i\00n\00v\00a\00l\00i\00d\00 \00d\00o\00w\00n\00c\00a\00s\00t")
 (data (i32.const 8396) "|")
 (data (i32.const 8408) "\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00w\00a\00l\00k\00e\00r\00.\00t\00s")
 (data (i32.const 8524) "\\")
 (data (i32.const 8536) "\02\00\00\00D\00\00\00C\00a\00n\00n\00o\00t\00 \00h\00a\00n\00d\00l\00e\00 \00r\00a\00n\00g\00e\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00s\00 \00>\00 ")
 (data (i32.const 8620) "|")
 (data (i32.const 8632) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 8748) "<")
 (data (i32.const 8760) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 8812) "\1c")
 (data (i32.const 8824) "\02\00\00\00\02\00\00\000")
 (data (i32.const
 (data (i32.const 9244) "\1c\04")
 (data (i32.const 9256) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data (i32.const 10300) "\\")
 (data (i32.const 10312) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 10396) "l")
 (data (i32.const 10408) "\02\00\00\00T\00\00\00r\00e\00p\00l\00a\00c\00e\00 \00n\00o\00t\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e")
 (data (i32.const 10508) "\1c")
 (data (i32.const 10520) ",\00\00\00\08\00\00\00\01")
 (data (i32.const 10540) "\1c")
 (data (i32.const 10552) "\01")
 (data (i32.const 10572) "l")
 (data (i32.const 10584) "\02\00\00\00Z\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00n\00f\00a\00.\00t\00s")
 (data (i32.const 10684) "L")
 (data (i32.const 10696) "\02\00\00\002\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00 \00-\00 ")
 (data (i32.const 10764) "|")
 (data (i32.const 10776) "\02\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00m\00a\00t\00c\00h\00e\00r\00.\00t\00s")
 (data (i32.const 10892) "l")
 (data (i32.const 10904) "\02\00\00\00T\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e\00 \00w\00i\00t\00h\00i\00n\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00s\00e\00t")
 (data (i32.const 11004) "\1c")
 (data (i32.const 11016) "7\00\00\00\08\00\00\00\02")
 (data (i32.const 11036) "<")
 (data (i32.const 11048) "\02\00\00\00,\00\00\00u\00n\00-\00r\00e\00c\00o\00g\00n\00i\00s\00e\00d\00 \00A\00S\00T\00 \00n\00o\00d\00e")
 (data (i32.const 11100) "\1c")
 (data (i32.const 11112) ";\00\00\00\08\00\00\00\03")
 (data (i32.const 11132) "\1c")
 (data (i32.const 11144) "\01")
 (data (i32.const 11164) ",")
 (data (i32.const 11176) "\02\00\00\00\1c\00\00\00^\00\\\00d\00+\00[\00A\00-\00Z\00a\00-\00z\00]\00*\00$")
 (data (i32.const 11212) "\1c")
 (data (i32.const 11224) "\02\00\00\00\n\00\00\00^\00\\\00d\00+\00$")
 (data (i32.const 11244) "\1c")
 (data (i32.const 11256) "\01")
 (data (i32.const 11276) "\1c")
 (data (i32.const 11288) "\01")
 (data (i32.const 11308) "\1c")
 (data (i32.const 11320) "=\00\00\00\08\00\00\00\04")
 (data (i32.const 11340) "\1c")
 (data (i32.const 11352) "\01")
 (data (i32.const 11372) "\1c")
 (data (i32.const 11384) "\01")
 (data (i32.const 11404) "\1c")
 (data (i32.const 11416) "\01")
 (data (i32.const 11436) "\1c")
 (data (i32.const 11448) "?\00\00\00\08\00\00\00\05")
 (data (i32.const 11468) "\1c")
 (data (i32.const 11480) "?\00\00\00\08\00\00\00\06")
 (data (i32.const 11500) "\1c")
 (data (i32.const 11512) "@\00\00\00\08\00\00\00\07")
 (data (i32.const 11532) "\1c")
 (data (i32.const 11544) "\02\00\00\00\08\00\00\00n\00u\00l\00l")
 (data (i32.const 11564) ",")
 (data (i32.const 11576) "\01\00\00\00\10\00\00\00\c0\n\00\00\f0\n\00\00\a0\n\00\00@\0e")
 (data (i32.const 11612) ",")
 (data (i32.const 11624) "\04\00\00\00\10\00\00\00@-\00\00@-\00\00\10\00\00\00\04")
 (data (i32.const 11660) "\1c")
 (data (i32.const 11672) "\02\00\00\00\04\00\00\00\\\00u")
 (data (i32.const 11692) "\1c")
 (data (i32.const 11704) "\01")
 (data (i32.const 11724) ",")
 (data (i32.const 11736) "\02\00\00\00\10\00\00\00_\00r\00o\00l\00l\00o\00u\00t")
 (data (i32.const 11772) ",")
 (data (i32.const 11784) "\02\00\00\00\16\00\00\00r\00o\00l\00l\00o\00u\00t\00H\00a\00s\00h")
 (data (i32.const 11820) ",")
 (data (i32.const 11832) "\02\00\00\00\1a\00\00\00b\00u\00c\00k\00e\00t\00i\00n\00g\00H\00a\00s\00h")
 (data (i32.const 11868) "<")
 (data (i32.const 11880) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 11932) ",")
 (data (i32.const 11944) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data (i32.const 11980) "\1c")
 (data (i32.const 11992) "\02\00\00\00\02\00\00\00\"")
 (data (i32.const 12012) "\1c")
 (data (i32.const 12024) "\02\00\00\00\04\00\00\00\"\00:")
 (data (i32.const 12044) "\1c")
 (data (i32.const 12056) "\02\00\00\00\02\00\00\00{")
 (data (i32.const 12076) "\1c")
 (data (i32.const 12088) "\02\00\00\00\02\00\00\00,")
 (data (i32.const 12108) "\1c")
 (data (i32.const 12120) "\02\00\00\00\02\00\00\00}")
 (data (i32.const 12140) "L")
 (data (i32.const 12152) "\02\00\00\00.\00\00\00C\00o\00n\00f\00i\00g\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.")
 (data (i32.const 12220) "\\")
 (data (i32.const 12232) "\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00c\00o\00n\00f\00i\00g\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 12316) ",")
 (data (i32.const 12328) "\02\00\00\00\18\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00D\00a\00t\00e")
 (data (i32.const 12364) ",")
 (data (i32.const 12376) "\02\00\00\00\18\00\00\00~\00l\00i\00b\00/\00d\00a\00t\00e\00.\00t\00s")
 (data (i32.const 12412) "L")
 (data (i32.const 12424) "\02\00\00\002\00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.")
 (data (i32.const 12492) "l")
 (data (i32.const 12504) "\02\00\00\00P\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 12604) "<")
 (data (i32.const 12616) "\02\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e")
 (data (i32.const 12668) ",")
 (data (i32.const 12680) "\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 12716) "<")
 (data (i32.const 12728) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 12780) "|")
 (data (i32.const 12792) "\02\00\00\00l\00\00\00~\00l\00i\00b\00/\00@\00d\00e\00v\00c\00y\00c\00l\00e\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s")
 (data (i32.const 12908) "<")
 (data (i32.const 12920) "\02\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d")
 (data (i32.const 12972) "|")
 (data (i32.const 12984) "\02\00\00\00f\00\00\00~\00l\00i\00b\00/\00@\00d\00e\00v\00c\00y\00c\00l\00e\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00J\00S\00O\00N\00.\00t\00s")
 (data (i32.const 13100) ",")
 (data (i32.const 13112) "\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'")
 (data (i32.const 13148) "L")
 (data (i32.const 13160) "\02\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g")
 (data (i32.const 13228) "L")
 (data (i32.const 13240) "\02\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r")
 (data (i32.const 13308) "\1c")
 (data (i32.const 13320) "\02\00\00\00\02\00\00\00\\")
 (data (i32.const 13340) "\1c")
 (data (i32.const 13352) "\02\00\00\00\02\00\00\00/")
 (data (i32.const 13372) "\1c")
 (data (i32.const 13384) "\02\00\00\00\02\00\00\00b")
 (data (i32.const 13404) "\1c")
 (data (i32.const 13416) "\02\00\00\00\02\00\00\00\08")
 (data (i32.const 13436) "\1c")
 (data (i32.const 13448) "\02\00\00\00\02\00\00\00n")
 (data (i32.const 13468) "\1c")
 (data (i32.const 13480) "\02\00\00\00\02\00\00\00\n")
 (data (i32.const 13500) "\1c")
 (data (i32.const 13512) "\02\00\00\00\02\00\00\00r")
 (data (i32.const 13532) "\1c")
 (data (i32.const 13544) "\02\00\00\00\02\00\00\00\r")
 (data (i32.const 13564) "\1c")
 (data (i32.const 13576) "\02\00\00\00\02\00\00\00t")
 (data (i32.const 13596) "\1c")
 (data (i32.const 13608) "\02\00\00\00\02\00\00\00\t")
 (data (i32.const 13628) "\1c")
 (data (i32.const 13640) "\02\00\00\00\02\00\00\00u")
 (data (i32.const 13660) "<")
 (data (i32.const 13672) "\02\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t")
 (data (i32.const 13724) "L")
 (data (i32.const 13736) "\02\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 ")
 (data (i32.const 13804) "\1c")
 (data (i32.const 13816) "\02\00\00\00\02\00\00\00:")
 (data (i32.const 13836) ",")
 (data (i32.const 13848) "\02\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'")
 (data (i32.const 13884) "L")
 (data (i32.const 13896) "\02\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t")
 (data (i32.const 13964) "\1c")
 (data (i32.const 13976) "\02\00\00\00\02\00\00\00[")
 (data (i32.const 13996) "\1c")
 (data (i32.const 14008) "\02\00\00\00\02\00\00\00]")
 (data (i32.const 14028) "L")
 (data (i32.const 14040) "\02\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y")
 (data (i32.const 14108) "\1c")
 (data (i32.const 14120) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data (i32.const 14140) ",")
 (data (i32.const 14152) "\02\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'")
 (data (i32.const 14188) "\1c")
 (data (i32.const 14200) "\02\00\00\00\02\00\00\00\'")
 (data (i32.const 14220) "\1c")
 (data (i32.const 14232) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data (i32.const 14252) "\1c")
 (data (i32.const 14264) "\02\00\00\00\04\00\00\00-\000")
 (data (i32.const 14294) "\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 14476) "<")
 (data (i32.const 14488) "\02\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N")
 (data (i32.const 14540) "l")
 (data (i32.const 14552) "\02\00\00\00N\00\00\00d\00v\00c\00U\00s\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 14652) "L")
 (data (i32.const 14664) "\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00d\00v\00c\00U\00s\00e\00r\00.\00t\00s")
 (data (i32.const 14732) "\8c")
 (data (i32.const 14744) "\02\00\00\00r\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00c\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s")
 (data (i32.const 14876) "<")
 (data (i32.const 14888) "\02\00\00\00\"\00\00\00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a")
 (data (i32.const 14940) "\9c")
 (data (i32.const 14952) "\02\00\00\00\80\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s")
 (data (i32.const 15100) "\\")
 (data (i32.const 15112) "\02\00\00\00>\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 15196) ",")
 (data (i32.const 15208) "\02\00\00\00\10\00\00\00\"\00,\00 \00o\00b\00j\00:\00 ")
 (data (i32.const 15244) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\10;\00\00\00\00\00\00p;")
 (data (i32.const 15292) "\\")
 (data (i32.const 15304) "\02\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00h\00e\00l\00p\00e\00r\00s\00/\00j\00s\00o\00n\00H\00e\00l\00p\00e\00r\00s\00.\00t\00s")
 (data (i32.const 15388) "\1c")
 (data (i32.const 15400) "\02\00\00\00\08\00\00\00n\00a\00m\00e")
 (data (i32.const 15420) ",")
 (data (i32.const 15432) "\02\00\00\00\10\00\00\00l\00a\00n\00g\00u\00a\00g\00e")
 (data (i32.const 15468) ",")
 (data (i32.const 15480) "\02\00\00\00\10\00\00\00a\00p\00p\00B\00u\00i\00l\00d")
 (data (i32.const 15516) "<")
 (data (i32.const 15528) "\02\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00n\00u\00m\00b\00e\00r\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 15580) ",")
 (data (i32.const 15592) "\02\00\00\00\18\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 15628) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\b0<\00\00\00\00\00\00\f0<\00\00\00\00\00\00\e0.")
 (data (i32.const 15676) "\1c")
 (data (i32.const 15688) "\02\00\00\00\0c\00\00\00s\00t\00r\00i\00n\00g")
 (data (i32.const 15708) "\1c")
 (data (i32.const 15720) "\02\00\00\00\0c\00\00\00n\00u\00m\00b\00e\00r")
 (data (i32.const 15740) ",")
 (data (i32.const 15752) "\02\00\00\00\0e\00\00\00b\00o\00o\00l\00e\00a\00n")
 (data (i32.const 15788) "\1c")
 (data (i32.const 15800) "\01")
 (data (i32.const 15820) "\1c")
 (data (i32.const 15832) "\01")
 (data (i32.const 15852) "\1c")
 (data (i32.const 15864) "\02\00\00\00\08\00\00\00t\00y\00p\00e")
 (data (i32.const 15884) ",")
 (data (i32.const 15896) "\02\00\00\00\14\00\00\00p\00e\00r\00c\00e\00n\00t\00a\00g\00e")
 (data (i32.const 15932) "\1c")
 (data (i32.const 15944) "\02\00\00\00\08\00\00\00d\00a\00t\00e")
 (data (i32.const 15964) "\1c")
 (data (i32.const 15976) "\02\00\00\00\02\00\00\00-")
 (data (i32.const 15996) "\1c")
 (data (i32.const 16008) "\02\00\00\00\02\00\00\00+")
 (data (i32.const 16028) "\1c")
 (data (i32.const 16040) "\02\00\00\00\02\00\00\00T")
 (data (i32.const 16060) "\1c")
 (data (i32.const 16072) "\02\00\00\00\02\00\00\00Z")
 (data (i32.const 16092) "L\00\00\00\03\00\00\00\00\00\00\00\88\00\00\008\00\00\00\00\00\00\00p>\00\00\00\00\00\00p>\00\00\00\00\00\00\b0>\00\00\00\00\00\00\006\00\00\00\00\00\00\006\00\00\00\00\00\00\b0\1b\00\00\00\00\00\00\d0>")
 (data (i32.const 16172) "<")
 (data (i32.const 16184) "\02\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 16236) ",")
 (data (i32.const 16248) "\02\00\00\00\16\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 ")
 (data (i32.const 16284) "<")
 (data (i32.const 16296) "\02\00\00\00$\00\00\00,\00 \00m\00u\00s\00t\00 \00b\00e\00 \00o\00n\00e\00 \00o\00f\00:\00 ")
 (data (i32.const 16348) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\18\00\00\00@?\00\00\00\00\00\00\80?\00\00\00\00\00\00\b0?")
 (data (i32.const 16396) "\1c")
 (data (i32.const 16408) "\02\00\00\00\04\00\00\00,\00 ")
 (data (i32.const 16428) "\\")
 (data (i32.const 16440) "\02\00\00\00D\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00S\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 16524) "\\")
 (data (i32.const 16536) "\02\00\00\00>\00\00\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00m\00a\00t\00c\00h\00 \00a\00 \00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00.")
 (data (i32.const 16620) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00@@\00\00\00\00\00\00\80?\00\00\00\00\00\00\a0@")
 (data (i32.const 16668) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\b0<\00\00\00\00\00\00\f0<\00\00\00\00\00\00\e0.")
 (data (i32.const 16716) "\1c")
 (data (i32.const 16728) "\02\00\00\00\06\00\00\000\00.\000")
 (data (i32.const 16748) "\1c")
 (data (i32.const 16760) "\02\00\00\00\06\00\00\00N\00a\00N")
 (data (i32.const 16780) ",")
 (data (i32.const 16792) "\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 16828) ",")
 (data (i32.const 16840) "\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 16936) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 17632) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 17808) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 17852) "\\")
 (data (i32.const 17864) "\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00s\00e\00g\00m\00e\00n\00t\00a\00t\00i\00o\00n\00.\00t\00s")
 (data (i32.const 17948) "\1c")
 (data (i32.const 17960) "\95\00\00\00\08\00\00\00\08")
 (data (i32.const 17980) "\1c")
 (data (i32.const 17992) "\01")
 (data (i32.const 18012) "\1c")
 (data (i32.const 18024) "\96\00\00\00\08\00\00\00\t")
 (data (i32.const 18044) "\1c")
 (data (i32.const 18056) "\01")
 (data (i32.const 18076) "\cc")
 (data (i32.const 18088) "\02\00\00\00\bc\00\00\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00a\00u\00d\00i\00e\00n\00c\00e\00 \00r\00e\00f\00e\00r\00e\00n\00c\00e\00d\00 \00b\00y\00 \00a\00u\00d\00i\00e\00n\00c\00e\00M\00a\00t\00c\00h\00 \00f\00i\00l\00t\00e\00r\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 ")
 (data (i32.const 18284) "\1c")
 (data (i32.const 18296) "\02\00\00\00\08\00\00\00 \00-\00>\00 ")
 (data (i32.const 18316) "L")
 (data (i32.const 18328) "\02\00\00\000\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00t\00a\00r\00g\00e\00t\00.\00t\00s")
 (data (i32.const 18396) "\1c")
 (data (i32.const 18408) "\01")
 (data (i32.const 18428) ",")
 (data (i32.const 18440) "\02\00\00\00\18\00\00\00[\00^\00(\00\\\00d\00|\00.\00|\00\\\00-\00)\00]")
 (data (i32.const 18476) "\1c")
 (data (i32.const 18488) "\02\00\00\00\06\00\00\00-\00.\00*")
 (data (i32.const 18508) "\1c")
 (data (i32.const 18520) "\01")
 (data (i32.const 18540) "<")
 (data (i32.const 18552) "\02\00\00\00&\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a")
 (data (i32.const 18604) "\1c")
 (data (i32.const 18616) "\01")
 (data (i32.const 18636) "\1c")
 (data (i32.const 18648) "\01")
 (data (i32.const 18668) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00\80G")
 (data (i32.const 18700) "l")
 (data (i32.const 18712) "\02\00\00\00P\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a\00 ")
 (data (i32.const 18812) "\ec")
 (data (i32.const 18824) "\02\00\00\00\d4\00\00\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00T\00o\00 \00l\00e\00v\00e\00r\00a\00g\00e\00 \00t\00h\00i\00s\00 \00n\00e\00w\00 \00f\00i\00l\00t\00e\00r\00 \00d\00e\00f\00i\00n\00i\00t\00i\00o\00n\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00p\00d\00a\00t\00e\00 \00t\00o\00 \00t\00h\00e\00 \00l\00a\00t\00e\00s\00t\00 \00v\00e\00r\00s\00i\00o\00n\00 \00o\00f\00 \00t\00h\00e\00 \00D\00e\00v\00C\00y\00c\00l\00e\00 \00S\00D\00K\00.")
 (data (i32.const 19052) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00 I\00\00\00\00\00\00\90I")
 (data (i32.const 19084) "\1c")
 (data (i32.const 19096) "\02\00\00\00\n\00\00\00 \00A\00N\00D\00 ")
 (data (i32.const 19116) "\\")
 (data (i32.const 19128) "\02\00\00\00F\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00d\00e\00c\00i\00d\00e\00 \00t\00a\00r\00g\00e\00t\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00:\00 ")
 (data (i32.const 19212) "L")
 (data (i32.const 19224) "\02\00\00\004\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00t\00a\00r\00g\00e\00t\00V\002\00.\00t\00s")
 (data (i32.const 19292) "L")
 (data (i32.const 19304) "\02\00\00\004\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00:\00 ")
 (data (i32.const 19372) "\\")
 (data (i32.const 19384) "\02\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00.\00t\00s")
 (data (i32.const 19468) "\1c")
 (data (i32.const 19480) "\02\00\00\00\06\00\00\00 \00|\00 ")
 (data (i32.const 19500) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00 L")
 (data (i32.const 19532) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00 L")
 (data (i32.const 19564) "L")
 (data (i32.const 19576) "\02\00\00\002\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00b\00l\00e\00:\00 ")
 (data (i32.const 19644) ",")
 (data (i32.const 19656) "\02\00\00\00\0e\00\00\00p\00r\00o\00j\00e\00c\00t")
 (data (i32.const 19692) ",")
 (data (i32.const 19704) "\02\00\00\00\16\00\00\00e\00n\00v\00i\00r\00o\00n\00m\00e\00n\00t")
 (data (i32.const 19740) ",")
 (data (i32.const 19752) "\02\00\00\00\10\00\00\00f\00e\00a\00t\00u\00r\00e\00s")
 (data (i32.const 19788) "<")
 (data (i32.const 19800) "\02\00\00\00&\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p")
 (data (i32.const 19852) "<")
 (data (i32.const 19864) "\02\00\00\00(\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p")
 (data (i32.const 19916) ",")
 (data (i32.const 19928) "\02\00\00\00\12\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00s")
 (data (i32.const 19964) "\\")
 (data (i32.const 19976) "\02\00\00\00B\00\00\00d\00v\00c\00U\00s\00e\00r\00F\00r\00o\00m\00U\00T\00F\008\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 20060) "<")
 (data (i32.const 20072) "\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00d\00e\00x\00.\00t\00s")
 (data (i32.const 20124) "\1c")
 (data (i32.const 20136) "\a1\00\00\00\08\00\00\00\n")
 (data (i32.const 20156) "l")
 (data (i32.const 20168) "\02\00\00\00Z\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00u\00s\00e\00r\00 \00f\00r\00o\00m\00 \00v\00a\00r\00i\00a\00b\00l\00e\00F\00o\00r\00U\00s\00e\00r\00_\00P\00B\00 \00p\00r\00o\00t\00o\00b\00u\00f")
 (data (i32.const 20268) "L")
 (data (i32.const 20280) "\02\00\00\00.\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00v\00a\00r\00i\00a\00b\00l\00e\00 \00t\00y\00p\00e\00:\00 ")
 (data (i32.const 20348) "l")
 (data (i32.const 20360) "\02\00\00\00N\00\00\00I\00n\00t\00e\00r\00n\00a\00l\00 \00e\00r\00r\00o\00r\00 \00p\00r\00o\00c\00e\00s\00s\00i\00n\00g\00 \00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n")
 (data (i32.const 20460) "\\")
 (data (i32.const 20472) "\02\00\00\00B\00\00\00N\00o\00 \00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 ")
 (data (i32.const 20556) "\\")
 (data (i32.const 20568) "\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 20652) ",")
 (data (i32.const 20664) "\02\00\00\00\14\00\00\00e\00v\00a\00l\00R\00e\00a\00s\00o\00n")
 (data (i32.const 20700) "l")
 (data (i32.const 20712) "\02\00\00\00X\00\00\00E\00v\00e\00n\00t\00 \00m\00i\00s\00s\00i\00n\00g\00 \00t\00a\00r\00g\00e\00t\00 \00t\00o\00 \00s\00a\00v\00e\00 \00a\00g\00g\00r\00e\00g\00a\00t\00e\00 \00e\00v\00e\00n\00t")
 (data (i32.const 20812) "\\")
 (data (i32.const 20824) "\02\00\00\00B\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00.\00t\00s")
 (data (i32.const 20908) "|")
 (data (i32.const 20920) "\02\00\00\00b\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00m\00a\00p\00p\00i\00n\00g\00 \00f\00o\00r\00 \00t\00a\00r\00g\00e\00t\00:\00 ")
 (data (i32.const 21036) "L")
 (data (i32.const 21048) "\02\00\00\004\00\00\00 \00t\00o\00 \00a\00g\00g\00r\00e\00g\00a\00t\00e\00 \00b\00y\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 21116) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\c0Q\00\00\00\00\00\00@R")
 (data (i32.const 21148) "\1c")
 (data (i32.const 21160) "\02\00\00\00\n\00\00\00v\00a\00l\00u\00e")
 (data (i32.const 21180) "|")
 (data (i32.const 21192) "\02\00\00\00b\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00e\00c\00o\00n\00d\00 \00v\00a\00l\00u\00e\00 \00m\00a\00p\00 \00f\00o\00r\00 \00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d")
 (data (i32.const 21308) "\\")
 (data (i32.const 21320) "\02\00\00\00H\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00.\00t\00s")
 (data (i32.const 21404) "<")
 (data (i32.const 21416) "\02\00\00\00,\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00V\00a\00r\00i\00a\00b\00l\00e\00T\00y\00p\00e\00:\00 ")
 (data (i32.const 21468) "\1c")
 (data (i32.const 21480) "\a5\00\00\00\08\00\00\00\0b")
 (data (i32.const 21500) "\1c")
 (data (i32.const 21512) "\02\00\00\00\06\00\00\00_\00i\00d")
 (data (i32.const 21532) "\1c")
 (data (i32.const 21544) "\02\00\00\00\06\00\00\00k\00e\00y")
 (data (i32.const 21564) "\1c")
 (data (i32.const 21576) "\02\00\00\00\08\00\00\00e\00v\00a\00l")
 (data (i32.const 21596) ",")
 (data (i32.const 21608) "\02\00\00\00\10\00\00\00_\00f\00e\00a\00t\00u\00r\00e")
 (data (i32.const 21644) "l")
 (data (i32.const 21656) "\02\00\00\00V\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00 \00c\00o\00n\00f\00i\00g\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 21756) "L")
 (data (i32.const 21768) "\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00.\00t\00s")
 (data (i32.const 21836) ",")
 (data (i32.const 21848) "\02\00\00\00\0e\00\00\00s\00d\00k\00T\00y\00p\00e")
 (data (i32.const 21884) ",")
 (data (i32.const 21896) "\02\00\00\00\14\00\00\00s\00d\00k\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 21932) ",")
 (data (i32.const 21944) "\02\00\00\00\16\00\00\00s\00d\00k\00P\00l\00a\00t\00f\00o\00r\00m")
 (data (i32.const 21980) ",")
 (data (i32.const 21992) "\02\00\00\00\10\00\00\00h\00o\00s\00t\00n\00a\00m\00e")
 (data (i32.const 22028) "\\")
 (data (i32.const 22040) "\02\00\00\00H\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 22124) "|")
 (data (i32.const 22136) "\02\00\00\00j\00\00\00g\00e\00n\00e\00r\00a\00t\00e\00B\00u\00c\00k\00e\00t\00e\00d\00C\00o\00n\00f\00i\00g\00 \00c\00o\00n\00f\00i\00g\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 22252) "L")
 (data (i32.const 22264) "\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00c\00o\00n\00f\00i\00g\00B\00o\00d\00y\00V\002\00.\00t\00s")
 (data (i32.const 22332) ",")
 (data (i32.const 22344) "\02\00\00\00\18\00\00\00c\00l\00i\00e\00n\00t\00S\00D\00K\00K\00e\00y")
 (data (i32.const 22380) "<")
 (data (i32.const 22392) "\02\00\00\00\1e\00\00\00a\000\00_\00o\00r\00g\00a\00n\00i\00z\00a\00t\00i\00o\00n")
 (data (i32.const 22444) "L")
 (data (i32.const 22456) "\02\00\00\004\00\00\00d\00i\00s\00a\00b\00l\00e\00P\00a\00s\00s\00t\00h\00r\00o\00u\00g\00h\00R\00o\00l\00l\00o\00u\00t\00s")
 (data (i32.const 22524) "L")
 (data (i32.const 22536) "\02\00\00\00:\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00b\00o\00o\00l\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 22604) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\10X\00\00\00\00\00\00p;")
 (data (i32.const 22652) ",")
 (data (i32.const 22664) "\02\00\00\00\10\00\00\00s\00e\00t\00t\00i\00n\00g\00s")
 (data (i32.const 22700) "L")
 (data (i32.const 22712) "\02\00\00\006\00\00\00O\00b\00j\00e\00c\00t\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 22780) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\c0X\00\00\00\00\00\00p;")
 (data (i32.const 22828) "L")
 (data (i32.const 22840) "\02\00\00\004\00\00\00A\00r\00r\00a\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 22908) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00@Y\00\00\00\00\00\00p;")
 (data (i32.const 22956) ",")
 (data (i32.const 22968) "\02\00\00\00\14\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00s")
 (data (i32.const 23004) "\1c")
 (data (i32.const 23016) "\02\00\00\00\08\00\00\00_\00v\00a\00r")
 (data (i32.const 23036) "L")
 (data (i32.const 23048) "\02\00\00\000\00\00\00V\00a\00l\00u\00e\00 \00m\00i\00s\00s\00i\00n\00g\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 23116) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00\10Z\00\00\00\00\00\00p;")
 (data (i32.const 23164) "L")
 (data (i32.const 23176) "\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00.\00t\00s")
 (data (i32.const 23244) "L")
 (data (i32.const 23256) "\02\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00V\002\00.\00t\00s")
 (data (i32.const 23324) ",")
 (data (i32.const 23336) "\02\00\00\00\1a\00\00\00p\00r\00e\00r\00e\00q\00u\00i\00s\00i\00t\00e\00s")
 (data (i32.const 23372) ",")
 (data (i32.const 23384) "\02\00\00\00\14\00\00\00c\00o\00m\00p\00a\00r\00a\00t\00o\00r")
 (data (i32.const 23420) "l")
 (data (i32.const 23432) "\02\00\00\00P\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00C\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00V\002\00.\00t\00s")
 (data (i32.const 23532) "\1c")
 (data (i32.const 23544) "\a6\00\00\00\08\00\00\00\0c")
 (data (i32.const 23564) "<")
 (data (i32.const 23576) "\02\00\00\00 \00\00\00w\00i\00n\00n\00i\00n\00g\00V\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 23628) ",")
 (data (i32.const 23640) "\02\00\00\00\14\00\00\00_\00v\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 23676) ",")
 (data (i32.const 23688) "\02\00\00\00\12\00\00\00u\00p\00d\00a\00t\00e\00d\00A\00t")
 (data (i32.const 23724) ",")
 (data (i32.const 23736) "\02\00\00\00\0e\00\00\00t\00a\00r\00g\00e\00t\00s")
 (data (i32.const 23772) ",")
 (data (i32.const 23784) "\02\00\00\00\10\00\00\00o\00p\00e\00r\00a\00t\00o\00r")
 (data (i32.const 23820) ",")
 (data (i32.const 23832) "\02\00\00\00\0e\00\00\00f\00i\00l\00t\00e\00r\00s")
 (data (i32.const 23868) "\1c")
 (data (i32.const 23880) "\01")
 (data (i32.const 23900) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\10\00\00\00@?\00\00\00\00\00\00\80?")
 (data (i32.const 23948) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00@@\00\00\00\00\00\00\80?\00\00\00\00\00\00\a0@")
 (data (i32.const 23996) ",")
 (data (i32.const 24008) "\02\00\00\00\0e\00\00\00s\00u\00b\00T\00y\00p\00e")
 (data (i32.const 24044) "\1c")
 (data (i32.const 24056) "\02\00\00\00\0c\00\00\00v\00a\00l\00u\00e\00s")
 (data (i32.const 24076) "\9c")
 (data (i32.const 24088) "\02\00\00\00\80\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00F\00i\00l\00t\00e\00r\00 \00v\00a\00l\00u\00e\00s\00 \00m\00u\00s\00t\00 \00b\00e\00 \00a\00l\00l\00 \00o\00f\00 \00t\00h\00e\00 \00s\00a\00m\00e\00 \00t\00y\00p\00e\00.\00 ")
 (data (i32.const 24236) "<")
 (data (i32.const 24248) "\02\00\00\00*\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00b\00o\00o\00l\00,\00 \00g\00o\00t\00:\00 ")
 (data (i32.const 24300) "L")
 (data (i32.const 24312) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00s\00t\00r\00i\00n\00g\00,\00 \00g\00o\00t\00:\00 ")
 (data (i32.const 24380) "L")
 (data (i32.const 24392) "\02\00\00\00.\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00:\00 \00n\00u\00m\00b\00e\00r\00,\00 \00g\00o\00t\00:\00 ")
 (data (i32.const 24460) "\\")
 (data (i32.const 24472) "\02\00\00\00>\00\00\00F\00i\00l\00t\00e\00r\00 \00v\00a\00l\00u\00e\00s\00 \00o\00f\00 \00u\00n\00k\00n\00o\00w\00n\00 \00t\00y\00p\00e\00.\00 ")
 (data (i32.const 24556) ",")
 (data (i32.const 24568) "\02\00\00\00\0e\00\00\00d\00a\00t\00a\00K\00e\00y")
 (data (i32.const 24604) ",")
 (data (i32.const 24616) "\02\00\00\00\16\00\00\00d\00a\00t\00a\00K\00e\00y\00T\00y\00p\00e")
 (data (i32.const 24652) ",")
 (data (i32.const 24664) "\02\00\00\00\14\00\00\00_\00a\00u\00d\00i\00e\00n\00c\00e\00s")
 (data (i32.const 24700) "\1c")
 (data (i32.const 24712) "\01\00\00\00\04\00\00\00\10\05")
 (data (i32.const 24732) ",")
 (data (i32.const 24744) "\02\00\00\00\12\00\00\00_\00a\00u\00d\00i\00e\00n\00c\00e")
 (data (i32.const 24780) ",")
 (data (i32.const 24792) "\02\00\00\00\0e\00\00\00r\00o\00l\00l\00o\00u\00t")
 (data (i32.const 24828) "<")
 (data (i32.const 24840) "\02\00\00\00\1e\00\00\00s\00t\00a\00r\00t\00P\00e\00r\00c\00e\00n\00t\00a\00g\00e")
 (data (i32.const 24892) ",")
 (data (i32.const 24904) "\02\00\00\00\12\00\00\00s\00t\00a\00r\00t\00D\00a\00t\00e")
 (data (i32.const 24940) "\1c")
 (data (i32.const 24952) "\02\00\00\00\0c\00\00\00s\00t\00a\00g\00e\00s")
 (data (i32.const 24972) "\1c")
 (data (i32.const 24984) "\a7\00\00\00\08\00\00\00\r")
 (data (i32.const 25004) ",")
 (data (i32.const 25016) "\02\00\00\00\18\00\00\00d\00i\00s\00t\00r\00i\00b\00u\00t\00i\00o\00n")
 (data (i32.const 25052) "\1c")
 (data (i32.const 25064) "\a8\00\00\00\08\00\00\00\0e")
 (data (i32.const 25084) "\1c")
 (data (i32.const 25096) "\01")
 (data (i32.const 25116) ",")
 (data (i32.const 25128) "\02\00\00\00\18\00\00\00b\00u\00c\00k\00e\00t\00i\00n\00g\00K\00e\00y")
 (data (i32.const 25164) "\1c")
 (data (i32.const 25176) "\02\00\00\00\08\00\00\00d\00e\00s\00c")
 (data (i32.const 25196) "\1c")
 (data (i32.const 25208) "\ab\00\00\00\08\00\00\00\0f")
 (data (i32.const 25228) "\1c")
 (data (i32.const 25240) "\01")
 (data (i32.const 25260) "\1c")
 (data (i32.const 25272) "\ac\00\00\00\08\00\00\00\10")
 (data (i32.const 25292) ",")
 (data (i32.const 25304) "\02\00\00\00\1a\00\00\00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n")
 (data (i32.const 25340) ",")
 (data (i32.const 25352) "\02\00\00\00\12\00\00\00a\00u\00d\00i\00e\00n\00c\00e\00s")
 (data (i32.const 25388) "\1c")
 (data (i32.const 25400) "\02\00\00\00\04\00\00\00i\00d")
 (data (i32.const 25420) "\\")
 (data (i32.const 25432) "\02\00\00\00L\00\00\00i\00n\00v\00a\00l\00i\00d\00 \00g\00l\00o\00b\00a\00l\00 \00c\00l\00i\00e\00n\00t\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00J\00S\00O\00N\00S\00t\00r")
 (data (i32.const 25516) "\1c")
 (data (i32.const 25528) "\02\00\00\00\04\00\00\00{\00}")
 (data (i32.const 25548) "l")
 (data (i32.const 25560) "\02\00\00\00P\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00d\00k\00K\00e\00y\00 \00t\00o\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00 \00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e")
 (data (i32.const 25660) "l")
 (data (i32.const 25672) "\02\00\00\00N\00\00\00E\00v\00e\00n\00t\00 \00Q\00u\00e\00u\00e\00 \00a\00l\00r\00e\00a\00d\00y\00 \00e\00x\00i\00s\00t\00s\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 ")
 (data (i32.const 25772) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00Pd\00\00\00\00\00\00 @")
 (data (i32.const 25804) "\8c")
 (data (i32.const 25816) "\02\00\00\00p\00\00\00y\00o\00u\00 \00c\00a\00n\00 \00o\00n\00l\00y\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00 \00t\00h\00e\00 \00D\00e\00v\00C\00y\00c\00l\00e\00 \00S\00D\00K\00 \00o\00n\00c\00e\00 \00p\00e\00r\00 \00s\00d\00k\00K\00e\00y")
 (data (i32.const 25948) "\\")
 (data (i32.const 25960) "\02\00\00\00F\00\00\00E\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00O\00p\00t\00i\00o\00n\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 26044) "\\")
 (data (i32.const 26056) "\02\00\00\00F\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00O\00p\00t\00i\00o\00n\00s\00.\00t\00s")
 (data (i32.const 26140) "L")
 (data (i32.const 26152) "\02\00\00\008\00\00\00d\00i\00s\00a\00b\00l\00e\00A\00u\00t\00o\00m\00a\00t\00i\00c\00E\00v\00e\00n\00t\00L\00o\00g\00g\00i\00n\00g")
 (data (i32.const 26220) "L")
 (data (i32.const 26232) "\02\00\00\002\00\00\00d\00i\00s\00a\00b\00l\00e\00C\00u\00s\00t\00o\00m\00E\00v\00e\00n\00t\00L\00o\00g\00g\00i\00n\00g")
 (data (i32.const 26300) "<")
 (data (i32.const 26312) "\02\00\00\00*\00\00\00e\00v\00e\00n\00t\00R\00e\00q\00u\00e\00s\00t\00C\00h\00u\00n\00k\00S\00i\00z\00e")
 (data (i32.const 26364) "l")
 (data (i32.const 26376) "\02\00\00\00R\00\00\00U\00n\00a\00b\00l\00e\00 \00t\00o\00 \00g\00e\00t\00 \00i\003\002\00 \00v\00a\00l\00u\00e\00 \00f\00r\00o\00m\00 \00J\00S\00O\00N\00.\00V\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 26476) "L")
 (data (i32.const 26488) "\02\00\00\00.\00\00\00e\00v\00e\00n\00t\00R\00e\00q\00u\00e\00s\00t\00C\00h\00u\00n\00k\00S\00i\00z\00e\00:\00 ")
 (data (i32.const 26556) "L")
 (data (i32.const 26568) "\02\00\00\00.\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00l\00a\00r\00g\00e\00r\00 \00t\00h\00a\00n\00 \001\000")
 (data (i32.const 26636) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\80g\00\00\00\00\00\00\d0g")
 (data (i32.const 26668) "L")
 (data (i32.const 26680) "\02\00\00\006\00\00\00 \00m\00u\00s\00t\00 \00b\00e\00 \00s\00m\00a\00l\00l\00e\00r\00 \00t\00h\00a\00n\00 \001\000\000\000\000")
 (data (i32.const 26748) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\80g\00\00\00\00\00\00@h")
 (data (i32.const 26780) "l")
 (data (i32.const 26792) "\02\00\00\00Z\00\00\00N\00o\00 \00R\00e\00q\00u\00e\00s\00t\00 \00P\00a\00y\00l\00o\00a\00d\00 \00M\00a\00n\00a\00g\00e\00r\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00s\00d\00k\00K\00e\00y\00:\00 ")
 (data (i32.const 26892) "\1c")
 (data (i32.const 26904) "\02\00\00\00\0c\00\00\00f\00a\00i\00l\00e\00d")
 (data (i32.const 26924) "<")
 (data (i32.const 26936) "\02\00\00\00\"\00\00\00R\00e\00q\00u\00e\00s\00t\00 \00P\00a\00y\00l\00o\00a\00d\00:\00 ")
 (data (i32.const 26988) "L")
 (data (i32.const 27000) "\02\00\00\002\00\00\00 \00h\00a\00s\00 \00n\00o\00t\00 \00f\00i\00n\00i\00s\00h\00e\00d\00 \00s\00e\00n\00d\00i\00n\00g")
 (data (i32.const 27068) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00@i\00\00\00\00\00\00\80i")
 (data (i32.const 27100) "l")
 (data (i32.const 27112) "\02\00\00\00X\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00v\00e\00n\00t\00Q\00u\00e\00u\00e\00/\00r\00e\00q\00u\00e\00s\00t\00P\00a\00y\00l\00o\00a\00d\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 27212) "\1c")
 (data (i32.const 27224) "\b2\00\00\00\08\00\00\00\11")
 (data (i32.const 27244) "\1c")
 (data (i32.const 27256) "\01")
 (data (i32.const 27276) ",")
 (data (i32.const 27288) "\02\00\00\00\12\00\00\00a\00g\00g\00r\00e\00g\00a\00t\00e")
 (data (i32.const 27324) "\1c")
 (data (i32.const 27336) "\02\00\00\00\02\00\00\00@")
 (data (i32.const 27356) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\00\00\00\00\d0j")
 (data (i32.const 27388) ",")
 (data (i32.const 27400) "\02\00\00\00\16\00\00\00c\00u\00s\00t\00o\00m\00E\00v\00e\00n\00t")
 (data (i32.const 27436) "\\")
 (data (i32.const 27448) "\02\00\00\00D\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00e\00v\00a\00l\00R\00e\00a\00s\00o\00n\00A\00g\00g\00M\00a\00p\00 \00f\00o\00r\00 \00v\00a\00l\00u\00e")
 (data (i32.const 27532) "\8c")
 (data (i32.const 27544) "\02\00\00\00t\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00u\00b\00 \00v\00a\00l\00u\00e\00 \00m\00a\00p\00 \00t\00o\00 \00w\00r\00i\00t\00e\00 \00a\00g\00g\00V\00a\00r\00i\00a\00b\00l\00e\00D\00e\00f\00a\00u\00l\00t\00e\00d\00 \00e\00v\00e\00n\00t\00s")
 (data (i32.const 27676) ",")
 (data (i32.const 27688) "\02\00\00\00\0e\00\00\00s\00e\00n\00d\00i\00n\00g")
 (data (i32.const 27724) "\1c")
 (data (i32.const 27736) "\b3\00\00\00\08\00\00\00\12")
 (data (i32.const 27756) "\1c")
 (data (i32.const 27768) "\01")
 (data (i32.const 27788) "\1c")
 (data (i32.const 27800) "\b2\00\00\00\08\00\00\00\13")
 (data (i32.const 27820) "\1c")
 (data (i32.const 27832) "\b4\00\00\00\08\00\00\00\14")
 (data (i32.const 27852) "L")
 (data (i32.const 27864) "\02\00\00\004\00\00\00C\00o\00u\00l\00d\00 \00n\00o\00t\00 \00f\00i\00n\00d\00 \00p\00a\00y\00l\00o\00a\00d\00I\00d\00:\00 ")
 (data (i32.const 27932) "<")
 (data (i32.const 27944) "\02\00\00\00&\00\00\00 \00t\00o\00 \00m\00a\00r\00k\00 \00a\00s\00 \00s\00u\00c\00c\00e\00s\00s")
 (data (i32.const 27996) "\1c\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\0c\00\00\00\e0l\00\00\00\00\00\000m")
 (data (i32.const 28028) "L")
 (data (i32.const 28040) "\02\00\00\000\00\00\00C\00o\00u\00l\00d\00 \00n\00o\00t\00 \00f\00i\00n\00d\00 \00p\00a\00y\00l\00o\00a\00d\00:\00 ")
 (data (i32.const 28108) ",")
 (data (i32.const 28120) "\02\00\00\00\1a\00\00\00,\00 \00r\00e\00t\00r\00y\00a\00b\00l\00e\00:\00 ")
 (data (i32.const 28156) "<")
 (data (i32.const 28168) "\02\00\00\00&\00\00\00 \00t\00o\00 \00m\00a\00r\00k\00 \00a\00s\00 \00f\00a\00i\00l\00u\00r\00e")
 (data (i32.const 28220) ",\00\00\00\03\00\00\00\00\00\00\00\88\00\00\00\14\00\00\00\90m\00\00\00\00\00\00\e0m\00\00\00\00\00\00\10n")
 (data (i32.const 28268) "\\")
 (data (i32.const 28280) "\02\00\00\00F\00\00\00D\00V\00C\00E\00v\00e\00n\00t\00 \00e\00v\00e\00n\00t\00S\00t\00r\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 28364) "L")
 (data (i32.const 28376) "\02\00\00\004\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00d\00v\00c\00E\00v\00e\00n\00t\00.\00t\00s")
 (data (i32.const 28444) "\1c")
 (data (i32.const 28456) "\02\00\00\00\0c\00\00\00t\00a\00r\00g\00e\00t")
 (data (i32.const 28476) ",")
 (data (i32.const 28488) "\02\00\00\00\10\00\00\00m\00e\00t\00a\00D\00a\00t\00a")
 (data (i32.const 28524) "\1c")
 (data (i32.const 28536) "\01")
 (data (i32.const 28556) "l")
 (data (i32.const 28568) "\02\00\00\00R\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 28668) "\\")
 (data (i32.const 28680) "\02\00\00\00D\00\00\00F\00e\00a\00t\00u\00r\00e\00 \00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00m\00i\00s\00s\00i\00n\00g\00 \00_\00f\00e\00a\00t\00u\00r\00e")
 (data (i32.const 28764) "\\")
 (data (i32.const 28776) "\02\00\00\00H\00\00\00F\00e\00a\00t\00u\00r\00e\00 \00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00m\00i\00s\00s\00i\00n\00g\00 \00_\00v\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 28860) "\\")
 (data (i32.const 28872) "\02\00\00\00H\00\00\00v\00a\00r\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 28956) "l")
 (data (i32.const 28968) "\02\00\00\00V\00\00\00F\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00v\00a\00l\00u\00e\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 29068) "L")
 (data (i32.const 29080) "\02\00\00\00:\00\00\00S\00D\00K\00V\00a\00r\00i\00a\00b\00l\00e\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 29148) "\1c")
 (data (i32.const 29160) "\02\00\00\00\0c\00\00\00r\00e\00a\00s\00o\00n")
 (data (i32.const 29180) ",")
 (data (i32.const 29192) "\02\00\00\00\0e\00\00\00d\00e\00t\00a\00i\00l\00s")
 (data (i32.const 29228) ",")
 (data (i32.const 29240) "\02\00\00\00\10\00\00\00t\00a\00r\00g\00e\00t\00I\00d")
 (data (i32.const 29276) "\1c")
 (data (i32.const 29288) "\b5\00\00\00\08\00\00\00\15")
 (data (i32.const 29308) "\1c")
 (data (i32.const 29320) "\b6\00\00\00\08\00\00\00\16")
 (data (i32.const 29340) "\1c")
 (data (i32.const 29352) "\b7\00\00\00\08\00\00\00\17")
 (data (i32.const 29372) "\1c")
 (data (i32.const 29384) "\b8\00\00\00\08\00\00\00\18")
 (data (i32.const 29404) "\1c")
 (data (i32.const 29416) "\b9\00\00\00\08\00\00\00\19")
 (data (i32.const 29436) "\8c")
 (data (i32.const 29448) "\02\00\00\00x\00\00\00c\00h\00e\00c\00k\00N\00u\00m\00b\00e\00r\00s\00F\00i\00l\00t\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 29580) "L")
 (data (i32.const 29592) "\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00H\00e\00l\00p\00e\00r\00s\00.\00t\00s")
 (data (i32.const 29660) "\8c")
 (data (i32.const 29672) "\02\00\00\00z\00\00\00c\00h\00e\00c\00k\00V\00e\00r\00s\00i\00o\00n\00F\00i\00l\00t\00e\00r\00s\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 29804) "\8c")
 (data (i32.const 29816) "\02\00\00\00r\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 29948) "|")
 (data (i32.const 29960) "\02\00\00\00h\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00d\00a\00t\00a\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 30076) "\ac")
 (data (i32.const 30088) "\02\00\00\00\8e\00\00\00e\00v\00a\00l\00u\00a\00t\00e\00O\00p\00e\00r\00a\00t\00o\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00o\00p\00e\00r\00a\00t\00o\00r\00S\00t\00r\00 \00o\00r\00 \00u\00s\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 30252) "\1c")
 (data (i32.const 30264) "\02\00\00\00\0c\00\00\00r\00e\00s\00u\00l\00t")
 (data (i32.const 30284) ",")
 (data (i32.const 30296) "\02\00\00\00\1a\00\00\00r\00e\00a\00s\00o\00n\00D\00e\00t\00a\00i\00l\00s")
 (data (i32.const 30332) "\9c")
 (data (i32.const 30344) "\02\00\00\00~\00\00\00d\00e\00c\00i\00d\00e\00T\00a\00r\00g\00e\00t\00V\00a\00r\00i\00a\00t\00i\00o\00n\00F\00r\00o\00m\00J\00S\00O\00N\00 \00t\00a\00r\00g\00e\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 30492) "\1c")
 (data (i32.const 30504) "\a8\00\00\00\08\00\00\00\1a")
 (data (i32.const 30524) "\1c")
 (data (i32.const 30536) "\01")
 (data (i32.const 30556) "\8c")
 (data (i32.const 30568) "\02\00\00\00|\00\00\00d\00o\00e\00s\00U\00s\00e\00r\00P\00a\00s\00s\00R\00o\00l\00l\00o\00u\00t\00F\00r\00o\00m\00J\00S\00O\00N\00 \00r\00o\00l\00l\00o\00u\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 30700) "L")
 (data (i32.const 30712) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00c\00o\00n\00f\00i\00g\00B\00o\00d\00y\00.\00t\00s")
 (data (i32.const 30780) "\\")
 (data (i32.const 30792) "\02\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00C\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00.\00t\00s")
 (data (i32.const 30876) "\1c")
 (data (i32.const 30888) "\c4\00\00\00\08\00\00\00\1b")
 (data (i32.const 30908) "\1c")
 (data (i32.const 30920) "\c5\00\00\00\08\00\00\00\1c")
 (data (i32.const 30940) ",")
 (data (i32.const 30952) "\02\00\00\00\16\00\00\00c\00r\00e\00a\00t\00e\00d\00D\00a\00t\00e")
 (data (i32.const 30988) ",")
 (data (i32.const 31000) "\02\00\00\00\18\00\00\00l\00a\00s\00t\00S\00e\00e\00n\00D\00a\00t\00e")
 (data (i32.const 31036) "|")
 (data (i32.const 31048) "\02\00\00\00d\00\00\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 31164) ",")
 (data (i32.const 31176) "\02\00\00\00\1a\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00N\00a\00m\00e")
 (data (i32.const 31212) ",")
 (data (i32.const 31224) "\02\00\00\00\18\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00K\00e\00y")
 (data (i32.const 31260) "\8c")
 (data (i32.const 31272) "\02\00\00\00n\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00F\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00 \00o\00b\00j\00e\00c\00t\00 \00i\00n\00 \00v\00a\00r\00i\00a\00b\00l\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p")
 (data (i32.const 31404) "<")
 (data (i32.const 31416) "\02\00\00\00,\00\00\00M\00a\00n\00u\00a\00l\00 \00a\00b\00o\00r\00t\00 \00t\00r\00i\00g\00g\00e\00r\00e\00d")
 (data (i32.const 31468) "\1c")
 (data (i32.const 31480) "\ca\00\00\00\08\00\00\00\1d")
 (data (i32.const 31500) "\1c")
 (data (i32.const 31512) "\01")
 (data (i32.const 31532) "\\")
 (data (i32.const 31544) "\02\00\00\00H\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00s\00J\00S\00O\00N\00 \00i\00s\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 31628) ",")
 (data (i32.const 31640) "\02\00\00\00\14\00\00\00c\00u\00s\00t\00o\00m\00T\00y\00p\00e")
 (data (i32.const 31676) ",")
 (data (i32.const 31688) "\02\00\00\00\14\00\00\00c\00l\00i\00e\00n\00t\00D\00a\00t\00e")
 (data (i32.const 31724) ",")
 (data (i32.const 31736) "\02\00\00\00\16\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00s")
 (data (i32.const 31772) "<")
 (data (i32.const 31784) "\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 31836) "<")
 (data (i32.const 31848) "\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 31900) "\1c")
 (data (i32.const 31912) "\cb\00\00\00\08\00\00\00\1e")
 (data (i32.const 31932) "\1c")
 (data (i32.const 31944) "\cb\00\00\00\08\00\00\00\1f")
 (data (i32.const 31964) "L")
 (data (i32.const 31976) "\02\00\00\00<\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s\00 \00-\00 ")
 (data (i32.const 32044) "\1c")
 (data (i32.const 32056) "\02\00\00\00\04\00\00\00\\\00\"")
 (data (i32.const 32076) "\1c")
 (data (i32.const 32088) "\02\00\00\00\04\00\00\00\\\00\\")
 (data (i32.const 32108) "\1c")
 (data (i32.const 32120) "\02\00\00\00\04\00\00\00\\\00b")
 (data (i32.const 32140) "\1c")
 (data (i32.const 32152) "\02\00\00\00\04\00\00\00\\\00n")
 (data (i32.const 32172) "\1c")
 (data (i32.const 32184) "\02\00\00\00\04\00\00\00\\\00r")
 (data (i32.const 32204) "\1c")
 (data (i32.const 32216) "\02\00\00\00\04\00\00\00\\\00t")
 (data (i32.const 32236) "\1c")
 (data (i32.const 32248) "\02\00\00\00\04\00\00\00\\\00f")
 (data (i32.const 32268) "\1c")
 (data (i32.const 32280) "\02\00\00\00\0c\00\00\00\\\00u\000\000\000\00b")
 (data (i32.const 32300) ",")
 (data (i32.const 32312) "\02\00\00\00\12\00\00\00t\00a\00r\00g\00e\00t\00_\00i\00d")
 (data (i32.const 32348) "\1c")
 (data (i32.const 32360) "\02\00\00\00\0c\00\00\00e\00v\00e\00n\00t\00s")
 (data (i32.const 32380) ",")
 (data (i32.const 32392) "\02\00\00\00\0e\00\00\00r\00e\00c\00o\00r\00d\00s")
 (data (i32.const 32428) ",")
 (data (i32.const 32440) "\02\00\00\00\12\00\00\00p\00a\00y\00l\00o\00a\00d\00I\00d")
 (data (i32.const 32476) ",")
 (data (i32.const 32488) "\02\00\00\00\14\00\00\00e\00v\00e\00n\00t\00C\00o\00u\00n\00t")
 (data (i32.const 32524) ",")
 (data (i32.const 32536) "\02\00\00\00\16\00\00\00f\00o\00r\00c\00e\00d\00U\00s\00e\00r\00s")
 (data (i32.const 32572) "l")
 (data (i32.const 32584) "\02\00\00\00\\\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00p\00r\00o\00t\00o\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00F\00i\00x\00e\00d\00R\00e\00a\00d\00e\00r\00.\00t\00s")
 (data (i32.const 32684) "<")
 (data (i32.const 32696) "\02\00\00\00$\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00w\00i\00r\00e\00 \00t\00y\00p\00e\00 ")
 (data (i32.const 32748) "\\")
 (data (i32.const 32760) "\02\00\00\00H\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00f\00o\00r\00k\00(\00)\00 \00b\00e\00f\00o\00r\00e\00 \00l\00d\00e\00l\00i\00m\00(\00)\00 \00c\00a\00l\00l\00.")
 (data (i32.const 32844) "l")
 (data (i32.const 32856) "\02\00\00\00Z\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00p\00r\00o\00t\00o\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00F\00i\00x\00e\00d\00S\00i\00z\00e\00r\00.\00t\00s")
 (data (i32.const 32960) "\cc\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02A")
 (data (i32.const 32992) " \00\00\00\10A\82\00A\00\00\00\08A\00\00\00\00\00\00 \00\00\00\00\00\00\00\02\01\00\00\02\t\00\00\00\00\00\00 \00\00\00$\t\00\00 \00\00\00\00\00\00\00 ")
 (data (i32.const 33060) "\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00 ")
 (data (i32.const 33088) "\02A")
 (data (i32.const 33104) " \00\00\00\00\00\00\00 \00\00\00 \00\00\00 ")
 (data (i32.const 33132) " ")
 (data (i32.const 33148) " \00\00\00 ")
 (data (i32.const 33164) "\02A\00\00\00\00\00\00 \00\00\00\02A\00\00 ")
 (data (i32.const 33212) "\02\1a")
 (data (i32.const 33232) " ")
 (data (i32.const 33252) "\02A\00\00\10A\82")
 (data (i32.const 33276) "\02A\00\00\10A\82\00\02A")
 (data (i32.const 33296) "\02A\00\00\00\00\00\00 \00\00\00\10A\82")
 (data (i32.const 33324) "\02A\00\00\00\00\00\00\02A\00\00\02A\00\00\10A\82\00\02A\00\00\00\00\00\00\02A\00\00\10A\82\00\10A\82\00\10A\82\00\10A\82")
 (data (i32.const 33388) " ")
 (data (i32.const 33404) "\02A\00\00\10A\82\00\10\n\82\00\10A\82\00\10A\82\00\10A\82\00\10A\82\00\10A\82")
 (data (i32.const 33444) "\02A\00\00\10A\82\00\10A\82\00 \00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00 \00\00\00\02A")
 (data (i32.const 33500) " \00\00\00 \00\00\00\04A")
 (data (i32.const 33524) "\10A\82\00\00\00\00\00\10A\82\00\00\00\00\00\10A\82")
 (data (i32.const 33572) "B")
 (data (i32.const 33592) " ")
 (data (i32.const 33604) "\10A\82")
 (data (i32.const 33644) "\02A")
 (data (i32.const 33672) "\02A")
 (data (i32.const 33728) "\02A\00\00\00\00\00\00\02A\00\00\02A\00\00\10A\82")
 (data (i32.const 33764) "\02A\00\00\02A")
 (table $0 32 32 funcref)
 (elem $0 (i32.const 1) $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0 $assembly/bucketing/segmentation/getFilterAudiences~anonymous|0 $assembly/bucketing/segmentation/getFilterAudiencesAsStrings~anonymous|0 $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.decode $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.encode $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|0 $assembly/types/target/Rollout#constructor~anonymous|0 $assembly/types/targetV2/TargetV2#constructor~anonymous|0 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|1 $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads~anonymous|0 $~lib/as-uuid/assembly/rng/randomFill $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads~anonymous|0 $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0 $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount~anonymous|0 $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.encode $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.decode $assembly/types/target/Target#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0)
 (export "VariableType.Boolean" (global $assembly/index/VariableType.Boolean))
 (export "VariableType.Number" (global $assembly/index/VariableType.Number))
 (export "VariableType.String" (global $assembly/index/VariableType.String))
 (export "VariableType.JSON" (global $assembly/index/VariableType.JSON))
 (export "VariableTypeStrings" (global $assembly/index/VariableTypeStrings))
 (export "murmurhashBufferSize" (global $assembly/helpers/murmurhash/murmurhashBufferSize))
 (export "triggerAbort" (func $assembly/testHelpers/triggerAbort))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "generateBoundedHashesFromJSON" (func $export:assembly/index/generateBoundedHashesFromJSON))
 (export "generateBucketedConfigForUser" (func $export:assembly/index/generateBucketedConfigForUser))
 (export "generateBucketedConfigForUserUTF8" (func $export:assembly/index/generateBucketedConfigForUserUTF8))
 (export "generateBucketedConfigForUserWithOverrides" (func $export:assembly/index/generateBucketedConfigForUserWithOverrides))
 (export "variableForUser_PB_Preallocated" (func $export:assembly/index/variableForUser_PB_Preallocated))
 (export "variableForUser_PB" (func $export:assembly/index/variableForUser_PB))
 (export "variableForUser" (func $export:assembly/index/variableForUser))
 (export "variableForUserPreallocated" (func $export:assembly/index/variableForUserPreallocated))
 (export "setPlatformData" (func $export:assembly/index/setPlatformData))
 (export "setPlatformDataUTF8" (func $export:assembly/index/setPlatformDataUTF8))
 (export "clearPlatformData" (func $export:assembly/index/clearPlatformData@varargs))
 (export "setConfigDataUTF8Preallocated" (func $export:assembly/index/setConfigDataUTF8Preallocated))
 (export "setConfigDataUTF8" (func $export:assembly/index/setConfigDataUTF8))
 (export "setConfigData" (func $export:assembly/index/setConfigData))
 (export "setConfigDataWithEtag" (func $export:assembly/index/setConfigDataWithEtag))
 (export "hasConfigDataForEtag" (func $export:assembly/index/hasConfigDataForEtag))
 (export "setClientCustomData" (func $export:assembly/index/setClientCustomData))
 (export "setClientCustomDataUTF8" (func $export:assembly/index/setClientCustomDataUTF8))
 (export "getSDKKeyFromConfig" (func $export:assembly/index/getSDKKeyFromConfig))
 (export "getConfigMetadata" (func $export:assembly/index/getConfigMetadata))
 (export "murmurhashV3" (func $export:assembly/helpers/murmurhash/murmurhashV3))
 (export "murmurhashV3_js" (func $export:assembly/helpers/murmurhash/murmurhashV3_js))
 (export "initEventQueue" (func $export:assembly/managers/eventQueueManager/initEventQueue))
 (export "flushEventQueue" (func $export:assembly/managers/eventQueueManager/flushEventQueue))
 (export "onPayloadSuccess" (func $export:assembly/managers/eventQueueManager/onPayloadSuccess))
 (export "onPayloadFailure" (func $export:assembly/managers/eventQueueManager/onPayloadFailure))
 (export "queueEvent" (func $export:assembly/managers/eventQueueManager/queueEvent))
 (export "queueAggregateEvent" (func $export:assembly/managers/eventQueueManager/queueAggregateEvent))
 (export "queueVariableEvaluatedEvent_JSON" (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON))
 (export "queueVariableEvaluatedEvent" (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent))
 (export "cleanupEventQueue" (func $export:assembly/managers/eventQueueManager/cleanupEventQueue))
 (export "eventQueueSize" (func $export:assembly/managers/eventQueueManager/eventQueueSize))
 (export "testVariableForUserParams_PB" (func $export:assembly/testHelpers/testVariableForUserParams_PB))
 (export "testDVCUser_PB" (func $export:assembly/testHelpers/testDVCUser_PB))
 (export "testSDKVariable_PB" (func $export:assembly/testHelpers/testSDKVariable_PB))
 (export "checkNumbersFilterFromJSON" (func $export:assembly/testHelpers/checkNumbersFilterFromJSON))
 (export "checkVersionFiltersFromJSON" (func $export:assembly/testHelpers/checkVersionFiltersFromJSON))
 (export "checkCustomDataFromJSON" (func $export:assembly/testHelpers/checkCustomDataFromJSON))
 (export "evaluateOperatorFromJSON" (func $export:assembly/testHelpers/evaluateOperatorFromJSON@varargs))
 (export "decideTargetVariationFromJSON" (func $export:assembly/testHelpers/decideTargetVariationFromJSON))
 (export "doesUserPassRolloutFromJSON" (func $export:assembly/testHelpers/doesUserPassRolloutFromJSON))
 (export "testConfigBodyClass" (func $export:assembly/testHelpers/testConfigBodyClass@varargs))
 (export "testConfigBodyClassFromUTF8" (func $export:assembly/testHelpers/testConfigBodyClassFromUTF8@varargs))
 (export "testConfigBodyV2Class" (func $export:assembly/testHelpers/testConfigBodyV2Class@varargs))
 (export "testConfigBodyV2ClassFromUTF8" (func $export:assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs))
 (export "testDVCUserClass" (func $export:assembly/testHelpers/testDVCUserClass))
 (export "testDVCUserClassFromUTF8" (func $export:assembly/testHelpers/testDVCUserClassFromUTF8))
 (export "testBucketedUserConfigClass" (func $export:assembly/testHelpers/testBucketedUserConfigClass))
 (export "echoString" (func $export:assembly/testHelpers/echoString))
 (export "echoUint8Array" (func $export:assembly/testHelpers/echoString))
 (export "testSortObjectsByString" (func $export:assembly/testHelpers/testSortObjectsByString))
 (export "testEventQueueOptionsClass" (func $export:assembly/types/eventQueueOptions/testEventQueueOptionsClass))
 (export "testDVCEventClass" (func $export:assembly/types/dvcEvent/testDVCEventClass))
 (export "testDVCRequestEventClass" (func $export:assembly/types/dvcEvent/testDVCRequestEventClass))
 (export "testPlatformDataClass" (func $export:assembly/types/platformData/testPlatformDataClass))
 (export "testPlatformDataClassFromUTF8" (func $export:assembly/types/platformData/testPlatformDataClassFromUTF8))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 6272
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   local.get $0
   i32.load $0 offset=8
   i32.eqz
   local.get $0
   i32.const 66548
   i32.lt_u
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 6272
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 6272
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 6272
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 32960
   i32.load $0
   i32.gt_u
   if
    i32.const 6400
    i32.const 6464
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 2
   i32.shl
   i32.const 32964
   i32.add
   i32.load $0
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load $0 offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 6544
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  local.set $5
  local.get $1
  i32.load $0 offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store $0 offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store $0 offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store $0 offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load $0 offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load $0
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store $0
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load $0
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load $0
   local.tee $1
   i32.load $0
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 6544
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store $0
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 6544
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 6544
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store $0
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store $0 offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0 offset=96
  local.get $0
  local.get $0
  i32.load $0
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store $0
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 6544
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load $0 offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 6544
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load $0
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 6544
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  local.tee $2
  i32.const 2
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size $0
  local.tee $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 2
   local.get $1
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 66560
  i32.const 0
  i32.store $0
  i32.const 68128
  i32.const 0
  i32.store $0
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 66560
    i32.add
    i32.const 0
    i32.store $0 offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 66560
      i32.add
      i32.const 0
      i32.store $0 offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 66560
  i32.const 68132
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 66560
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 66548
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $2
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load $0
   i32.const 1
   i32.and
  end
  if
   i32.const 0
   i32.const 6544
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $1
  i32.load $0
  i32.const 1
  i32.or
  i32.store $0
  local.get $2
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load $0 offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store $0 offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load $0 offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 66548
      i32.lt_u
      if
       local.get $0
       i32.load $0
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load $0 offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load $0 offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load $0 offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store $0 offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load $0 offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 6272
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 66548
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load $0
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     call $~lib/rt/tlsf/__free
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.store $0 offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 6544
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
  else
   local.get $0
   i32.load $0
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 6544
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 6208
   i32.const 6544
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $3
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   memory.size $0
   local.tee $1
   i32.const 4
   local.get $0
   i32.load $0 offset=1568
   local.get $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   local.get $3
   i32.const 1
   i32.const 27
   local.get $3
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $3
   local.get $3
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow $0
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size $0
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 6544
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $3
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 6544
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load $0
  local.set $4
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 6544
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const -4
  i32.and
  local.get $3
  i32.sub
  local.tee $2
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $3
   local.get $4
   i32.const 2
   i32.and
   i32.or
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $3
   i32.add
   local.tee $3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store $0
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $4
   i32.const -2
   i32.and
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $0
   local.get $0
   i32.load $0
   i32.const -3
   i32.and
   i32.store $0
  end
  local.get $1
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 6208
   i32.const 6272
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 204
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    local.get $2
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load $0 offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill $0
  local.get $1
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.tee $1
  i32.const 7
  i32.and
  local.get $2
  i32.const 7
  i32.and
  i32.or
  i32.eqz
  local.get $3
  i32.const 4
  i32.ge_u
  i32.and
  if
   loop $do-loop|0
    local.get $1
    i64.load $0
    local.get $2
    i64.load $0
    i64.eq
    if
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 8
     i32.add
     local.set $2
     local.get $3
     i32.const 4
     i32.sub
     local.tee $3
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $3
   local.tee $0
   i32.const 1
   i32.sub
   local.set $3
   local.get $0
   if
    local.get $1
    i32.load16_u $0
    local.tee $0
    local.get $2
    i32.load16_u $0
    local.tee $4
    i32.ne
    if
     local.get $0
     local.get $4
     i32.sub
     return
    end
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $start:assembly/types/index
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 66548
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 6324
   i32.const 6320
   i32.store $0
   i32.const 6328
   i32.const 6320
   i32.store $0
   i32.const 6320
   global.set $~lib/rt/itcms/pinSpace
   i32.const 6356
   i32.const 6352
   i32.store $0
   i32.const 6360
   i32.const 6352
   i32.store $0
   i32.const 6352
   global.set $~lib/rt/itcms/toSpace
   i32.const 6500
   i32.const 6496
   i32.store $0
   i32.const 6504
   i32.const 6496
   i32.store $0
   i32.const 6496
   global.set $~lib/rt/itcms/fromSpace
   i32.const 256
   call $~lib/typedarray/Uint8Array#constructor
   global.set $~lib/as-uuid/assembly/rng/rnds8Pool
   i32.const 256
   global.set $~lib/as-uuid/assembly/rng/poolPtr
   call $~lib/set/Set<~lib/string/String>#constructor
   global.set $assembly/types/dvcEvent/EventTypes
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/dvcEvent/EventTypes
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6624
   i32.store $0 offset=4
   local.get $0
   i32.const 6624
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/dvcEvent/EventTypes
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6688
   i32.store $0 offset=4
   local.get $0
   i32.const 6688
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/dvcEvent/EventTypes
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6752
   i32.store $0 offset=4
   local.get $0
   i32.const 6752
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/dvcEvent/EventTypes
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6816
   i32.store $0 offset=4
   local.get $0
   i32.const 6816
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/types/dvcEvent/EventTypes
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6880
   i32.store $0 offset=4
   local.get $0
   i32.const 6880
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   call $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#constructor
   global.set $~lib/as-proto/assembly/Protobuf/WRITER
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 12
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 17
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.load $0 offset=4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.load $0 offset=4
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $2
   local.get $1
   i32.load $0 offset=8
   i32.add
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/as-proto/assembly/Protobuf/READER
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  local.tee $3
  i32.load $0
  i32.const -4
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $3
   local.get $1
   i32.store $0 offset=16
   local.get $0
   return
  end
  local.get $1
  local.get $3
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $0
  local.get $1
  local.get $3
  i32.load $0 offset=16
  local.tee $0
  local.get $0
  local.get $1
  i32.gt_u
  select
  memory.copy $0 $0
  local.get $2
 )
 (func $~lib/string/String.fromCharCode@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  i32.const 2
  local.get $1
  i32.const 0
  i32.gt_s
  local.tee $3
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  local.get $0
  i32.store16 $0
  local.get $3
  if
   local.get $2
   local.get $1
   i32.store16 $0 offset=2
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 8844
    i32.add
    i64.load32_u $0
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 8844
    i32.add
    i64.load32_u $0
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 8844
   i32.add
   i32.load $0
   i32.store $0
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 8844
   i32.add
   i32.load $0
   i32.store $0
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16 $0
  end
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  local.get $1
  i32.const 36
  i32.gt_s
  i32.or
  if
   i32.const 8640
   i32.const 8768
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~lib/util/number/itoa32
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 8832
    local.set $6
    br $__inlined_func$~lib/util/number/itoa32
   end
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $5
   select
   local.set $7
   local.get $1
   i32.const 10
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $7
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $7
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $7
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $7
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $7
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $7
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $7
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $7
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $0
    i32.const 1
    i32.shl
    local.get $5
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $6
    i32.store $0
    local.get $5
    local.get $6
    i32.add
    local.get $7
    local.get $0
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $1
    i32.const 16
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 31
     local.get $7
     i32.clz
     i32.sub
     i32.const 2
     i32.shr_s
     i32.const 1
     i32.add
     local.tee $1
     i32.const 1
     i32.shl
     local.get $5
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store $0
     local.get $5
     local.get $6
     i32.add
     local.set $0
     local.get $7
     i64.extend_i32_u
     local.set $2
     loop $while-continue|0
      local.get $1
      i32.const 2
      i32.ge_u
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.sub
       local.tee $1
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.wrap_i64
       i32.const 255
       i32.and
       i32.const 2
       i32.shl
       i32.const 9264
       i32.add
       i32.load $0
       i32.store $0
       local.get $2
       i64.const 8
       i64.shr_u
       local.set $2
       br $while-continue|0
      end
     end
     local.get $1
     i32.const 1
     i32.and
     if
      local.get $0
      local.get $2
      i32.wrap_i64
      i32.const 6
      i32.shl
      i32.const 9264
      i32.add
      i32.load16_u $0
      i32.store16 $0
     end
    else
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/util/number/ulog_base (result i32)
      local.get $7
      i64.extend_i32_u
      local.set $3
      local.get $1
      i32.popcnt
      i32.const 1
      i32.eq
      if
       i32.const 63
       local.get $3
       i64.clz
       i32.wrap_i64
       i32.sub
       i32.const 31
       local.get $1
       i32.clz
       i32.sub
       i32.div_u
       i32.const 1
       i32.add
       br $__inlined_func$~lib/util/number/ulog_base
      end
      local.get $1
      i64.extend_i32_s
      local.tee $8
      local.set $2
      i32.const 1
      local.set $0
      loop $while-continue|01
       local.get $2
       local.get $3
       i64.le_u
       if
        local.get $3
        local.get $2
        i64.div_u
        local.set $3
        local.get $2
        local.get $2
        i64.mul
        local.set $2
        local.get $0
        i32.const 1
        i32.shl
        local.set $0
        br $while-continue|01
       end
      end
      loop $while-continue|1
       local.get $3
       i64.const 0
       i64.ne
       if
        local.get $3
        local.get $8
        i64.div_u
        local.set $3
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $while-continue|1
       end
      end
      local.get $0
      i32.const 1
      i32.sub
     end
     local.tee $0
     i32.const 1
     i32.shl
     local.get $5
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store $0
     local.get $5
     local.get $6
     i32.add
     local.set $4
     local.get $7
     i64.extend_i32_u
     local.set $2
     local.get $1
     i64.extend_i32_s
     local.set $3
     local.get $1
     local.get $1
     i32.const 1
     i32.sub
     i32.and
     if
      loop $do-loop|1
       local.get $4
       local.get $0
       i32.const 1
       i32.sub
       local.tee $0
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $2
       local.get $3
       i64.div_u
       local.tee $2
       local.get $3
       i64.mul
       i64.sub
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 10320
       i32.add
       i32.load16_u $0
       i32.store16 $0
       local.get $2
       i64.const 0
       i64.ne
       br_if $do-loop|1
      end
     else
      local.get $1
      i32.ctz
      i32.const 7
      i32.and
      i64.extend_i32_s
      local.set $8
      local.get $3
      i64.const 1
      i64.sub
      local.set $3
      loop $do-loop|0
       local.get $4
       local.get $0
       i32.const 1
       i32.sub
       local.tee $0
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $3
       i64.and
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 10320
       i32.add
       i32.load16_u $0
       i32.store16 $0
       local.get $2
       local.get $8
       i64.shr_u
       local.tee $2
       i64.const 0
       i64.ne
       br_if $do-loop|0
      end
     end
    end
   end
   local.get $5
   if
    local.get $6
    i32.const 45
    i32.store16 $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $6
 )
 (func $start:assembly/managers/eventQueueManager
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   call $~lib/set/Set<~lib/string/String>#constructor
   global.set $assembly/eventQueue/eventQueue/EventTypesSet
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/eventQueue/eventQueue/EventTypesSet
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6624
   i32.store $0 offset=4
   local.get $0
   i32.const 6624
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/eventQueue/eventQueue/EventTypesSet
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6688
   i32.store $0 offset=4
   local.get $0
   i32.const 6688
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/eventQueue/eventQueue/EventTypesSet
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6752
   i32.store $0 offset=4
   local.get $0
   i32.const 6752
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/eventQueue/eventQueue/EventTypesSet
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6816
   i32.store $0 offset=4
   local.get $0
   i32.const 6816
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 24
   i32.const 117
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=20
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/managers/eventQueueManager/_eventQueueMap
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 24
   i32.const 122
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=20
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/managers/eventQueueManager/_requestPayloadMap
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 8
   i32.const 124
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 125
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   f64.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String.UTF8.encodeUnsafe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $2
  local.set $1
  loop $while-continue|0
   local.get $0
   local.get $3
   i32.lt_u
   if
    local.get $0
    i32.load16_u $0
    local.tee $2
    i32.const 128
    i32.lt_u
    if (result i32)
     local.get $1
     local.get $2
     i32.store8 $0
     local.get $1
     i32.const 1
     i32.add
    else
     local.get $2
     i32.const 2048
     i32.lt_u
     if (result i32)
      local.get $1
      local.get $2
      i32.const 6
      i32.shr_u
      i32.const 192
      i32.or
      local.get $2
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.const 8
      i32.shl
      i32.or
      i32.store16 $0
      local.get $1
      i32.const 2
      i32.add
     else
      local.get $2
      i32.const 56320
      i32.lt_u
      local.get $0
      i32.const 2
      i32.add
      local.get $3
      i32.lt_u
      i32.and
      local.get $2
      i32.const 63488
      i32.and
      i32.const 55296
      i32.eq
      i32.and
      if
       local.get $0
       i32.load16_u $0 offset=2
       local.tee $4
       i32.const 64512
       i32.and
       i32.const 56320
       i32.eq
       if
        local.get $1
        local.get $2
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.const 65536
        i32.add
        local.get $4
        i32.const 1023
        i32.and
        i32.or
        local.tee $2
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 24
        i32.shl
        local.get $2
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 16
        i32.shl
        i32.or
        local.get $2
        i32.const 12
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.const 8
        i32.shl
        i32.or
        local.get $2
        i32.const 18
        i32.shr_u
        i32.const 240
        i32.or
        i32.or
        i32.store $0
        local.get $1
        i32.const 4
        i32.add
        local.set $1
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        br $while-continue|0
       end
      end
      local.get $1
      local.get $2
      i32.const 12
      i32.shr_u
      i32.const 224
      i32.or
      local.get $2
      i32.const 6
      i32.shr_u
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.const 8
      i32.shl
      i32.or
      i32.store16 $0
      local.get $1
      local.get $2
      i32.const 63
      i32.and
      i32.const 128
      i32.or
      i32.store8 $0 offset=2
      local.get $1
      i32.const 3
      i32.add
     end
    end
    local.set $1
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 1
  i32.const 134
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store8 $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/math/ipow32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5
  local.set $1
  i32.const 1
  local.set $2
  local.get $0
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.eqz
   return
  else
   local.get $0
   i32.const 1
   i32.eq
   if
    i32.const 5
    return
   else
    local.get $0
    i32.const 2
    i32.eq
    if
     i32.const 25
     return
    else
     local.get $0
     i32.const 32
     i32.lt_s
     if
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            i32.const 31
            local.get $0
            i32.clz
            i32.sub
            br_table $case4|0 $case3|0 $case2|0 $case1|0 $case0|0 $break|0
           end
           i32.const 5
           i32.const 1
           local.get $0
           i32.const 1
           i32.and
           select
           local.set $2
           local.get $0
           i32.const 1
           i32.shr_u
           local.set $0
           i32.const 25
           local.set $1
          end
          local.get $1
          local.get $2
          i32.mul
          local.get $2
          local.get $0
          i32.const 1
          i32.and
          select
          local.set $2
          local.get $0
          i32.const 1
          i32.shr_u
          local.set $0
          local.get $1
          local.get $1
          i32.mul
          local.set $1
         end
         local.get $1
         local.get $2
         i32.mul
         local.get $2
         local.get $0
         i32.const 1
         i32.and
         select
         local.set $2
         local.get $0
         i32.const 1
         i32.shr_u
         local.set $0
         local.get $1
         local.get $1
         i32.mul
         local.set $1
        end
        local.get $1
        local.get $2
        i32.mul
        local.get $2
        local.get $0
        i32.const 1
        i32.and
        select
        local.set $2
        local.get $0
        i32.const 1
        i32.shr_u
        local.set $0
        local.get $1
        local.get $1
        i32.mul
        local.set $1
       end
       local.get $1
       local.get $2
       i32.mul
       local.get $2
       local.get $0
       i32.const 1
       i32.and
       select
       local.set $2
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $0
   if
    local.get $1
    local.get $2
    i32.mul
    local.get $2
    local.get $0
    i32.const 1
    i32.and
    select
    local.set $2
    local.get $0
    i32.const 1
    i32.shr_u
    local.set $0
    local.get $1
    local.get $1
    i32.mul
    local.set $1
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  local.get $1
  i32.const 1023
  i32.gt_s
  if (result f64)
   local.get $0
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $0
   local.get $1
   i32.const 1023
   i32.sub
   local.tee $1
   i32.const 1023
   i32.gt_s
   if (result f64)
    i32.const 1023
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $1
    local.get $1
    i32.const 1023
    i32.ge_s
    select
    local.set $1
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
   else
    local.get $0
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if (result f64)
    local.get $0
    f64.const 2.004168360008973e-292
    f64.mul
    local.set $0
    local.get $1
    i32.const 969
    i32.add
    local.tee $1
    i32.const -1022
    i32.lt_s
    if (result f64)
     i32.const -1022
     local.get $1
     i32.const 969
     i32.add
     local.tee $1
     local.get $1
     i32.const -1022
     i32.le_s
     select
     local.set $1
     local.get $0
     f64.const 2.004168360008973e-292
     f64.mul
    else
     local.get $0
    end
   else
    local.get $0
   end
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 8
  i32.const 135
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i64.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/util/number/genDigits (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  local.get $1
  local.get $0
  i64.sub
  local.set $10
  i64.const 1
  i32.const 0
  local.get $2
  i32.sub
  local.tee $11
  i64.extend_i32_s
  local.tee $0
  i64.shl
  local.tee $7
  i64.const 1
  i64.sub
  local.tee $12
  local.get $1
  i64.and
  local.set $9
  local.get $1
  local.get $0
  i64.shr_u
  i32.wrap_i64
  local.tee $5
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $5
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $5
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $5
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $5
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $5
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $8
  loop $while-continue|0
   local.get $8
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $8
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $5
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $5
               i32.const 1000000000
               i32.rem_u
               local.set $5
               br $break|1
              end
              local.get $5
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $5
              i32.const 100000000
              i32.rem_u
              local.set $5
              br $break|1
             end
             local.get $5
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $5
             i32.const 10000000
             i32.rem_u
             local.set $5
             br $break|1
            end
            local.get $5
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $5
            i32.const 1000000
            i32.rem_u
            local.set $5
            br $break|1
           end
           local.get $5
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $5
           i32.const 100000
           i32.rem_u
           local.set $5
           br $break|1
          end
          local.get $5
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $5
          i32.const 10000
          i32.rem_u
          local.set $5
          br $break|1
         end
         local.get $5
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $5
         i32.const 1000
         i32.rem_u
         local.set $5
         br $break|1
        end
        local.get $5
        i32.const 100
        i32.div_u
        local.set $6
        local.get $5
        i32.const 100
        i32.rem_u
        local.set $5
        br $break|1
       end
       local.get $5
       i32.const 10
       i32.div_u
       local.set $6
       local.get $5
       i32.const 10
       i32.rem_u
       local.set $5
       br $break|1
      end
      local.get $5
      local.set $6
      i32.const 0
      local.set $5
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $4
    local.get $6
    i32.or
    if
     local.get $4
     local.tee $2
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 1
     i32.shl
     i32.const 16880
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16 $0
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $8
    local.get $3
    local.get $5
    i64.extend_i32_u
    local.get $11
    i64.extend_i32_s
    i64.shl
    local.get $9
    i64.add
    local.tee $0
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $8
     i32.add
     global.set $~lib/util/number/_K
     local.get $8
     i32.const 2
     i32.shl
     i32.const 17808
     i32.add
     i64.load32_u $0
     local.get $11
     i64.extend_i32_s
     i64.shl
     local.set $7
     local.get $4
     i32.const 1
     i32.shl
     i32.const 16878
     i32.add
     local.tee $2
     i32.load16_u $0
     local.set $6
     loop $while-continue|3
      local.get $0
      local.get $10
      i64.lt_u
      local.get $3
      local.get $0
      i64.sub
      local.get $7
      i64.ge_u
      i32.and
      if (result i32)
       local.get $10
       local.get $0
       local.get $7
       i64.add
       local.tee $1
       i64.gt_u
       local.get $10
       local.get $0
       i64.sub
       local.get $1
       local.get $10
       i64.sub
       i64.gt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       local.get $0
       local.get $7
       i64.add
       local.set $0
       br $while-continue|3
      end
     end
     local.get $2
     local.get $6
     i32.store16 $0
     local.get $4
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $3
   i64.const 10
   i64.mul
   local.set $3
   local.get $9
   i64.const 10
   i64.mul
   local.tee $1
   local.get $11
   i64.extend_i32_s
   i64.shr_u
   local.tee $0
   local.get $4
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $4
    local.tee $2
    i32.const 1
    i32.add
    local.set $4
    local.get $2
    i32.const 1
    i32.shl
    i32.const 16880
    i32.add
    local.get $0
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16 $0
   end
   local.get $8
   i32.const 1
   i32.sub
   local.set $8
   local.get $1
   local.get $12
   i64.and
   local.tee $9
   local.get $3
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $8
  i32.add
  global.set $~lib/util/number/_K
  local.get $10
  i32.const 0
  local.get $8
  i32.sub
  i32.const 2
  i32.shl
  i32.const 17808
  i32.add
  i64.load32_u $0
  i64.mul
  local.set $1
  local.get $4
  i32.const 1
  i32.shl
  i32.const 16878
  i32.add
  local.tee $2
  i32.load16_u $0
  local.set $6
  loop $while-continue|6
   local.get $1
   local.get $9
   i64.gt_u
   local.get $3
   local.get $9
   i64.sub
   local.get $7
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $7
    local.get $9
    i64.add
    local.tee $0
    i64.gt_u
    local.get $1
    local.get $9
    i64.sub
    local.get $0
    local.get $1
    i64.sub
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    local.get $7
    local.get $9
    i64.add
    local.set $9
    br $while-continue|6
   end
  end
  local.get $2
  local.get $6
  i32.store16 $0
  local.get $4
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $0
    i32.const 46
    i32.store16 $0
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $0
     i32.const 3014704
     i32.store $0
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16 $0
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $0
      i32.const 46
      i32.store16 $0 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16 $0
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 f64) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  f64.const 0
  f64.lt
  local.tee $2
  if (result f64)
   i32.const 16880
   i32.const 45
   i32.store16 $0
   local.get $0
   f64.neg
  else
   local.get $0
  end
  i64.reinterpret_f64
  local.tee $1
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $7
  i32.const 1
  local.get $7
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $1
  i64.const 4503599627370495
  i64.and
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $1
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $3
  i64.clz
  i32.wrap_i64
  local.tee $7
  i32.sub
  local.set $9
  local.get $3
  local.get $7
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $1
  local.get $1
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $7
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $7
  i32.sub
  local.get $9
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $9
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  local.tee $7
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $0
  i32.trunc_sat_f64_s
  local.tee $8
  local.get $8
  f64.convert_i32_s
  local.get $0
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $8
  i32.const 3
  i32.shl
  local.tee $9
  i32.sub
  global.set $~lib/util/number/_K
  local.get $9
  i32.const 16936
  i32.add
  i64.load $0
  global.set $~lib/util/number/_frc_pow
  local.get $8
  i32.const 1
  i32.shl
  i32.const 17632
  i32.add
  i32.load16_s $0
  global.set $~lib/util/number/_exp_pow
  local.get $1
  local.get $1
  i64.clz
  i64.shl
  local.tee $1
  i64.const 4294967295
  i64.and
  local.set $4
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  local.get $1
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $4
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $5
  global.get $~lib/util/number/_frc_plus
  local.tee $3
  i64.const 4294967295
  i64.and
  local.set $12
  local.get $3
  i64.const 32
  i64.shr_u
  local.tee $3
  local.get $11
  i64.mul
  local.get $11
  local.get $12
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $6
  global.get $~lib/util/number/_frc_minus
  local.tee $13
  i64.const 4294967295
  i64.and
  local.set $14
  local.get $13
  i64.const 32
  i64.shr_u
  local.tee $13
  local.get $11
  i64.mul
  local.get $11
  local.get $14
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $2
  i32.const 1
  i32.shl
  i32.const 16880
  i32.add
  local.get $1
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $5
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $4
  i64.mul
  local.get $5
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $3
  i64.mul
  local.get $6
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $12
  i64.mul
  local.get $6
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.tee $3
  local.get $7
  global.get $~lib/util/number/_exp_pow
  i32.add
  i32.const -64
  i32.sub
  local.get $3
  local.get $1
  local.get $13
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $14
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $2
  call $~lib/util/number/genDigits
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $2
  i32.add
 )
 (func $~lib/number/F64#toString (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $__inlined_func$~lib/util/number/dtoa
   local.get $0
   f64.const 0
   f64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 16736
    local.set $1
    br $__inlined_func$~lib/util/number/dtoa
   end
   local.get $0
   local.get $0
   f64.sub
   f64.const 0
   f64.ne
   if
    local.get $0
    local.get $0
    f64.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 16768
     local.set $1
     br $__inlined_func$~lib/util/number/dtoa
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 16800
    i32.const 16848
    local.get $0
    f64.const 0
    f64.lt
    select
    local.set $1
    br $__inlined_func$~lib/util/number/dtoa
   end
   local.get $0
   call $~lib/util/number/dtoa_core
   i32.const 1
   i32.shl
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 16880
   local.get $2
   memory.copy $0 $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $1
 )
 (func $assembly/testHelpers/triggerAbort
  i32.const 31424
  i32.const 29600
  i32.const 171
  i32.const 5
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 31792
    i32.const 6272
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 31856
   i32.const 6272
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load $0 offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $~lib/assemblyscript-regex/assembly/char/isWhitespace (param $0 i32) (result i32)
  block $break|0
   block $case13|0
    local.get $0
    i32.const 32
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 9
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 11
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 12
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 10
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 13
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 160
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 5760
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8232
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8233
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8239
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8287
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 12288
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 65279
    i32.eq
    br_if $case13|0
    br $break|0
   end
   i32.const 1
   return
  end
  local.get $0
  i32.const -8192
  i32.add
  i32.const 11
  i32.lt_u
  if
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#replace@override (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $folding-inner2
   block $folding-inner1
    block $default
     block $case4
      block $case1
       local.get $0
       i32.const 8
       i32.sub
       i32.load $0
       i32.const 27
       i32.sub
       br_table $folding-inner1 $default $default $default $default $case1 $case4 $folding-inner1 $default $folding-inner1 $default $default $default $folding-inner1 $default
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner2
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i32.const 0
      i32.const 20
      memory.fill $0
      local.get $4
      local.get $0
      i32.store $0
      local.get $4
      local.get $0
      i32.load $0 offset=4
      local.tee $3
      i32.store $0 offset=4
      local.get $4
      local.get $3
      i32.store $0
      local.get $4
      local.get $1
      i32.store $0 offset=8
      local.get $3
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner2
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i64.const 0
      i64.store $0
      local.get $4
      i32.const 0
      i32.store $0 offset=8
      local.get $4
      local.get $3
      i32.store $0
      i32.const 1
      global.set $~argumentsLength
      local.get $4
      local.get $3
      i32.const 0
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
      local.tee $3
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $3
      local.get $1
      local.get $2
      call $~lib/array/Array<~lib/string/String>#__set
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=8
      local.get $0
      local.get $3
      i32.store $0 offset=4
      local.get $3
      if
       local.get $0
       local.get $3
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      return
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner2
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     i32.load $0 offset=4
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      local.get $2
      i32.store $0 offset=4
      local.get $0
      local.get $2
      i32.store $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      local.get $2
      i32.store $0 offset=4
      local.get $0
      local.get $2
      i32.store $0 offset=8
     end
     local.get $2
     if
      local.get $0
      local.get $2
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    i32.const 10416
    i32.const 7664
    i32.const 29
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $folding-inner4
   block $folding-inner3
    block $folding-inner2
     block $folding-inner1
      block $folding-inner0
       block $default
        block $case10
         block $case9
          block $case8
           block $case7
            block $case6
             block $case5
              block $case4
               block $case3
                block $case2
                 block $case1
                  block $case0
                   local.get $0
                   i32.const 8
                   i32.sub
                   i32.load $0
                   i32.const 27
                   i32.sub
                   br_table $case0 $default $default $default $default $case1 $case9 $case10 $default $case8 $case4 $case6 $case5 $case7 $case2 $case3 $default
                  end
                  global.get $~lib/memory/__stack_pointer
                  i32.const 12
                  i32.sub
                  global.set $~lib/memory/__stack_pointer
                  global.get $~lib/memory/__stack_pointer
                  i32.const 33780
                  i32.lt_s
                  br_if $folding-inner0
                  global.get $~lib/memory/__stack_pointer
                  local.tee $1
                  i64.const 0
                  i64.store $0
                  local.get $1
                  i32.const 0
                  i32.store $0 offset=8
                  local.get $1
                  local.get $0
                  i32.store $0
                  local.get $1
                  local.get $0
                  i32.load $0 offset=4
                  local.tee $0
                  i32.store $0 offset=4
                  local.get $0
                  if (result i32)
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store $0 offset=8
                   local.get $0
                   call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
                  else
                   i32.const 0
                  end
                  local.set $0
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.store $0 offset=8
                  local.get $0
                  call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
                  local.set $0
                  br $folding-inner3
                 end
                 global.get $~lib/memory/__stack_pointer
                 i32.const 16
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 33780
                 i32.lt_s
                 br_if $folding-inner0
                 global.get $~lib/memory/__stack_pointer
                 local.tee $1
                 i64.const 0
                 i64.store $0
                 local.get $1
                 i64.const 0
                 i64.store $0 offset=8
                 local.get $1
                 local.get $0
                 i32.store $0 offset=12
                 local.get $1
                 local.get $0
                 i32.load $0 offset=4
                 local.tee $0
                 i32.store $0 offset=8
                 i32.const 1
                 global.set $~argumentsLength
                 local.get $0
                 i32.const 0
                 call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.store $0
                 global.get $~lib/memory/__stack_pointer
                 i32.const 31920
                 i32.store $0 offset=4
                 local.get $0
                 i32.const 31920
                 call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.store $0
                 local.get $0
                 call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
                 local.set $0
                 br $folding-inner4
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 16
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 33780
                i32.lt_s
                br_if $folding-inner0
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                i64.const 0
                i64.store $0
                local.get $1
                i64.const 0
                i64.store $0 offset=8
                local.get $1
                local.get $0
                i32.store $0 offset=12
                local.get $1
                local.get $0
                i32.load $0 offset=4
                local.tee $1
                i32.store $0 offset=8
                i32.const 1
                global.set $~argumentsLength
                local.get $1
                i32.const 0
                call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store $0
                global.get $~lib/memory/__stack_pointer
                i32.const 31952
                i32.store $0 offset=4
                local.get $1
                i32.const 31952
                call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
                local.set $1
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store $0
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store $0
                local.get $1
                local.get $0
                i32.load8_u $0 offset=8
                call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
                local.set $0
                br $folding-inner4
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 4
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 33780
               i32.lt_s
               br_if $folding-inner0
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               i32.const 0
               i32.store $0
               local.get $1
               local.get $0
               i32.store $0
               local.get $0
               i32.load $0 offset=4
               local.set $2
               local.get $1
               local.get $0
               i32.store $0
               local.get $2
               local.get $0
               i32.load $0 offset=8
               call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
               local.set $0
               br $folding-inner1
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 4
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 33780
              i32.lt_s
              br_if $folding-inner0
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              i32.const 0
              i32.store $0
              local.get $1
              local.get $0
              i32.store $0
              local.get $0
              i32.load $0 offset=4
              call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
              local.set $0
              br $folding-inner1
             end
             global.get $~lib/memory/__stack_pointer
             i32.const 4
             i32.sub
             global.set $~lib/memory/__stack_pointer
             global.get $~lib/memory/__stack_pointer
             i32.const 33780
             i32.lt_s
             br_if $folding-inner0
             global.get $~lib/memory/__stack_pointer
             local.tee $1
             i32.const 0
             i32.store $0
             local.get $1
             local.get $0
             i32.store $0
             local.get $0
             i32.load $0 offset=4
             call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
             local.set $0
             br $folding-inner1
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 4
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 33780
            i32.lt_s
            br_if $folding-inner0
            global.get $~lib/memory/__stack_pointer
            local.tee $1
            i32.const 0
            i32.store $0
            local.get $1
            local.get $0
            i32.store $0
            local.get $0
            i32.load $0 offset=4
            call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
            local.set $0
            br $folding-inner1
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 33780
           i32.lt_s
           br_if $folding-inner0
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i64.const 0
           i64.store $0
           local.get $1
           local.get $0
           i32.store $0 offset=4
           local.get $1
           local.get $0
           i32.load $0 offset=4
           local.tee $1
           i32.store $0
           local.get $1
           call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
           local.set $1
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $1
           local.get $0
           i32.load $0 offset=8
           i32.const 1
           call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
           local.set $0
           br $folding-inner2
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i64.const 0
          i64.store $0
          local.get $1
          local.get $0
          i32.store $0 offset=4
          local.get $1
          local.get $0
          i32.load $0 offset=4
          local.tee $1
          i32.store $0
          local.get $1
          call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          i32.load $0 offset=8
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $1
          local.get $2
          local.get $0
          i32.load $0 offset=12
          i32.const 1
          call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
          local.set $0
          br $folding-inner2
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 12
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i64.const 0
         i64.store $0
         local.get $1
         i32.const 0
         i32.store $0 offset=8
         local.get $1
         local.get $0
         i32.store $0 offset=8
         local.get $1
         local.get $0
         i32.load $0 offset=4
         local.tee $1
         i32.store $0 offset=4
         local.get $1
         call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=8
         local.tee $0
         i32.store $0 offset=4
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         local.get $1
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
         local.set $0
         br $folding-inner3
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i64.const 0
        i64.store $0
        local.get $1
        local.get $0
        i32.store $0 offset=4
        local.get $1
        local.get $0
        i32.load $0 offset=4
        local.tee $1
        i32.store $0
        local.get $1
        call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.load8_u $0 offset=8
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $1
        local.get $2
        local.get $0
        i32.load $0 offset=12
        call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
        local.set $0
        br $folding-inner2
       end
       unreachable
      end
      i32.const 66576
      i32.const 66624
      i32.const 1
      i32.const 1
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@override (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  block $folding-inner1
   block $folding-inner0
    block $default
     block $case4
      block $case3
       block $case2
        block $case1
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         local.tee $3
         i32.const 25
         i32.ne
         if
          local.get $3
          i32.const 48
          i32.sub
          br_table $case2 $default $default $default $default $default $default $default $case3 $case4 $case1 $default
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.store $0
         local.get $1
         local.get $0
         i32.store $0
         local.get $0
         local.get $2
         i32.store $0 offset=8
         local.get $1
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 2
         return
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        i32.const 0
        i32.const 20
        memory.fill $0
        local.get $3
        local.get $0
        i32.store $0 offset=4
        local.get $3
        local.get $0
        i32.load $0 offset=8
        local.tee $3
        i32.store $0
        local.get $3
        i32.load8_u $0 offset=17
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         local.get $0
         i32.store $0 offset=8
         local.get $4
         local.get $0
         i32.load $0 offset=8
         local.tee $3
         i32.store $0
         local.get $4
         local.get $1
         i32.store $0 offset=8
         local.get $4
         local.get $0
         i32.store $0 offset=16
         local.get $4
         local.get $0
         i32.load $0 offset=8
         local.tee $0
         i32.store $0 offset=12
         local.get $1
         local.get $0
         i32.load $0 offset=8
         local.get $2
         call $~lib/string/String#substring
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         local.get $3
         local.get $0
         i32.store $0 offset=12
         local.get $0
         if
          local.get $3
          local.get $0
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 2
        return
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       i64.const 0
       i64.store $0
       local.get $3
       local.get $0
       i32.store $0 offset=4
       local.get $3
       local.get $0
       i32.load $0 offset=12
       local.tee $0
       i32.store $0
       local.get $3
       local.get $1
       i32.store $0 offset=4
       local.get $0
       local.get $1
       local.get $2
       call $~lib/string/String#charCodeAt
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches
       i32.eqz
       local.set $0
       br $folding-inner1
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i64.const 0
      i64.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.load $0 offset=12
      local.tee $0
      i32.store $0
      local.get $3
      local.get $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $2
      call $~lib/string/String#charCodeAt
      call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
      i32.eqz
      local.set $0
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=12
     local.tee $0
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $0
     local.get $1
     local.get $2
     call $~lib/string/String#charCodeAt
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
     i32.eqz
     local.set $0
     br $folding-inner1
    end
    i32.const 2
    return
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $folding-inner5
   block $folding-inner4
    block $folding-inner3
     block $folding-inner2
      block $folding-inner1
       block $default
        block $case46
         block $case45
          block $case44
           block $case43
            block $case42
             block $case41
              block $case40
               block $case39
                block $case38
                 block $case37
                  block $case36
                   block $case35
                    block $case34
                     block $case33
                      block $case32
                       block $case31
                        block $case30
                         block $case29
                          block $case28
                           block $case27
                            block $case26
                             block $case25
                              block $case24
                               block $case23
                                block $case22
                                 block $case21
                                  block $case20
                                   block $case19
                                    block $case18
                                     block $case17
                                      block $case16
                                       block $case15
                                        block $case14
                                         block $case13
                                          block $case12
                                           block $case11
                                            block $case10
                                             block $case9
                                              block $case8
                                               block $case7
                                                block $case6
                                                 block $case5
                                                  block $case4
                                                   block $case3
                                                    block $case2
                                                     block $case1
                                                      local.get $0
                                                      i32.const 8
                                                      i32.sub
                                                      i32.load $0
                                                      local.tee $1
                                                      i32.const 133
                                                      i32.ne
                                                      if
                                                       local.get $1
                                                       i32.const 125
                                                       i32.eq
                                                       br_if $case1
                                                       local.get $1
                                                       i32.const 124
                                                       i32.eq
                                                       br_if $case1
                                                       local.get $1
                                                       i32.const 135
                                                       i32.eq
                                                       br_if $case2
                                                       local.get $1
                                                       i32.const 126
                                                       i32.eq
                                                       br_if $case3
                                                       local.get $1
                                                       i32.const 134
                                                       i32.eq
                                                       br_if $case4
                                                       local.get $1
                                                       i32.const 132
                                                       i32.eq
                                                       br_if $case5
                                                       local.get $1
                                                       i32.const 6
                                                       i32.eq
                                                       br_if $case6
                                                       local.get $1
                                                       i32.const 139
                                                       i32.eq
                                                       br_if $case7
                                                       local.get $1
                                                       i32.const 141
                                                       i32.eq
                                                       br_if $case8
                                                       local.get $1
                                                       i32.const 137
                                                       i32.eq
                                                       br_if $case9
                                                       local.get $1
                                                       i32.const 138
                                                       i32.eq
                                                       br_if $case10
                                                       local.get $1
                                                       i32.const 143
                                                       i32.eq
                                                       br_if $case11
                                                       local.get $1
                                                       i32.const 67
                                                       i32.eq
                                                       br_if $case12
                                                       local.get $1
                                                       i32.const 66
                                                       i32.eq
                                                       br_if $case13
                                                       local.get $1
                                                       i32.const 74
                                                       i32.eq
                                                       br_if $case14
                                                       local.get $1
                                                       i32.const 96
                                                       i32.eq
                                                       br_if $case15
                                                       local.get $1
                                                       i32.const 109
                                                       i32.eq
                                                       br_if $case16
                                                       local.get $1
                                                       i32.const 108
                                                       i32.eq
                                                       br_if $case17
                                                       local.get $1
                                                       i32.const 104
                                                       i32.eq
                                                       br_if $case18
                                                       local.get $1
                                                       i32.const 119
                                                       i32.eq
                                                       br_if $case19
                                                       local.get $1
                                                       i32.const 107
                                                       i32.eq
                                                       br_if $case20
                                                       local.get $1
                                                       i32.const 105
                                                       i32.eq
                                                       br_if $case21
                                                       local.get $1
                                                       i32.const 103
                                                       i32.eq
                                                       br_if $case22
                                                       local.get $1
                                                       i32.const 188
                                                       i32.eq
                                                       br_if $case23
                                                       local.get $1
                                                       i32.const 76
                                                       i32.eq
                                                       br_if $case24
                                                       local.get $1
                                                       i32.const 77
                                                       i32.eq
                                                       br_if $case25
                                                       local.get $1
                                                       i32.const 75
                                                       i32.eq
                                                       br_if $case26
                                                       local.get $1
                                                       i32.const 189
                                                       i32.eq
                                                       br_if $case27
                                                       local.get $1
                                                       i32.const 190
                                                       i32.eq
                                                       br_if $case28
                                                       local.get $1
                                                       i32.const 192
                                                       i32.eq
                                                       br_if $case29
                                                       local.get $1
                                                       i32.const 81
                                                       i32.eq
                                                       br_if $case30
                                                       local.get $1
                                                       i32.const 82
                                                       i32.eq
                                                       br_if $case31
                                                       local.get $1
                                                       i32.const 84
                                                       i32.eq
                                                       br_if $case32
                                                       local.get $1
                                                       i32.const 5
                                                       i32.eq
                                                       br_if $case33
                                                       local.get $1
                                                       i32.const 186
                                                       i32.eq
                                                       br_if $case34
                                                       local.get $1
                                                       i32.const 71
                                                       i32.eq
                                                       br_if $case35
                                                       local.get $1
                                                       i32.const 70
                                                       i32.eq
                                                       br_if $case36
                                                       local.get $1
                                                       i32.const 69
                                                       i32.eq
                                                       br_if $case37
                                                       local.get $1
                                                       i32.const 68
                                                       i32.eq
                                                       br_if $case38
                                                       local.get $1
                                                       i32.const 148
                                                       i32.eq
                                                       br_if $case39
                                                       local.get $1
                                                       i32.const 151
                                                       i32.eq
                                                       br_if $case40
                                                       local.get $1
                                                       i32.const 153
                                                       i32.eq
                                                       br_if $case41
                                                       local.get $1
                                                       i32.const 88
                                                       i32.eq
                                                       br_if $case42
                                                       local.get $1
                                                       i32.const 89
                                                       i32.eq
                                                       br_if $case43
                                                       local.get $1
                                                       i32.const 91
                                                       i32.eq
                                                       br_if $case44
                                                       local.get $1
                                                       i32.const 87
                                                       i32.eq
                                                       br_if $case45
                                                       local.get $1
                                                       i32.const 147
                                                       i32.eq
                                                       br_if $case46
                                                       br $default
                                                      end
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 32
                                                      i32.sub
                                                      global.set $~lib/memory/__stack_pointer
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 33780
                                                      i32.lt_s
                                                      br_if $folding-inner5
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.tee $3
                                                      i32.const 0
                                                      i32.const 32
                                                      memory.fill $0
                                                      local.get $3
                                                      local.get $0
                                                      local.tee $1
                                                      i32.store $0 offset=4
                                                      local.get $3
                                                      local.get $0
                                                      i32.load $0
                                                      local.tee $0
                                                      i32.store $0
                                                      local.get $3
                                                      local.get $0
                                                      i32.const 20
                                                      i32.sub
                                                      i32.load $0 offset=16
                                                      i32.const 1
                                                      i32.shr_u
                                                      call $~lib/array/Array<~lib/string/String>#constructor
                                                      local.tee $5
                                                      i32.store $0 offset=8
                                                      loop $for-loop|0
                                                       global.get $~lib/memory/__stack_pointer
                                                       local.tee $0
                                                       local.get $1
                                                       i32.store $0 offset=4
                                                       local.get $0
                                                       local.get $1
                                                       i32.load $0
                                                       local.tee $0
                                                       i32.store $0
                                                       local.get $2
                                                       local.get $0
                                                       i32.const 20
                                                       i32.sub
                                                       i32.load $0 offset=16
                                                       i32.const 1
                                                       i32.shr_u
                                                       i32.lt_s
                                                       if
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.tee $6
                                                        local.get $1
                                                        i32.store $0 offset=4
                                                        local.get $6
                                                        local.get $1
                                                        i32.load $0
                                                        local.tee $4
                                                        i32.store $0
                                                        local.get $6
                                                        i32.const 4
                                                        i32.sub
                                                        global.set $~lib/memory/__stack_pointer
                                                        global.get $~lib/memory/__stack_pointer
                                                        i32.const 33780
                                                        i32.lt_s
                                                        br_if $folding-inner5
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.tee $0
                                                        i32.const 0
                                                        i32.store $0
                                                        local.get $0
                                                        local.get $4
                                                        i32.store $0
                                                        local.get $2
                                                        local.get $4
                                                        i32.const 20
                                                        i32.sub
                                                        i32.load $0 offset=16
                                                        i32.const 1
                                                        i32.shr_u
                                                        local.tee $0
                                                        i32.const 0
                                                        local.get $2
                                                        i32.const 0
                                                        i32.lt_s
                                                        select
                                                        i32.add
                                                        local.set $3
                                                        local.get $0
                                                        local.get $3
                                                        i32.le_u
                                                        if
                                                         i32.const 6400
                                                         i32.const 12688
                                                         i32.const 57
                                                         i32.const 31
                                                         call $~lib/builtins/abort
                                                         unreachable
                                                        end
                                                        i32.const 2
                                                        i32.const 2
                                                        call $~lib/rt/itcms/__new
                                                        local.tee $0
                                                        local.get $4
                                                        local.get $3
                                                        i32.const 1
                                                        i32.shl
                                                        i32.add
                                                        i32.load16_u $0
                                                        i32.store16 $0
                                                        global.get $~lib/memory/__stack_pointer
                                                        i32.const 4
                                                        i32.add
                                                        global.set $~lib/memory/__stack_pointer
                                                        local.get $6
                                                        local.get $0
                                                        i32.store $0 offset=12
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.get $5
                                                        i32.store $0
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.get $0
                                                        i32.store $0 offset=16
                                                        global.get $~lib/memory/__stack_pointer
                                                        i32.const 4
                                                        i32.sub
                                                        global.set $~lib/memory/__stack_pointer
                                                        global.get $~lib/memory/__stack_pointer
                                                        i32.const 33780
                                                        i32.lt_s
                                                        br_if $folding-inner5
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.tee $3
                                                        i32.const 0
                                                        i32.store $0
                                                        local.get $3
                                                        local.get $0
                                                        i32.store $0
                                                        block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                         block $case8|0
                                                          block $case7|0
                                                           block $case6|0
                                                            block $case5|0
                                                             block $case4|0
                                                              block $case3|0
                                                               block $case2|0
                                                                block $case1|0
                                                                 local.get $0
                                                                 i32.const 0
                                                                 call $~lib/string/String#charCodeAt
                                                                 local.tee $3
                                                                 i32.const 34
                                                                 i32.ne
                                                                 if
                                                                  local.get $3
                                                                  i32.const 92
                                                                  i32.eq
                                                                  br_if $case1|0
                                                                  local.get $3
                                                                  i32.const 8
                                                                  i32.eq
                                                                  br_if $case2|0
                                                                  local.get $3
                                                                  i32.const 10
                                                                  i32.eq
                                                                  br_if $case3|0
                                                                  local.get $3
                                                                  i32.const 13
                                                                  i32.eq
                                                                  br_if $case4|0
                                                                  local.get $3
                                                                  i32.const 9
                                                                  i32.eq
                                                                  br_if $case5|0
                                                                  local.get $3
                                                                  i32.const 12
                                                                  i32.eq
                                                                  br_if $case6|0
                                                                  local.get $3
                                                                  i32.const 11
                                                                  i32.eq
                                                                  br_if $case7|0
                                                                  br $case8|0
                                                                 end
                                                                 global.get $~lib/memory/__stack_pointer
                                                                 i32.const 4
                                                                 i32.add
                                                                 global.set $~lib/memory/__stack_pointer
                                                                 i32.const 32064
                                                                 local.set $0
                                                                 br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                                end
                                                                global.get $~lib/memory/__stack_pointer
                                                                i32.const 4
                                                                i32.add
                                                                global.set $~lib/memory/__stack_pointer
                                                                i32.const 32096
                                                                local.set $0
                                                                br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                               end
                                                               global.get $~lib/memory/__stack_pointer
                                                               i32.const 4
                                                               i32.add
                                                               global.set $~lib/memory/__stack_pointer
                                                               i32.const 32128
                                                               local.set $0
                                                               br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                              end
                                                              global.get $~lib/memory/__stack_pointer
                                                              i32.const 4
                                                              i32.add
                                                              global.set $~lib/memory/__stack_pointer
                                                              i32.const 32160
                                                              local.set $0
                                                              br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                             end
                                                             global.get $~lib/memory/__stack_pointer
                                                             i32.const 4
                                                             i32.add
                                                             global.set $~lib/memory/__stack_pointer
                                                             i32.const 32192
                                                             local.set $0
                                                             br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                            end
                                                            global.get $~lib/memory/__stack_pointer
                                                            i32.const 4
                                                            i32.add
                                                            global.set $~lib/memory/__stack_pointer
                                                            i32.const 32224
                                                            local.set $0
                                                            br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                           end
                                                           global.get $~lib/memory/__stack_pointer
                                                           i32.const 4
                                                           i32.add
                                                           global.set $~lib/memory/__stack_pointer
                                                           i32.const 32256
                                                           local.set $0
                                                           br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                          end
                                                          global.get $~lib/memory/__stack_pointer
                                                          i32.const 4
                                                          i32.add
                                                          global.set $~lib/memory/__stack_pointer
                                                          i32.const 32288
                                                          local.set $0
                                                          br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/escapeChar
                                                         end
                                                         global.get $~lib/memory/__stack_pointer
                                                         i32.const 4
                                                         i32.add
                                                         global.set $~lib/memory/__stack_pointer
                                                        end
                                                        global.get $~lib/memory/__stack_pointer
                                                        local.get $0
                                                        i32.store $0 offset=16
                                                        local.get $5
                                                        local.get $2
                                                        local.get $0
                                                        call $~lib/array/Array<~lib/string/String>#__set
                                                        local.get $2
                                                        i32.const 1
                                                        i32.add
                                                        local.set $2
                                                        br $for-loop|0
                                                       end
                                                      end
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.tee $0
                                                      i32.const 12000
                                                      i32.store $0 offset=16
                                                      local.get $0
                                                      local.get $5
                                                      i32.store $0 offset=24
                                                      local.get $0
                                                      i32.const 7168
                                                      i32.store $0 offset=28
                                                      local.get $5
                                                      i32.const 7168
                                                      call $~lib/array/Array<~lib/string/String>#join
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store $0 offset=20
                                                      i32.const 12000
                                                      local.get $0
                                                      call $~lib/string/String.__concat
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      local.get $0
                                                      i32.store $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 12000
                                                      i32.store $0 offset=4
                                                      local.get $0
                                                      i32.const 12000
                                                      call $~lib/string/String.__concat
                                                      local.set $0
                                                      global.get $~lib/memory/__stack_pointer
                                                      i32.const 32
                                                      i32.add
                                                      global.set $~lib/memory/__stack_pointer
                                                      br $folding-inner4
                                                     end
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 4
                                                     i32.sub
                                                     global.set $~lib/memory/__stack_pointer
                                                     global.get $~lib/memory/__stack_pointer
                                                     i32.const 33780
                                                     i32.lt_s
                                                     br_if $folding-inner5
                                                     global.get $~lib/memory/__stack_pointer
                                                     local.tee $1
                                                     i32.const 0
                                                     i32.store $0
                                                     local.get $1
                                                     local.get $0
                                                     i32.store $0
                                                     local.get $0
                                                     f64.load $0
                                                     call $~lib/number/F64#toString
                                                     local.set $0
                                                     br $folding-inner1
                                                    end
                                                    global.get $~lib/memory/__stack_pointer
                                                    i32.const 4
                                                    i32.sub
                                                    global.set $~lib/memory/__stack_pointer
                                                    global.get $~lib/memory/__stack_pointer
                                                    i32.const 33780
                                                    i32.lt_s
                                                    br_if $folding-inner5
                                                    global.get $~lib/memory/__stack_pointer
                                                    local.tee $1
                                                    i32.const 0
                                                    i32.store $0
                                                    local.get $1
                                                    local.get $0
                                                    i32.store $0
                                                    local.get $0
                                                    i64.load $0
                                                    call $~lib/util/number/itoa64
                                                    local.set $0
                                                    br $folding-inner1
                                                   end
                                                   i32.const 11552
                                                   return
                                                  end
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 4
                                                  i32.sub
                                                  global.set $~lib/memory/__stack_pointer
                                                  global.get $~lib/memory/__stack_pointer
                                                  i32.const 33780
                                                  i32.lt_s
                                                  br_if $folding-inner5
                                                  global.get $~lib/memory/__stack_pointer
                                                  local.tee $1
                                                  i32.const 0
                                                  i32.store $0
                                                  local.get $1
                                                  local.get $0
                                                  i32.store $0
                                                  i32.const 14240
                                                  i32.const 14128
                                                  local.get $0
                                                  i32.load8_u $0
                                                  select
                                                  local.set $0
                                                  br $folding-inner1
                                                 end
                                                 local.get $0
                                                 call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify
                                                 return
                                                end
                                                local.get $0
                                                call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify
                                                return
                                               end
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 20
                                               i32.sub
                                               global.set $~lib/memory/__stack_pointer
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 33780
                                               i32.lt_s
                                               br_if $folding-inner5
                                               global.get $~lib/memory/__stack_pointer
                                               local.tee $1
                                               i32.const 0
                                               i32.const 20
                                               memory.fill $0
                                               local.get $1
                                               i32.const 0
                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                               local.tee $1
                                               i32.store $0
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $1
                                               i32.store $0 offset=4
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 29168
                                               i32.store $0 offset=8
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.store $0 offset=16
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.load $0
                                               local.tee $2
                                               i32.store $0 offset=12
                                               local.get $1
                                               i32.const 29168
                                               local.get $2
                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $1
                                               i32.store $0 offset=4
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 29200
                                               i32.store $0 offset=8
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.store $0 offset=16
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.load $0 offset=4
                                               local.tee $2
                                               i32.store $0 offset=12
                                               local.get $1
                                               i32.const 29200
                                               local.get $2
                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $1
                                               i32.store $0 offset=4
                                               global.get $~lib/memory/__stack_pointer
                                               i32.const 32320
                                               i32.store $0 offset=8
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.store $0 offset=16
                                               global.get $~lib/memory/__stack_pointer
                                               local.get $0
                                               i32.load $0 offset=8
                                               local.tee $0
                                               i32.store $0 offset=12
                                               local.get $1
                                               i32.const 32320
                                               local.get $0
                                               call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                               br $folding-inner2
                                              end
                                              local.get $0
                                              call $assembly/types/bucketedUserConfig/FeatureVariation#stringify
                                              return
                                             end
                                             local.get $0
                                             call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
                                             return
                                            end
                                            local.get $0
                                            call $assembly/types/bucketedUserConfig/SDKFeature#stringify
                                            return
                                           end
                                           local.get $0
                                           call $assembly/types/bucketedUserConfig/SDKVariable#stringify
                                           return
                                          end
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 16
                                          i32.sub
                                          global.set $~lib/memory/__stack_pointer
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 33780
                                          i32.lt_s
                                          br_if $folding-inner5
                                          global.get $~lib/memory/__stack_pointer
                                          local.tee $1
                                          i64.const 0
                                          i64.store $0
                                          local.get $1
                                          i64.const 0
                                          i64.store $0 offset=8
                                          local.get $1
                                          i32.const 0
                                          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                          local.tee $1
                                          i32.store $0
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store $0 offset=4
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 22464
                                          i32.store $0 offset=8
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $0
                                          i32.store $0 offset=12
                                          local.get $1
                                          i32.const 22464
                                          local.get $0
                                          i32.load8_u $0
                                          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
                                          global.get $~lib/memory/__stack_pointer
                                          local.get $1
                                          i32.store $0 offset=4
                                          local.get $1
                                          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
                                          local.set $0
                                          global.get $~lib/memory/__stack_pointer
                                          i32.const 16
                                          i32.add
                                          global.set $~lib/memory/__stack_pointer
                                          br $folding-inner4
                                         end
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 20
                                         i32.sub
                                         global.set $~lib/memory/__stack_pointer
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 33780
                                         i32.lt_s
                                         br_if $folding-inner5
                                         global.get $~lib/memory/__stack_pointer
                                         local.tee $1
                                         i32.const 0
                                         i32.const 20
                                         memory.fill $0
                                         local.get $1
                                         i32.const 0
                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                         local.tee $1
                                         i32.store $0
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store $0 offset=4
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 21520
                                         i32.store $0 offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store $0 offset=16
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.load $0
                                         local.tee $2
                                         i32.store $0 offset=12
                                         local.get $1
                                         i32.const 21520
                                         local.get $2
                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store $0 offset=4
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 21552
                                         i32.store $0 offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store $0 offset=16
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.load $0 offset=4
                                         local.tee $2
                                         i32.store $0 offset=12
                                         local.get $1
                                         i32.const 21552
                                         local.get $2
                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store $0 offset=4
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 22400
                                         i32.store $0 offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store $0 offset=16
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.load $0 offset=8
                                         local.tee $2
                                         i32.store $0 offset=12
                                         local.get $1
                                         i32.const 22400
                                         local.get $2
                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $1
                                         i32.store $0 offset=4
                                         global.get $~lib/memory/__stack_pointer
                                         i32.const 22672
                                         i32.store $0 offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.store $0 offset=16
                                         global.get $~lib/memory/__stack_pointer
                                         local.get $0
                                         i32.load $0 offset=12
                                         local.tee $0
                                         i32.store $0 offset=12
                                         local.get $1
                                         i32.const 22672
                                         local.get $0
                                         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                         br $folding-inner2
                                        end
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 20
                                        i32.sub
                                        global.set $~lib/memory/__stack_pointer
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 33780
                                        i32.lt_s
                                        br_if $folding-inner5
                                        global.get $~lib/memory/__stack_pointer
                                        local.tee $1
                                        i32.const 0
                                        i32.const 20
                                        memory.fill $0
                                        local.get $1
                                        i32.const 0
                                        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                        local.tee $1
                                        i32.store $0
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.store $0 offset=4
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 21520
                                        i32.store $0 offset=8
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $0
                                        i32.store $0 offset=16
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $0
                                        i32.load $0
                                        local.tee $2
                                        i32.store $0 offset=12
                                        local.get $1
                                        i32.const 21520
                                        local.get $2
                                        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.store $0 offset=4
                                        global.get $~lib/memory/__stack_pointer
                                        i32.const 21552
                                        i32.store $0 offset=8
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $0
                                        i32.store $0 offset=16
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $0
                                        i32.load $0 offset=4
                                        local.tee $0
                                        i32.store $0 offset=12
                                        local.get $1
                                        i32.const 21552
                                        local.get $0
                                        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                        br $folding-inner2
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 20
                                       i32.sub
                                       global.set $~lib/memory/__stack_pointer
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 33780
                                       i32.lt_s
                                       br_if $folding-inner5
                                       global.get $~lib/memory/__stack_pointer
                                       local.tee $1
                                       i32.const 0
                                       i32.const 20
                                       memory.fill $0
                                       local.get $1
                                       i32.const 0
                                       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                       local.tee $1
                                       i32.store $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store $0 offset=4
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 21520
                                       i32.store $0 offset=8
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store $0 offset=16
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.load $0
                                       local.tee $2
                                       i32.store $0 offset=12
                                       local.get $1
                                       i32.const 21520
                                       local.get $2
                                       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store $0 offset=4
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 15872
                                       i32.store $0 offset=8
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store $0 offset=16
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.load $0 offset=4
                                       local.tee $2
                                       i32.store $0 offset=12
                                       local.get $1
                                       i32.const 15872
                                       local.get $2
                                       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $1
                                       i32.store $0 offset=4
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 21552
                                       i32.store $0 offset=8
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store $0 offset=16
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.load $0 offset=8
                                       local.tee $0
                                       i32.store $0 offset=12
                                       local.get $1
                                       i32.const 21552
                                       local.get $0
                                       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                       br $folding-inner2
                                      end
                                      local.get $0
                                      call $assembly/types/dvcEvent/DVCEvent#stringify
                                      return
                                     end
                                     local.get $0
                                     call $assembly/types/dvcEvent/DVCRequestEvent#stringify
                                     return
                                    end
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 24
                                    i32.sub
                                    global.set $~lib/memory/__stack_pointer
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 33780
                                    i32.lt_s
                                    br_if $folding-inner5
                                    global.get $~lib/memory/__stack_pointer
                                    local.tee $1
                                    i32.const 0
                                    i32.const 24
                                    memory.fill $0
                                    local.get $1
                                    i32.const 0
                                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                    local.tee $1
                                    i32.store $0
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    i32.store $0 offset=4
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 1232
                                    i32.store $0 offset=8
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=16
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.load $0
                                    local.tee $2
                                    i32.store $0 offset=12
                                    local.get $1
                                    i32.const 1232
                                    local.get $2
                                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $1
                                    i32.store $0 offset=4
                                    global.get $~lib/memory/__stack_pointer
                                    i32.const 32368
                                    i32.store $0 offset=8
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=20
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.load $0 offset=4
                                    local.tee $0
                                    i32.store $0 offset=16
                                    local.get $0
                                    call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
                                    local.set $0
                                    global.get $~lib/memory/__stack_pointer
                                    local.get $0
                                    i32.store $0 offset=12
                                    local.get $1
                                    i32.const 32368
                                    local.get $0
                                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                    br $folding-inner3
                                   end
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 24
                                   i32.sub
                                   global.set $~lib/memory/__stack_pointer
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 33780
                                   i32.lt_s
                                   br_if $folding-inner5
                                   global.get $~lib/memory/__stack_pointer
                                   local.tee $1
                                   i32.const 0
                                   i32.const 24
                                   memory.fill $0
                                   local.get $1
                                   i32.const 0
                                   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                                   local.tee $1
                                   i32.store $0
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store $0 offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 32400
                                   i32.store $0 offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store $0 offset=20
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load $0 offset=8
                                   local.tee $2
                                   i32.store $0 offset=16
                                   local.get $2
                                   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
                                   local.set $2
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $2
                                   i32.store $0 offset=12
                                   local.get $1
                                   i32.const 32400
                                   local.get $2
                                   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store $0 offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 32448
                                   i32.store $0 offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store $0 offset=16
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.load $0
                                   local.tee $2
                                   i32.store $0 offset=12
                                   local.get $1
                                   i32.const 32448
                                   local.get $2
                                   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $1
                                   i32.store $0 offset=4
                                   global.get $~lib/memory/__stack_pointer
                                   i32.const 32496
                                   i32.store $0 offset=8
                                   global.get $~lib/memory/__stack_pointer
                                   local.get $0
                                   i32.store $0 offset=12
                                   local.get $1
                                   i32.const 32496
                                   local.get $0
                                   call $assembly/types/dvcEvent/FlushPayload#eventCount
                                   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32>
                                   br $folding-inner3
                                  end
                                  local.get $0
                                  call $assembly/types/dvcUser/DVCUser#stringify
                                  return
                                 end
                                 local.get $0
                                 call $assembly/types/dvcUser/DVCPopulatedUser#stringify
                                 return
                                end
                                local.get $0
                                call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
                                return
                               end
                               local.get $0
                               call $assembly/types/feature/Feature#stringify
                               return
                              end
                              global.get $~lib/memory/__stack_pointer
                              i32.const 24
                              i32.sub
                              global.set $~lib/memory/__stack_pointer
                              global.get $~lib/memory/__stack_pointer
                              i32.const 33780
                              i32.lt_s
                              br_if $folding-inner5
                              global.get $~lib/memory/__stack_pointer
                              local.tee $1
                              i32.const 0
                              i32.const 24
                              memory.fill $0
                              local.get $1
                              i32.const 0
                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                              local.tee $1
                              i32.store $0
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0 offset=4
                              global.get $~lib/memory/__stack_pointer
                              i32.const 21520
                              i32.store $0 offset=8
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=16
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.load $0
                              local.tee $2
                              i32.store $0 offset=12
                              local.get $1
                              i32.const 21520
                              local.get $2
                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0 offset=4
                              global.get $~lib/memory/__stack_pointer
                              i32.const 15408
                              i32.store $0 offset=8
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=16
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.load $0 offset=4
                              local.tee $2
                              i32.store $0 offset=12
                              local.get $1
                              i32.const 15408
                              local.get $2
                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0 offset=4
                              global.get $~lib/memory/__stack_pointer
                              i32.const 21552
                              i32.store $0 offset=8
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=16
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.load $0 offset=8
                              local.tee $2
                              i32.store $0 offset=12
                              local.get $1
                              i32.const 21552
                              local.get $2
                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                              global.get $~lib/memory/__stack_pointer
                              local.get $1
                              i32.store $0 offset=4
                              global.get $~lib/memory/__stack_pointer
                              i32.const 19936
                              i32.store $0 offset=8
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=20
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.load $0 offset=12
                              local.tee $0
                              i32.store $0 offset=16
                              local.get $0
                              call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
                              local.set $0
                              global.get $~lib/memory/__stack_pointer
                              local.get $0
                              i32.store $0 offset=12
                              local.get $1
                              i32.const 19936
                              local.get $0
                              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                              br $folding-inner3
                             end
                             global.get $~lib/memory/__stack_pointer
                             i32.const 20
                             i32.sub
                             global.set $~lib/memory/__stack_pointer
                             global.get $~lib/memory/__stack_pointer
                             i32.const 33780
                             i32.lt_s
                             br_if $folding-inner5
                             global.get $~lib/memory/__stack_pointer
                             local.tee $1
                             i32.const 0
                             i32.const 20
                             memory.fill $0
                             local.get $1
                             i32.const 0
                             call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                             local.tee $1
                             i32.store $0
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0 offset=4
                             global.get $~lib/memory/__stack_pointer
                             i32.const 23024
                             i32.store $0 offset=8
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0 offset=16
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load $0
                             local.tee $2
                             i32.store $0 offset=12
                             local.get $1
                             i32.const 23024
                             local.get $2
                             call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                             global.get $~lib/memory/__stack_pointer
                             local.get $1
                             i32.store $0 offset=4
                             global.get $~lib/memory/__stack_pointer
                             i32.const 21168
                             i32.store $0 offset=8
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.store $0 offset=16
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load $0 offset=4
                             local.tee $0
                             i32.store $0 offset=12
                             local.get $1
                             i32.const 21168
                             local.get $0
                             call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                             br $folding-inner2
                            end
                            local.get $0
                            call $assembly/types/feature/Feature#stringify
                            return
                           end
                           local.get $0
                           call $assembly/types/featureConfiguration/FeatureConfiguration#stringify
                           return
                          end
                          local.get $0
                          call $assembly/types/featureConfiguration/FeaturePrerequisites#stringify
                          return
                         end
                         local.get $0
                         call $assembly/types/featureConfiguration/FeatureWinningVariation#stringify
                         return
                        end
                        local.get $0
                        call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#stringify
                        return
                       end
                       local.get $0
                       call $assembly/types/featureConfiguration/FeaturePrerequisites#stringify
                       return
                      end
                      local.get $0
                      call $assembly/types/featureConfiguration/FeatureWinningVariation#stringify
                      return
                     end
                     local.get $0
                     call $assembly/types/platformData/PlatformData#stringify
                     return
                    end
                    global.get $~lib/memory/__stack_pointer
                    i32.const 24
                    i32.sub
                    global.set $~lib/memory/__stack_pointer
                    global.get $~lib/memory/__stack_pointer
                    i32.const 33780
                    i32.lt_s
                    br_if $folding-inner5
                    global.get $~lib/memory/__stack_pointer
                    local.tee $1
                    i32.const 0
                    i32.const 24
                    memory.fill $0
                    local.get $1
                    i32.const 0
                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                    local.tee $1
                    i32.store $0
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store $0 offset=4
                    global.get $~lib/memory/__stack_pointer
                    i32.const 21520
                    i32.store $0 offset=8
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0 offset=16
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.load $0
                    local.tee $2
                    i32.store $0 offset=12
                    local.get $1
                    i32.const 21520
                    local.get $2
                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                    global.get $~lib/memory/__stack_pointer
                    local.get $1
                    i32.store $0 offset=4
                    global.get $~lib/memory/__stack_pointer
                    i32.const 24752
                    i32.store $0 offset=8
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0 offset=16
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.load $0 offset=4
                    local.tee $2
                    i32.store $0 offset=12
                    local.get $1
                    i32.const 24752
                    local.get $2
                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0 offset=4
                    local.get $0
                    i32.load $0 offset=8
                    if
                     global.get $~lib/memory/__stack_pointer
                     local.tee $2
                     local.get $1
                     i32.store $0 offset=4
                     local.get $2
                     i32.const 24800
                     i32.store $0 offset=8
                     local.get $2
                     local.get $0
                     i32.store $0 offset=16
                     local.get $2
                     local.get $0
                     i32.load $0 offset=8
                     local.tee $2
                     i32.store $0 offset=12
                     local.get $1
                     i32.const 24800
                     local.get $2
                     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
                    end
                    global.get $~lib/memory/__stack_pointer
                    local.tee $2
                    local.get $1
                    i32.store $0 offset=4
                    local.get $2
                    i32.const 25024
                    i32.store $0 offset=8
                    local.get $2
                    local.get $0
                    i32.store $0 offset=20
                    local.get $2
                    local.get $0
                    i32.load $0 offset=12
                    local.tee $0
                    i32.store $0 offset=16
                    local.get $0
                    call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
                    local.set $0
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0 offset=12
                    local.get $1
                    i32.const 25024
                    local.get $0
                    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                    br $folding-inner3
                   end
                   local.get $0
                   call $assembly/types/target/AudienceFilter#stringify
                   return
                  end
                  global.get $~lib/memory/__stack_pointer
                  i32.const 16
                  i32.sub
                  global.set $~lib/memory/__stack_pointer
                  global.get $~lib/memory/__stack_pointer
                  i32.const 33780
                  i32.lt_s
                  br_if $folding-inner5
                  global.get $~lib/memory/__stack_pointer
                  local.tee $1
                  i64.const 0
                  i64.store $0
                  local.get $1
                  i64.const 0
                  i64.store $0 offset=8
                  local.get $1
                  local.get $0
                  i32.store $0
                  block $__inlined_func$assembly/types/target/AudienceFilterOrOperator#stringify
                   local.get $0
                   i32.load $0
                   if
                    global.get $~lib/memory/__stack_pointer
                    local.tee $1
                    local.get $0
                    i32.store $0 offset=4
                    local.get $1
                    local.get $0
                    i32.load $0
                    local.tee $0
                    i32.store $0 offset=8
                    local.get $0
                    i32.eqz
                    if
                     i32.const 8112
                     i32.const 18336
                     i32.const 111
                     i32.const 21
                     call $~lib/builtins/abort
                     unreachable
                    end
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.store $0
                    local.get $0
                    call $assembly/types/target/AudienceOperator#stringify
                    local.set $0
                    global.get $~lib/memory/__stack_pointer
                    i32.const 16
                    i32.add
                    global.set $~lib/memory/__stack_pointer
                    br $__inlined_func$assembly/types/target/AudienceFilterOrOperator#stringify
                   end
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store $0
                   local.get $0
                   i32.load $0 offset=4
                   if
                    block $__inlined_func$assembly/types/target/AudienceFilter#stringify@override (result i32)
                     global.get $~lib/memory/__stack_pointer
                     local.tee $1
                     local.get $0
                     i32.store $0 offset=4
                     local.get $1
                     local.get $0
                     i32.load $0 offset=4
                     local.tee $0
                     i32.store $0 offset=12
                     local.get $0
                     i32.eqz
                     if
                      i32.const 8112
                      i32.const 18336
                      i32.const 114
                      i32.const 21
                      call $~lib/builtins/abort
                      unreachable
                     end
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store $0
                     block $default49
                      block $case250
                       block $case151
                        block $case052
                         local.get $0
                         i32.const 8
                         i32.sub
                         i32.load $0
                         i32.const 148
                         i32.sub
                         br_table $case052 $default49 $default49 $case151 $default49 $case250 $default49
                        end
                        local.get $0
                        call $assembly/types/target/AudienceMatchFilter#stringify
                        br $__inlined_func$assembly/types/target/AudienceFilter#stringify@override
                       end
                       local.get $0
                       call $assembly/types/target/UserFilter#stringify
                       br $__inlined_func$assembly/types/target/AudienceFilter#stringify@override
                      end
                      local.get $0
                      call $assembly/types/target/CustomDataFilter#stringify
                      br $__inlined_func$assembly/types/target/AudienceFilter#stringify@override
                     end
                     local.get $0
                     call $assembly/types/target/AudienceFilter#stringify
                    end
                    local.set $0
                    global.get $~lib/memory/__stack_pointer
                    i32.const 16
                    i32.add
                    global.set $~lib/memory/__stack_pointer
                    br $__inlined_func$assembly/types/target/AudienceFilterOrOperator#stringify
                   end
                   global.get $~lib/memory/__stack_pointer
                   i32.const 16
                   i32.add
                   global.set $~lib/memory/__stack_pointer
                   i32.const 7168
                   local.set $0
                  end
                  local.get $0
                  return
                 end
                 local.get $0
                 call $assembly/types/target/AudienceOperator#stringify
                 return
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 20
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 33780
                i32.lt_s
                br_if $folding-inner5
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                i32.const 0
                i32.const 20
                memory.fill $0
                local.get $1
                i32.const 0
                call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
                local.tee $1
                i32.store $0
                global.get $~lib/memory/__stack_pointer
                local.get $1
                i32.store $0 offset=4
                global.get $~lib/memory/__stack_pointer
                i32.const 23840
                i32.store $0 offset=8
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store $0 offset=16
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.load $0
                local.tee $0
                i32.store $0 offset=12
                local.get $1
                i32.const 23840
                local.get $0
                call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
                br $folding-inner2
               end
               local.get $0
               call $assembly/types/target/AudienceMatchFilter#stringify
               return
              end
              local.get $0
              call $assembly/types/target/UserFilter#stringify
              return
             end
             local.get $0
             call $assembly/types/target/CustomDataFilter#stringify
             return
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 28
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 33780
            i32.lt_s
            br_if $folding-inner5
            global.get $~lib/memory/__stack_pointer
            local.tee $1
            i32.const 0
            i32.const 28
            memory.fill $0
            local.get $1
            i32.const 0
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
            local.tee $1
            i32.store $0
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 15872
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0 offset=16
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load $0
            local.tee $2
            i32.store $0 offset=12
            local.get $1
            i32.const 15872
            local.get $2
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 24848
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0 offset=12
            local.get $1
            i32.const 24848
            local.get $0
            f64.load $0 offset=8
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 24912
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0 offset=20
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load $0 offset=16
            local.tee $2
            i32.store $0 offset=16
            local.get $2
            call $~lib/date/Date#toISOString
            local.set $2
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.store $0 offset=12
            local.get $1
            i32.const 24912
            local.get $2
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0 offset=4
            local.get $0
            i32.load $0 offset=20
            if
             global.get $~lib/memory/__stack_pointer
             local.tee $2
             local.get $1
             i32.store $0 offset=4
             local.get $2
             i32.const 24960
             i32.store $0 offset=8
             local.get $2
             local.get $0
             i32.store $0 offset=20
             local.get $2
             local.get $0
             i32.load $0 offset=20
             local.tee $0
             i32.store $0 offset=24
             local.get $0
             i32.eqz
             if
              i32.const 8112
              i32.const 18336
              i32.const 401
              i32.const 54
              call $~lib/builtins/abort
              unreachable
             end
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0 offset=16
             local.get $0
             call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
             local.set $0
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0 offset=12
             local.get $1
             i32.const 24960
             local.get $0
             call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
            end
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=4
            local.get $1
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
            local.set $0
            global.get $~lib/memory/__stack_pointer
            i32.const 28
            i32.add
            global.set $~lib/memory/__stack_pointer
            br $folding-inner4
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 24
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 33780
           i32.lt_s
           br_if $folding-inner5
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i32.const 0
           i32.const 24
           memory.fill $0
           local.get $1
           i32.const 0
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $1
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           i32.const 15872
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=16
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0
           local.tee $2
           i32.store $0 offset=12
           local.get $1
           i32.const 15872
           local.get $2
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           i32.const 15952
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=20
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=4
           local.tee $2
           i32.store $0 offset=16
           local.get $2
           call $~lib/date/Date#toISOString
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0 offset=12
           local.get $1
           i32.const 15952
           local.get $2
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           i32.const 15904
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=12
           local.get $1
           i32.const 15904
           local.get $0
           f64.load $0 offset=8
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
           br $folding-inner3
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner5
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i32.const 0
          i32.const 20
          memory.fill $0
          local.get $1
          i32.const 0
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
          local.tee $1
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 23648
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.load $0
          local.tee $2
          i32.store $0 offset=12
          local.get $1
          i32.const 23648
          local.get $2
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 15904
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=12
          local.get $1
          i32.const 15904
          local.get $0
          f64.load $0 offset=8
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
          br $folding-inner2
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner5
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.const 24
         memory.fill $0
         local.get $1
         i32.const 0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
         local.tee $1
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 21520
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0
         local.tee $2
         i32.store $0 offset=12
         local.get $1
         i32.const 21520
         local.get $2
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 24752
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=4
         local.tee $2
         i32.store $0 offset=12
         local.get $1
         i32.const 24752
         local.get $2
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         local.get $0
         i32.load $0 offset=8
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $1
          i32.store $0 offset=4
          local.get $2
          i32.const 24800
          i32.store $0 offset=8
          local.get $2
          local.get $0
          i32.store $0 offset=16
          local.get $2
          local.get $0
          i32.load $0 offset=8
          local.tee $2
          i32.store $0 offset=12
          local.get $1
          i32.const 24800
          local.get $2
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
         end
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         local.get $0
         i32.load $0 offset=16
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $1
          i32.store $0 offset=4
          local.get $2
          i32.const 25136
          i32.store $0 offset=8
          local.get $2
          local.get $0
          i32.store $0 offset=16
          local.get $2
          local.get $0
          i32.load $0 offset=16
          local.tee $2
          i32.store $0 offset=12
          local.get $1
          i32.const 25136
          local.get $2
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $1
         i32.store $0 offset=4
         local.get $2
         i32.const 25024
         i32.store $0 offset=8
         local.get $2
         local.get $0
         i32.store $0 offset=20
         local.get $2
         local.get $0
         i32.load $0 offset=12
         local.tee $0
         i32.store $0 offset=16
         local.get $0
         call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=12
         local.get $1
         i32.const 25024
         local.get $0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=4
         local.get $1
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $0
         return
        end
        local.get $0
        call $assembly/bucketing/segmentation/SegmentationResult#stringify
        return
       end
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      br $folding-inner4
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $folding-inner4
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case6
    block $case5
     block $case4
      block $case3
       block $case2
        block $case1
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         local.tee $1
         i32.const 141
         i32.ne
         if
          local.get $1
          i32.const 137
          i32.eq
          br_if $case1
          local.get $1
          i32.const 138
          i32.eq
          br_if $case2
          local.get $1
          i32.const 143
          i32.eq
          br_if $case3
          local.get $1
          i32.const 107
          i32.eq
          br_if $case4
          local.get $1
          i32.const 103
          i32.eq
          br_if $case5
          local.get $1
          i32.const 5
          i32.eq
          br_if $case6
          br $default
         end
         local.get $0
         call $assembly/types/bucketedUserConfig/FeatureVariation#stringify
         return
        end
        local.get $0
        call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
        return
       end
       local.get $0
       call $assembly/types/bucketedUserConfig/SDKFeature#stringify
       return
      end
      local.get $0
      call $assembly/types/bucketedUserConfig/SDKVariable#stringify
      return
     end
     local.get $0
     call $assembly/types/dvcUser/DVCUser#stringify
     return
    end
    local.get $0
    call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
    return
   end
   local.get $0
   call $assembly/types/platformData/PlatformData#stringify
   return
  end
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 133
  i32.eq
  if
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/as-proto/assembly/Reader/Reader#uint32@override (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 16
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   if
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#string@override (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 16
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   if
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   local.get $2
   local.get $0
   i32.load $0
   i32.add
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0 offset=4
   i32.gt_u
   if
    i32.const 6400
    i32.const 32592
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.get $2
   call $~lib/string/String.UTF8.decodeUnsafe
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#bool@override (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 16
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   if
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
   i32.const 0
   i32.ne
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#skipType@override (param $0 i32) (param $1 i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 16
  i32.eq
  if
   local.get $0
   local.get $1
   call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Reader/Reader#double@override (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  local.get $0
  i32.const 8
  i32.sub
  i32.load $0
  i32.const 16
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   if
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   local.set $2
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $0
   local.get $0
   i32.load $0
   i32.const 8
   i32.add
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0
   local.set $3
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0 offset=4
   i32.gt_u
   if
    i32.const 6400
    i32.const 32592
    i32.const 210
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   f64.load $0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#uint32@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 11
     i32.ne
     if
      local.get $2
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     loop $while-continue|0
      local.get $1
      i32.const 127
      i32.gt_u
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $0
       i32.store $0 offset=4
       local.get $2
       local.get $0
       i32.store $0 offset=8
       local.get $0
       local.get $0
       i32.load $0 offset=4
       local.tee $2
       i32.const 1
       i32.add
       i32.store $0 offset=4
       local.get $2
       local.get $1
       i32.const 127
       i32.and
       i32.const 128
       i32.or
       i32.store8 $0
       local.get $1
       i32.const 7
       i32.shr_u
       local.set $1
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $0
     i32.load $0 offset=4
     local.tee $0
     i32.const 1
     i32.add
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.store8 $0
     local.get $2
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i32.const 0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $1
    i32.const 128
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $1
     i32.const 16384
     i32.lt_u
     if (result i32)
      i32.const 2
     else
      i32.const 3
      i32.const 4
      i32.const 5
      local.get $1
      i32.const 268435456
      i32.lt_u
      select
      local.get $1
      i32.const 2097152
      i32.lt_u
      select
     end
    end
    local.get $0
    i32.load $0
    i32.add
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#string@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 11
     i32.ne
     if
      local.get $2
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $4
     local.get $0
     i32.store $0
     local.get $4
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=12
     local.set $3
     local.get $4
     local.get $0
     i32.store $0 offset=12
     local.get $4
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0 offset=8
     local.get $4
     local.get $2
     i32.load $0 offset=8
     local.tee $2
     i32.store $0 offset=4
     local.get $2
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $3
     i32.le_s
     if (result i32)
      i32.const 0
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0 offset=12
      local.get $4
      local.get $0
      i32.load $0
      local.tee $2
      i32.store $0 offset=8
      local.get $4
      local.get $2
      i32.load $0 offset=8
      local.tee $3
      i32.store $0 offset=4
      local.get $4
      local.get $0
      i32.store $0 offset=8
      local.get $4
      local.get $0
      i32.store $0 offset=12
      local.get $0
      local.get $0
      i32.load $0 offset=12
      local.tee $2
      i32.const 1
      i32.add
      i32.store $0 offset=12
      local.get $3
      local.get $2
      call $~lib/array/Array<i32>#__get
     end
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=16
     local.get $3
     local.get $0
     i32.store $0 offset=20
     local.get $2
     local.set $3
     loop $while-continue|0
      local.get $3
      i32.const 127
      i32.gt_u
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $0
       i32.store $0 offset=4
       local.get $4
       local.get $0
       i32.store $0 offset=8
       local.get $0
       local.get $0
       i32.load $0 offset=4
       local.tee $4
       i32.const 1
       i32.add
       i32.store $0 offset=4
       local.get $4
       local.get $3
       i32.const 127
       i32.and
       i32.const 128
       i32.or
       i32.store8 $0
       local.get $3
       i32.const 7
       i32.shr_u
       local.set $3
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=4
     local.get $5
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $0
     i32.load $0 offset=4
     local.tee $4
     i32.const 1
     i32.add
     i32.store $0 offset=4
     local.get $4
     local.get $3
     i32.store8 $0
     local.get $5
     local.get $1
     i32.store $0 offset=4
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.set $4
     local.get $5
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     local.set $3
     i32.const 3
     global.set $~argumentsLength
     local.get $1
     local.get $4
     local.get $3
     call $~lib/string/String.UTF8.encodeUnsafe
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $2
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i64.const 0
    i64.store $0 offset=8
    local.get $2
    local.get $1
    i32.store $0
    local.get $1
    local.get $1
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.add
    local.set $4
    loop $while-continue|00
     local.get $1
     local.get $4
     i32.lt_u
     if
      local.get $1
      i32.load16_u $0
      local.tee $2
      i32.const 128
      i32.lt_u
      if (result i32)
       local.get $3
       i32.const 1
       i32.add
      else
       local.get $2
       i32.const 2048
       i32.lt_u
       if (result i32)
        local.get $3
        i32.const 2
        i32.add
       else
        local.get $2
        i32.const 64512
        i32.and
        i32.const 55296
        i32.eq
        local.get $1
        i32.const 2
        i32.add
        local.get $4
        i32.lt_u
        i32.and
        if
         local.get $1
         i32.load16_u $0 offset=2
         i32.const 64512
         i32.and
         i32.const 56320
         i32.eq
         if
          local.get $3
          i32.const 4
          i32.add
          local.set $3
          local.get $1
          i32.const 4
          i32.add
          local.set $1
          br $while-continue|00
         end
        end
        local.get $3
        i32.const 3
        i32.add
       end
      end
      local.set $3
      local.get $1
      i32.const 2
      i32.add
      local.set $1
      br $while-continue|00
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0 offset=8
    local.tee $1
    i32.store $0
    local.get $1
    local.get $3
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $3
    i32.const 128
    i32.lt_u
    if (result i32)
     i32.const 1
    else
     local.get $3
     i32.const 16384
     i32.lt_u
     if (result i32)
      i32.const 2
     else
      i32.const 3
      i32.const 4
      i32.const 5
      local.get $3
      i32.const 268435456
      i32.lt_u
      select
      local.get $3
      i32.const 2097152
      i32.lt_u
      select
     end
    end
    local.get $0
    i32.load $0
    i32.add
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $3
    local.get $0
    i32.load $0
    i32.add
    i32.store $0
    local.get $1
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#int32@override (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 11
     i32.ne
     if
      local.get $3
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $1
     i32.const 0
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=4
      local.get $1
      i64.extend_i32_s
      local.set $2
      loop $while-continue|0
       local.get $2
       i64.const 127
       i64.gt_u
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        local.get $0
        i32.store $0 offset=8
        local.get $1
        local.get $0
        i32.store $0 offset=12
        local.get $0
        local.get $0
        i32.load $0 offset=4
        local.tee $1
        i32.const 1
        i32.add
        i32.store $0 offset=4
        local.get $1
        local.get $2
        i64.const 127
        i64.and
        i64.const 128
        i64.or
        i64.store8 $0
        local.get $2
        i64.const 7
        i64.shr_u
        local.set $2
        br $while-continue|0
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.store $0 offset=12
      local.get $0
      local.get $0
      i32.load $0 offset=4
      local.tee $0
      i32.const 1
      i32.add
      i32.store $0 offset=4
      local.get $0
      local.get $2
      i64.store8 $0
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=16
      loop $while-continue|1
       local.get $1
       i32.const 127
       i32.gt_u
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $0
        i32.store $0 offset=8
        local.get $3
        local.get $0
        i32.store $0 offset=12
        local.get $0
        local.get $0
        i32.load $0 offset=4
        local.tee $3
        i32.const 1
        i32.add
        i32.store $0 offset=4
        local.get $3
        local.get $1
        i32.const 127
        i32.and
        i32.const 128
        i32.or
        i32.store8 $0
        local.get $1
        i32.const 7
        i32.shr_u
        local.set $1
        br $while-continue|1
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=8
      local.get $3
      local.get $0
      i32.store $0 offset=12
      local.get $0
      local.get $0
      i32.load $0 offset=4
      local.tee $0
      i32.const 1
      i32.add
      i32.store $0 offset=4
      local.get $0
      local.get $1
      i32.store8 $0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store $0
    local.get $3
    i32.const 0
    i32.store $0 offset=8
    local.get $1
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $0
     i32.load $0
     i32.const 10
     i32.add
     i32.store $0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.const 128
     i32.lt_u
     if (result i32)
      i32.const 1
     else
      local.get $1
      i32.const 16384
      i32.lt_u
      if (result i32)
       i32.const 2
      else
       i32.const 3
       i32.const 4
       i32.const 5
       local.get $1
       i32.const 268435456
       i32.lt_u
       select
       local.get $1
       i32.const 2097152
       i32.lt_u
       select
      end
     end
     local.get $0
     i32.load $0
     i32.add
     i32.store $0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#bool@override (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 11
     i32.ne
     if
      local.get $2
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 0
     i32.ne
     i32.store8 $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $0
     i32.load $0 offset=4
     i32.const 1
     i32.add
     i32.store $0 offset=4
     local.get $2
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $1
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#double@override (param $0 i32) (param $1 f64)
  (local $2 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 11
     i32.ne
     if
      local.get $2
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     local.get $1
     f64.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $0
     i32.load $0 offset=4
     i32.const 8
     i32.add
     i32.store $0 offset=4
     local.get $2
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0
    i32.const 8
    i32.add
    i32.store $0
    local.get $2
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#fork@override (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner0
   block $default
    block $case1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $1
     i32.const 11
     i32.ne
     if
      local.get $1
      i32.const 13
      i32.eq
      br_if $case1
      br $default
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=12
     local.set $3
     local.get $2
     local.get $0
     i32.store $0 offset=16
     local.get $2
     local.get $0
     i32.load $0
     local.tee $1
     i32.store $0 offset=12
     local.get $2
     local.get $1
     i32.load $0 offset=8
     local.tee $1
     i32.store $0 offset=8
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $3
     i32.le_s
     if (result i32)
      i32.const 0
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=16
      local.get $1
      local.get $0
      i32.load $0
      local.tee $2
      i32.store $0 offset=12
      local.get $1
      local.get $2
      i32.load $0 offset=8
      local.tee $2
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.store $0 offset=12
      local.get $1
      local.get $0
      i32.store $0 offset=16
      local.get $0
      local.get $0
      i32.load $0 offset=12
      local.tee $1
      i32.const 1
      i32.add
      i32.store $0 offset=12
      local.get $2
      local.get $1
      call $~lib/array/Array<i32>#__get
     end
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=20
     loop $while-continue|0
      local.get $1
      i32.const 127
      i32.gt_u
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $0
       i32.store $0 offset=8
       local.get $2
       local.get $0
       i32.store $0 offset=12
       local.get $0
       local.get $0
       i32.load $0 offset=4
       local.tee $2
       i32.const 1
       i32.add
       i32.store $0 offset=4
       local.get $2
       local.get $1
       i32.const 127
       i32.and
       i32.const 128
       i32.or
       i32.store8 $0
       local.get $1
       i32.const 7
       i32.shr_u
       local.set $1
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0 offset=12
     local.get $0
     local.get $0
     i32.load $0 offset=4
     local.tee $0
     i32.const 1
     i32.add
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.store8 $0
     local.get $2
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    i32.const 0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0 offset=4
    local.tee $2
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.load $0
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0
    local.get $0
    i32.const 0
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#ldelim@override (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $folding-inner1
   block $folding-inner0
    block $default
     block $case1
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $1
      i32.const 11
      i32.ne
      if
       local.get $1
       i32.const 13
       i32.eq
       br_if $case1
       br $default
      end
      return
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=4
      local.get $1
      local.get $0
      i32.load $0 offset=12
      local.tee $1
      i32.store $0
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 32768
      i32.const 32864
      i32.const 126
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0
     local.set $3
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $2
     i32.store $0
     local.get $1
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0
     local.get $2
     i32.load $0 offset=12
     local.tee $1
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $2
     i32.store $0
     local.get $2
     i32.load $0 offset=4
     local.get $1
     i32.const 1
     i32.sub
     local.tee $5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $1
     local.get $4
     local.get $2
     i32.store $0
     local.get $2
     local.get $5
     i32.store $0 offset=12
     local.get $4
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0 offset=12
     local.tee $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.store $0
     local.get $2
     local.get $4
     i32.store $0
     local.get $4
     i32.load $0 offset=12
     local.tee $2
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $4
     i32.store $0
     local.get $4
     i32.load $0 offset=4
     local.get $2
     i32.const 1
     i32.sub
     local.tee $6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $2
     local.get $5
     local.get $4
     i32.store $0
     local.get $4
     local.get $6
     i32.store $0 offset=12
     local.get $5
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0 offset=8
     local.tee $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     i32.const 0
     i32.store $0
     local.get $5
     local.get $4
     i32.store $0
     local.get $2
     local.get $4
     i32.load $0 offset=12
     i32.ge_u
     if
      local.get $2
      i32.const 0
      i32.lt_s
      if
       i32.const 6400
       i32.const 7120
       i32.const 130
       i32.const 22
       call $~lib/builtins/abort
       unreachable
      end
      local.get $4
      local.get $2
      i32.const 1
      i32.add
      local.tee $5
      i32.const 2
      i32.const 1
      call $~lib/array/ensureCapacity
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      local.get $5
      i32.store $0 offset=12
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $4
     i32.store $0
     local.get $4
     i32.load $0 offset=4
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $3
     local.get $1
     i32.sub
     local.tee $1
     i32.store $0
     local.get $5
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.const 128
     i32.lt_u
     if (result i32)
      i32.const 1
     else
      local.get $1
      i32.const 16384
      i32.lt_u
      if (result i32)
       i32.const 2
      else
       i32.const 3
       i32.const 4
       i32.const 5
       local.get $1
       i32.const 268435456
       i32.lt_u
       select
       local.get $1
       i32.const 2097152
       i32.lt_u
       select
      end
     end
     local.get $0
     i32.load $0
     i32.add
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    unreachable
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 7504
  i32.const 7120
  i32.const 271
  i32.const 18
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/__visit_globals
  (local $0 i32)
  i32.const 11632
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6400
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6096
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 7504
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 7376
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11888
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6208
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 31792
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 31856
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 12336
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 12624
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9264
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 10320
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/managers/platformDataManager/_platformData
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/configDataManager/_configData
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/configDataManager/_configMetadata
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/helpers/murmurhash/keyBuffer
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 14240
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 14128
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11552
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 3776
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3824
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3888
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3952
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4016
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4096
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4160
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4224
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4288
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4336
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4400
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4432
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4480
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4528
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4560
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4608
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4640
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4688
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4736
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4800
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4832
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4880
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4928
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4992
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5040
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5120
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5168
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5216
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5280
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5328
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5376
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3728
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/types/dvcEvent/EventTypes
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 3600
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6048
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3328
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5952
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1152
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1392
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1920
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2592
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2672
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2864
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3248
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5472
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5584
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5712
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5792
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 5872
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11552
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/as-proto/assembly/Protobuf/WRITER
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/as-proto/assembly/Protobuf/READER
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/as-uuid/assembly/rng/rnds8Pool
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/featureV2/FeatureV2~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/UserFilter~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load $0
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner34
   block $folding-inner33
    block $folding-inner32
     block $folding-inner31
      block $folding-inner30
       block $folding-inner29
        block $folding-inner28
         block $folding-inner27
          block $folding-inner26
           block $folding-inner25
            block $folding-inner24
             block $folding-inner23
              block $folding-inner22
               block $folding-inner20
                block $folding-inner17
                 block $folding-inner16
                  block $folding-inner15
                   block $folding-inner12
                    block $folding-inner10
                     block $folding-inner9
                      block $folding-inner8
                       block $folding-inner6
                        block $folding-inner4
                         block $folding-inner3
                          block $folding-inner2
                           block $folding-inner1
                            block $invalid
                             block $assembly/types/feature/Feature
                              block $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB
                               block $assembly/types/protobuf-generated/NullableDouble/NullableDouble
                                block $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB
                                 block $assembly/types/target/CustomDataFilter
                                  block $assembly/types/target/UserFilter
                                   block $assembly/types/target/AudienceMatchFilter
                                    block $assembly/types/bucketedUserConfig/FeatureVariation
                                     block $assembly/types/bucketedUserConfig/SDKFeature
                                      block $~lib/staticarray/StaticArray<~lib/string/String>
                                       block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
                                        block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
                                         block $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler
                                          block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null
                                           block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num
                                            block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
                                             block $assembly/bucketing/bucketing/BoundedHash
                                              block $~lib/map/Map<~lib/string/String,i64>
                                               block $assembly/types/dvcEvent/DVCEvent
                                                block $assembly/types/dvcEvent/DVCRequestEvent
                                                 block $assembly/types/dvcUser/DVCUser
                                                  block $assembly/types/dvcUser/DVCUserInterface
                                                   block $assembly/types/dvcUser/DVCPopulatedUser
                                                    block $assembly/types/target/Rollout
                                                     block $assembly/types/targetV2/TargetV2
                                                      block $~lib/date/Date
                                                       block $assembly/types/featureV2/FeatureV2
                                                        block $assembly/types/configBody/Settings
                                                         block $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState
                                                          block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher
                                                           block $~lib/assemblyscript-regex/assembly/util/Range
                                                            block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher
                                                             block $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher
                                                              block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher
                                                               block $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode
                                                                block $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode
                                                                 block $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
                                                                  block $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
                                                                   block $~lib/assemblyscript-regex/assembly/parser/parser/Range
                                                                    block $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode
                                                                     block $~lib/assemblyscript-regex/assembly/parser/node/Node
                                                                      block $~lib/assemblyscript-regex/assembly/regexp/Flags
                                                                       block $~lib/assemblyscript-regex/assembly/regexp/RegExp
                                                                        block $assembly/bucketing/versionCompare/OptionsType
                                                                         block $~lib/staticarray/StaticArray<i32>
                                                                          block $~lib/as-proto/assembly/Reader/Reader
                                                                           block $~lib/as-proto/assembly/Writer/Writer
                                                                            block $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter
                                                                             block $~lib/set/Set<~lib/string/String>
                                                                              block $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value
                                                                               block $~lib/string/String
                                                                                block $~lib/arraybuffer/ArrayBuffer
                                                                                 block $~lib/object/Object
                                                                                  local.get $0
                                                                                  i32.const 8
                                                                                  i32.sub
                                                                                  i32.load $0
                                                                                  br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner24 $folding-inner1 $folding-inner2 $folding-inner15 $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value $folding-inner3 $folding-inner24 $~lib/set/Set<~lib/string/String> $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter $~lib/as-proto/assembly/Writer/Writer $folding-inner17 $folding-inner4 $folding-inner4 $folding-inner33 $~lib/as-proto/assembly/Reader/Reader $~lib/staticarray/StaticArray<i32> $assembly/bucketing/versionCompare/OptionsType $~lib/assemblyscript-regex/assembly/regexp/RegExp $~lib/assemblyscript-regex/assembly/regexp/Flags $folding-inner29 $folding-inner24 $folding-inner1 $folding-inner6 $folding-inner1 $folding-inner30 $~lib/assemblyscript-regex/assembly/parser/node/Node $folding-inner24 $folding-inner33 $folding-inner1 $folding-inner30 $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode $folding-inner30 $~lib/assemblyscript-regex/assembly/parser/parser/Range $folding-inner30 $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode $folding-inner30 $folding-inner30 $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode $folding-inner29 $folding-inner8 $folding-inner24 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher $folding-inner6 $folding-inner30 $folding-inner1 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher $~lib/assemblyscript-regex/assembly/util/Range $folding-inner1 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher $folding-inner8 $folding-inner6 $folding-inner6 $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState $folding-inner8 $folding-inner9 $folding-inner8 $folding-inner4 $folding-inner8 $folding-inner8 $folding-inner10 $folding-inner16 $assembly/types/configBody/Settings $folding-inner15 $folding-inner29 $folding-inner29 $folding-inner15 $folding-inner1 $folding-inner3 $folding-inner29 $assembly/types/featureV2/FeatureV2 $folding-inner12 $folding-inner29 $folding-inner1 $folding-inner3 $folding-inner1 $folding-inner12 $folding-inner29 $folding-inner1 $folding-inner29 $~lib/date/Date $folding-inner3 $assembly/types/targetV2/TargetV2 $assembly/types/target/Rollout $folding-inner29 $folding-inner1 $folding-inner15 $folding-inner1 $folding-inner1 $folding-inner3 $folding-inner1 $folding-inner32 $folding-inner1 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner16 $folding-inner15 $folding-inner29 $assembly/types/dvcUser/DVCPopulatedUser $assembly/types/dvcUser/DVCUserInterface $assembly/types/dvcUser/DVCUser $assembly/types/dvcEvent/DVCRequestEvent $assembly/types/dvcEvent/DVCEvent $folding-inner1 $folding-inner3 $~lib/map/Map<~lib/string/String,i64> $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner9 $folding-inner32 $folding-inner1 $folding-inner3 $folding-inner3 $assembly/bucketing/bucketing/BoundedHash $~lib/@devcycle/assemblyscript-json/assembly/JSON/Float $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null $folding-inner15 $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONHandler $folding-inner1 $folding-inner29 $folding-inner9 $folding-inner15 $folding-inner15 $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer $~lib/staticarray/StaticArray<~lib/string/String> $folding-inner2 $assembly/types/bucketedUserConfig/SDKFeature $folding-inner32 $folding-inner3 $assembly/types/bucketedUserConfig/FeatureVariation $folding-inner3 $folding-inner2 $folding-inner3 $folding-inner32 $folding-inner29 $folding-inner30 $assembly/types/target/AudienceMatchFilter $folding-inner8 $folding-inner8 $assembly/types/target/UserFilter $folding-inner4 $assembly/types/target/CustomDataFilter $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB $folding-inner10 $folding-inner24 $assembly/types/protobuf-generated/NullableDouble/NullableDouble $folding-inner24 $folding-inner26 $folding-inner3 $folding-inner8 $folding-inner32 $folding-inner32 $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner29 $folding-inner1 $folding-inner8 $folding-inner8 $folding-inner29 $folding-inner29 $folding-inner29 $folding-inner29 $folding-inner1 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner8 $folding-inner12 $folding-inner10 $assembly/types/feature/Feature $folding-inner12 $folding-inner29 $folding-inner1 $folding-inner29 $folding-inner1 $folding-inner1 $folding-inner3 $folding-inner8 $folding-inner8 $folding-inner24 $folding-inner29 $folding-inner1 $folding-inner1 $folding-inner8 $folding-inner8 $invalid
                                                                                 end
                                                                                 return
                                                                                end
                                                                                return
                                                                               end
                                                                               return
                                                                              end
                                                                              return
                                                                             end
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             i32.const 4
                                                                             i32.sub
                                                                             global.set $~lib/memory/__stack_pointer
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             i32.const 33780
                                                                             i32.lt_s
                                                                             br_if $folding-inner23
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             local.tee $1
                                                                             i32.const 0
                                                                             i32.store $0
                                                                             local.get $1
                                                                             local.get $0
                                                                             local.tee $1
                                                                             i32.store $0
                                                                             local.get $0
                                                                             i32.load $0
                                                                             local.tee $0
                                                                             if
                                                                              local.get $0
                                                                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                             end
                                                                             global.get $~lib/memory/__stack_pointer
                                                                             local.tee $3
                                                                             local.get $1
                                                                             i32.store $0
                                                                             local.get $1
                                                                             i32.load $0 offset=8
                                                                             local.tee $2
                                                                             local.set $0
                                                                             local.get $3
                                                                             local.get $1
                                                                             i32.store $0
                                                                             local.get $0
                                                                             local.get $1
                                                                             i32.load $0 offset=16
                                                                             i32.const 3
                                                                             i32.shl
                                                                             i32.add
                                                                             local.set $1
                                                                             loop $while-continue|0
                                                                              local.get $0
                                                                              local.get $1
                                                                              i32.lt_u
                                                                              if
                                                                               local.get $0
                                                                               i32.load $0 offset=4
                                                                               i32.const 1
                                                                               i32.and
                                                                               i32.eqz
                                                                               if
                                                                                local.get $0
                                                                                i32.load $0
                                                                                local.tee $3
                                                                                if
                                                                                 local.get $3
                                                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                                end
                                                                               end
                                                                               local.get $0
                                                                               i32.const 8
                                                                               i32.add
                                                                               local.set $0
                                                                               br $while-continue|0
                                                                              end
                                                                             end
                                                                             br $folding-inner25
                                                                            end
                                                                            local.get $0
                                                                            i32.load $0
                                                                            local.tee $1
                                                                            if
                                                                             local.get $1
                                                                             call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                            end
                                                                            local.get $0
                                                                            i32.load $0 offset=8
                                                                            local.tee $0
                                                                            if
                                                                             local.get $0
                                                                             call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                            end
                                                                            return
                                                                           end
                                                                           return
                                                                          end
                                                                          return
                                                                         end
                                                                         return
                                                                        end
                                                                        return
                                                                       end
                                                                       local.get $0
                                                                       i32.load $0 offset=4
                                                                       local.tee $1
                                                                       if
                                                                        local.get $1
                                                                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                       end
                                                                       local.get $0
                                                                       i32.load $0 offset=8
                                                                       local.tee $1
                                                                       if
                                                                        local.get $1
                                                                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                       end
                                                                       local.get $0
                                                                       i32.load $0 offset=16
                                                                       local.tee $1
                                                                       if
                                                                        local.get $1
                                                                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                       end
                                                                       local.get $0
                                                                       i32.load $0 offset=20
                                                                       local.tee $1
                                                                       if
                                                                        local.get $1
                                                                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                                       end
                                                                       br $folding-inner28
                                                                      end
                                                                      return
                                                                     end
                                                                     return
                                                                    end
                                                                    local.get $0
                                                                    call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit
                                                                    return
                                                                   end
                                                                   return
                                                                  end
                                                                  return
                                                                 end
                                                                 return
                                                                end
                                                                return
                                                               end
                                                               return
                                                              end
                                                              return
                                                             end
                                                             return
                                                            end
                                                            local.get $0
                                                            call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit
                                                            return
                                                           end
                                                           return
                                                          end
                                                          return
                                                         end
                                                         local.get $0
                                                         i32.load $0
                                                         local.tee $1
                                                         if
                                                          local.get $1
                                                          call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                         end
                                                         br $folding-inner33
                                                        end
                                                        return
                                                       end
                                                       local.get $0
                                                       call $assembly/types/featureV2/FeatureV2~visit
                                                       return
                                                      end
                                                      return
                                                     end
                                                     local.get $0
                                                     i32.load $0
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     local.get $0
                                                     i32.load $0 offset=4
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     local.get $0
                                                     i32.load $0 offset=8
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     local.get $0
                                                     i32.load $0 offset=12
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     br $folding-inner20
                                                    end
                                                    local.get $0
                                                    i32.load $0
                                                    local.tee $1
                                                    if
                                                     local.get $1
                                                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                    end
                                                    br $folding-inner20
                                                   end
                                                   local.get $0
                                                   i32.load $0
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=4
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=8
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=12
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=16
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=20
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=44
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=32
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=36
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=40
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=48
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=52
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=56
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=60
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=64
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=68
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=72
                                                   local.tee $1
                                                   if
                                                    local.get $1
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   local.get $0
                                                   i32.load $0 offset=76
                                                   local.tee $0
                                                   if
                                                    local.get $0
                                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                   end
                                                   return
                                                  end
                                                  return
                                                 end
                                                 local.get $0
                                                 i32.load $0
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=4
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=8
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=12
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=16
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=20
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=32
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=36
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=40
                                                 local.tee $1
                                                 if
                                                  local.get $1
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 local.get $0
                                                 i32.load $0 offset=44
                                                 local.tee $0
                                                 if
                                                  local.get $0
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                 return
                                                end
                                                local.get $0
                                                i32.load $0
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.load $0 offset=4
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.load $0 offset=8
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.load $0 offset=12
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.load $0 offset=16
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                local.get $0
                                                i32.load $0 offset=20
                                                local.tee $1
                                                if
                                                 local.get $1
                                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                end
                                                br $folding-inner34
                                               end
                                               local.get $0
                                               i32.load $0
                                               local.tee $1
                                               if
                                                local.get $1
                                                call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                               end
                                               local.get $0
                                               i32.load $0 offset=4
                                               local.tee $1
                                               if
                                                local.get $1
                                                call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                               end
                                               local.get $0
                                               i32.load $0 offset=8
                                               local.tee $1
                                               if
                                                local.get $1
                                                call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                               end
                                               br $folding-inner28
                                              end
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 4
                                              i32.sub
                                              global.set $~lib/memory/__stack_pointer
                                              global.get $~lib/memory/__stack_pointer
                                              i32.const 33780
                                              i32.lt_s
                                              br_if $folding-inner23
                                              global.get $~lib/memory/__stack_pointer
                                              local.tee $1
                                              i32.const 0
                                              i32.store $0
                                              local.get $1
                                              local.get $0
                                              local.tee $1
                                              i32.store $0
                                              local.get $0
                                              i32.load $0
                                              local.tee $0
                                              if
                                               local.get $0
                                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                              end
                                              global.get $~lib/memory/__stack_pointer
                                              local.tee $3
                                              local.get $1
                                              i32.store $0
                                              local.get $1
                                              i32.load $0 offset=8
                                              local.tee $2
                                              local.set $0
                                              local.get $3
                                              local.get $1
                                              i32.store $0
                                              local.get $0
                                              local.get $1
                                              i32.load $0 offset=16
                                              i32.const 24
                                              i32.mul
                                              i32.add
                                              local.set $1
                                              loop $while-continue|01
                                               local.get $0
                                               local.get $1
                                               i32.lt_u
                                               if
                                                local.get $0
                                                i32.load $0 offset=16
                                                i32.const 1
                                                i32.and
                                                i32.eqz
                                                if
                                                 local.get $0
                                                 i32.load $0
                                                 local.tee $3
                                                 if
                                                  local.get $3
                                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                 end
                                                end
                                                local.get $0
                                                i32.const 24
                                                i32.add
                                                local.set $0
                                                br $while-continue|01
                                               end
                                              end
                                              br $folding-inner25
                                             end
                                             return
                                            end
                                            return
                                           end
                                           return
                                          end
                                          return
                                         end
                                         return
                                        end
                                        return
                                       end
                                       return
                                      end
                                      local.get $0
                                      local.get $0
                                      i32.const 20
                                      i32.sub
                                      i32.load $0 offset=16
                                      i32.add
                                      local.set $1
                                      loop $while-continue|02
                                       local.get $0
                                       local.get $1
                                       i32.lt_u
                                       if
                                        local.get $0
                                        i32.load $0
                                        local.tee $2
                                        if
                                         local.get $2
                                         call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                        end
                                        local.get $0
                                        i32.const 4
                                        i32.add
                                        local.set $0
                                        br $while-continue|02
                                       end
                                      end
                                      return
                                     end
                                     local.get $0
                                     i32.load $0
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=4
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=8
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=12
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=16
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=20
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=24
                                     local.tee $1
                                     if
                                      local.get $1
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     local.get $0
                                     i32.load $0 offset=28
                                     local.tee $0
                                     if
                                      local.get $0
                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                     end
                                     return
                                    end
                                    local.get $0
                                    call $assembly/types/bucketedUserConfig/FeatureVariation~visit
                                    return
                                   end
                                   local.get $0
                                   call $assembly/types/bucketedUserConfig/FeatureVariation~visit
                                   return
                                  end
                                  local.get $0
                                  call $assembly/types/target/UserFilter~visit
                                  return
                                 end
                                 local.get $0
                                 call $assembly/types/target/UserFilter~visit
                                 local.get $0
                                 i32.load $0 offset=32
                                 local.tee $1
                                 if
                                  local.get $1
                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                 end
                                 local.get $0
                                 i32.load $0 offset=36
                                 local.tee $0
                                 if
                                  local.get $0
                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                 end
                                 return
                                end
                                local.get $0
                                i32.load $0
                                local.tee $1
                                if
                                 local.get $1
                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                end
                                local.get $0
                                i32.load $0 offset=4
                                local.tee $1
                                if
                                 local.get $1
                                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                end
                                br $folding-inner22
                               end
                               return
                              end
                              local.get $0
                              i32.load $0
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=8
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=24
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              local.get $0
                              i32.load $0 offset=28
                              local.tee $1
                              if
                               local.get $1
                               call $byn-split-outlined-A$~lib/rt/itcms/__visit
                              end
                              br $folding-inner34
                             end
                             local.get $0
                             call $assembly/types/featureV2/FeatureV2~visit
                             return
                            end
                            unreachable
                           end
                           global.get $~lib/memory/__stack_pointer
                           i32.const 4
                           i32.sub
                           global.set $~lib/memory/__stack_pointer
                           global.get $~lib/memory/__stack_pointer
                           i32.const 33780
                           i32.lt_s
                           br_if $folding-inner23
                           global.get $~lib/memory/__stack_pointer
                           local.tee $1
                           i32.const 0
                           i32.store $0
                           local.get $1
                           local.get $0
                           i32.store $0
                           local.get $0
                           i32.load $0 offset=4
                           local.set $2
                           local.get $1
                           local.get $0
                           i32.store $0
                           local.get $2
                           local.get $0
                           i32.load $0 offset=12
                           i32.const 2
                           i32.shl
                           i32.add
                           local.set $1
                           loop $while-continue|04
                            local.get $1
                            local.get $2
                            i32.gt_u
                            if
                             local.get $2
                             i32.load $0
                             local.tee $3
                             if
                              local.get $3
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $2
                             i32.const 4
                             i32.add
                             local.set $2
                             br $while-continue|04
                            end
                           end
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.store $0
                           br $folding-inner27
                          end
                          local.get $0
                          i32.load $0
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          local.get $0
                          i32.load $0 offset=4
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          local.get $0
                          i32.load $0 offset=8
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          local.get $0
                          i32.load $0 offset=12
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          local.get $0
                          i32.load $0 offset=16
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          local.get $0
                          i32.load $0 offset=20
                          local.tee $1
                          if
                           local.get $1
                           call $byn-split-outlined-A$~lib/rt/itcms/__visit
                          end
                          br $folding-inner28
                         end
                         global.get $~lib/memory/__stack_pointer
                         i32.const 4
                         i32.sub
                         global.set $~lib/memory/__stack_pointer
                         global.get $~lib/memory/__stack_pointer
                         i32.const 33780
                         i32.lt_s
                         br_if $folding-inner23
                         global.get $~lib/memory/__stack_pointer
                         local.tee $1
                         i32.const 0
                         i32.store $0
                         local.get $1
                         local.get $0
                         local.tee $1
                         i32.store $0
                         local.get $0
                         i32.load $0
                         local.tee $0
                         if
                          local.get $0
                          call $byn-split-outlined-A$~lib/rt/itcms/__visit
                         end
                         global.get $~lib/memory/__stack_pointer
                         local.tee $3
                         local.get $1
                         i32.store $0
                         local.get $1
                         i32.load $0 offset=8
                         local.tee $2
                         local.set $0
                         local.get $3
                         local.get $1
                         i32.store $0
                         local.get $0
                         local.get $1
                         i32.load $0 offset=16
                         i32.const 12
                         i32.mul
                         i32.add
                         local.set $1
                         loop $while-continue|05
                          local.get $0
                          local.get $1
                          i32.lt_u
                          if
                           local.get $0
                           i32.load $0 offset=8
                           i32.const 1
                           i32.and
                           i32.eqz
                           if
                            local.get $0
                            i32.load $0
                            local.tee $3
                            if
                             local.get $3
                             call $byn-split-outlined-A$~lib/rt/itcms/__visit
                            end
                            local.get $0
                            i32.load $0 offset=4
                            local.tee $3
                            if
                             local.get $3
                             call $byn-split-outlined-A$~lib/rt/itcms/__visit
                            end
                           end
                           local.get $0
                           i32.const 12
                           i32.add
                           local.set $0
                           br $while-continue|05
                          end
                         end
                         br $folding-inner25
                        end
                        global.get $~lib/memory/__stack_pointer
                        i32.const 4
                        i32.sub
                        global.set $~lib/memory/__stack_pointer
                        global.get $~lib/memory/__stack_pointer
                        i32.const 33780
                        i32.lt_s
                        br_if $folding-inner23
                        global.get $~lib/memory/__stack_pointer
                        local.tee $1
                        i32.const 0
                        i32.store $0
                        local.get $1
                        local.get $0
                        i32.store $0
                        br $folding-inner27
                       end
                       local.get $0
                       i32.load $0
                       local.tee $1
                       if
                        local.get $1
                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                       end
                       local.get $0
                       i32.load $0 offset=12
                       local.tee $0
                       if
                        local.get $0
                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                       end
                       return
                      end
                      global.get $~lib/memory/__stack_pointer
                      i32.const 4
                      i32.sub
                      global.set $~lib/memory/__stack_pointer
                      global.get $~lib/memory/__stack_pointer
                      i32.const 33780
                      i32.lt_s
                      br_if $folding-inner23
                      global.get $~lib/memory/__stack_pointer
                      local.tee $1
                      i32.const 0
                      i32.store $0
                      local.get $1
                      local.get $0
                      i32.store $0
                      local.get $0
                      i32.load $0 offset=4
                      local.tee $0
                      if
                       local.get $0
                       call $byn-split-outlined-A$~lib/rt/itcms/__visit
                      end
                      br $folding-inner31
                     end
                     local.get $0
                     i32.load $0
                     local.tee $1
                     if
                      local.get $1
                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                     end
                     br $folding-inner33
                    end
                    local.get $0
                    i32.load $0
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=4
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=8
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=12
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=16
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=20
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=24
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load $0 offset=28
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    br $folding-inner34
                   end
                   local.get $0
                   i32.load $0
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load $0 offset=4
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load $0 offset=8
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load $0 offset=12
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   br $folding-inner26
                  end
                  local.get $0
                  i32.load $0
                  local.tee $0
                  if
                   local.get $0
                   call $byn-split-outlined-A$~lib/rt/itcms/__visit
                  end
                  return
                 end
                 local.get $0
                 i32.load $0
                 local.tee $1
                 if
                  local.get $1
                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                 end
                end
                local.get $0
                i32.load $0 offset=4
                local.tee $1
                if
                 local.get $1
                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                end
                local.get $0
                i32.load $0 offset=8
                local.tee $1
                if
                 local.get $1
                 call $byn-split-outlined-A$~lib/rt/itcms/__visit
                end
                br $folding-inner22
               end
               local.get $0
               i32.load $0 offset=16
               local.tee $1
               if
                local.get $1
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load $0 offset=20
               local.tee $0
               if
                local.get $0
                call $byn-split-outlined-A$~lib/rt/itcms/__visit
               end
               return
              end
              local.get $0
              i32.load $0 offset=12
              local.tee $0
              if
               local.get $0
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              return
             end
             i32.const 66576
             i32.const 66624
             i32.const 1
             i32.const 1
             call $~lib/builtins/abort
             unreachable
            end
            local.get $0
            i32.load $0
            local.tee $0
            if
             local.get $0
             call $byn-split-outlined-A$~lib/rt/itcms/__visit
            end
            return
           end
           local.get $2
           if
            local.get $2
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           br $folding-inner31
          end
          local.get $0
          i32.load $0 offset=16
          local.tee $0
          if
           local.get $0
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
          return
         end
         local.get $0
         i32.load $0
         local.tee $0
         if
          local.get $0
          call $byn-split-outlined-A$~lib/rt/itcms/__visit
         end
         br $folding-inner31
        end
        local.get $0
        i32.load $0 offset=24
        local.tee $0
        if
         local.get $0
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        return
       end
       local.get $0
       i32.load $0
       local.tee $1
       if
        local.get $1
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
      end
      local.get $0
      i32.load $0 offset=4
      local.tee $0
      if
       local.get $0
       call $byn-split-outlined-A$~lib/rt/itcms/__visit
      end
      return
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    local.get $0
    i32.load $0
    local.tee $1
    if
     local.get $1
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    if
     local.get $1
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
   end
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load $0 offset=32
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=36
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 3
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 1073741820
   i32.gt_u
   if
    i32.const 6096
    i32.const 6144
    i32.const 19
    i32.const 57
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $1
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $1
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $4
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/set/Set<~lib/string/String>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   local.get $1
   local.get $0
   i32.store $0
   i32.const 0
   local.get $0
   i32.eqz
   br_if $~lib/util/hash/hashStr|inlined.0
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load $0
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load $0 offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load $0 offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load $0 offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load $0
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u $0
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $2
   local.get $3
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   local.get $1
   local.get $2
   call $~lib/util/string/compareImpl
   i32.eqz
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/set/Set<~lib/string/String>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load $0 offset=4
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $4
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/set/Set<~lib/string/String>#add (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   local.get $6
   call $~lib/set/Set<~lib/string/String>#find
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $3
    local.get $2
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $3
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $2
     local.get $5
     i32.const 1
     i32.add
     local.tee $2
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 3
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=8
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $4
     local.get $0
     i32.load $0 offset=16
     i32.const 3
     i32.shl
     i32.add
     local.set $8
     local.get $3
     local.set $2
     loop $while-continue|0
      local.get $4
      local.get $8
      i32.ne
      if
       local.get $4
       i32.load $0 offset=4
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $11
        local.get $4
        i32.load $0
        local.tee $10
        i32.store $0 offset=12
        local.get $11
        local.get $10
        i32.store $0 offset=16
        local.get $2
        local.get $10
        i32.store $0
        local.get $11
        local.get $10
        i32.store $0 offset=8
        local.get $2
        local.get $9
        local.get $10
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $5
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $10
        i32.load $0
        i32.store $0 offset=4
        local.get $10
        local.get $2
        i32.store $0
        local.get $2
        i32.const 8
        i32.add
        local.set $2
       end
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $9
     i32.store $0 offset=16
     local.get $0
     local.get $9
     i32.store $0
     local.get $9
     if
      local.get $0
      local.get $9
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $5
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $3
     i32.store $0 offset=16
     local.get $0
     local.get $3
     i32.store $0 offset=8
     local.get $3
     if
      local.get $0
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $7
     i32.store $0 offset=12
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0 offset=16
     local.get $0
     local.get $0
     i32.load $0 offset=20
     i32.store $0 offset=16
     local.get $2
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=8
    local.set $3
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $2
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $4
    i32.const 3
    i32.shl
    i32.add
    local.tee $2
    local.get $1
    i32.store $0
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $3
    local.get $1
    local.get $0
    i32.store $0
    local.get $2
    local.get $3
    local.get $6
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=4
    local.get $0
    local.get $2
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Writer/Writer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/as-proto/assembly/internal/FixedWriter/FixedWriter#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $0
   i32.const 16
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/as-proto/assembly/Writer/Writer#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $~lib/as-proto/assembly/Writer/Writer#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   i32.const 0
   i32.const 2
   i32.const 14
   i32.const 6928
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   i32.const 0
   i32.const 2
   i32.const 15
   i32.const 6960
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=8
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   i32.const 0
   i32.const 2
   i32.const 15
   i32.const 6992
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=12
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=24
   local.get $1
   i32.load $0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=28
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0 offset=4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=12
   local.get $1
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 6096
    i32.const 7120
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   local.get $2
   i32.shl
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $3
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   local.get $0
   i32.load $0
   local.tee $5
   local.get $1
   call $~lib/rt/itcms/__renew
   local.tee $2
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 6400
    i32.const 7120
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#indexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $3
  local.get $2
  local.get $3
  i32.lt_s
  select
  local.set $2
  local.get $3
  local.get $4
  i32.sub
  local.set $5
  loop $for-loop|0
   local.get $2
   local.get $5
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $2
    local.get $1
    local.get $4
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=12
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#split (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill $0
  block $folding-inner2
   block $folding-inner1
    block $folding-inner0
     local.get $2
     i32.eqz
     br_if $folding-inner0
     local.get $1
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load $0 offset=4
      i32.store $0 offset=4
      local.get $1
      i32.const 0
      local.get $0
      call $~lib/array/Array<~lib/string/String>#__set
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.set $5
     local.get $6
     local.get $1
     i32.store $0 offset=8
     i32.const 2147483647
     local.get $2
     local.get $2
     i32.const 0
     i32.lt_s
     select
     local.set $7
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $8
     if
      local.get $5
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 4
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $1
       i32.store $0 offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $1
       i32.load $0 offset=4
       i32.const 7168
       i32.store $0
       br $folding-inner1
      end
     else
      local.get $5
      i32.eqz
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      local.get $7
      local.get $5
      local.get $7
      i32.lt_s
      select
      local.tee $3
      i32.const 2
      i32.const 4
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $1
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=8
      local.get $1
      i32.load $0 offset=4
      local.set $4
      i32.const 0
      local.set $2
      loop $for-loop|0
       local.get $2
       local.get $3
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 2
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $5
        i32.store $0 offset=16
        local.get $5
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u $0
        i32.store16 $0
        local.get $4
        local.get $2
        i32.const 2
        i32.shl
        i32.add
        local.get $5
        i32.store $0
        local.get $5
        if
         local.get $1
         local.get $5
         i32.const 1
         call $byn-split-outlined-A$~lib/rt/itcms/__link
        end
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        br $for-loop|0
       end
      end
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 4
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $2
     i32.store $0 offset=24
     loop $while-continue|1
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $0
      i32.store $0 offset=8
      local.get $6
      local.get $1
      i32.store $0 offset=28
      local.get $0
      local.get $1
      local.get $3
      call $~lib/string/String#indexOf
      local.tee $9
      i32.const -1
      i32.xor
      if
       local.get $9
       local.get $3
       i32.sub
       local.tee $6
       i32.const 0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.const 1
        i32.shl
        local.tee $10
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $6
        i32.store $0 offset=32
        local.get $6
        local.get $0
        local.get $3
        i32.const 1
        i32.shl
        i32.add
        local.get $10
        memory.copy $0 $0
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=28
        local.get $2
        local.get $6
        call $~lib/array/Array<~lib/string/String>#push
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0 offset=8
        local.get $3
        i32.const 7168
        i32.store $0 offset=28
        local.get $2
        i32.const 7168
        call $~lib/array/Array<~lib/string/String>#push
       end
       local.get $4
       i32.const 1
       i32.add
       local.tee $4
       local.get $7
       i32.eq
       br_if $folding-inner2
       local.get $8
       local.get $9
       i32.add
       local.set $3
       br $while-continue|1
      end
     end
     local.get $3
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $2
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.store $0 offset=28
      local.get $2
      local.get $0
      call $~lib/array/Array<~lib/string/String>#push
      br $folding-inner2
     end
     local.get $5
     local.get $3
     i32.sub
     local.tee $1
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.const 1
      i32.shl
      local.tee $1
      i32.const 2
      call $~lib/rt/itcms/__new
      local.tee $4
      i32.store $0 offset=36
      local.get $4
      local.get $0
      local.get $3
      i32.const 1
      i32.shl
      i32.add
      local.get $1
      memory.copy $0 $0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=28
      local.get $2
      local.get $4
      call $~lib/array/Array<~lib/string/String>#push
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $2
      i32.store $0 offset=8
      local.get $0
      i32.const 7168
      i32.store $0 offset=28
      local.get $2
      i32.const 7168
      call $~lib/array/Array<~lib/string/String>#push
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    i32.const 0
    i32.const 2
    i32.const 4
    i32.const 0
    call $~lib/rt/__newArray
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String#split@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $2
  call $~lib/string/String#split
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 12
  i32.const 30
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.load $0 offset=8
  local.tee $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $2
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0
  local.get $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.lt_u
  local.set $0
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 8
  i32.const 27
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 31
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 6096
   i32.const 7120
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0
   local.get $2
   i32.load $0
   local.set $2
   local.get $1
   i32.const -1
   i32.ne
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $1
    local.get $3
    i32.load $0
    i32.ne
   else
    i32.const 0
   end
   if
    i32.const 7200
    i32.const 7248
    i32.const 94
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=4
   i32.const 1
   i32.add
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0 offset=8
   local.tee $1
   i32.store $0
   block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next
    local.get $3
    local.get $1
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.const -1
     i32.store $0
     br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0 offset=8
    local.tee $3
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $3
    local.get $0
    i32.load $0 offset=4
    call $~lib/string/String#charCodeAt
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 8
  i32.const 32
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 6400
   i32.const 7120
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 7376
   i32.const 7120
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 12
  i32.const 33
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.const 2
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=8
  local.tee $3
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 16
  i32.const 34
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store8 $0 offset=8
  local.get $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=12
  local.get $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.const 10
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  local.get $2
  i32.const -1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.tee $1
   i32.const 1
   i32.add
   global.set $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.get $0
   local.get $1
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $~lib/string/String.fromCharCode@varargs
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const -2
  i32.and
  local.set $2
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const -2
  i32.and
  local.tee $3
  local.get $2
  i32.add
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7168
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store $0 offset=4
  local.get $4
  local.get $0
  local.get $2
  memory.copy $0 $0
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/string/strtol<f64> (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  block $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.tee $3
   i32.eqz
   br_if $folding-inner0
   local.get $0
   i32.load16_u $0
   local.set $2
   loop $while-continue|0
    block $__inlined_func$~lib/util/string/isSpace (result i32)
     local.get $2
     i32.const 128
     i32.or
     i32.const 160
     i32.eq
     local.get $2
     i32.const 9
     i32.sub
     i32.const 4
     i32.le_u
     i32.or
     local.get $2
     i32.const 5760
     i32.lt_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     i32.const 1
     local.get $2
     i32.const -8192
     i32.add
     i32.const 10
     i32.le_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     block $break|0
      block $case6|0
       local.get $2
       i32.const 5760
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8232
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8233
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8239
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8287
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 12288
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 65279
       i32.eq
       br_if $case6|0
       br $break|0
      end
      i32.const 1
      br $__inlined_func$~lib/util/string/isSpace
     end
     i32.const 0
    end
    if
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u $0
     local.set $2
     local.get $3
     i32.const 1
     i32.sub
     local.set $3
     br $while-continue|0
    end
   end
   f64.const 1
   local.set $4
   local.get $2
   i32.const 43
   i32.eq
   local.get $2
   i32.const 45
   i32.eq
   i32.or
   if
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    i32.eqz
    br_if $folding-inner0
    f64.const -1
    f64.const 1
    local.get $2
    i32.const 45
    i32.eq
    select
    local.set $4
    local.get $0
    i32.const 2
    i32.add
    local.tee $0
    i32.load16_u $0
    local.set $2
   end
   local.get $1
   if
    local.get $1
    i32.const 2
    i32.lt_s
    local.get $1
    i32.const 36
    i32.gt_s
    i32.or
    br_if $folding-inner0
    local.get $1
    i32.const 16
    i32.eq
    if
     local.get $2
     i32.const 48
     i32.eq
     local.get $3
     i32.const 2
     i32.gt_s
     i32.and
     if (result i32)
      local.get $0
      i32.load16_u $0 offset=2
      i32.const 32
      i32.or
      i32.const 120
      i32.eq
     else
      i32.const 0
     end
     if
      local.get $3
      i32.const 2
      i32.sub
      local.set $3
      local.get $0
      i32.const 4
      i32.add
      local.set $0
     end
    end
   else
    local.get $2
    i32.const 48
    i32.eq
    local.get $3
    i32.const 2
    i32.gt_s
    i32.and
    if
     block $break|1
      block $case2|1
       block $case1|1
        local.get $0
        i32.load16_u $0 offset=2
        i32.const 32
        i32.or
        local.tee $2
        i32.const 98
        i32.ne
        if
         local.get $2
         i32.const 111
         i32.eq
         br_if $case1|1
         local.get $2
         i32.const 120
         i32.eq
         br_if $case2|1
         br $break|1
        end
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        local.get $3
        i32.const 2
        i32.sub
        local.set $3
        i32.const 2
        local.set $1
        br $break|1
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       local.get $3
       i32.const 2
       i32.sub
       local.set $3
       i32.const 8
       local.set $1
       br $break|1
      end
      local.get $0
      i32.const 4
      i32.add
      local.set $0
      local.get $3
      i32.const 2
      i32.sub
      local.set $3
      i32.const 16
      local.set $1
     end
    end
    local.get $1
    i32.const 10
    local.get $1
    select
    local.set $1
   end
   local.get $3
   i32.const 1
   i32.sub
   local.set $6
   loop $while-continue|2
    local.get $3
    local.tee $2
    i32.const 1
    i32.sub
    local.set $3
    local.get $2
    if
     block $while-break|2
      local.get $0
      i32.load16_u $0
      local.tee $2
      i32.const 48
      i32.sub
      i32.const 10
      i32.lt_u
      if (result i32)
       local.get $2
       i32.const 48
       i32.sub
      else
       local.get $2
       i32.const 65
       i32.sub
       i32.const 25
       i32.le_u
       if (result i32)
        local.get $2
        i32.const 55
        i32.sub
       else
        local.get $2
        i32.const 87
        i32.sub
        local.get $2
        local.get $2
        i32.const 97
        i32.sub
        i32.const 25
        i32.le_u
        select
       end
      end
      local.tee $2
      local.get $1
      i32.ge_u
      if
       local.get $3
       local.get $6
       i32.eq
       br_if $folding-inner0
       br $while-break|2
      end
      local.get $5
      local.get $1
      f64.convert_i32_s
      f64.mul
      local.get $2
      f64.convert_i32_u
      f64.add
      local.set $5
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $while-continue|2
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $5
   f64.mul
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  f64.const nan:0x8000000000000
 )
 (func $~lib/string/parseInt (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $~lib/util/string/strtol<f64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 7168
  local.set $1
  local.get $2
  i32.const 7168
  i32.store $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $0
    i32.load $0
    local.tee $2
    i32.store $0 offset=4
    local.get $2
    i32.load $0
    i32.const 48
    i32.sub
    i32.const 10
    i32.lt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=16
     local.get $2
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0 offset=12
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $2
     local.get $1
     local.get $3
     call $~lib/string/String.__concat
     local.tee $1
     i32.store $0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0 offset=4
     local.get $0
     i32.const 7168
     i32.store $0 offset=8
     local.get $1
     i32.const 7168
     call $~lib/string/String.__eq
     if (result i32)
      i32.const -1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $1
      i32.const 0
      call $~lib/string/parseInt
      i32.trunc_sat_f64_s
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  i32.const 7168
  i32.store $0 offset=8
  local.get $1
  i32.const 7168
  call $~lib/string/String.__eq
  if (result i32)
   i32.const -1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   call $~lib/string/parseInt
   i32.trunc_sat_f64_s
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 8
  i32.const 35
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $3
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   block $folding-inner1
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i32.const 0
     i32.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0
     local.get $1
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i32.const 0
     i32.store $0 offset=8
     local.get $3
     local.get $2
     i32.store $0
     local.get $3
     local.get $2
     i32.load $0 offset=8
     local.tee $4
     i32.store $0
     local.get $3
     local.get $4
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $3
     local.get $2
     i32.load $0 offset=4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $3
     local.get $2
     i32.load $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.const 123
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
     drop
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
     local.tee $1
     i32.const -1
     i32.eq
     br_if $folding-inner2
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0
     local.get $2
     i32.load $0
     i32.const 125
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      i32.const 0
      global.set $~argumentsLength
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      drop
      local.get $1
      local.get $1
      call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
      local.set $0
      br $folding-inner1
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $0
      i32.load $0
      local.tee $2
      i32.store $0
      local.get $2
      i32.load $0
      i32.const 44
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       i32.const 0
       global.set $~argumentsLength
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
       drop
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $4
       i32.store $0
       local.get $4
       i32.load $0
       i32.const 125
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        i32.const 0
        global.set $~argumentsLength
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
        drop
        local.get $1
        local.get $2
        call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
        local.set $0
        br $folding-inner1
       end
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $3
     i32.store $0 offset=4
     local.get $0
     local.get $3
     i32.store $0
     local.get $3
     if
      local.get $0
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     br $folding-inner2
    end
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   i32.const 7504
   i32.const 7120
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  i32.const 17
  i32.const 36
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0 offset=4
  local.get $5
  local.get $0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $4
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $1
  i32.store $0 offset=8
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=12
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $3
  i32.store8 $0 offset=16
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $5
  local.get $4
  i32.const 9
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  i32.const 9
  i32.eq
  if
   i32.const 7552
   i32.const 7664
   i32.const 169
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $1
  i32.load $0
  i32.const 63
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 8
  i32.const 37
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.const 4
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 2
  i32.const 4
  local.get $1
  i32.const 120
  i32.eq
  select
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $0
    i32.store $0 offset=4
    local.get $5
    local.get $0
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $5
    local.get $2
    i32.const 1
    i32.add
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
    local.tee $5
    i32.const 97
    i32.sub
    i32.const 6
    i32.lt_u
    local.get $5
    i32.const 48
    i32.sub
    i32.const 10
    i32.lt_u
    i32.or
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     i32.const 0
     global.set $~argumentsLength
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  i32.const 7168
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 7168
  i32.store $0 offset=8
  loop $for-loop|1
   local.get $3
   local.get $4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=16
    local.get $2
    local.get $0
    i32.load $0
    local.tee $5
    i32.store $0 offset=12
    local.get $5
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#currentAsString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $2
    local.get $1
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    drop
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 16
  call $~lib/string/parseInt
  i32.trunc_sat_f64_u
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 8
  i32.const 38
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.const 6
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 8
  i32.const 39
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $2
  i32.load $0
  local.set $2
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0
  block $folding-inner1
   local.get $1
   i32.load $0
   i32.const 92
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 92
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
    block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $1
     i32.store $0
     block $break|0
      block $case0|0
       local.get $1
       i32.load $0
       local.tee $1
       i32.const 36
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 40
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 41
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 42
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 43
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 46
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 63
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 92
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 91
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 93
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 94
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 124
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 123
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 125
       i32.eq
       br_if $case0|0
       br $break|0
      end
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter
     end
     i32.const 0
    end
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     i32.const 0
     global.set $~argumentsLength
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     drop
     local.get $1
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
    else
     local.get $1
     i32.const 94
     i32.eq
     local.get $1
     i32.const 36
     i32.eq
     i32.or
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      i32.const 0
      global.set $~argumentsLength
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     else
      local.get $1
      i32.const 120
      i32.eq
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.const 120
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
      else
       local.get $1
       i32.const 117
       i32.eq
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.const 117
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
       else
        block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass (result i32)
         block $break|05
          block $case0|017
           local.get $1
           i32.const 100
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 68
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 46
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 119
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 87
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 115
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 83
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 116
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 114
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 110
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 118
           i32.eq
           br_if $case0|017
           local.get $1
           i32.const 102
           i32.eq
           br_if $case0|017
           br $break|05
          end
          i32.const 1
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass
         end
         i32.const 0
        end
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         i32.const 0
         global.set $~argumentsLength
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
         call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
        else
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         i32.const 0
         global.set $~argumentsLength
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
         call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
        end
       end
      end
     end
    end
    local.set $0
    br $folding-inner1
   end
   block $folding-inner0
    local.get $2
    i32.const 94
    i32.eq
    local.get $2
    i32.const 36
    i32.eq
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     i32.const 0
     global.set $~argumentsLength
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
     call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
     local.set $0
     br $folding-inner0
    end
    local.get $2
    i32.const 46
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.const 46
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
     drop
     i32.const 46
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
     local.set $0
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
    call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 13
  i32.const 40
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store8 $0 offset=12
  local.get $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.const 8
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 12
  i32.const 42
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.const 7
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 9
  i32.const 41
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store8 $0 offset=8
  local.get $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.const 5
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterClass (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.const 91
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0
   local.get $1
   i32.load $0
   i32.const 94
   i32.eq
   local.tee $1
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 94
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   local.tee $2
   i32.store $0 offset=8
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $3
    i32.load $0
    i32.const 93
    i32.ne
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     call $~lib/array/Array<~lib/string/String>#get:length
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0
     local.get $3
     i32.load $0
     i32.const 92
     i32.ne
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $3
      i32.const 1
      call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
      i32.const 45
      i32.eq
     else
      i32.const 0
     end
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $3
      i32.const 2
      call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
      i32.const 93
      i32.ne
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=12
      local.get $3
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i32.const 0
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0
      i32.const 0
      global.set $~argumentsLength
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      i32.const 45
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
      drop
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      i32.const 0
      global.set $~argumentsLength
      local.get $3
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
      call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $2
      local.get $3
      call $~lib/array/Array<~lib/string/String>#push
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $3
      i32.load $0
      i32.const 92
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       i32.const 0
       global.set $~argumentsLength
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
       drop
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $3
       i32.store $0
       local.get $3
       i32.load $0
       local.tee $3
       i32.const 45
       i32.eq
       local.get $3
       i32.const 94
       i32.eq
       i32.or
       local.get $3
       i32.const 93
       i32.eq
       i32.or
       local.get $3
       i32.const 92
       i32.eq
       i32.or
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0
        local.get $3
        local.get $0
        i32.store $0 offset=12
        i32.const 0
        global.set $~argumentsLength
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
        call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0
        local.get $3
        local.get $0
        i32.store $0 offset=12
        i32.const 0
        global.set $~argumentsLength
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
        call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
       end
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $2
       local.get $3
       call $~lib/array/Array<~lib/string/String>#push
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $2
       i32.store $0
       local.get $3
       local.get $0
       i32.store $0 offset=12
       i32.const 0
       global.set $~argumentsLength
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
       call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $2
       local.get $3
       call $~lib/array/Array<~lib/string/String>#push
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
     i32.eqz
     if
      i32.const 7904
      i32.const 7248
      i32.const 316
      i32.const 9
      call $~lib/builtins/abort
      unreachable
     end
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 93
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 44
   memory.fill $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   local.tee $2
   i32.store $0
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0
    local.tee $1
    i32.store $0 offset=4
    local.get $1
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
    if
     block $while-break|0
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.load $0
      local.tee $1
      i32.store $0 offset=4
      local.get $1
      i32.load $0
      local.tee $1
      i32.const 41
      i32.eq
      br_if $while-break|0
      local.get $1
      i32.const 124
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       local.get $0
       i32.const 124
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
       drop
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $2
       call $~lib/array/Array<~lib/string/String>#get:length
       i32.const 1
       i32.gt_s
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=8
        local.get $2
        call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
       else
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=4
        local.get $2
        i32.const 0
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       end
       local.tee $1
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       i32.const 1
       i32.const 2
       i32.const 31
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $2
       i32.store $0 offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0 offset=4
       i32.store $0 offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=24
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=24
       local.get $2
       i32.const 0
       local.get $1
       local.get $4
       call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
       call $~lib/array/Array<~lib/string/String>#__set
       local.get $3
       local.get $2
       i32.store $0
      else
       local.get $1
       i32.const 40
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        local.get $0
        i32.const 40
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
        drop
        block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i64.const 0
         i64.store $0
         local.get $1
         local.get $0
         i32.store $0 offset=4
         local.get $1
         local.get $0
         i32.load $0
         local.tee $1
         i32.store $0
         local.get $1
         i32.load $0
         i32.const 63
         i32.eq
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $0
          i32.store $0 offset=4
          local.get $1
          local.get $0
          i32.load $0
          local.tee $1
          i32.store $0
          local.get $1
          i32.const 1
          call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
          i32.const 58
          i32.eq
         else
          i32.const 0
         end
         if
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          i32.const 63
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
          drop
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          i32.const 58
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
          drop
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 1
        end
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        local.get $2
        i32.store $0 offset=4
        local.get $1
        local.get $0
        i32.store $0 offset=28
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0 offset=28
        i32.const 2
        global.set $~argumentsLength
        i32.const 0
        local.set $1
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        i64.const 0
        i64.store $0
        block $1of1
         block $0of1
          block $outOfRange
           global.get $~argumentsLength
           i32.const 2
           i32.sub
           br_table $0of1 $1of1 $outOfRange
          end
          unreachable
         end
         i32.const -1
         local.set $1
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        i32.const 0
        i32.store $0
        local.get $5
        local.get $3
        i32.store $0 offset=4
        local.get $3
        local.get $4
        local.get $1
        call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
        local.set $1
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=8
        local.get $2
        local.get $1
        call $~lib/array/Array<~lib/string/String>#push
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        local.get $0
        i32.const 41
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
        drop
       else
        local.get $1
        i32.const 123
        i32.eq
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $0
         i32.store $0 offset=4
         local.get $1
         local.get $0
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange
         local.tee $1
         i32.store $0 offset=32
         local.get $1
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $2
          i32.store $0 offset=4
          local.get $3
          local.get $2
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
          local.tee $3
          i32.store $0 offset=36
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.store $0 offset=28
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=28
          local.get $1
          i32.load $0
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=28
          local.get $1
          i32.load $0 offset=4
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=28
          local.get $3
          local.get $4
          local.get $1
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
          call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
         else
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $2
          i32.store $0 offset=4
          local.get $1
          local.get $0
          i32.store $0 offset=24
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
         end
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=8
         local.get $2
         local.get $1
         call $~lib/array/Array<~lib/string/String>#push
        else
         local.get $1
         i32.const 43
         i32.eq
         local.get $1
         i32.const 63
         i32.eq
         i32.or
         local.get $1
         i32.const 42
         i32.eq
         i32.or
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=4
          local.get $2
          call $~lib/array/Array<~lib/string/String>#get:length
          i32.eqz
          if
           i32.const 7792
           i32.const 7248
           i32.const 255
           i32.const 11
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $2
          i32.store $0 offset=4
          local.get $1
          local.get $2
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
          local.tee $1
          i32.store $0 offset=40
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=4
          i32.const 0
          global.set $~argumentsLength
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken@varargs
          local.set $3
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=28
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0 offset=28
          local.get $1
          local.get $3
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
          call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
         else
          local.get $1
          i32.const 91
          i32.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           local.get $2
           i32.store $0 offset=4
           local.get $1
           local.get $0
           i32.store $0 offset=24
           local.get $0
           call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterClass
          else
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           local.get $2
           i32.store $0 offset=4
           local.get $1
           local.get $0
           i32.store $0 offset=24
           local.get $0
           call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
          end
         end
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=8
         local.get $2
         local.get $1
         call $~lib/array/Array<~lib/string/String>#push
        end
       end
      end
      br $while-continue|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 1
   i32.gt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $2
    call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.const 0
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/string/String#indexOf
  i32.const -1
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  i32.const 1
  i32.eq
  if (result i32)
   block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AssertionNode (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 39
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AssertionNode
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 7664
    i32.const 119
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $1
   i32.const -1
   i32.eq
   local.get $1
   local.get $0
   i32.load $0 offset=4
   i32.eq
   i32.or
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.eqz
  local.get $3
  i32.const 0
  i32.le_s
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $0
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0
  local.get $2
  i32.load $0 offset=4
  local.set $5
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $0
  i32.const 0
  local.set $1
  local.get $3
  i32.const 2
  i32.shl
  local.set $3
  loop $while-continue|0
   local.get $1
   local.get $3
   i32.lt_u
   if
    local.get $1
    local.get $5
    i32.add
    local.get $0
    local.get $1
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=12
  local.tee $5
  local.get $4
  i32.add
  local.tee $2
  i32.const 268435455
  i32.gt_u
  if
   i32.const 6096
   i32.const 7120
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.load $0 offset=4
  local.set $3
  local.get $4
  i32.const 2
  i32.shl
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $7
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   local.get $6
   i32.lt_u
   if
    local.get $0
    local.get $3
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load $0
    local.tee $4
    i32.store $0
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $3
  local.get $6
  i32.add
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $3
  local.get $5
  i32.const 2
  i32.shl
  local.set $4
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $4
   i32.lt_u
   if
    local.get $0
    local.get $1
    i32.add
    local.get $1
    local.get $3
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $5
    if
     local.get $2
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 56
   memory.fill $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   i32.load $0
   i32.const 9
   i32.eq
   if
    block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $2
     i32.store $0 offset=8
     i32.const 0
     local.get $2
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 36
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 8416
     i32.const 63
     i32.const 26
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.get $2
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=12
    i32.const 1000
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8544
     i32.store $0
     i32.const 1000
     i32.const 10
     call $~lib/number/I32#toString
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=16
     i32.const 8544
     local.get $0
     call $~lib/string/String.__concat
     i32.const 8416
     i32.const 66
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    i32.const 36
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    i32.const 0
    i32.const 36
    memory.fill $0
    local.get $4
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    i32.store $0 offset=4
    local.get $4
    local.get $1
    i32.store $0
    block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode
     local.get $1
     i32.load $0
     i32.const 3
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0
      local.get $4
      local.get $0
      i32.load $0
      local.tee $5
      i32.store $0 offset=8
      local.get $4
      i32.const 1
      i32.const 2
      i32.const 31
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $0
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0 offset=4
      i32.store $0 offset=20
      local.get $0
      i32.const 0
      local.get $5
      call $~lib/array/Array<~lib/string/String>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=12
      local.get $4
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
      local.tee $0
      i32.store $0 offset=24
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=28
      local.get $1
      local.get $5
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/node/Node#replace@override
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode
     end
     block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $1
      local.tee $0
      i32.store $0 offset=32
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 32
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 8416
      i32.const 54
      i32.const 10
      call $~lib/builtins/abort
      unreachable
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    local.get $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0 offset=4
    local.tee $5
    i32.store $0 offset=24
    local.get $1
    local.get $5
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=16
    local.get $5
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=8
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0 offset=4
    local.tee $3
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $7
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
    local.tee $4
    i32.store $0 offset=32
    local.get $7
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $4
     i32.store $0
     local.get $1
     local.get $3
     i32.store $0 offset=36
     local.get $4
     i32.const 0
     local.get $3
     call $~lib/array/Array<~lib/string/String>#__set
     i32.const 1
     local.set $1
     loop $for-loop|0
      local.get $1
      local.get $7
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $4
       i32.store $0
       local.get $8
       local.get $3
       i32.store $0 offset=36
       local.get $3
       call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=36
       local.get $4
       local.get $1
       local.get $8
       call $~lib/array/Array<~lib/string/String>#__set
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|0
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=12
    i32.const -1
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $4
     i32.store $0
     local.get $1
     local.get $3
     i32.store $0 offset=40
     local.get $3
     call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=40
     local.get $1
     i32.const 42
     local.get $2
     i32.load8_u $0 offset=16
     call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=16
     local.get $4
     local.get $1
     call $~lib/array/Array<~lib/string/String>#push
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $2
     i32.store $0
     local.get $2
     i32.load $0 offset=12
     local.set $7
     local.get $1
     local.get $2
     i32.store $0
     local.get $7
     local.get $2
     i32.load $0 offset=8
     i32.sub
     local.set $7
     i32.const 0
     local.set $1
     loop $for-loop|1
      local.get $1
      local.get $7
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $4
       i32.store $0
       local.get $8
       local.get $3
       i32.store $0 offset=40
       local.get $3
       call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=40
       local.get $8
       i32.const 63
       local.get $2
       i32.load8_u $0 offset=16
       call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=16
       local.get $4
       local.get $8
       call $~lib/array/Array<~lib/string/String>#push
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $5
    i32.store $0 offset=52
    local.get $5
    i32.const 0
    local.get $6
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=48
    local.get $1
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=44
    i32.const 1
    global.set $~argumentsLength
    local.get $5
    local.get $6
    i32.const 1
    i32.add
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice@varargs
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=40
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=16
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 56
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/walkNode (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
    block $default
     block $case5
      block $case4
       block $case3
        block $case2
         block $case1
          block $case0
           local.get $0
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 27
           i32.sub
           br_table $case0 $default $default $default $default $case1 $case4 $case5 $default $case3 $default $default $default $case2 $default
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          i64.const 0
          i64.store $0
          local.get $2
          i64.const 0
          i64.store $0 offset=8
          local.get $2
          local.get $0
          i32.store $0
          local.get $0
          i32.load $0 offset=4
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 1
           i32.const 2
           i32.const 31
           i32.const 0
           call $~lib/rt/__newArray
           local.tee $2
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.load $0 offset=4
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0 offset=4
           local.tee $4
           i32.store $0 offset=12
           local.get $4
           i32.eqz
           if
            i32.const 8112
            i32.const 7664
            i32.const 39
            i32.const 33
            call $~lib/builtins/abort
            unreachable
           end
           local.get $2
           i32.const 0
           local.get $4
           call $~lib/array/Array<~lib/string/String>#__set
          else
           global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
           local.set $2
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.add
          global.set $~lib/memory/__stack_pointer
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner1
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         i32.const 0
         i32.store $0
         local.get $4
         local.get $0
         i32.store $0
         local.get $0
         i32.load $0 offset=4
         local.set $2
         local.get $4
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
        end
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
        local.set $2
        br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
       end
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
       local.set $2
       br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      i64.const 0
      i64.store $0
      local.get $2
      i32.const 0
      i32.store $0 offset=8
      local.get $2
      i32.const 2
      i32.const 2
      i32.const 31
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $2
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load $0 offset=4
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=8
      local.get $2
      i32.const 0
      local.get $0
      i32.load $0 offset=4
      call $~lib/array/Array<~lib/string/String>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=8
      local.get $2
      i32.const 1
      local.get $0
      i32.load $0 offset=8
      call $~lib/array/Array<~lib/string/String>#__set
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
     end
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
     local.set $2
     br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@override
    end
    global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
    local.set $2
   end
   local.get $3
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 1
   i32.sub
   local.set $3
   loop $for-loop|0
    local.get $3
    i32.const 0
    i32.ge_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=16
     local.get $2
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 10528
     i32.store $0 offset=12
     local.get $4
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
     local.get $3
     i32.const 1
     i32.sub
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=12
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   i32.const 8
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   if
    local.get $3
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $3
   i32.const 10528
   i32.load $0
   call_indirect $0 (type $i32_=>_none)
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 24
     i32.const 10560
     call $~lib/rt/__newArray
     local.tee $1
     i32.store $0
    end
    global.get $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
    local.tee $2
    i32.const 1
    i32.add
    global.set $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 23
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 8
  i32.const 22
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/closure (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  i32.const 0
  global.set $~argumentsLength
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $3
  i32.store $0
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=20
   local.get $1
   local.get $0
   i32.load $0 offset=4
   local.tee $4
   i32.store $0 offset=16
   local.get $1
   local.get $4
   i32.load $0
   local.tee $4
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0 offset=12
   local.get $4
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=20
   local.get $1
   local.get $0
   i32.load $0 offset=4
   local.tee $4
   i32.store $0 offset=16
   local.get $1
   local.get $4
   i32.load $0
   local.tee $4
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=12
   local.get $4
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $4
   i32.store $0 offset=12
   local.get $1
   local.get $4
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $2
  i32.store $0 offset=16
  local.get $3
  local.get $2
  call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 47
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.load8_u $0 offset=1
   local.set $1
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 9
   i32.const 46
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store8 $0 offset=8
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
   local.tee $0
   i32.store $0
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0 offset=4
    i32.const 32
    i32.or
    i32.store $0 offset=4
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 8
  i32.const 52
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $3
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#intersection (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  f64.convert_i32_s
  local.set $3
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $1
  i32.load $0
  f64.convert_i32_s
  f64.max
  i32.trunc_sat_f64_s
  local.set $4
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  f64.convert_i32_s
  local.set $3
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $1
  i32.load $0 offset=4
  f64.convert_i32_s
  f64.min
  i32.trunc_sat_f64_s
  local.tee $0
  local.get $4
  i32.gt_s
  if (result i32)
   local.get $4
   local.get $0
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#offset (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0
  i32.add
  local.set $3
  local.get $2
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.load8_u $0 offset=2
   local.set $1
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 9
   i32.const 54
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store8 $0 offset=8
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.const 2
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $1
   local.get $0
   i32.store $0
   block $folding-inner1
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $0
        i32.load $0
        i32.const 4
        i32.sub
        br_table $case1|0 $case3|0 $case2|0 $case0|0 $case3|0
       end
       block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=8
        i32.const 0
        local.get $0
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 42
        i32.ne
        br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 10784
        i32.const 54
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
       local.tee $1
       i32.store $0 offset=12
       local.get $1
       i32.eqz
       if
        i32.const 8112
        i32.const 10784
        i32.const 55
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0 offset=4
       local.get $2
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       i32.const 0
       i32.store $0
       local.get $2
       local.get $0
       i32.store $0
       local.get $0
       i32.load $0 offset=4
       local.set $3
       local.get $2
       local.get $0
       i32.store $0
       local.get $3
       local.get $0
       i32.load $0 offset=8
       call $~lib/assemblyscript-regex/assembly/util/Range#constructor
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       i32.load8_u $0 offset=1
       local.set $1
       global.get $~lib/memory/__stack_pointer
       i32.const 32
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i32.const 0
       i32.const 32
       memory.fill $0
       local.get $0
       i32.const 12
       i32.const 51
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $0
       i32.store $0 offset=4
       local.get $3
       local.get $2
       i32.store $0 offset=8
       local.get $0
       local.get $2
       i32.store $0 offset=8
       local.get $2
       if
        local.get $0
        local.get $2
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $0
       i32.store $0 offset=4
       local.get $0
       i32.const 0
       i32.store $0 offset=4
       local.get $3
       local.get $0
       i32.store $0 offset=4
       local.get $3
       local.get $0
       i32.const 1
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
       local.tee $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 53
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $3
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load $0 offset=4
       i32.store $0 offset=16
       local.get $3
       i32.const 0
       local.get $2
       call $~lib/array/Array<~lib/string/String>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=8
       local.get $0
       local.get $3
       i32.store $0 offset=4
       local.get $3
       if
        local.get $0
        local.get $3
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $1
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        local.get $2
        i32.store $0 offset=4
        local.get $1
        global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
        local.tee $3
        i32.store $0 offset=8
        local.get $1
        local.get $2
        local.get $3
        call $~lib/assemblyscript-regex/assembly/util/Range#intersection
        local.tee $3
        i32.store $0 offset=20
        local.get $3
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         local.get $0
         i32.store $0 offset=24
         local.get $4
         local.get $0
         i32.load $0 offset=4
         local.tee $1
         i32.store $0 offset=4
         local.get $4
         local.get $3
         i32.store $0 offset=24
         local.get $3
         i32.const -32
         call $~lib/assemblyscript-regex/assembly/util/Range#offset
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $1
         local.get $3
         call $~lib/array/Array<~lib/string/String>#push
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        local.get $2
        i32.store $0 offset=4
        local.get $1
        global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
        local.tee $3
        i32.store $0 offset=8
        local.get $1
        local.get $2
        local.get $3
        call $~lib/assemblyscript-regex/assembly/util/Range#intersection
        local.tee $1
        i32.store $0 offset=28
        local.get $1
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $0
         i32.store $0 offset=24
         local.get $2
         local.get $0
         i32.load $0 offset=4
         local.tee $3
         i32.store $0 offset=4
         local.get $2
         local.get $1
         i32.store $0 offset=24
         local.get $1
         i32.const 32
         call $~lib/assemblyscript-regex/assembly/util/Range#offset
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=8
         local.get $3
         local.get $1
         call $~lib/array/Array<~lib/string/String>#push
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 32
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $folding-inner1
      end
      block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=16
       i32.const 0
       local.get $0
       i32.const 8
       i32.sub
       i32.load $0
       i32.const 37
       i32.ne
       br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
       drop
       i32.const 1
      end
      i32.eqz
      if
       i32.const 8352
       i32.const 10784
       i32.const 59
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
      local.tee $1
      i32.store $0 offset=20
      local.get $1
      i32.eqz
      if
       i32.const 8112
       i32.const 10784
       i32.const 60
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
      local.set $0
      br $folding-inner1
     end
     block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=24
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 38
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 10784
      i32.const 64
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
     local.tee $1
     i32.store $0 offset=28
     local.get $1
     i32.eqz
     if
      i32.const 8112
      i32.const 10784
      i32.const 65
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $0
     local.get $1
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
     local.set $0
     br $folding-inner1
    end
    i32.const 10912
    i32.const 10784
    i32.const 68
    i32.const 11
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.load $0 offset=4
   local.tee $4
   i32.store $0
   local.get $3
   i32.const 11024
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $4
   i32.store $0
   local.get $1
   local.get $4
   i32.load $0 offset=12
   local.tee $7
   i32.const 2
   i32.const 50
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   i32.load $0 offset=4
   local.set $1
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $2
    local.get $7
    local.get $4
    i32.load $0 offset=12
    local.tee $6
    local.get $6
    local.get $7
    i32.gt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $4
     i32.store $0 offset=8
     local.get $6
     local.get $2
     i32.const 2
     i32.shl
     local.tee $8
     local.get $4
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $9
     i32.store $0
     local.get $6
     local.get $4
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $6
     local.get $9
     local.get $2
     local.get $4
     i32.const 11024
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $6
     i32.store $0 offset=12
     local.get $1
     local.get $8
     i32.add
     local.get $6
     i32.store $0
     local.get $6
     if
      local.get $5
      local.get $6
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $5
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load8_u $0 offset=8
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 9
   i32.const 49
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $5
   i32.store $0 offset=8
   local.get $1
   local.get $5
   i32.store $0 offset=4
   local.get $5
   if
    local.get $1
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store8 $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.const 3
   call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/group (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $4
   local.get $0
   i32.load $0
   local.tee $5
   i32.store $0
   local.get $4
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 24
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $1
   i32.store8 $0 offset=17
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $2
   i32.store $0 offset=20
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const -1
   i32.store $0 offset=8
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $3
   i32.const 7168
   i32.store $0 offset=8
   local.get $6
   i32.const 7168
   i32.store $0 offset=12
   local.get $6
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store8 $0 offset=16
   local.get $1
   local.get $6
   i32.store $0 offset=4
   i32.const 0
   global.set $~argumentsLength
   local.get $1
   local.get $6
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $2
   local.get $5
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i64.const 0
   i64.store $0 offset=8
   local.get $4
   i32.const 12
   i32.const 58
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   i32.const 0
   global.set $~argumentsLength
   local.get $5
   local.get $4
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load $0
   local.tee $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $5
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $2
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner3
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 72
   memory.fill $0
   block $folding-inner2
    block $folding-inner1
     local.get $1
     i32.eqz
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     block $case8|0
      block $case6|0
       block $case5|0
        block $case4|0
         block $case3|0
          block $case2|0
           block $case1|0
            block $case0|0
             local.get $1
             i32.load $0
             i32.const 1
             i32.sub
             br_table $folding-inner1 $case3|0 $case2|0 $case1|0 $case4|0 $case5|0 $case8|0 $case0|0 $case8|0 $case6|0 $case8|0
            end
            block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode (result i32)
             global.get $~lib/memory/__stack_pointer
             local.tee $2
             local.get $1
             i32.store $0 offset=4
             i32.const 0
             local.get $1
             i32.const 8
             i32.sub
             i32.load $0
             i32.const 40
             i32.ne
             br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode
             drop
             i32.const 1
            end
            i32.eqz
            if
             i32.const 8352
             i32.const 10592
             i32.const 184
             i32.const 22
             call $~lib/builtins/abort
             unreachable
            end
            local.get $2
            local.get $1
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.tee $2
            local.get $0
            i32.store $0
            local.get $2
            local.get $1
            i32.store $0 offset=16
            local.get $2
            local.get $1
            i32.load $0 offset=4
            local.tee $3
            i32.store $0 offset=12
            local.get $2
            local.get $0
            local.get $3
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
            local.tee $0
            i32.store $0 offset=20
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0
            local.get $1
            i32.load $0 offset=8
            local.tee $2
            i32.const 63
            i32.eq
            if
             global.get $~lib/memory/__stack_pointer
             local.tee $2
             local.get $0
             i32.store $0
             local.get $2
             local.get $1
             i32.store $0 offset=12
             local.get $1
             i32.load8_u $0 offset=12
             local.set $1
             local.get $2
             i32.const 24
             i32.sub
             global.set $~lib/memory/__stack_pointer
             global.get $~lib/memory/__stack_pointer
             i32.const 33780
             i32.lt_s
             br_if $folding-inner3
             global.get $~lib/memory/__stack_pointer
             local.tee $2
             i32.const 0
             i32.const 24
             memory.fill $0
             i32.const 0
             global.set $~argumentsLength
             local.get $2
             i32.const 0
             call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
             local.tee $2
             i32.store $0
             i32.const 0
             global.set $~argumentsLength
             global.get $~lib/memory/__stack_pointer
             i32.const 0
             call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
             local.tee $3
             i32.store $0 offset=4
             local.get $1
             if
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              local.get $2
              i32.store $0 offset=16
              local.get $1
              local.get $2
              i32.load $0
              local.tee $4
              i32.store $0 offset=8
              local.get $1
              local.get $0
              i32.store $0 offset=16
              local.get $1
              local.get $0
              i32.load $0
              local.tee $1
              i32.store $0 offset=12
              local.get $4
              local.get $1
              call $~lib/array/Array<~lib/string/String>#push
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.load $0
              local.tee $1
              i32.store $0 offset=8
              global.get $~lib/memory/__stack_pointer
              local.get $3
              i32.store $0 offset=12
              local.get $1
              local.get $3
              call $~lib/array/Array<~lib/string/String>#push
             else
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              local.get $2
              i32.store $0 offset=16
              local.get $1
              local.get $2
              i32.load $0
              local.tee $4
              i32.store $0 offset=8
              local.get $1
              local.get $3
              i32.store $0 offset=12
              local.get $4
              local.get $3
              call $~lib/array/Array<~lib/string/String>#push
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.load $0
              local.tee $1
              i32.store $0 offset=8
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.load $0
              local.tee $4
              i32.store $0 offset=12
              local.get $1
              local.get $4
              call $~lib/array/Array<~lib/string/String>#push
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $1
             local.get $0
             i32.store $0 offset=20
             local.get $1
             local.get $0
             i32.load $0 offset=4
             local.tee $0
             i32.store $0 offset=16
             local.get $1
             local.get $0
             i32.load $0
             local.tee $0
             i32.store $0 offset=8
             local.get $1
             local.get $3
             i32.store $0 offset=12
             local.get $0
             local.get $3
             call $~lib/array/Array<~lib/string/String>#push
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.store $0 offset=12
             global.get $~lib/memory/__stack_pointer
             local.get $3
             i32.store $0 offset=16
             local.get $2
             local.get $3
             call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
             local.set $0
             global.get $~lib/memory/__stack_pointer
             i32.const 24
             i32.add
             global.set $~lib/memory/__stack_pointer
             br $folding-inner2
            else
             local.get $2
             i32.const 43
             i32.eq
             if
              global.get $~lib/memory/__stack_pointer
              local.tee $2
              local.get $0
              i32.store $0
              local.get $2
              local.get $1
              i32.store $0 offset=12
              local.get $1
              i32.load8_u $0 offset=12
              local.set $1
              local.get $2
              i32.const 24
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 33780
              i32.lt_s
              br_if $folding-inner3
              global.get $~lib/memory/__stack_pointer
              local.tee $2
              i32.const 0
              i32.const 24
              memory.fill $0
              i32.const 0
              global.set $~argumentsLength
              local.get $2
              i32.const 0
              call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
              local.tee $2
              i32.store $0
              i32.const 0
              global.set $~argumentsLength
              global.get $~lib/memory/__stack_pointer
              i32.const 0
              call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
              local.tee $3
              i32.store $0 offset=4
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $2
              i32.load $0
              local.tee $4
              i32.store $0 offset=8
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store $0 offset=16
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.load $0
              local.tee $5
              i32.store $0 offset=12
              local.get $4
              local.get $5
              call $~lib/array/Array<~lib/string/String>#push
              local.get $1
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               local.get $0
               i32.store $0 offset=20
               local.get $1
               local.get $0
               i32.load $0 offset=4
               local.tee $4
               i32.store $0 offset=16
               local.get $1
               local.get $4
               i32.load $0
               local.tee $4
               i32.store $0 offset=8
               local.get $1
               local.get $0
               i32.store $0 offset=16
               local.get $1
               local.get $0
               i32.load $0
               local.tee $1
               i32.store $0 offset=12
               local.get $4
               local.get $1
               call $~lib/array/Array<~lib/string/String>#push
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=20
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0 offset=4
               local.tee $0
               i32.store $0 offset=16
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0
               local.tee $0
               i32.store $0 offset=8
               global.get $~lib/memory/__stack_pointer
               local.get $3
               i32.store $0 offset=12
               local.get $0
               local.get $3
               call $~lib/array/Array<~lib/string/String>#push
              else
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               local.get $0
               i32.store $0 offset=20
               local.get $1
               local.get $0
               i32.load $0 offset=4
               local.tee $4
               i32.store $0 offset=16
               local.get $1
               local.get $4
               i32.load $0
               local.tee $4
               i32.store $0 offset=8
               local.get $1
               local.get $3
               i32.store $0 offset=12
               local.get $4
               local.get $3
               call $~lib/array/Array<~lib/string/String>#push
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=20
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0 offset=4
               local.tee $1
               i32.store $0 offset=16
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.load $0
               local.tee $1
               i32.store $0 offset=8
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=16
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load $0
               local.tee $0
               i32.store $0 offset=12
               local.get $1
               local.get $0
               call $~lib/array/Array<~lib/string/String>#push
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              local.get $2
              i32.store $0 offset=12
              local.get $0
              local.get $3
              i32.store $0 offset=16
              local.get $2
              local.get $3
              call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
              local.set $0
              global.get $~lib/memory/__stack_pointer
              i32.const 24
              i32.add
              global.set $~lib/memory/__stack_pointer
              br $folding-inner2
             else
              local.get $2
              i32.const 42
              i32.eq
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               local.get $0
               i32.store $0
               local.get $2
               local.get $1
               i32.store $0 offset=12
               local.get $0
               local.get $1
               i32.load8_u $0 offset=12
               call $~lib/assemblyscript-regex/assembly/nfa/nfa/closure
               local.set $0
               br $folding-inner2
              else
               global.get $~lib/memory/__stack_pointer
               i32.const 10704
               i32.store $0
               i32.const 1
               global.set $~argumentsLength
               local.get $2
               call $~lib/string/String.fromCharCode@varargs
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store $0 offset=12
               i32.const 10704
               local.get $0
               call $~lib/string/String.__concat
               i32.const 10592
               i32.const 194
               i32.const 11
               call $~lib/builtins/abort
               unreachable
              end
              unreachable
             end
             unreachable
            end
            unreachable
           end
           block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode (result i32)
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=24
            i32.const 0
            local.get $1
            i32.const 8
            i32.sub
            i32.load $0
            i32.const 37
            i32.ne
            br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
            drop
            i32.const 1
           end
           i32.eqz
           if
            i32.const 8352
            i32.const 10592
            i32.const 201
            i32.const 37
            call $~lib/builtins/abort
            unreachable
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           local.get $1
           i32.store $0 offset=12
           local.get $2
           local.get $0
           i32.store $0 offset=28
           local.get $2
           local.get $0
           i32.load $0
           local.tee $0
           i32.store $0 offset=16
           local.get $1
           local.get $0
           call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
           local.set $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 33780
           i32.lt_s
           br_if $folding-inner3
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i64.const 0
           i64.store $0
           local.get $1
           i64.const 0
           i64.store $0 offset=8
           i32.const 0
           global.set $~argumentsLength
           local.get $1
           i32.const 0
           call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
           local.tee $1
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.set $2
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=8
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 33780
           i32.lt_s
           br_if $folding-inner3
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           i64.const 0
           i64.store $0
           local.get $3
           i64.const 0
           i64.store $0 offset=8
           local.get $3
           i32.const 16
           i32.const 48
           call $~lib/rt/itcms/__new
           local.tee $3
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.tee $4
           local.get $3
           i32.store $0 offset=4
           local.get $4
           local.get $0
           i32.store $0 offset=8
           local.get $3
           local.get $0
           i32.store $0 offset=12
           local.get $0
           if
            local.get $3
            local.get $0
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           local.get $3
           i32.store $0 offset=4
           local.get $3
           i32.const 0
           i32.store8 $0 offset=8
           local.get $0
           local.get $3
           i32.store $0 offset=4
           i32.const 0
           global.set $~argumentsLength
           local.get $0
           local.get $3
           call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
           local.tee $0
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load $0
           local.tee $3
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=8
           local.get $3
           local.get $1
           call $~lib/array/Array<~lib/string/String>#push
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $2
           local.get $0
           i32.store $0 offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0 offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=8
           local.get $0
           local.get $1
           call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
           local.set $0
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.add
           global.set $~lib/memory/__stack_pointer
           br $folding-inner2
          end
          block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           local.get $1
           i32.store $0 offset=32
           i32.const 0
           local.get $1
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 32
           i32.ne
           br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 8352
           i32.const 10592
           i32.const 204
           i32.const 30
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $1
          i32.store $0
          local.get $2
          local.get $1
          i32.load $0 offset=4
          local.tee $4
          i32.store $0 offset=36
          local.get $3
          local.get $4
          i32.store $0
          local.get $4
          call $~lib/array/Array<~lib/string/String>#get:length
          i32.eqz
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $0
          i32.store $0
          local.get $1
          local.get $4
          i32.store $0 offset=16
          local.get $4
          i32.const 0
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=12
          local.get $1
          local.get $0
          local.get $2
          call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
          local.tee $1
          i32.store $0 offset=40
          i32.const 1
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0
          local.get $4
          call $~lib/array/Array<~lib/string/String>#get:length
          local.set $3
          loop $for-loop|1
           local.get $2
           local.get $3
           i32.lt_s
           if
            global.get $~lib/memory/__stack_pointer
            local.tee $5
            local.get $1
            i32.store $0
            local.get $5
            local.get $0
            i32.store $0 offset=16
            local.get $5
            local.get $4
            i32.store $0 offset=44
            local.get $4
            local.get $2
            call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=28
            local.get $0
            local.get $6
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
            local.set $6
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=12
            global.get $~lib/memory/__stack_pointer
            i32.const 16
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 33780
            i32.lt_s
            br_if $folding-inner3
            global.get $~lib/memory/__stack_pointer
            local.tee $7
            i64.const 0
            i64.store $0
            local.get $7
            i64.const 0
            i64.store $0 offset=8
            local.get $7
            local.get $1
            i32.store $0 offset=12
            local.get $7
            local.get $1
            i32.load $0 offset=4
            local.tee $8
            i32.store $0 offset=8
            local.get $7
            local.get $8
            i32.load $0
            local.tee $8
            i32.store $0
            local.get $7
            local.get $6
            i32.store $0 offset=8
            local.get $7
            local.get $6
            i32.load $0
            local.tee $7
            i32.store $0 offset=4
            local.get $8
            local.get $7
            call $~lib/array/Array<~lib/string/String>#push
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load $0
            local.tee $1
            i32.store $0 offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store $0 offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.load $0 offset=4
            local.tee $6
            i32.store $0 offset=8
            local.get $1
            local.get $6
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
            local.set $1
            global.get $~lib/memory/__stack_pointer
            i32.const 16
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $5
            local.get $1
            i32.store $0 offset=40
            local.get $2
            i32.const 1
            i32.add
            local.set $2
            br $for-loop|1
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 72
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $1
          return
         end
         block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AlternationNode (result i32)
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $1
          i32.store $0 offset=48
          i32.const 0
          local.get $1
          i32.const 8
          i32.sub
          i32.load $0
          i32.const 33
          i32.ne
          br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/AlternationNode
          drop
          i32.const 1
         end
         i32.eqz
         if
          i32.const 8352
          i32.const 10592
          i32.const 215
          i32.const 22
          call $~lib/builtins/abort
          unreachable
         end
         local.get $2
         local.get $1
         i32.store $0 offset=52
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $0
         i32.store $0 offset=16
         local.get $2
         local.get $1
         i32.store $0 offset=44
         local.get $2
         local.get $1
         i32.load $0 offset=4
         local.tee $2
         i32.store $0 offset=28
         local.get $0
         local.get $2
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
         local.set $2
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=44
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load $0 offset=8
         local.tee $1
         i32.store $0 offset=28
         local.get $0
         local.get $1
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner3
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.const 24
         memory.fill $0
         i32.const 0
         global.set $~argumentsLength
         local.get $1
         i32.const 0
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
         local.tee $1
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load $0
         local.tee $3
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.load $0
         local.tee $4
         i32.store $0 offset=8
         local.get $3
         local.get $4
         call $~lib/array/Array<~lib/string/String>#push
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load $0
         local.tee $3
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0
         local.tee $4
         i32.store $0 offset=8
         local.get $3
         local.get $4
         call $~lib/array/Array<~lib/string/String>#push
         i32.const 0
         global.set $~argumentsLength
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
         local.tee $3
         i32.store $0 offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0 offset=20
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.load $0 offset=4
         local.tee $2
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.load $0
         local.tee $2
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $2
         local.get $3
         call $~lib/array/Array<~lib/string/String>#push
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=20
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0 offset=4
         local.tee $0
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load $0
         local.tee $0
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=8
         local.get $0
         local.get $3
         call $~lib/array/Array<~lib/string/String>#push
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=12
         local.get $1
         local.get $3
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.add
         global.set $~lib/memory/__stack_pointer
         br $folding-inner2
        end
        block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=56
         i32.const 0
         local.get $1
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 41
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 10592
         i32.const 224
         i32.const 13
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        local.get $1
        i32.store $0 offset=12
        local.get $2
        local.get $0
        i32.store $0 offset=28
        local.get $2
        local.get $0
        i32.load $0
        local.tee $0
        i32.store $0 offset=16
        local.get $1
        local.get $0
        call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner3
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i64.const 0
        i64.store $0
        local.get $1
        i64.const 0
        i64.store $0 offset=8
        i32.const 0
        global.set $~argumentsLength
        local.get $1
        i32.const 0
        call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
        local.tee $1
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner3
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        i64.const 0
        i64.store $0
        local.get $3
        i64.const 0
        i64.store $0 offset=8
        local.get $3
        i32.const 16
        i32.const 56
        call $~lib/rt/itcms/__new
        local.tee $3
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $3
        i32.store $0 offset=4
        local.get $4
        local.get $0
        i32.store $0 offset=8
        local.get $3
        local.get $0
        i32.store $0 offset=12
        local.get $0
        if
         local.get $3
         local.get $0
         i32.const 0
         call $byn-split-outlined-A$~lib/rt/itcms/__link
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        local.get $3
        i32.store $0 offset=4
        local.get $3
        i32.const 0
        i32.store8 $0 offset=8
        local.get $0
        local.get $3
        i32.store $0 offset=4
        i32.const 0
        global.set $~argumentsLength
        local.get $0
        local.get $3
        call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
        local.tee $0
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load $0
        local.tee $3
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=8
        local.get $3
        local.get $1
        call $~lib/array/Array<~lib/string/String>#push
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $2
        local.get $0
        i32.store $0 offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=8
        local.get $0
        local.get $1
        call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $folding-inner2
       end
       block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=60
        i32.const 0
        local.get $1
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 38
        i32.ne
        br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 10592
        i32.const 231
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0 offset=12
       local.get $2
       local.get $0
       i32.store $0 offset=28
       local.get $2
       local.get $0
       i32.load $0
       local.tee $0
       i32.store $0 offset=16
       local.get $1
       local.get $0
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
       local.set $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner3
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i64.const 0
       i64.store $0
       local.get $1
       i64.const 0
       i64.store $0 offset=8
       i32.const 0
       global.set $~argumentsLength
       local.get $1
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner3
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       i64.const 0
       i64.store $0
       local.get $3
       i64.const 0
       i64.store $0 offset=8
       local.get $3
       i32.const 16
       i32.const 57
       call $~lib/rt/itcms/__new
       local.tee $3
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $3
       i32.store $0 offset=4
       local.get $4
       local.get $0
       i32.store $0 offset=8
       local.get $3
       local.get $0
       i32.store $0 offset=12
       local.get $0
       if
        local.get $3
        local.get $0
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $3
       i32.store $0 offset=4
       local.get $3
       i32.const 0
       i32.store8 $0 offset=8
       local.get $0
       local.get $3
       i32.store $0 offset=4
       i32.const 0
       global.set $~argumentsLength
       local.get $0
       local.get $3
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
       local.tee $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $3
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $3
       local.get $1
       call $~lib/array/Array<~lib/string/String>#push
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       local.get $0
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $0
       local.get $1
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $folding-inner2
      end
      block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/GroupNode (result i32)
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0 offset=64
       i32.const 0
       local.get $1
       i32.const 8
       i32.sub
       i32.load $0
       i32.const 34
       i32.ne
       br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/GroupNode
       drop
       i32.const 1
      end
      i32.eqz
      if
       i32.const 8352
       i32.const 10592
       i32.const 236
       i32.const 22
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      local.get $1
      i32.store $0 offset=68
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=12
      local.get $2
      local.get $1
      i32.store $0 offset=28
      local.get $2
      local.get $1
      i32.load $0 offset=4
      local.tee $2
      i32.store $0 offset=16
      local.get $0
      local.get $2
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=12
      local.get $1
      i32.load8_u $0 offset=8
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=12
      local.get $0
      local.get $2
      local.get $1
      i32.load $0 offset=12
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/group
      local.set $0
      br $folding-inner2
     end
     i32.const 11056
     i32.const 10592
     i32.const 246
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner3
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 0
    i32.const 20
    memory.fill $0
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
    local.tee $0
    i32.store $0
    i32.const 0
    global.set $~argumentsLength
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
    local.tee $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0
    local.tee $2
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=12
    local.get $2
    local.get $1
    call $~lib/array/Array<~lib/string/String>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=16
    local.get $0
    local.get $1
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i64.const 0
  i64.store $0 offset=8
  local.get $0
  i32.const 16
  i32.const 26
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $1
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $2
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 25
   i32.eq
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 25
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState0
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 8240
    i32.const 141
    i32.const 29
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   i32.load8_u $0 offset=17
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
    local.tee $2
    i32.store $0 offset=12
    block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState2 (result i32)
     local.get $1
     local.get $0
     i32.store $0 offset=20
     i32.const 0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 25
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState2
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 8240
     i32.const 143
     i32.const 26
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=16
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/walker/walker (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
   i32.const 0
   i32.ge_s
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 11120
   i32.load $0
   call_indirect $0 (type $i32_=>_none)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   local.set $3
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=16
     local.get $0
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 11120
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $4
     local.get $1
     call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 44
   memory.fill $0
   local.get $2
   i32.const 28
   i32.const 20
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 7984
   i32.store $0 offset=8
   local.get $2
   i32.const 7984
   i32.store $0 offset=24
   local.get $2
   i32.const 7984
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store8 $0 offset=12
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store8 $0 offset=13
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i64.const 0
   i64.store $0 offset=8
   local.get $4
   i32.const 4
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $4
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $4
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   else
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 7984
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i64.const 0
   i64.store $0 offset=8
   local.get $4
   i32.const 4
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store8 $0
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store8 $0 offset=1
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store8 $0 offset=2
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store8 $0 offset=3
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   i32.const 7984
   i32.store $0 offset=8
   local.get $5
   i32.const 7984
   i32.store $0 offset=12
   local.get $4
   i32.const 7984
   i32.const 7984
   call $~lib/string/String#includes
   i32.store8 $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 7984
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8016
   i32.store $0 offset=12
   local.get $4
   i32.const 7984
   i32.const 8016
   call $~lib/string/String#includes
   i32.store8 $0 offset=1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 7984
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8048
   i32.store $0 offset=12
   local.get $4
   i32.const 7984
   i32.const 8048
   call $~lib/string/String#includes
   i32.store8 $0 offset=2
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 7984
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8080
   i32.store $0 offset=12
   local.get $4
   i32.const 7984
   i32.const 8080
   call $~lib/string/String#includes
   i32.store8 $0 offset=3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0 offset=4
   local.tee $3
   i32.store $0 offset=20
   local.get $3
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.load $0
    i32.const 3
    i32.eq
   else
    i32.const 0
   end
   if
    block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.load $0 offset=4
     local.tee $5
     i32.store $0 offset=24
     local.get $5
     i32.eqz
     if
      i32.const 8112
      i32.const 8240
      i32.const 128
      i32.const 28
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     local.get $5
     i32.store $0 offset=28
     i32.const 0
     local.get $5
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 32
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 8240
     i32.const 128
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $5
    i32.store $0 offset=4
    local.get $3
    local.get $5
    i32.load $0 offset=4
    local.tee $3
    i32.store $0 offset=32
    local.get $6
    local.get $2
    i32.store $0 offset=4
    local.get $6
    local.get $3
    i32.store $0 offset=36
    local.get $3
    call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $2
    local.get $5
    i32.const 94
    call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
    i32.store8 $0 offset=13
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i64.const 0
    i64.store $0
    local.get $5
    local.get $3
    i32.store $0
    local.get $5
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $3
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__uget
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $2
    local.get $3
    i32.const 36
    call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
    i32.store8 $0 offset=12
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   i32.const 10528
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.load $0 offset=4
   local.tee $3
   i32.store $0 offset=4
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $3
    i32.store $0
    local.get $5
    local.get $0
    i32.store $0 offset=8
    local.get $5
    i32.const 10528
    i32.store $0 offset=12
    local.get $3
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i64.const 0
   i64.store $0 offset=8
   local.get $5
   local.get $4
   i32.store $0 offset=8
   local.get $5
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 4
   i32.const 45
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $6
   local.get $4
   i32.store $0 offset=8
   local.get $5
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $5
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=4
   local.get $5
   local.get $0
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store $0 offset=40
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
   global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 11120
   i32.store $0 offset=8
   i32.const 2
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i64.const 0
   i64.store $0 offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 24
    i32.const 11152
    call $~lib/rt/__newArray
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $3
   i32.store $0 offset=4
   local.get $5
   i32.const 11120
   i32.store $0 offset=8
   local.get $5
   local.get $1
   i32.store $0 offset=12
   local.get $3
   local.get $1
   call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   local.tee $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $4
   i32.store $0 offset=8
   local.get $2
   local.get $4
   i32.store $0 offset=4
   local.get $4
   if
    local.get $2
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $1
  local.get $3
  i32.lt_s
  select
  local.tee $1
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $3
  local.get $2
  local.get $3
  i32.lt_s
  select
  local.tee $2
  local.get $1
  local.get $2
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $4
  local.get $1
  local.get $2
  local.get $1
  local.get $2
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.tee $1
  local.get $4
  i32.sub
  local.tee $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7168
   return
  end
  local.get $4
  i32.eqz
  local.get $1
  local.get $3
  i32.const 1
  i32.shl
  i32.eq
  i32.and
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  local.get $4
  i32.add
  local.get $2
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/string/String.__ne (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i32.const 0
    i32.const 36
    memory.fill $0
    local.get $6
    local.get $2
    i32.store $0
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    local.set $6
    loop $for-loop|0
     local.get $4
     local.get $6
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $2
      i32.store $0
      local.get $7
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      i32.const 0
      i32.store $0
      local.get $7
      local.get $2
      i32.store $0
      local.get $4
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       i32.const 6400
       i32.const 7120
       i32.const 114
       i32.const 42
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $2
      i32.store $0
      local.get $2
      i32.load $0 offset=4
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $8
      local.get $7
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $8
      local.get $0
      i32.load $0 offset=4
      i32.eq
      br_if $folding-inner1
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $2
    i32.store $0
    local.get $4
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.load $0 offset=4
    call $~lib/array/Array<u32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    local.get $3
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@override
    local.tee $4
    if
     local.get $4
     i32.const 1
     i32.eq
     br_if $folding-inner1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $3
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     i32.eq
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 14
     i32.const 11264
     call $~lib/rt/__newArray
     local.tee $2
     i32.store $0 offset=8
     local.get $3
     i32.const 1
     i32.add
     local.set $3
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0
    local.tee $6
    i32.store $0 offset=12
    local.get $4
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     i32.const 0
     local.get $3
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 36
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    local.set $4
    loop $for-loop|1
     local.get $4
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $6
      i32.store $0 offset=20
      local.get $6
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=16
      local.get $7
      local.get $8
      local.get $1
      local.get $2
      local.get $3
      call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
      local.tee $7
      i32.store $0 offset=24
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      i32.const 0
      call $~lib/string/String.__ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=28
       local.get $0
       if (result i32)
        local.get $0
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 25
        i32.eq
       else
        i32.const 0
       end
       if
        block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState1 (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=32
         i32.const 0
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 25
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState1
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 8240
         i32.const 52
         i32.const 10
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.const 1
        i32.store8 $0 offset=16
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 36
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $7
       return
      end
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  block $2of2
   block $0of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 14
   i32.const 11296
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 12
  i32.const 60
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#substr (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $1
  i32.const 0
  i32.lt_s
  if
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
  end
  local.get $1
  i32.sub
  local.tee $3
  local.get $2
  local.get $3
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.tee $2
  i32.const 0
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7168
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=4
  local.get $3
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.get $2
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load8_u $0 offset=16
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.load $0 offset=12
  else
   i32.const 7168
  end
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $4
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $3
   local.get $4
   i32.gt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 56
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 56
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=16
   local.tee $9
   i32.store $0 offset=4
   local.get $2
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<~lib/string/String>#get:length
   local.set $2
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     local.get $9
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=8
     local.get $4
     i32.const 7168
     i32.store $0 offset=12
     local.get $4
     i32.const 7168
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.tee $6
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=16
    local.get $2
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    i32.load $0
    local.tee $0
    i32.store $0
    local.get $2
    i32.const 7168
    i32.store $0 offset=8
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    local.get $0
    i32.const 7168
    call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
    local.tee $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 0
    call $~lib/string/String.__ne
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 2
     i32.const 4
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $2
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0 offset=4
     i32.store $0 offset=28
     local.get $2
     i32.const 0
     local.get $0
     call $~lib/array/Array<~lib/string/String>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=16
     local.get $2
     i32.const 0
     local.get $1
     call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
    else
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 56
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $4
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load8_u $0 offset=13
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner2
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     i32.store $0
     local.get $3
     i32.load8_u $0 offset=3
     local.set $3
     local.get $2
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     i32.const 1
     local.set $3
    end
    local.get $4
    local.get $6
    i32.const 1
    local.get $3
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=16
     local.get $2
     local.get $0
     i32.load $0 offset=8
     local.tee $3
     i32.store $0 offset=12
     local.get $2
     local.get $3
     i32.load $0
     local.tee $5
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=12
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     local.set $3
     local.get $2
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner2
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store $0
     block $1of1
      block $0of1
       block $outOfRange
        global.get $~argumentsLength
        i32.const 1
        i32.sub
        br_table $0of1 $1of1 $outOfRange
       end
       unreachable
      end
      i32.const 2147483647
      local.set $3
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $4
     local.get $3
     call $~lib/string/String#substr
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     local.get $5
     local.get $3
     call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
     local.tee $2
     i32.store $0 offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     i32.const 0
     call $~lib/string/String.__ne
     if
      block $for-continue|1
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $9
       i32.store $0
       local.get $3
       i32.const 11328
       i32.store $0 offset=8
       local.get $9
       i32.const 11328
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach
       global.get $~lib/memory/__stack_pointer
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 4
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $8
       i32.store $0 offset=36
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.load $0 offset=4
       i32.store $0 offset=40
       local.get $8
       i32.const 0
       local.get $2
       call $~lib/array/Array<~lib/string/String>#__set
       local.get $3
       local.get $8
       i32.store $0 offset=44
       global.get $~lib/memory/__stack_pointer
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store $0 offset=48
       i32.const 0
       local.set $3
       global.get $~lib/memory/__stack_pointer
       i32.const 28
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       i32.const 0
       i32.const 28
       memory.fill $0
       local.get $2
       local.get $9
       i32.store $0
       block $__inlined_func$~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup
        local.get $9
        call $~lib/array/Array<~lib/string/String>#get:length
        i32.eqz
        if
         i32.const 0
         i32.const 2
         i32.const 4
         i32.const 11360
         call $~lib/rt/__newArray
         local.set $2
         br $__inlined_func$~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        i32.const 1
        i32.const 2
        i32.const 4
        i32.const 0
        call $~lib/rt/__newArray
        local.tee $2
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.load $0 offset=4
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node>
        local.set $10
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store $0
        local.get $2
        i32.const 0
        local.get $10
        i32.load $0 offset=12
        call $~lib/array/Array<~lib/string/String>#__set
        local.get $5
        local.get $2
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $9
        call $~lib/assemblyscript-regex/assembly/util/first<~lib/assemblyscript-regex/assembly/parser/node/Node>
        local.set $5
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0
        local.get $5
        i32.load $0 offset=20
        local.set $5
        loop $for-loop|00
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         local.get $9
         call $~lib/array/Array<~lib/string/String>#get:length
         local.get $3
         i32.gt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $10
          local.get $9
          i32.store $0
          local.get $10
          local.get $9
          local.get $3
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.tee $10
          i32.store $0 offset=20
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0
          local.get $5
          local.get $10
          i32.load $0 offset=20
          i32.ne
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $11
           local.get $10
           i32.store $0
           local.get $10
           i32.load $0 offset=20
           local.set $5
           local.get $11
           local.get $2
           i32.store $0
           local.get $11
           local.get $10
           i32.store $0 offset=24
           local.get $11
           local.get $10
           i32.load $0 offset=12
           local.tee $10
           i32.store $0 offset=12
           local.get $2
           local.get $10
           call $~lib/array/Array<~lib/string/String>#push
          else
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0
           local.get $10
           i32.load8_u $0 offset=16
           if
            global.get $~lib/memory/__stack_pointer
            local.tee $11
            local.get $2
            i32.store $0
            local.get $11
            local.get $2
            i32.store $0 offset=24
            local.get $2
            call $~lib/array/Array<~lib/string/String>#get:length
            i32.const 1
            i32.sub
            local.set $11
            global.get $~lib/memory/__stack_pointer
            local.get $10
            i32.store $0 offset=24
            global.get $~lib/memory/__stack_pointer
            local.get $10
            i32.load $0 offset=12
            local.tee $10
            i32.store $0 offset=24
            local.get $2
            local.get $11
            local.get $10
            call $~lib/array/Array<~lib/string/String>#__set
           end
          end
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|00
         end
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 28
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $2
       i32.store $0 offset=16
       local.get $3
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       i64.const 0
       i64.store $0
       local.get $3
       local.get $8
       i32.store $0
       local.get $8
       i32.load $0 offset=12
       local.set $10
       local.get $3
       local.get $2
       i32.store $0
       local.get $2
       i32.load $0 offset=12
       local.tee $11
       local.get $10
       i32.add
       local.tee $3
       i32.const 268435455
       i32.gt_u
       if
        i32.const 6096
        i32.const 7120
        i32.const 224
        i32.const 60
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.const 2
       i32.const 4
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $12
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $12
       i32.store $0
       local.get $12
       i32.load $0 offset=4
       local.set $5
       local.get $10
       i32.const 2
       i32.shl
       local.set $10
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0
       local.get $8
       i32.load $0 offset=4
       local.set $13
       i32.const 0
       local.set $3
       loop $for-loop|01
        local.get $3
        local.get $10
        i32.lt_u
        if
         local.get $3
         local.get $5
         i32.add
         local.get $3
         local.get $13
         i32.add
         i32.load $0
         local.tee $8
         i32.store $0
         local.get $8
         if
          local.get $12
          local.get $8
          i32.const 1
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         local.get $3
         i32.const 4
         i32.add
         local.set $3
         br $for-loop|01
        end
       end
       local.get $5
       local.get $10
       i32.add
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       i32.load $0 offset=4
       local.set $2
       local.get $11
       i32.const 2
       i32.shl
       local.set $8
       i32.const 0
       local.set $3
       loop $for-loop|12
        local.get $3
        local.get $8
        i32.lt_u
        if
         local.get $3
         local.get $5
         i32.add
         local.get $2
         local.get $3
         i32.add
         i32.load $0
         local.tee $10
         i32.store $0
         local.get $10
         if
          local.get $12
          local.get $10
          i32.const 1
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         local.get $3
         i32.const 4
         i32.add
         local.set $3
         br $for-loop|12
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $12
       i32.store $0 offset=8
       local.get $2
       local.get $1
       i32.store $0 offset=16
       local.get $7
       local.get $12
       local.get $4
       local.get $1
       call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
       local.tee $2
       i32.store $0 offset=52
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       i32.load $0 offset=4
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0
       local.tee $5
       i32.store $0 offset=8
       local.get $5
       i32.const 0
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $3
       local.get $5
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       i32.add
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.load8_u $0 offset=13
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        local.get $0
        i32.store $0 offset=8
        local.get $5
        local.get $0
        i32.load $0 offset=4
        local.tee $5
        i32.store $0
        local.get $4
        i32.const 0
        local.get $5
        i32.load8_u $0 offset=3
        select
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0
         local.get $1
         local.get $4
         i32.const 1
         i32.sub
         call $~lib/string/String#charCodeAt
         i32.const 10
         i32.ne
        else
         local.get $4
        end
        br_if $for-continue|1
       end
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.load8_u $0 offset=12
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        local.get $0
        i32.store $0 offset=8
        local.get $5
        local.get $0
        i32.load $0 offset=4
        local.tee $5
        i32.store $0
        local.get $3
        local.get $6
        i32.ne
        i32.const 0
        local.get $5
        i32.load8_u $0 offset=3
        select
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0
         local.get $1
         local.get $3
         call $~lib/string/String#charCodeAt
         i32.const 10
         i32.ne
        else
         local.get $3
         local.get $6
         i32.ne
        end
        br_if $for-continue|1
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i64.const 0
       i64.store $0
       local.get $1
       local.get $0
       i32.store $0 offset=4
       local.get $1
       local.get $0
       i32.load $0 offset=4
       local.tee $4
       i32.store $0
       local.get $4
       i32.load8_u $0
       local.set $4
       local.get $1
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $4
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        local.get $3
        i32.store $0
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 56
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       return
      end
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   i32.store $0
   local.get $1
   i32.const 56
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/versionCompare/hasValidParts (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 11184
      i32.store $0 offset=4
      i32.const 11184
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 11232
      i32.store $0 offset=4
      i32.const 11232
     end
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 7984
     i32.store $0 offset=8
     local.get $4
     local.get $3
     call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
     local.tee $4
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=8
     local.get $1
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     i64.const 0
     i64.store $0
     local.get $5
     local.get $4
     i32.store $0
     local.get $5
     local.get $3
     i32.store $0 offset=4
     local.get $4
     local.get $3
     call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
     i32.const 0
     i32.ne
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 0
   i32.ne
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/string/parseInt
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String>#map<f64> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.const 3
  i32.const 62
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.load $0 offset=4
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $0
    i32.store $0 offset=8
    local.get $5
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    i32.store $0
    local.get $5
    local.get $0
    i32.store $0 offset=8
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    local.get $7
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_f64)
    f64.store $0
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 6400
   i32.const 7120
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $2
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.load8_u $0
  else
   i32.const 0
  end
  local.set $3
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.load8_u $0 offset=1
  else
   i32.const 0
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $0
  i32.store $0
  local.get $5
  i32.const 7088
  i32.store $0 offset=4
  i32.const 1
  global.set $~argumentsLength
  local.get $5
  local.get $0
  i32.const 7088
  call $~lib/string/String#split@varargs
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 7088
  i32.store $0 offset=4
  i32.const 1
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 7088
  call $~lib/string/String#split@varargs
  local.tee $5
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $0
  call $assembly/bucketing/versionCompare/hasValidParts
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=4
  local.get $3
  local.get $5
  call $assembly/bucketing/versionCompare/hasValidParts
  i32.eqz
  local.get $1
  i32.eqz
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  local.get $2
  if
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     i32.const 8832
     i32.store $0 offset=4
     local.get $0
     i32.const 8832
     call $~lib/array/Array<~lib/string/String>#push
     br $while-continue|0
    end
   end
   loop $while-continue|1
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $5
     i32.store $0
     local.get $1
     i32.const 8832
     i32.store $0 offset=4
     local.get $5
     i32.const 8832
     call $~lib/array/Array<~lib/string/String>#push
     br $while-continue|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 62
  i32.const 11392
  call $~lib/rt/__newArray
  local.tee $2
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 62
  i32.const 11424
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0 offset=20
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11456
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.const 11456
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11488
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.const 11488
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $1
   i32.store $0 offset=20
  end
  i32.const 0
  local.set $0
  block $folding-inner1
   block $folding-inner0
    loop $for-loop|2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $0
      i32.eq
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $2
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.get $4
      f64.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0
       local.get $2
       local.get $0
       call $~lib/array/Array<f64>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       local.get $0
       call $~lib/array/Array<f64>#__get
       local.get $4
       f64.lt
       br_if $folding-inner0
       br $folding-inner1
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|2
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $0
    i32.ne
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  f64.const -1
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 86
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 6096
   i32.const 7120
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store $0
  local.get $5
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7168
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 7168
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0 offset=12
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    i32.store $0 offset=4
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $4
     local.get $7
     i32.add
     local.set $4
    end
    local.get $1
    if
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $1
     local.get $4
     i32.add
     local.set $4
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $6
   local.get $4
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $3
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $0
  local.get $1
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/murmurhash/murmurhashV3 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   global.get $assembly/helpers/murmurhash/keyBuffer
   local.tee $3
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $6
   local.get $5
   local.get $3
   i32.store $0 offset=4
   local.get $6
   local.get $3
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 2
   i32.shr_u
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    call $~lib/staticarray/StaticArray<i32>#constructor
    local.tee $3
    i32.store $0
   end
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $4
     call $~lib/string/String#charCodeAt
     local.tee $5
     i32.const 127
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $3
      i32.store $0 offset=4
      local.get $6
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      i64.const 0
      i64.store $0
      local.get $6
      i32.const 0
      i32.store $0 offset=8
      local.get $6
      i32.const 11680
      i32.store $0
      local.get $5
      i32.const 16
      call $~lib/number/I32#toString
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      i32.const 0
      i32.const 20
      memory.fill $0
      local.get $6
      local.get $5
      i32.store $0
      local.get $6
      i32.const 5
      local.get $5
      i32.const 20
      i32.sub
      i32.load $0 offset=16
      i32.const 1
      i32.shr_u
      i32.sub
      local.tee $6
      i32.const 0
      i32.gt_s
      if (result i32)
       local.get $6
       call $~lib/array/Array<~lib/string/String>#constructor
      else
       i32.const 0
       i32.const 2
       i32.const 4
       i32.const 11712
       call $~lib/rt/__newArray
      end
      local.tee $6
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $6
      i32.store $0 offset=12
      local.get $7
      i32.const 8832
      i32.store $0 offset=16
      local.get $6
      i32.const 8832
      call $~lib/array/Array<~lib/string/String>#join
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      local.get $6
      local.get $5
      call $~lib/string/String.__concat
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      i32.const 11680
      local.get $5
      call $~lib/string/String.__concat
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=8
      local.get $3
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      local.get $5
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.store $0
     else
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      local.get $5
      i32.store $0
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $5
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $5
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.const 3
   i32.and
   local.tee $4
   i32.sub
   local.set $0
   loop $while-continue|1
    local.get $0
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $3
     i32.store $0 offset=4
     local.get $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 255
     i32.and
     local.set $7
     local.get $6
     local.get $3
     i32.store $0 offset=4
     local.get $7
     local.get $3
     local.get $2
     i32.const 1
     i32.add
     local.tee $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 255
     i32.and
     i32.const 8
     i32.shl
     i32.or
     local.set $7
     local.get $6
     local.get $3
     i32.store $0 offset=4
     local.get $7
     local.get $3
     local.get $2
     i32.const 1
     i32.add
     local.tee $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 255
     i32.and
     i32.const 16
     i32.shl
     i32.or
     local.set $7
     local.get $6
     local.get $3
     i32.store $0 offset=4
     local.get $7
     local.get $3
     local.get $2
     i32.const 1
     i32.add
     local.tee $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 255
     i32.and
     i32.const 24
     i32.shl
     i32.or
     local.set $6
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     local.get $1
     local.get $6
     i32.const 65535
     i32.and
     i32.const -862048943
     i32.mul
     local.get $6
     i32.const 16
     i32.shr_u
     i32.const -862048943
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.tee $1
     i32.const 15
     i32.shl
     local.get $1
     i32.const 17
     i32.shr_u
     i32.or
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 461845907
     i32.mul
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 461845907
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     i32.xor
     local.tee $1
     i32.const 13
     i32.shl
     local.get $1
     i32.const 19
     i32.shr_u
     i32.or
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 5
     i32.mul
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 5
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 27492
     i32.add
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 58964
     i32.add
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
   local.set $0
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $4
       i32.const 1
       i32.sub
       br_table $case2|2 $case1|2 $case0|2 $break|2
      end
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $3
      local.get $2
      i32.const 2
      i32.add
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 255
      i32.and
      i32.const 16
      i32.shl
      local.set $0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $0
     local.get $3
     local.get $2
     i32.const 1
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 255
     i32.and
     i32.const 8
     i32.shl
     i32.xor
     local.set $0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $1
    local.get $0
    local.get $3
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.const 255
    i32.and
    i32.xor
    local.tee $0
    i32.const 65535
    i32.and
    i32.const -862048943
    i32.mul
    local.get $0
    i32.const 16
    i32.shr_u
    i32.const -862048943
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    local.tee $0
    i32.const 15
    i32.shl
    local.get $0
    i32.const 17
    i32.shr_u
    i32.or
    local.tee $0
    i32.const 65535
    i32.and
    i32.const 461845907
    i32.mul
    local.get $0
    i32.const 16
    i32.shr_u
    i32.const 461845907
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    i32.xor
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $5
   i32.xor
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $0
   i32.const 65535
   i32.and
   i32.const -2048144789
   i32.mul
   local.get $0
   i32.const 16
   i32.shr_u
   i32.const -2048144789
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   local.tee $0
   i32.const 65535
   i32.and
   i32.const -1028477387
   i32.mul
   local.get $0
   i32.const 16
   i32.shr_u
   i32.const -1028477387
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/bucketing/generateBoundedHash (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/helpers/murmurhash/murmurhashV3
  f64.convert_i32_u
  f64.const 4294967295
  f64.div
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/bucketing/bucketing/_generateBoundedHashes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   call $assembly/helpers/murmurhash/murmurhashV3
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 16
   i32.const 123
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $4
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   f64.const 0
   f64.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   f64.const 0
   f64.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 11744
   i32.store $0 offset=16
   local.get $0
   i32.const 11744
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   local.get $2
   call $assembly/bucketing/bucketing/generateBoundedHash
   f64.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   local.get $2
   call $assembly/bucketing/bucketing/generateBoundedHash
   f64.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 6
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 24
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.store $0 offset=12
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=16
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=20
   local.get $2
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load $0 offset=8
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $4
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#rehash (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  local.get $1
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.shl
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $8
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 3
  i32.shl
  i32.const 3
  i32.div_s
  local.tee $6
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  i32.load $0 offset=8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $9
  local.get $0
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $5
  local.get $3
  local.set $2
  loop $while-continue|0
   local.get $5
   local.get $9
   i32.ne
   if
    local.get $9
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $9
     i32.load $0
     local.tee $10
     i32.store $0 offset=12
     local.get $7
     local.get $10
     i32.store $0 offset=16
     local.get $2
     local.get $10
     i32.store $0
     local.get $7
     local.get $9
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=16
     local.get $2
     local.get $4
     i32.store $0 offset=4
     local.get $7
     local.get $10
     i32.store $0 offset=8
     local.get $2
     local.get $8
     local.get $10
     call $~lib/util/hash/HASH<~lib/string/String>
     local.get $1
     i32.and
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load $0
     i32.store $0 offset=8
     local.get $4
     local.get $2
     i32.store $0
     local.get $2
     i32.const 12
     i32.add
     local.set $2
    end
    local.get $9
    i32.const 12
    i32.add
    local.set $9
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $8
  i32.store $0 offset=16
  local.get $0
  local.get $8
  i32.store $0
  local.get $8
  if
   local.get $0
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $0
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $6
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $0
  local.get $0
  i32.load $0 offset=20
  i32.store $0 offset=16
  local.get $1
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  local.get $4
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  local.tee $3
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $5
   local.get $3
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=12
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=20
    local.set $5
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $5
    local.get $0
    i32.load $0 offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=16
   local.tee $6
   i32.const 1
   i32.add
   i32.store $0 offset=16
   local.get $5
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $6
   i32.const 12
   i32.mul
   i32.add
   local.tee $3
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 1
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.load $0 offset=20
   i32.const 1
   i32.add
   i32.store $0 offset=20
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $2
   local.get $1
   local.get $0
   i32.store $0
   local.get $3
   local.get $2
   local.get $4
   local.get $0
   i32.load $0 offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   local.tee $0
   i32.load $0
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64> (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $3
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $5
  i32.store $0 offset=4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $3
    local.get $2
    i32.const 12
    i32.mul
    i32.add
    local.tee $6
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $5
     i32.store $0
     local.get $0
     local.get $6
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     local.get $5
     local.get $1
     local.get $0
     call $~lib/array/Array<~lib/string/String>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  local.tee $0
  i32.eqz
  if
   i32.const 11888
   i32.const 11952
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 52
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0
  local.get $2
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $~lib/array/Array<~lib/string/String>#get:length
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $3
  i32.store $0 offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $2
    i32.store $0
    local.get $4
    local.get $2
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $4
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0
    local.tee $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.get $4
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $5
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
    local.tee $5
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12000
    i32.store $0 offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=48
    i32.const 12000
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    i32.const 12032
    i32.store $0 offset=40
    local.get $4
    i32.const 12032
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=32
    local.get $4
    local.get $5
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    local.get $3
    local.get $1
    local.get $4
    call $~lib/array/Array<~lib/string/String>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 12064
  i32.store $0 offset=20
  local.get $0
  local.get $3
  i32.store $0 offset=36
  local.get $0
  i32.const 12096
  i32.store $0 offset=40
  local.get $3
  i32.const 12096
  call $~lib/array/Array<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=32
  i32.const 12064
  local.get $0
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12128
  i32.store $0 offset=4
  local.get $0
  i32.const 12128
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/configDataManager/_getConfigData (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/managers/configDataManager/_configData
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/managers/configDataManager/_configData
   local.tee $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   i32.const 12160
   i32.const 12240
   i32.const 13
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.const 126
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null> (result i32)
   local.get $3
   local.get $2
   i32.store $0 offset=12
   global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
   local.get $2
   i32.eqz
   br_if $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/JSON/from<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
   drop
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/date/Date#constructor (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 24
  i32.const 85
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i64.store $0 offset=16
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i64.const -8640000000000000
  i64.lt_s
  local.get $0
  i64.const 8640000000000000
  i64.gt_s
  i32.or
  if
   i32.const 12336
   i32.const 12384
   i32.const 100
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $0
  i64.const 86399999
  i64.const 0
  local.get $0
  i64.const 0
  i64.lt_s
  select
  i64.sub
  i64.const 86400000
  i64.div_s
  i32.wrap_i64
  i32.const 2
  i32.shl
  i32.const 2877872
  i32.add
  i32.const 3
  i32.or
  local.tee $1
  i32.const 146096
  i32.const 0
  local.get $1
  i32.const 0
  i32.lt_s
  select
  i32.sub
  i32.const 146097
  i32.div_s
  local.set $3
  local.get $1
  local.get $3
  i32.const 146097
  i32.mul
  i32.sub
  i32.const 3
  i32.or
  i64.extend_i32_u
  i64.const 2939745
  i64.mul
  local.tee $0
  i32.wrap_i64
  i32.const 11758980
  i32.div_u
  local.tee $5
  i32.const 2141
  i32.mul
  i32.const 197913
  i32.add
  local.set $4
  local.get $0
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.get $3
  i32.const 100
  i32.mul
  i32.add
  local.set $1
  local.get $4
  i32.const 16
  i32.shr_u
  local.set $3
  local.get $4
  i32.const 65535
  i32.and
  i32.const 2141
  i32.div_u
  i32.const 1
  i32.add
  global.set $~lib/date/_day
  local.get $5
  i32.const 306
  i32.ge_u
  if
   local.get $3
   i32.const 12
   i32.sub
   local.set $3
   local.get $1
   i32.const 1
   i32.add
   local.set $1
  end
  local.get $3
  global.set $~lib/date/_month
  local.get $2
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_month
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $~lib/date/_day
  i32.store $0 offset=8
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $3
  i32.const 80
  i32.const 105
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $3
  f64.const 0
  f64.store $0 offset=24
  local.get $4
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=52
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=56
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=60
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=64
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=72
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=76
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=4
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=12
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=8
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=12
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=20
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=16
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=32
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=20
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  f64.load $0 offset=24
  f64.store $0 offset=24
  local.get $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=40
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=32
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=44
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=36
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=12
  local.get $4
  local.get $0
  i32.load $0 offset=36
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=44
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $4
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=40
  local.tee $5
  i32.store $0 offset=20
  local.get $5
  if
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $5
     i32.store $0 offset=8
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $6
     local.get $7
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $6
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=32
     local.get $5
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=12
     local.get $4
     local.get $6
     local.get $7
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=44
  local.tee $0
  i32.store $0 offset=36
  local.get $0
  if
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $2
     local.get $5
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $2
     i32.store $0 offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=32
     local.get $0
     local.get $2
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=12
     local.get $4
     local.get $2
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=40
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/date/Date#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=48
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/date/Date#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=52
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  call $assembly/managers/platformDataManager/_getPlatformData
  local.tee $0
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=56
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=60
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=12
  local.tee $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=64
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=16
  local.tee $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=68
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=20
  local.tee $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=72
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=24
  local.tee $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=76
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String.UTF8.encode@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $2of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   local.tee $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   local.get $1
   i32.add
   local.set $4
   loop $while-continue|0
    local.get $1
    local.get $4
    i32.lt_u
    if
     local.get $1
     i32.load16_u $0
     local.tee $5
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $3
      i32.const 1
      i32.add
     else
      local.get $5
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $3
       i32.const 2
       i32.add
      else
       local.get $5
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       local.get $1
       i32.const 2
       i32.add
       local.get $4
       i32.lt_u
       i32.and
       if
        local.get $1
        i32.load16_u $0 offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $3
         i32.const 4
         i32.add
         local.set $3
         local.get $1
         i32.const 4
         i32.add
         local.set $1
         br $while-continue|0
        end
       end
       local.get $3
       i32.const 3
       i32.add
      end
     end
     local.set $3
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   local.get $2
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.get $1
   call $~lib/string/String.UTF8.encodeUnsafe
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $1of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $1of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const -1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   local.set $1
   local.get $2
   i32.const 0
   i32.lt_s
   if
    local.get $2
    i32.const -1
    i32.ne
    if
     i32.const 6096
     i32.const 12736
     i32.const 1869
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.set $2
   else
    local.get $1
    local.get $2
    i32.lt_s
    if
     i32.const 6096
     i32.const 12736
     i32.const 1874
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  i32.const 2
  global.set $~argumentsLength
  local.get $1
  local.get $0
  call $~lib/string/String.UTF8.encode@varargs
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.eqz
  if
   i32.const 0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i64.const 0
  i64.store $0 offset=8
  local.get $0
  i32.const 16
  i32.const 129
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $1
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $2
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 8112
   i32.const 12800
   i32.const 127
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 6400
   i32.const 12736
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  i32.load8_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=4
  call $~lib/typedarray/Uint8Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $2
  i32.store $0
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  local.get $1
  i32.le_s
  if
   i32.const 12928
   i32.const 12800
   i32.const 156
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.const 1
  i32.add
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/typedarray/Uint8Array#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.tee $1
   i32.const 10
   i32.eq
   local.get $1
   i32.const 9
   i32.eq
   i32.or
   local.get $1
   i32.const 13
   i32.eq
   i32.or
   local.get $1
   i32.const 32
   i32.eq
   i32.or
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $3
  i32.store $0 offset=12
  local.get $3
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    block $is_instance
     local.get $3
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj1 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=16
    local.get $3
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
    local.tee $0
    i32.store $0 offset=20
    block $is_instance2
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 6
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 5
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 103
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 107
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 137
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 138
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 141
     i32.eq
     br_if $is_instance2
     local.get $3
     i32.const 143
     i32.eq
     br_if $is_instance2
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj1
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 12992
    i32.const 78
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $1
   i32.store $0 offset=24
   local.get $1
   if (result i32)
    local.get $1
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 132
    i32.eq
   else
    i32.const 0
   end
   if
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr4 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=8
     local.get $1
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
     local.tee $0
     i32.store $0 offset=28
     i32.const 0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 132
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr4
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 12992
     i32.const 80
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $0
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString (result i32)
    local.get $3
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=8
     local.tee $0
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0
     local.set $4
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0 offset=4
     local.set $5
     local.get $3
     local.get $0
     i32.store $0
     local.get $5
     local.get $0
     i32.load $0
     i32.sub
     local.set $0
     local.get $3
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     local.get $4
     i32.add
     local.get $1
     i32.add
     local.get $2
     i32.const 1
     i32.sub
     local.get $1
     i32.sub
     call $~lib/string/String.UTF8.decodeUnsafe
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.tee $1
  i32.const 48
  i32.sub
  local.tee $0
  i32.const 9
  i32.gt_s
  if
   local.get $1
   i32.const 55
   i32.sub
   local.tee $0
   i32.const 10
   i32.lt_s
   local.get $0
   i32.const 15
   i32.gt_s
   i32.or
   if
    local.get $1
    i32.const 87
    i32.sub
    local.set $0
   end
  end
  local.get $0
  i32.const 16
  i32.lt_s
  local.get $0
  i32.const 0
  i32.ge_s
  i32.and
  i32.eqz
  if
   i32.const 13680
   i32.const 12800
   i32.const 319
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12000
   i32.store $0
   i32.const 12000
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 12000
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13328
   i32.store $0
   i32.const 13328
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13328
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store $0
   i32.const 13360
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13360
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13392
   i32.store $0
   i32.const 13392
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13424
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13456
   i32.store $0
   i32.const 13456
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13488
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13520
   i32.store $0
   i32.const 13520
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13552
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13584
   i32.store $0
   i32.const 13584
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13616
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13648
   i32.store $0
   i32.const 13648
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.get $2
    i32.const 12
    i32.shl
    local.get $3
    i32.const 8
    i32.shl
    i32.add
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.add
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    i32.const 2
    local.get $0
    i32.const 65535
    i32.gt_u
    local.tee $1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $1
    if
     local.get $0
     i32.const 1114111
     i32.gt_u
     if
      i32.const 0
      i32.const 12688
      i32.const 39
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     local.get $2
     local.get $0
     i32.const 65536
     i32.sub
     local.tee $0
     i32.const 10
     i32.shr_u
     i32.const 55296
     i32.or
     local.get $0
     i32.const 1023
     i32.and
     i32.const 56320
     i32.or
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
    else
     local.get $2
     local.get $0
     i32.store16 $0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13744
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   call $~lib/string/String.fromCharCode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 13744
   local.get $0
   call $~lib/string/String.__concat
   i32.const 12800
   i32.const 306
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12000
  i32.store $0
  i32.const 12000
  i32.const 0
  call $~lib/string/String#charCodeAt
  local.get $1
  i32.ne
  if
   i32.const 13168
   i32.const 12800
   i32.const 245
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $2
  i32.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.tee $3
   i32.const 32
   i32.lt_s
   if
    i32.const 13248
    i32.const 12800
    i32.const 254
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12000
   i32.store $0
   i32.const 12000
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $3
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    i32.const 1
    global.set $~argumentsLength
    local.get $3
    local.get $0
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
    local.tee $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    call $~lib/array/Array<~lib/string/String>#get:length
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $2
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=4
    local.get $2
    i32.const 7168
    call $~lib/array/Array<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 13328
    i32.store $0
    i32.const 13328
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $3
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     i32.load $0 offset=4
     local.get $1
     i32.const 1
     i32.add
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=20
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=16
      i32.const 1
      global.set $~argumentsLength
      local.get $3
      local.get $1
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $2
      local.get $1
      call $~lib/array/Array<~lib/string/String>#push
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $2
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $2
     local.get $1
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     i32.load $0 offset=4
     local.set $1
    end
    br $for-loop|0
   end
  end
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popObject (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseObject (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12064
   i32.store $0
   i32.const 12064
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   local.get $2
   i32.const 7168
   i32.store $0
   local.get $2
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $3
   local.get $1
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 12128
    i32.store $0
    i32.const 12128
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $2
    i32.ne
    if
     local.get $1
     if
      i32.const 0
      local.set $1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 12096
      i32.store $0
      i32.const 12096
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $2
      i32.ne
      if
       i32.const 13120
       i32.const 12800
       i32.const 190
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $2
     local.get $3
     i32.store $0
     local.get $3
     if
      local.get $2
      local.get $3
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 13824
     i32.store $0
     i32.const 13824
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $2
     i32.ne
     if
      i32.const 13856
      i32.const 12800
      i32.const 207
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12128
   i32.store $0
   i32.const 12128
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    i32.const 13904
    i32.const 12800
    i32.const 197
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popObject
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 4
  i32.const 132
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 13984
   i32.store $0
   i32.const 13984
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   local.get $2
   i32.const 7168
   i32.store $0
   local.get $2
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0
   local.tee $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0 offset=4
    local.get $4
    local.get $1
    i32.store $0 offset=8
    local.get $4
    local.get $2
    i32.store $0 offset=12
    local.get $3
    local.get $1
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $3
   i32.store $0 offset=12
   local.get $1
   local.get $3
   i32.load $0
   local.tee $3
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   i32.const 1
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 14016
    i32.store $0
    i32.const 14016
    i32.const 0
    call $~lib/string/String#charCodeAt
    local.get $2
    i32.ne
    if
     local.get $1
     if
      i32.const 0
      local.set $1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 12096
      i32.store $0
      i32.const 12096
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $2
      i32.ne
      if
       i32.const 13120
       i32.const 12800
       i32.const 224
       i32.const 11
       call $~lib/builtins/abort
       unreachable
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
     drop
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 14016
   i32.store $0
   i32.const 14016
   i32.const 0
   call $~lib/string/String#charCodeAt
   local.get $1
   i32.ne
   if
    i32.const 14048
    i32.const 12800
    i32.const 230
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#popObject
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 4
   i32.const 133
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    local.get $2
    call $~lib/string/String#charCodeAt
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.get $3
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 14160
     i32.store $0 offset=8
     local.get $0
     local.get $1
     i32.store $0 offset=12
     i32.const 14160
     local.get $1
     call $~lib/string/String.__concat
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 14208
     i32.store $0 offset=4
     local.get $0
     i32.const 14208
     call $~lib/string/String.__concat
     i32.const 12800
     i32.const 396
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 f64)
  (local $9 i32)
  (local $10 f64)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $0
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    local.tee $12
    i32.eqz
    br_if $folding-inner0
    local.get $0
    i32.load16_u $0
    local.set $13
    f64.const 1
    local.set $8
    loop $while-continue|0
     local.get $12
     if (result i32)
      block $__inlined_func$~lib/util/string/isSpace (result i32)
       local.get $13
       i32.const 128
       i32.or
       i32.const 160
       i32.eq
       local.get $13
       i32.const 9
       i32.sub
       i32.const 4
       i32.le_u
       i32.or
       local.get $13
       i32.const 5760
       i32.lt_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       i32.const 1
       local.get $13
       i32.const -8192
       i32.add
       i32.const 10
       i32.le_u
       br_if $__inlined_func$~lib/util/string/isSpace
       drop
       block $break|0
        block $case6|0
         local.get $13
         i32.const 5760
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 8232
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 8233
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 8239
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 8287
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 12288
         i32.eq
         br_if $case6|0
         local.get $13
         i32.const 65279
         i32.eq
         br_if $case6|0
         br $break|0
        end
        i32.const 1
        br $__inlined_func$~lib/util/string/isSpace
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $13
      local.get $12
      i32.const 1
      i32.sub
      local.set $12
      br $while-continue|0
     end
    end
    local.get $12
    i32.eqz
    br_if $folding-inner0
    local.get $13
    i32.const 45
    i32.eq
    if (result i32)
     local.get $12
     i32.const 1
     i32.sub
     local.tee $12
     i32.eqz
     br_if $folding-inner0
     f64.const -1
     local.set $8
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u $0
    else
     local.get $13
     i32.const 43
     i32.eq
     if (result i32)
      local.get $12
      i32.const 1
      i32.sub
      local.tee $12
      i32.eqz
      br_if $folding-inner0
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
     else
      local.get $13
     end
    end
    local.tee $13
    i32.const 73
    i32.eq
    local.get $12
    i32.const 8
    i32.ge_s
    i32.and
    if
     local.get $0
     i64.load $0
     i64.const 29555310648492105
     i64.eq
     if (result i32)
      local.get $0
      i64.load $0 offset=8
      i64.const 34058970405077102
      i64.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $8
      f64.const inf
      f64.mul
      return
     end
     br $folding-inner0
    end
    local.get $13
    i32.const 46
    i32.ne
    local.get $13
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
    i32.and
    br_if $folding-inner0
    local.get $0
    local.set $1
    loop $while-continue|1
     local.get $13
     i32.const 48
     i32.eq
     if
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.set $13
      local.get $12
      i32.const 1
      i32.sub
      local.set $12
      br $while-continue|1
     end
    end
    local.get $12
    i32.const 0
    i32.le_s
    br_if $folding-inner1
    local.get $13
    i32.const 46
    i32.eq
    if
     local.get $0
     local.get $1
     i32.eq
     local.set $1
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     local.get $1
     local.get $12
     i32.const 1
     i32.sub
     local.tee $12
     i32.eqz
     i32.and
     br_if $folding-inner0
     i32.const 1
     local.set $9
     loop $for-loop|2
      local.get $0
      i32.load16_u $0
      local.tee $13
      i32.const 48
      i32.eq
      if
       local.get $12
       i32.const 1
       i32.sub
       local.set $12
       local.get $2
       i32.const 1
       i32.sub
       local.set $2
       local.get $0
       i32.const 2
       i32.add
       local.set $0
       br $for-loop|2
      end
     end
     local.get $12
     i32.const 0
     i32.le_s
     br_if $folding-inner1
     local.get $1
     local.get $2
     i32.eqz
     i32.and
     local.get $13
     i32.const 48
     i32.sub
     i32.const 10
     i32.ge_u
     i32.and
     br_if $folding-inner0
    end
    local.get $13
    i32.const 48
    i32.sub
    local.set $1
    loop $for-loop|3
     local.get $9
     i32.eqz
     local.get $13
     i32.const 46
     i32.eq
     i32.and
     local.get $1
     i32.const 10
     i32.lt_u
     i32.or
     if
      block $for-break3
       local.get $1
       i32.const 10
       i32.lt_u
       if
        local.get $3
        i32.const 19
        i32.lt_s
        if (result i64)
         local.get $1
         i64.extend_i32_u
         local.get $11
         i64.const 10
         i64.mul
         i64.add
        else
         local.get $11
         local.get $1
         i32.const 0
         i32.ne
         i64.extend_i32_u
         i64.or
        end
        local.set $11
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       else
        local.get $3
        local.set $2
        i32.const 1
        local.set $9
       end
       local.get $12
       i32.const 1
       i32.sub
       local.tee $12
       i32.eqz
       br_if $for-break3
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
       local.tee $13
       i32.const 48
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
    end
    block $~lib/util/string/scientific|inlined.0
     local.get $11
     i64.eqz
     local.get $2
     local.get $3
     local.get $9
     select
     i32.const 19
     local.get $3
     local.get $3
     i32.const 19
     i32.gt_s
     select
     i32.sub
     block $~lib/util/string/parseExp|inlined.0 (result i32)
      i32.const 1
      local.set $9
      i32.const 0
      local.set $13
      i32.const 0
      local.get $0
      i32.load16_u $0
      i32.const 32
      i32.or
      i32.const 101
      i32.ne
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      i32.const 0
      local.get $12
      i32.const 1
      i32.sub
      local.tee $12
      i32.eqz
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u $0
      local.tee $1
      i32.const 45
      i32.eq
      if (result i32)
       i32.const 0
       local.get $12
       i32.const 1
       i32.sub
       local.tee $12
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       i32.const -1
       local.set $9
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u $0
      else
       local.get $1
       i32.const 43
       i32.eq
       if (result i32)
        i32.const 0
        local.get $12
        i32.const 1
        i32.sub
        local.tee $12
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
       else
        local.get $1
       end
      end
      local.set $1
      loop $while-continue|4
       local.get $1
       i32.const 48
       i32.eq
       if
        i32.const 0
        local.get $12
        i32.const 1
        i32.sub
        local.tee $12
        i32.eqz
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        local.set $1
        br $while-continue|4
       end
      end
      local.get $1
      i32.const 48
      i32.sub
      local.set $1
      loop $for-loop|5
       local.get $1
       i32.const 10
       i32.lt_u
       i32.const 0
       local.get $12
       select
       if
        local.get $9
        i32.const 3200
        i32.mul
        local.get $13
        i32.const 3200
        i32.ge_s
        br_if $~lib/util/string/parseExp|inlined.0
        drop
        local.get $13
        i32.const 10
        i32.mul
        local.get $1
        i32.add
        local.set $13
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
        local.get $0
        i32.const 2
        i32.add
        local.tee $0
        i32.load16_u $0
        i32.const 48
        i32.sub
        local.set $1
        br $for-loop|5
       end
      end
      local.get $9
      local.get $13
      i32.mul
     end
     i32.add
     local.tee $0
     i32.const -342
     i32.lt_s
     i32.or
     br_if $~lib/util/string/scientific|inlined.0
     f64.const inf
     local.set $10
     local.get $0
     i32.const 308
     i32.gt_s
     br_if $~lib/util/string/scientific|inlined.0
     local.get $11
     f64.convert_i64_u
     local.set $10
     local.get $0
     i32.eqz
     br_if $~lib/util/string/scientific|inlined.0
     local.get $0
     i32.const 37
     i32.le_s
     local.get $0
     i32.const 22
     i32.gt_s
     i32.and
     if
      local.get $10
      local.get $0
      i32.const 3
      i32.shl
      i32.const 14112
      i32.add
      f64.load $0
      f64.mul
      local.set $10
      i32.const 22
      local.set $0
     end
     local.get $11
     i64.const 9007199254740991
     i64.le_u
     if (result i32)
      local.get $0
      i32.const 31
      i32.shr_s
      local.tee $1
      local.get $0
      local.get $1
      i32.add
      i32.xor
      i32.const 22
      i32.le_s
     else
      i32.const 0
     end
     if (result f64)
      local.get $0
      i32.const 0
      i32.gt_s
      if
       local.get $10
       local.get $0
       i32.const 3
       i32.shl
       i32.const 14288
       i32.add
       f64.load $0
       f64.mul
       local.set $10
       br $~lib/util/string/scientific|inlined.0
      end
      local.get $10
      i32.const 0
      local.get $0
      i32.sub
      i32.const 3
      i32.shl
      i32.const 14288
      i32.add
      f64.load $0
      f64.div
     else
      local.get $0
      i32.const 0
      i32.lt_s
      if (result f64)
       local.get $11
       local.get $11
       i64.clz
       local.tee $4
       i64.shl
       local.set $11
       local.get $0
       i64.extend_i32_s
       local.get $4
       i64.sub
       local.set $7
       loop $for-loop|6
        local.get $0
        i32.const -14
        i32.le_s
        if
         local.get $11
         i64.const 6103515625
         i64.rem_u
         local.get $11
         i64.const 6103515625
         i64.div_u
         local.tee $5
         i64.clz
         local.tee $4
         i64.const 18
         i64.sub
         i64.shl
         f64.convert_i64_u
         f64.const 0.00004294967296
         f64.mul
         f64.nearest
         i64.trunc_sat_f64_u
         local.get $5
         local.get $4
         i64.shl
         i64.add
         local.set $11
         local.get $7
         local.get $4
         i64.sub
         local.set $7
         local.get $0
         i32.const 14
         i32.add
         local.set $0
         br $for-loop|6
        end
       end
       local.get $11
       i32.const 0
       local.get $0
       i32.sub
       call $~lib/math/ipow32
       i64.extend_i32_s
       local.tee $5
       i64.div_u
       local.tee $4
       i64.clz
       local.set $6
       local.get $11
       local.get $5
       i64.rem_u
       f64.convert_i64_u
       i64.reinterpret_f64
       local.get $6
       i64.const 52
       i64.shl
       i64.add
       f64.reinterpret_i64
       local.get $5
       f64.convert_i64_u
       f64.div
       i64.trunc_sat_f64_u
       local.get $4
       local.get $6
       i64.shl
       i64.add
       f64.convert_i64_u
       local.get $7
       local.get $6
       i64.sub
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      else
       local.get $11
       local.get $11
       i64.ctz
       local.tee $4
       i64.shr_u
       local.set $11
       local.get $4
       local.get $0
       i64.extend_i32_s
       i64.add
       global.set $~lib/util/string/__fixmulShift
       loop $for-loop|7
        local.get $0
        i32.const 13
        i32.ge_s
        if
         i64.const 32
         local.get $11
         i64.const 32
         i64.shr_u
         i64.const 1220703125
         i64.mul
         local.get $11
         i64.const 4294967295
         i64.and
         i64.const 1220703125
         i64.mul
         local.tee $7
         i64.const 32
         i64.shr_u
         i64.add
         local.tee $6
         i64.const 32
         i64.shr_u
         i32.wrap_i64
         i32.clz
         i64.extend_i32_u
         local.tee $5
         i64.sub
         local.tee $4
         global.get $~lib/util/string/__fixmulShift
         i64.add
         global.set $~lib/util/string/__fixmulShift
         local.get $7
         local.get $5
         i64.shl
         i64.const 31
         i64.shr_u
         i64.const 1
         i64.and
         local.get $6
         local.get $5
         i64.shl
         local.get $7
         i64.const 4294967295
         i64.and
         local.get $4
         i64.shr_u
         i64.or
         i64.add
         local.set $11
         local.get $0
         i32.const 13
         i32.sub
         local.set $0
         br $for-loop|7
        end
       end
       local.get $0
       call $~lib/math/ipow32
       i64.extend_i32_u
       local.tee $4
       local.get $11
       i64.const 4294967295
       i64.and
       i64.mul
       local.set $7
       i64.const 32
       local.get $11
       i64.const 32
       i64.shr_u
       local.get $4
       i64.mul
       local.get $7
       i64.const 32
       i64.shr_u
       i64.add
       local.tee $6
       i64.const 32
       i64.shr_u
       i32.wrap_i64
       i32.clz
       i64.extend_i32_u
       local.tee $5
       i64.sub
       local.tee $4
       global.get $~lib/util/string/__fixmulShift
       i64.add
       global.set $~lib/util/string/__fixmulShift
       local.get $7
       local.get $5
       i64.shl
       i64.const 31
       i64.shr_u
       i64.const 1
       i64.and
       local.get $6
       local.get $5
       i64.shl
       local.get $7
       i64.const 4294967295
       i64.and
       local.get $4
       i64.shr_u
       i64.or
       i64.add
       f64.convert_i64_u
       global.get $~lib/util/string/__fixmulShift
       i32.wrap_i64
       call $~lib/math/NativeMath.scalbn
      end
     end
     local.set $10
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $10
    local.get $8
    f64.copysign
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  f64.const 0
  f64.mul
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNumber (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i32.const 0
   i32.const 20
   memory.fill $0
   i32.const 7168
   local.set $1
   local.get $6
   i32.const 7168
   i32.store $0
   local.get $6
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
   i32.const 45
   i32.eq
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 7168
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.store $0 offset=12
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.set $6
    i32.const 1
    global.set $~argumentsLength
    local.get $6
    call $~lib/string/String.fromCharCode@varargs
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $1
    i32.const 7168
    local.get $6
    call $~lib/string/String.__concat
    local.tee $1
    i32.store $0
    f64.const -1
   else
    f64.const 1
   end
   local.set $8
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.const 48
    i32.ge_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 57
     i32.le_s
    else
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 46
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 45
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 43
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 69
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 101
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $9
     i32.const 1
     global.set $~argumentsLength
     local.get $6
     call $~lib/string/String.fromCharCode@varargs
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $9
     local.get $1
     local.get $7
     call $~lib/string/String.__concat
     local.tee $1
     i32.store $0
     local.get $6
     i32.const 101
     i32.eq
     local.get $6
     i32.const 69
     i32.eq
     i32.or
     local.get $6
     i32.const 46
     i32.eq
     i32.or
     local.get $6
     i32.const 43
     i32.eq
     i32.or
     local.get $6
     i32.const 45
     i32.eq
     i32.or
     if
      i32.const 1
      local.set $3
     else
      local.get $2
      local.get $2
      f64.const 10
      f64.mul
      local.get $6
      i32.const 48
      i32.sub
      f64.convert_i32_s
      f64.add
      local.get $3
      select
      local.set $2
      local.get $4
      i32.const 1
      i32.add
      local.set $4
     end
     br $while-continue|0
    end
   end
   local.get $4
   i32.const 0
   i32.gt_s
   if
    local.get $3
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $1
     i32.store $0 offset=4
     local.get $3
     i32.const 14272
     i32.store $0 offset=8
     local.get $1
     i32.const 14272
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=12
     local.get $3
     local.get $0
     i32.load $0
     local.tee $4
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/util/string/strtod
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $2
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Float
     local.tee $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $4
     local.get $0
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $2
     local.get $8
     f64.mul
     i64.trunc_sat_f64_s
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer
     local.tee $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $3
     local.get $0
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseObject
   local.tee $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseArray
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseString (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 12000
     i32.store $0
     i32.const 12000
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $1
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseString
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.load $0
     local.tee $2
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load $0
     local.tee $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i64.const 0
     i64.store $0
     local.get $4
     i64.const 0
     i64.store $0 offset=8
     local.get $4
     local.get $3
     i32.store $0
     local.get $4
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
     local.tee $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     local.get $2
     local.get $1
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseBoolean (result i32)
     local.get $1
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 14128
     i32.store $0
     block $folding-inner00
      i32.const 14128
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 14128
       i32.store $0 offset=4
       local.get $0
       i32.const 14128
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       local.get $0
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0
       local.tee $2
       i32.store $0 offset=4
       local.get $1
       local.get $2
       i32.const 0
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean
       br $folding-inner00
      end
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 14240
      i32.store $0
      i32.const 14240
      i32.const 0
      call $~lib/string/String#charCodeAt
      local.get $1
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 14240
       i32.store $0 offset=4
       local.get $0
       i32.const 14240
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load $0
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       local.get $0
       call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load $0
       local.tee $2
       i32.store $0 offset=4
       local.get $1
       local.get $2
       i32.const 1
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#setBoolean
       br $folding-inner00
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseBoolean
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNumber
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNull (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store $0
     local.get $1
     i64.const 0
     i64.store $0 offset=8
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 11552
     i32.store $0
     i32.const 11552
     i32.const 0
     call $~lib/string/String#charCodeAt
     local.get $1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      i32.const 11552
      i32.store $0 offset=4
      local.get $0
      i32.const 11552
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=12
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load $0
      local.tee $2
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i64.const 0
      i64.store $0
      local.get $3
      i64.const 0
      i64.store $0 offset=8
      local.get $3
      global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
      local.tee $4
      i32.store $0
      local.get $3
      local.get $1
      i32.store $0 offset=4
      local.get $3
      local.get $2
      i32.store $0 offset=8
      local.get $3
      local.get $4
      i32.store $0 offset=12
      local.get $1
      local.get $2
      local.get $4
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#addValue
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseNull
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
    end
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=8
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 12
   i32.const 131
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $2
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 7168
   i32.store $0 offset=8
   local.get $2
   i32.const 7168
   i32.store $0
   local.get $2
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#parseValue
   i32.eqz
   if
    i32.const 14496
    i32.const 12800
    i32.const 144
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $1
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 12992
    i32.const 418
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/isFlatJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
  local.tee $3
  i32.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $3
    i32.store $0 offset=4
    local.get $2
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $2
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $2
    i32.store $0 offset=20
    local.get $2
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     local.get $2
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     local.tee $4
     if (result i32)
      local.get $4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=4
      local.get $2
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr
     end
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/types/dvcUser/DVCUser#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $10
  i64.const 0
  i64.store $0
  local.get $10
  i32.const 0
  i32.store $0 offset=8
  local.get $10
  i32.const 48
  i32.const 107
  call $~lib/rt/itcms/__new
  local.tee $10
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $11
  local.get $10
  i32.store $0 offset=4
  local.get $11
  local.get $0
  i32.store $0 offset=8
  local.get $10
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $10
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $10
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $10
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $10
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $10
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $10
  local.get $3
  i32.store $0 offset=16
  local.get $3
  if
   local.get $10
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $10
  local.get $4
  i32.store $0 offset=20
  local.get $4
  if
   local.get $10
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $6
  i32.store $0 offset=8
  local.get $10
  local.get $6
  i32.store $0 offset=32
  local.get $6
  if
   local.get $10
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $10
  local.get $5
  f64.store $0 offset=24
  local.get $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $7
  i32.store $0 offset=8
  local.get $10
  local.get $7
  i32.store $0 offset=36
  local.get $7
  if
   local.get $10
   local.get $7
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $8
  i32.store $0 offset=8
  local.get $10
  local.get $8
  i32.store $0 offset=40
  local.get $8
  if
   local.get $10
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $9
  i32.store $0 offset=8
  local.get $10
  local.get $9
  i32.store $0 offset=44
  local.get $9
  if
   local.get $10
   local.get $9
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $10
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 133
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 12992
    i32.const 370
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 2
  i32.shr_u
  local.set $2
  local.get $1
  i32.const 7168
  i32.store $0
  local.get $0
  local.get $2
  i32.const 7168
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 15264
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=20
   i32.const 15264
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 15264
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   i32.const 15264
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 15264
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 15264
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 15312
   i32.const 43
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSONOptional (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   local.set $0
  end
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  f64.load $0
  local.set $2
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf (param $0 i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i64.load $0
  local.set $2
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONOptional (param $0 i32) (param $1 i32) (param $2 f64) (result f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 124
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 15312
    i32.const 141
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
   else
    i32.const 0
   end
   if
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=16
     i32.const 0
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 135
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 15312
     i32.const 143
     i32.const 21
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.get $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    f64.convert_i64_s
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
    local.tee $0
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    i32.const 15648
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=32
    i32.const 15648
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 15648
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=32
    i32.const 15648
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 15648
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=4
    i32.const 15648
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 15312
    i32.const 146
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
 )
 (func $assembly/types/dvcUser/DVCUser.fromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 1808
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 1808
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $8
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0
  local.get $8
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 14752
   i32.const 14672
   i32.const 149
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 14896
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 14896
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $6
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 14960
   i32.const 14672
   i32.const 154
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=40
  local.get $1
  i32.const 1440
  i32.store $0 offset=44
  local.get $0
  i32.const 1440
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 1488
  i32.store $0 offset=44
  local.get $0
  i32.const 1488
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 15408
  i32.store $0 offset=44
  local.get $0
  i32.const 15408
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 15440
  i32.store $0 offset=44
  local.get $0
  i32.const 15440
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 1552
  i32.store $0 offset=44
  local.get $0
  i32.const 1552
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 15488
  i32.store $0 offset=44
  local.get $0
  i32.const 15488
  f64.const nan:0x8000000000000
  call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 1712
  i32.store $0 offset=44
  local.get $0
  i32.const 1712
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 1760
  i32.store $0 offset=44
  local.get $0
  i32.const 1760
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=44
  local.get $7
  local.get $9
  local.get $1
  local.get $2
  local.get $3
  local.get $5
  local.get $4
  local.get $0
  local.get $8
  local.get $6
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCUser.fromJSONString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 14560
   i32.const 14672
   i32.const 136
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 14672
   i32.const 137
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/types/dvcUser/DVCUser.fromJSONObj
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/dvcUser/DVCUser.fromJSONString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/clientCustomDataManager/_setClientCustomData (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.tee $3
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/managers/clientCustomDataManager/_getClientCustomData (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  global.get $assembly/managers/clientCustomDataManager/_clientCustomData
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/managers/clientCustomDataManager/_clientCustomData
   local.tee $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/managers/clientCustomDataManager/_setClientCustomData
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 144
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 140
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 142
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=40
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/bucketing/_getUserValueForBucketingKey (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=16
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=8
    local.get $2
    local.get $1
    i32.load $0 offset=16
    local.tee $3
    i32.store $0
    local.get $2
    i32.const 1440
    i32.store $0 offset=4
    local.get $3
    i32.const 1440
    call $~lib/string/String.__ne
   else
    i32.const 0
   end
   if
    i32.const 11552
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 11552
    i32.store $0 offset=12
    local.get $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    call $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData
    local.tee $0
    i32.store $0 offset=16
    local.get $0
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=8
     local.get $2
     local.get $1
     i32.load $0 offset=16
     local.tee $1
     i32.store $0 offset=4
     local.get $2
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i32.const 0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $3
     local.get $0
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $0
     i32.store $0 offset=8
     block $__inlined_func$assembly/helpers/jsonHelpers/getValueFromJSONOptional
      local.get $0
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       local.set $0
       br $__inlined_func$assembly/helpers/jsonHelpers/getValueFromJSONOptional
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     local.get $2
     local.get $0
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
     else
      i32.const 11552
     end
     local.tee $2
     i32.store $0 offset=12
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 15696
    i32.store $0
    local.get $0
    i32.const 15696
    i32.store $0 offset=4
    i32.const 15696
    i32.const 15696
    call $~lib/string/String.__ne
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 15696
     i32.store $0
     local.get $0
     i32.const 15728
     i32.store $0 offset=4
     i32.const 15696
     i32.const 15728
     call $~lib/string/String.__ne
    else
     i32.const 0
    end
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 15696
     i32.store $0
     local.get $0
     i32.const 15760
     i32.store $0 offset=4
     i32.const 15696
     i32.const 15760
     call $~lib/string/String.__ne
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11552
     return
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $2
     i32.store $0
     local.get $0
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $0
   local.get $1
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=12
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/date/stringify (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 10
   call $~lib/number/I32#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8832
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.set $2
   local.get $4
   i32.const 8832
   i32.store $0
   block $__inlined_func$~lib/string/String#padStart
    i32.const 8828
    i32.load $0
    i32.const -2
    i32.and
    local.tee $6
    i32.eqz
    local.get $1
    i32.const 1
    i32.shl
    local.tee $4
    local.get $2
    i32.lt_u
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/string/String#padStart
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0 offset=4
    local.get $4
    local.get $2
    i32.sub
    local.tee $7
    local.get $6
    i32.gt_u
    if
     local.get $7
     local.get $7
     i32.const 2
     i32.sub
     local.get $6
     i32.div_u
     local.get $6
     i32.mul
     local.tee $5
     i32.sub
     local.set $4
     loop $while-continue|0
      local.get $3
      local.get $5
      i32.lt_u
      if
       local.get $1
       local.get $3
       i32.add
       i32.const 8832
       local.get $6
       memory.copy $0 $0
       local.get $3
       local.get $6
       i32.add
       local.set $3
       br $while-continue|0
      end
     end
     local.get $1
     local.get $5
     i32.add
     i32.const 8832
     local.get $4
     memory.copy $0 $0
    else
     local.get $1
     i32.const 8832
     local.get $7
     memory.copy $0 $0
    end
    local.get $1
    local.get $7
    i32.add
    local.get $0
    local.get $2
    memory.copy $0 $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/date/Date#toISOString (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 68
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.const 0
   i32.lt_s
   local.tee $3
   local.get $2
   i32.const 10000
   i32.ge_s
   i32.or
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 15984
    i32.const 16016
    local.get $3
    select
    local.tee $3
    i32.store $0
    local.get $2
    i32.const 31
    i32.shr_s
    local.tee $4
    local.get $2
    local.get $4
    i32.add
    i32.xor
    i32.const 6
    call $~lib/date/stringify
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $2
    call $~lib/string/String.__concat
   else
    local.get $2
    i32.const 4
    call $~lib/date/stringify
   end
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.load $0 offset=4
   i32.const 2
   call $~lib/date/stringify
   local.tee $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=8
   i32.const 2
   call $~lib/date/stringify
   local.tee $5
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i32.const 0
   i32.store $0
   local.get $6
   local.get $0
   i32.store $0
   local.get $0
   i64.load $0 offset=16
   i64.const 86400000
   i64.rem_s
   local.set $1
   local.get $6
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i64.const 86400000
   i64.const 0
   local.get $1
   i64.const 0
   i64.lt_s
   select
   i64.add
   i32.wrap_i64
   i32.const 3600000
   i32.div_s
   i32.const 2
   call $~lib/date/stringify
   local.tee $6
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   i32.const 0
   i32.store $0
   local.get $7
   local.get $0
   i32.store $0
   local.get $0
   i64.load $0 offset=16
   i64.const 3600000
   i64.rem_s
   local.set $1
   local.get $7
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i64.const 3600000
   i64.const 0
   local.get $1
   i64.const 0
   i64.lt_s
   select
   i64.add
   i32.wrap_i64
   i32.const 60000
   i32.div_s
   i32.const 2
   call $~lib/date/stringify
   local.tee $7
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   i32.const 0
   i32.store $0
   local.get $8
   local.get $0
   i32.store $0
   local.get $0
   i64.load $0 offset=16
   i64.const 60000
   i64.rem_s
   local.set $1
   local.get $8
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $1
   i64.const 60000
   i64.const 0
   local.get $1
   i64.const 0
   i64.lt_s
   select
   i64.add
   i32.wrap_i64
   i32.const 1000
   i32.div_s
   i32.const 2
   call $~lib/date/stringify
   local.tee $8
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i64.load $0 offset=16
   i64.const 1000
   i64.rem_s
   local.set $1
   local.get $3
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   local.get $1
   i64.const 1000
   i64.const 0
   local.get $1
   i64.const 0
   i64.lt_s
   select
   i64.add
   i32.wrap_i64
   i32.const 3
   call $~lib/date/stringify
   local.tee $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=64
   i32.const 16112
   i32.const 0
   local.get $2
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=64
   i32.const 16112
   i32.const 2
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=64
   i32.const 16112
   i32.const 4
   local.get $5
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=64
   i32.const 16112
   i32.const 6
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=64
   i32.const 16112
   i32.const 8
   local.get $7
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=64
   i32.const 16112
   i32.const 10
   local.get $8
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=64
   i32.const 16112
   i32.const 12
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16112
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 16112
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 68
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/string/String>#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    i32.eqz
    local.get $3
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const -1
     local.set $2
     br $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $5
      i32.store $0
      local.get $4
      local.get $1
      i32.store $0 offset=4
      local.get $5
      local.get $1
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   i32.const 0
   i32.ge_s
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/console/console.log (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/isValidString (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $1
  i32.store $0 offset=4
  local.get $4
  local.get $0
  local.get $1
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/array/Array<~lib/string/String>#includes
  i32.eqz
  if
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=12
    local.get $3
    local.get $1
    i32.store $0 offset=16
    local.get $3
    local.get $2
    i32.store $0
    local.get $3
    i32.const 16416
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.const 16416
    call $~lib/array/Array<~lib/string/String>#join
    local.tee $2
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 16368
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=24
    i32.const 16368
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16368
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=24
    i32.const 16368
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16368
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=24
    i32.const 16368
    i32.const 5
    local.get $2
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16368
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=4
    i32.const 16368
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 15312
    i32.const 84
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=28
    local.get $2
    local.get $1
    i32.store $0 offset=32
    local.get $2
    i32.const 16640
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=36
    i32.const 16640
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16640
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=36
    i32.const 16640
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 16640
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=24
    i32.const 16640
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/console/console.log
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#substring@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/string/String#substring
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/string/strtol<i32> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  block $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.tee $1
   i32.eqz
   br_if $folding-inner0
   local.get $0
   i32.load16_u $0
   local.set $2
   loop $while-continue|0
    block $__inlined_func$~lib/util/string/isSpace (result i32)
     local.get $2
     i32.const 128
     i32.or
     i32.const 160
     i32.eq
     local.get $2
     i32.const 9
     i32.sub
     i32.const 4
     i32.le_u
     i32.or
     local.get $2
     i32.const 5760
     i32.lt_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     i32.const 1
     local.get $2
     i32.const -8192
     i32.add
     i32.const 10
     i32.le_u
     br_if $__inlined_func$~lib/util/string/isSpace
     drop
     block $break|0
      block $case6|0
       local.get $2
       i32.const 5760
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8232
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8233
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8239
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 8287
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 12288
       i32.eq
       br_if $case6|0
       local.get $2
       i32.const 65279
       i32.eq
       br_if $case6|0
       br $break|0
      end
      i32.const 1
      br $__inlined_func$~lib/util/string/isSpace
     end
     i32.const 0
    end
    if
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u $0
     local.set $2
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $while-continue|0
    end
   end
   i32.const 1
   local.set $3
   local.get $2
   i32.const 43
   i32.eq
   local.get $2
   i32.const 45
   i32.eq
   i32.or
   if (result i32)
    local.get $1
    i32.const 1
    i32.sub
    local.tee $1
    i32.eqz
    br_if $folding-inner0
    i32.const -1
    i32.const 1
    local.get $2
    i32.const 45
    i32.eq
    select
    local.set $3
    local.get $0
    i32.const 2
    i32.add
    local.tee $0
    i32.load16_u $0
   else
    local.get $2
   end
   i32.const 48
   i32.eq
   local.get $1
   i32.const 2
   i32.gt_s
   i32.and
   if
    block $break|1
     block $case2|1
      block $case1|1
       local.get $0
       i32.load16_u $0 offset=2
       i32.const 32
       i32.or
       local.tee $2
       i32.const 98
       i32.ne
       if
        local.get $2
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $2
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       local.get $1
       i32.const 2
       i32.sub
       local.set $1
       i32.const 2
       local.set $4
       br $break|1
      end
      local.get $0
      i32.const 4
      i32.add
      local.set $0
      local.get $1
      i32.const 2
      i32.sub
      local.set $1
      i32.const 8
      local.set $4
      br $break|1
     end
     local.get $0
     i32.const 4
     i32.add
     local.set $0
     local.get $1
     i32.const 2
     i32.sub
     local.set $1
     i32.const 16
     local.set $4
    end
   end
   local.get $4
   i32.const 10
   local.get $4
   select
   local.set $4
   local.get $1
   i32.const 1
   i32.sub
   local.set $6
   loop $while-continue|2
    local.get $1
    local.tee $2
    i32.const 1
    i32.sub
    local.set $1
    local.get $2
    if
     block $while-break|2
      local.get $4
      local.get $0
      i32.load16_u $0
      local.tee $2
      i32.const 48
      i32.sub
      i32.const 10
      i32.lt_u
      if (result i32)
       local.get $2
       i32.const 48
       i32.sub
      else
       local.get $2
       i32.const 65
       i32.sub
       i32.const 25
       i32.le_u
       if (result i32)
        local.get $2
        i32.const 55
        i32.sub
       else
        local.get $2
        i32.const 87
        i32.sub
        local.get $2
        local.get $2
        i32.const 97
        i32.sub
        i32.const 25
        i32.le_u
        select
       end
      end
      local.tee $2
      i32.le_u
      if
       local.get $1
       local.get $6
       i32.eq
       br_if $folding-inner0
       br $while-break|2
      end
      local.get $4
      local.get $5
      i32.mul
      local.get $2
      i32.add
      local.set $5
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $while-continue|2
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $5
   i32.mul
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/number/I32.parseInt (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/util/string/strtol<i32>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/date/Date.fromString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.eqz
  if
   i32.const 12336
   i32.const 12384
   i32.const 50
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 16048
  i32.store $0 offset=8
  local.get $0
  local.tee $1
  i32.const 16048
  i32.const 0
  call $~lib/string/String#indexOf
  local.tee $6
  i32.const -1
  i32.xor
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.const 0
   local.get $6
   call $~lib/string/String#substring
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $6
   i32.const 1
   i32.add
   call $~lib/string/String#substring@varargs
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13824
   i32.store $0 offset=8
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 13824
   call $~lib/string/String#split@varargs
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   local.tee $6
   i32.const 1
   i32.le_s
   if
    i32.const 12336
    i32.const 12384
    i32.const 67
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/number/I32.parseInt
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.const 1
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/number/I32.parseInt
   local.set $4
   local.get $6
   i32.const 3
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.const 2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7088
    i32.store $0 offset=8
    local.get $0
    i32.const 7088
    i32.const 0
    call $~lib/string/String#indexOf
    local.tee $6
    i32.const -1
    i32.xor
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.const 0
     local.get $6
     call $~lib/string/String#substring
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     call $~lib/number/I32.parseInt
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     i32.const 1
     global.set $~argumentsLength
     local.get $0
     local.get $6
     i32.const 1
     i32.add
     call $~lib/string/String#substring@varargs
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/number/I32.parseInt
     local.set $5
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/number/I32.parseInt
     local.set $2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $1
  i32.store $0
  local.get $0
  i32.const 15984
  i32.store $0 offset=8
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.const 15984
  call $~lib/string/String#split@varargs
  local.tee $6
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=8
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/number/I32.parseInt
  local.set $7
  i32.const 1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  call $~lib/array/Array<~lib/string/String>#get:length
  local.tee $0
  i32.const 2
  i32.ge_s
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $6
   i32.const 1
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/number/I32.parseInt
   local.set $1
   local.get $0
   i32.const 3
   i32.ge_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=8
    local.get $6
    i32.const 2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/number/I32.parseInt
   else
    i32.const 1
   end
  else
   i32.const 1
  end
  local.set $0
  local.get $7
  local.get $1
  i32.const 2
  i32.le_s
  i32.sub
  local.tee $6
  i32.const 399
  i32.const 0
  local.get $6
  i32.const 0
  i32.lt_s
  select
  i32.sub
  i32.const 400
  i32.div_s
  local.set $7
  local.get $5
  i64.extend_i32_s
  local.get $2
  i32.const 1000
  i32.mul
  i64.extend_i32_s
  local.get $4
  i32.const 60000
  i32.mul
  i64.extend_i32_s
  local.get $3
  i32.const 3600000
  i32.mul
  i64.extend_i32_s
  local.get $1
  i32.const -3
  i32.const 9
  local.get $1
  i32.const 2
  i32.gt_s
  select
  i32.add
  i32.const 153
  i32.mul
  i32.const 2
  i32.add
  i32.const 5
  i32.div_u
  local.get $0
  i32.add
  local.get $6
  local.get $7
  i32.const 400
  i32.mul
  i32.sub
  local.tee $0
  i32.const 365
  i32.mul
  local.get $0
  i32.const 2
  i32.shr_u
  i32.add
  local.get $0
  i32.const 100
  i32.div_u
  i32.sub
  i32.add
  local.get $7
  i32.const 146097
  i32.mul
  i32.add
  i32.const 719469
  i32.sub
  i64.extend_i32_s
  i64.const 86400000
  i64.mul
  i64.add
  i64.add
  i64.add
  i64.add
  call $~lib/date/Date#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getDateFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/date/Date.fromString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONValue (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 124
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 15312
    i32.const 179
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 135
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 15312
    i32.const 180
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $0
  end
  local.get $3
  local.get $0
  i32.store $0 offset=16
  local.get $0
  local.get $2
  i32.or
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  local.get $2
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
  else
   local.get $0
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    f64.convert_i64_s
   else
    f64.const nan:0x8000000000000
   end
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONObj (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 15904
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 15904
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  else
   f64.const nan:0x8000000000000
  end
  local.tee $2
  local.get $2
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/number/F64#toString
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 15904
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 16688
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   i32.const 16688
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16688
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15904
   i32.store $0 offset=20
   i32.const 16688
   i32.const 3
   i32.const 15904
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 16688
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 16688
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 15312
   i32.const 131
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/RolloutStage#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 16
  i32.const 89
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  f64.const 0
  f64.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 3248
  i32.store $0 offset=20
  local.get $0
  i32.const 15872
  i32.const 3248
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 15952
  i32.store $0 offset=16
  local.get $0
  i32.const 15952
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  i32.const 15904
  i32.store $0 offset=12
  local.get $1
  local.get $0
  call $assembly/helpers/jsonHelpers/getF64FromJSONObj
  f64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/getCurrentRolloutPercentage (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   block $folding-inner1
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     i32.const 0
     i32.const 76
     memory.fill $0
     local.get $5
     local.get $0
     i32.store $0
     local.get $0
     f64.load $0 offset=8
     local.set $2
     local.get $5
     local.get $0
     i32.store $0
     local.get $5
     local.get $0
     i32.load $0 offset=16
     local.tee $7
     i32.store $0 offset=4
     local.get $5
     local.get $7
     i32.store $0
     local.get $7
     i64.load $0 offset=16
     local.set $8
     local.get $5
     local.get $1
     i32.store $0 offset=8
     local.get $5
     local.get $1
     i32.store $0
     local.get $1
     i64.load $0 offset=16
     local.set $3
     local.get $5
     local.get $0
     i32.store $0 offset=16
     local.get $5
     local.get $0
     i32.load $0
     local.tee $1
     i32.store $0
     local.get $5
     i32.const 2912
     i32.store $0 offset=12
     local.get $1
     i32.const 2912
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 76
      i32.add
      global.set $~lib/memory/__stack_pointer
      f64.const 1
      f64.const 0
      local.get $3
      local.get $8
      i64.ge_s
      select
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     i32.load $0 offset=20
     local.tee $7
     i32.store $0 offset=20
     local.get $1
     i32.const 0
     i32.const 2
     i32.const 90
     i32.const 15808
     call $~lib/rt/__newArray
     local.tee $1
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 90
     i32.const 15840
     call $~lib/rt/__newArray
     local.tee $5
     i32.store $0 offset=28
     local.get $7
     if
      loop $for-loop|0
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0
       local.get $7
       call $~lib/array/Array<~lib/string/String>#get:length
       local.get $4
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $9
        local.get $7
        i32.store $0
        local.get $9
        local.get $7
        local.get $4
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.tee $9
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.load $0 offset=4
        local.tee $10
        i32.store $0 offset=36
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store $0
        local.get $10
        i64.load $0 offset=16
        local.get $3
        i64.le_s
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0
         local.get $1
        else
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         local.get $5
        end
        local.set $10
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store $0 offset=12
        local.get $10
        local.get $9
        call $~lib/array/Array<~lib/string/String>#push
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|0
       end
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $1
     i32.store $0
     local.get $4
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store $0
     local.get $1
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      i32.const 0
      i32.gt_s
     else
      i32.const 0
     end
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $1
      i32.store $0
      local.get $7
      local.get $1
      i32.store $0 offset=4
      local.get $1
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      i32.const 1
      i32.sub
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     else
      i32.const 0
     end
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $1
     i32.store $0 offset=40
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store $0
     local.get $5
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      call $~lib/array/Array<~lib/string/String>#get:length
      i32.const 0
      i32.gt_s
     else
      i32.const 0
     end
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      i32.const 0
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     else
      i32.const 0
     end
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $5
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=48
     local.get $1
     i32.eqz
     local.get $3
     local.get $8
     i64.gt_s
     i32.and
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
      local.tee $1
      i32.store $0 offset=52
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 15872
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 3168
      i32.store $0 offset=16
      local.get $1
      i32.const 15872
      i32.const 3168
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 15904
      i32.store $0 offset=12
      local.get $1
      i32.const 15904
      local.get $2
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 15952
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=60
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0 offset=16
      local.tee $0
      i32.store $0 offset=56
      local.get $0
      call $~lib/date/Date#toISOString
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=16
      local.get $1
      i32.const 15952
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      call $assembly/types/target/RolloutStage#constructor
      local.tee $1
      i32.store $0 offset=48
     end
     local.get $1
     i32.eqz
     br_if $folding-inner1
     local.get $5
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $5
      i32.store $0 offset=16
      local.get $0
      local.get $5
      i32.load $0
      local.tee $4
      i32.store $0
      local.get $0
      i32.const 3168
      i32.store $0 offset=12
      local.get $4
      i32.const 3168
      call $~lib/string/String.__eq
     else
      i32.const 1
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.store $0
      local.get $1
      f64.load $0 offset=8
      local.set $2
      br $folding-inner2
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0
     local.get $0
     local.get $1
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=64
     local.get $0
     local.get $4
     i32.store $0
     local.get $3
     local.get $4
     i64.load $0 offset=16
     i64.sub
     f64.convert_i64_s
     local.set $2
     local.get $0
     local.get $5
     i32.store $0
     local.get $0
     local.get $5
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=68
     local.get $0
     local.get $4
     i32.store $0
     local.get $4
     i64.load $0 offset=16
     local.set $3
     local.get $0
     local.get $1
     i32.store $0
     local.get $0
     local.get $1
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=72
     local.get $0
     local.get $4
     i32.store $0
     local.get $2
     local.get $3
     local.get $4
     i64.load $0 offset=16
     i64.sub
     f64.convert_i64_s
     f64.div
     local.tee $6
     f64.const 0
     f64.eq
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0
     local.get $1
     f64.load $0 offset=8
     local.set $11
     local.get $0
     local.get $5
     i32.store $0
     local.get $5
     f64.load $0 offset=8
     local.set $2
     local.get $0
     local.get $1
     i32.store $0
     local.get $11
     local.get $2
     local.get $1
     f64.load $0 offset=8
     f64.sub
     f64.add
     local.get $6
     f64.mul
     local.set $2
     br $folding-inner2
    end
    i32.const 66576
    i32.const 66624
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  local.get $0
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/bucketing/_doesUserPassRollout (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/date/Date#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  call $assembly/bucketing/bucketing/getCurrentRolloutPercentage
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  local.get $3
  f64.le
  if (result i32)
   local.get $3
   i64.reinterpret_f64
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.le_u
  else
   i32.const 0
  end
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 8
  i32.const 147
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store8 $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store8 $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/segmentation/getFilterAudiences~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i64.const 0
  i64.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $5
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $5
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $4
   local.get $5
   i32.gt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $2
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.store $0 offset=12
    local.get $4
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=8
    local.get $4
    local.get $0
    i32.store $0 offset=12
    i32.const 4
    global.set $~argumentsLength
    local.get $4
    local.get $2
    local.get $6
    local.get $3
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.tee $2
    i32.store $0
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/segmentation/getFilterAudiencesAsStrings~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $3
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    i32.const 0
    local.get $1
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 133
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 17872
    i32.const 476
    i32.const 41
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $1
  end
  local.get $3
  local.get $1
  local.tee $2
  i32.store $0 offset=8
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/filterForAudienceMatch (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i32.const 0
    i32.const 48
    memory.fill $0
    local.get $5
    local.get $0
    i32.store $0
    local.get $5
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i64.const 0
    i64.store $0
    local.get $6
    i64.const 0
    i64.store $0 offset=8
    local.get $6
    local.get $0
    i32.store $0
    local.get $6
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $7
    local.get $0
    i32.store $0
    local.get $7
    local.get $0
    i32.load $0 offset=4
    local.tee $8
    i32.store $0 offset=4
    local.get $7
    local.get $8
    i32.store $0 offset=16
    local.get $8
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 17968
    i32.store $0 offset=8
    i32.const 0
    i32.const 2
    i32.const 129
    i32.const 18000
    call $~lib/rt/__newArray
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    local.get $7
    i32.const 17968
    local.get $8
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>
    local.set $7
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    local.get $7
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 18032
    i32.store $0 offset=8
    i32.const 0
    i32.const 2
    i32.const 4
    i32.const 18064
    call $~lib/rt/__newArray
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=12
    local.get $7
    i32.const 18032
    local.get $6
    call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>>
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    local.get $6
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0 offset=8
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0
     local.get $6
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $4
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $1
      i32.store $0
      local.get $5
      local.get $6
      i32.store $0 offset=16
      local.get $6
      local.get $4
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=12
      local.get $1
      local.get $5
      call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 18096
       i32.store $0
       i32.const 18096
       call $~lib/console/console.log
       i32.const 0
       i32.const 0
       call $assembly/bucketing/segmentation/SegmentationResult#constructor
       local.set $0
       br $folding-inner1
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $1
      i32.store $0
      local.get $5
      local.get $6
      i32.store $0 offset=16
      local.get $6
      local.get $4
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=12
      local.get $5
      local.get $1
      local.get $7
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
      local.tee $5
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=28
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.load $0
      local.tee $5
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=24
      global.get $~lib/memory/__stack_pointer
      local.get $5
      local.get $1
      local.get $2
      local.get $3
      call $assembly/bucketing/segmentation/_evaluateOperator
      local.tee $5
      i32.store $0 offset=32
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      i32.load8_u $0
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 1968
       i32.store $0 offset=12
       local.get $0
       i32.const 1968
       call $~lib/string/String.__eq
       local.set $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i32.const 4688
        i32.store $0
        local.get $1
        local.get $5
        i32.store $0 offset=16
        local.get $5
        i32.load $0 offset=4
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 18304
         i32.store $0 offset=16
         local.get $1
         local.get $5
         i32.store $0 offset=28
         local.get $1
         local.get $5
         i32.load $0 offset=4
         local.tee $1
         i32.store $0 offset=36
         local.get $1
         i32.eqz
         if
          i32.const 8112
          i32.const 17872
          i32.const 158
          i32.const 89
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=24
         i32.const 18304
         local.get $1
         call $~lib/string/String.__concat
        else
         i32.const 7168
        end
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=12
        i32.const 4688
        local.get $1
        call $~lib/string/String.__concat
       else
        i32.const 0
       end
       local.tee $1
       i32.store $0 offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=16
       local.get $0
       local.get $1
       call $assembly/bucketing/segmentation/SegmentationResult#constructor
       local.set $0
       br $folding-inner1
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    i32.const 2000
    i32.store $0 offset=12
    i32.const 4736
    i32.const 0
    local.get $0
    i32.const 2000
    call $~lib/string/String.__eq
    local.tee $0
    select
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=16
    local.get $0
    local.get $1
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 48
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/UserFilter#getStringValues (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0 offset=20
   local.tee $0
   i32.store $0 offset=4
   local.get $0
   i32.eqz
   if
    i32.const 8112
    i32.const 18336
    i32.const 292
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 18416
   call $~lib/rt/__newArray
   local.set $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/lodashHelpers/findString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $1
    local.get $3
    call $~lib/string/String#includes
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/string/String.__not (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.eqz
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7168
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/segmentation/_checkValueStartsWith (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i32.const 0
    i32.store $0 offset=8
    local.get $1
    i32.eqz
    br_if $folding-inner1
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $3
     i32.gt_s
     if
      block $__inlined_func$assembly/helpers/lodashHelpers/stringStartsWith (result i32)
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $0
       i32.store $0
       local.get $2
       local.get $1
       i32.store $0 offset=8
       local.get $1
       local.get $3
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       i64.const 0
       i64.store $0
       local.get $2
       i32.const 0
       i32.store $0 offset=8
       local.get $2
       local.get $4
       i32.store $0
       local.get $2
       i32.const 7168
       i32.store $0 offset=4
       local.get $4
       i32.const 7168
       call $~lib/string/String.__eq
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 0
        br $__inlined_func$assembly/helpers/lodashHelpers/stringStartsWith
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $4
       i32.store $0
       local.get $4
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       local.set $5
       local.get $2
       local.get $0
       i32.store $0
       local.get $5
       local.get $0
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 0
        br $__inlined_func$assembly/helpers/lodashHelpers/stringStartsWith
       end
       i32.const 0
       local.set $2
       loop $for-loop|01
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $2
        local.get $4
        i32.const 20
        i32.sub
        i32.load $0 offset=16
        i32.const 1
        i32.shr_u
        i32.lt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=8
         local.get $0
         local.get $2
         call $~lib/string/String#charAt
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=8
         local.get $4
         local.get $2
         call $~lib/string/String#charAt
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0 offset=4
         local.get $6
         local.get $5
         call $~lib/string/String.__ne
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          br $__inlined_func$assembly/helpers/lodashHelpers/stringStartsWith
         end
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-loop|01
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
      end
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       return
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/bucketing/segmentation/_checkValueEndsWith (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=8
     local.get $1
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     block $__inlined_func$assembly/helpers/lodashHelpers/stringEndsWith (result i32)
      i32.const 0
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      i64.const 0
      i64.store $0
      local.get $5
      i64.const 0
      i64.store $0 offset=8
      local.get $5
      local.get $4
      i32.store $0
      local.get $5
      i32.const 7168
      i32.store $0 offset=4
      block $folding-inner0
       local.get $4
       i32.const 7168
       call $~lib/string/String.__eq
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $4
       i32.store $0
       local.get $4
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       local.set $6
       local.get $5
       local.get $0
       i32.store $0
       local.get $6
       local.get $0
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       i32.gt_s
       br_if $folding-inner0
       loop $for-loop|00
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $2
        local.get $4
        i32.const 20
        i32.sub
        i32.load $0 offset=16
        i32.const 1
        i32.shr_u
        i32.lt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $5
         local.get $0
         i32.store $0 offset=8
         local.get $5
         local.get $0
         i32.store $0 offset=12
         local.get $0
         i32.const 20
         i32.sub
         i32.load $0 offset=16
         i32.const 1
         i32.shr_u
         local.set $6
         local.get $5
         local.get $4
         i32.store $0 offset=12
         local.get $0
         local.get $6
         local.get $4
         i32.const 20
         i32.sub
         i32.load $0 offset=16
         i32.const 1
         i32.shr_u
         i32.sub
         local.get $2
         i32.add
         call $~lib/string/String#charAt
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=8
         local.get $4
         local.get $2
         call $~lib/string/String#charAt
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=4
         local.get $5
         local.get $6
         call $~lib/string/String.__ne
         br_if $folding-inner0
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-loop|00
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       br $__inlined_func$assembly/helpers/lodashHelpers/stringEndsWith
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      return
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkStringsFilter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $3
  local.get $1
  i32.store $0
  local.get $3
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0
  local.get $3
  local.get $1
  call $assembly/types/target/UserFilter#getStringValues
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 1968
  i32.store $0 offset=12
  local.get $2
  i32.const 1968
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/string/String.__ne
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=12
    local.get $1
    local.get $0
    call $~lib/array/Array<~lib/string/String>#includes
   else
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   i32.const 2000
   i32.store $0 offset=12
   local.get $2
   i32.const 2000
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 0
    call $~lib/string/String.__ne
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=12
     local.get $1
     local.get $0
     call $~lib/array/Array<~lib/string/String>#includes
    else
     i32.const 1
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    i32.eqz
    local.set $0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0
    local.get $3
    i32.const 2160
    i32.store $0 offset=12
    local.get $2
    i32.const 2160
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.const 0
     call $~lib/string/String.__ne
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      i32.const 7168
      i32.store $0 offset=12
      local.get $0
      i32.const 7168
      call $~lib/string/String.__ne
     else
      i32.const 0
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.store $0
     local.get $3
     i32.const 2192
     i32.store $0 offset=12
     local.get $2
     i32.const 2192
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      i32.const 0
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       i32.const 7168
       i32.store $0 offset=12
       local.get $0
       i32.const 7168
       call $~lib/string/String.__eq
      end
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0
      local.get $3
      i32.const 2224
      i32.store $0 offset=12
      local.get $2
      i32.const 2224
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.const 0
       call $~lib/string/String.__ne
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        local.get $1
        i32.store $0 offset=12
        local.get $2
        local.get $0
        i32.store $0 offset=16
        local.get $1
        local.get $0
        call $assembly/helpers/lodashHelpers/findString
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        call $~lib/string/String.__not
       else
        i32.const 1
       end
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
       i32.eqz
       local.set $0
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $2
       i32.store $0
       local.get $3
       i32.const 2272
       i32.store $0 offset=12
       local.get $2
       i32.const 2272
       call $~lib/string/String.__eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.const 0
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $1
         i32.store $0 offset=12
         local.get $2
         local.get $0
         i32.store $0 offset=16
         local.get $1
         local.get $0
         call $assembly/helpers/lodashHelpers/findString
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         call $~lib/string/String.__not
        end
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0
        local.get $3
        i32.const 2320
        i32.store $0 offset=12
        local.get $2
        i32.const 2320
        call $~lib/string/String.__eq
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         i32.const 0
         call $~lib/string/String.__ne
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $0
          i32.store $0
          local.get $2
          local.get $1
          i32.store $0 offset=12
          local.get $0
          local.get $1
          call $assembly/bucketing/segmentation/_checkValueStartsWith
         else
          i32.const 0
         end
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 20
         i32.add
         global.set $~lib/memory/__stack_pointer
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         local.get $2
         i32.store $0
         local.get $3
         i32.const 2368
         i32.store $0 offset=12
         local.get $2
         i32.const 2368
         call $~lib/string/String.__eq
         if
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          i32.const 0
          call $~lib/string/String.__eq
          if (result i32)
           i32.const 0
          else
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           local.get $0
           i32.store $0
           local.get $2
           local.get $1
           i32.store $0 offset=12
           local.get $0
           local.get $1
           call $assembly/bucketing/segmentation/_checkValueStartsWith
          end
          local.set $0
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $0
          i32.eqz
          local.set $0
         else
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $2
          i32.store $0
          local.get $3
          i32.const 2416
          i32.store $0 offset=12
          local.get $2
          i32.const 2416
          call $~lib/string/String.__eq
          if
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $0
           i32.const 0
           call $~lib/string/String.__ne
           if (result i32)
            global.get $~lib/memory/__stack_pointer
            local.tee $2
            local.get $0
            i32.store $0
            local.get $2
            local.get $1
            i32.store $0 offset=12
            local.get $0
            local.get $1
            call $assembly/bucketing/segmentation/_checkValueEndsWith
           else
            i32.const 0
           end
           local.set $0
           global.get $~lib/memory/__stack_pointer
           i32.const 20
           i32.add
           global.set $~lib/memory/__stack_pointer
          else
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           local.get $2
           i32.store $0
           local.get $3
           i32.const 2464
           i32.store $0 offset=12
           local.get $2
           i32.const 2464
           call $~lib/string/String.__eq
           if (result i32)
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $0
            i32.const 0
            call $~lib/string/String.__eq
            if (result i32)
             i32.const 0
            else
             global.get $~lib/memory/__stack_pointer
             local.tee $2
             local.get $0
             i32.store $0
             local.get $2
             local.get $1
             i32.store $0 offset=12
             local.get $0
             local.get $1
             call $assembly/bucketing/segmentation/_checkValueEndsWith
            end
            local.set $0
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $0
            i32.eqz
           else
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.add
            global.set $~lib/memory/__stack_pointer
            i32.const 1
           end
           local.set $0
          end
         end
        end
       end
      end
     end
    end
   end
  end
  local.get $0
 )
 (func $assembly/helpers/lodashHelpers/replace (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   local.get $0
   call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0
   else
    i32.const 0
   end
   local.tee $3
   i32.store $0 offset=12
   local.get $3
   i32.eqz
   local.get $1
   i32.eqz
   i32.or
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 28
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $3
     i32.store $0 offset=24
     local.get $3
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=20
     local.get $1
     block $__inlined_func$~lib/string/String#replace (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      i64.const 0
      i64.store $0
      local.get $1
      i32.const 0
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.store $0
      local.get $0
      i32.const 20
      i32.sub
      i32.load $0 offset=16
      i32.const 1
      i32.shr_u
      local.set $5
      local.get $1
      local.get $4
      i32.store $0
      block $folding-inner0
       local.get $4
       i32.const 20
       i32.sub
       i32.load $0 offset=16
       i32.const 1
       i32.shr_u
       local.tee $6
       local.get $5
       i32.ge_u
       if
        local.get $5
        local.get $6
        i32.ge_u
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $4
         i32.store $0
         local.get $1
         local.get $0
         i32.store $0 offset=4
         i32.const 7168
         local.get $0
         local.get $4
         local.get $0
         call $~lib/string/String.__eq
         select
        else
         local.get $0
        end
        local.set $1
        br $folding-inner0
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       local.get $4
       i32.store $0 offset=4
       local.get $0
       local.get $4
       i32.const 0
       call $~lib/string/String#indexOf
       local.tee $4
       i32.const -1
       i32.xor
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 7168
        i32.store $0
        local.get $5
        local.get $6
        i32.sub
        local.tee $5
        i32.const 7164
        i32.load $0
        i32.const 1
        i32.shr_u
        local.tee $7
        i32.add
        local.tee $1
        if
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.const 1
         i32.shl
         i32.const 2
         call $~lib/rt/itcms/__new
         local.tee $1
         i32.store $0 offset=8
         local.get $1
         local.get $0
         local.get $4
         i32.const 1
         i32.shl
         local.tee $8
         memory.copy $0 $0
         local.get $1
         local.get $8
         i32.add
         i32.const 7168
         local.get $7
         i32.const 1
         i32.shl
         memory.copy $0 $0
         local.get $1
         local.get $4
         local.get $7
         i32.add
         i32.const 1
         i32.shl
         i32.add
         local.get $0
         local.get $4
         local.get $6
         i32.add
         i32.const 1
         i32.shl
         i32.add
         local.get $5
         local.get $4
         i32.sub
         i32.const 1
         i32.shl
         memory.copy $0 $0
         br $folding-inner0
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
       br $__inlined_func$~lib/string/String#replace
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
     end
     local.tee $0
     i32.store $0 offset=16
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/lodashHelpers/includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $~lib/string/String#includes
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/checkVersionFilter (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 60
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/string/String.__not
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0
   local.get $3
   i32.const 2000
   i32.store $0 offset=12
   local.get $2
   i32.const 2000
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 1968
    i32.store $0 offset=8
    i32.const 1
    local.set $7
    i32.const 1968
   else
    local.get $2
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $1
   local.tee $3
   i32.store $0 offset=16
   local.get $8
   local.get $4
   i32.store $0
   local.get $8
   i32.const 1968
   i32.store $0 offset=12
   local.get $4
   i32.const 1968
   call $~lib/string/String.__ne
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 18448
    i32.store $0 offset=12
    local.get $1
    i32.const 7984
    i32.store $0 offset=20
    local.get $1
    i32.const 18448
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    local.tee $4
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    i32.const 18496
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 7984
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 18496
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    local.tee $8
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=40
    local.get $0
    local.get $4
    call $assembly/helpers/lodashHelpers/replace
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=20
    local.get $1
    local.get $0
    local.get $8
    call $assembly/helpers/lodashHelpers/replace
    local.tee $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 4
    i32.const 18528
    call $~lib/rt/__newArray
    local.tee $1
    i32.store $0 offset=44
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $9
      local.get $1
      i32.store $0
      local.get $9
      local.get $3
      i32.store $0 offset=56
      local.get $3
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=40
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=48
      global.get $~lib/memory/__stack_pointer
      i32.const 7168
      i32.store $0 offset=52
      local.get $9
      local.get $4
      call $assembly/helpers/lodashHelpers/replace
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0 offset=32
      global.get $~lib/memory/__stack_pointer
      i32.const 7168
      i32.store $0 offset=36
      local.get $9
      local.get $8
      call $assembly/helpers/lodashHelpers/replace
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $1
      local.get $9
      call $~lib/array/Array<~lib/string/String>#push
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.tee $3
    i32.store $0 offset=16
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $4
   i32.const 7088
   i32.store $0 offset=4
   i32.const 1
   global.set $~argumentsLength
   local.get $4
   local.get $0
   i32.const 7088
   call $~lib/string/String#split@varargs
   local.tee $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 2
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $4
    i32.store $0
    local.get $0
    i32.const 8832
    i32.store $0 offset=4
    local.get $4
    i32.const 8832
    call $~lib/array/Array<~lib/string/String>#push
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $4
    i32.store $0
    local.get $0
    i32.const 8832
    i32.store $0 offset=4
    local.get $4
    i32.const 8832
    call $~lib/array/Array<~lib/string/String>#push
   end
   i32.const 0
   local.set $0
   loop $for-loop|01
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $4
     i32.store $0
     local.get $5
     local.get $4
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $5
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=4
     local.get $5
     i32.const 7168
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $4
      i32.store $0
      local.get $5
      i32.const 8832
      i32.store $0 offset=16
      local.get $4
      local.get $0
      i32.const 8832
      call $~lib/array/Array<~lib/string/String>#__set
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|01
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0
   local.get $0
   i32.const 7088
   i32.store $0 offset=4
   local.get $4
   i32.const 7088
   call $~lib/array/Array<~lib/string/String>#join
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $5
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   i32.const 0
   local.set $1
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     block $for-break1
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=32
      local.get $3
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=20
      block $__inlined_func$assembly/bucketing/segmentation/checkVersionValue (result i32)
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.const 20
       memory.fill $0
       block $folding-inner1
        local.get $5
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store $0
         local.get $8
         i32.const 20
         i32.sub
         i32.load $0 offset=16
         i32.const 1
         i32.shr_u
        else
         i32.const 0
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $9
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 33780
         i32.lt_s
         br_if $folding-inner2
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         i64.const 0
         i64.store $0
         local.get $4
         i32.const 2
         i32.const 19
         call $~lib/rt/itcms/__new
         local.tee $4
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.tee $10
         local.get $4
         i32.store $0 offset=4
         local.get $10
         local.get $4
         call $~lib/object/Object#constructor
         local.tee $4
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=4
         local.get $4
         i32.const 0
         i32.store8 $0
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=4
         local.get $4
         i32.const 0
         i32.store8 $0 offset=1
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $9
         local.get $4
         i32.store $0 offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         local.get $4
         i32.const 1
         i32.store8 $0 offset=1
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         local.get $4
         i32.const 0
         i32.store8 $0
         local.get $9
         local.get $4
         i32.store $0 offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0 offset=16
         i32.const 3
         global.set $~argumentsLength
         local.get $5
         local.get $8
         local.get $4
         i32.const 11520
         i32.load $0
         call_indirect $0 (type $i32_i32_i32_=>_f64)
         local.tee $6
         local.get $6
         f64.ne
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          br $__inlined_func$assembly/bucketing/segmentation/checkVersionValue
         else
          local.get $6
          f64.const 0
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $4
           local.get $2
           i32.store $0
           local.get $4
           i32.const 1968
           i32.store $0 offset=12
           local.get $2
           i32.const 1968
           call $assembly/helpers/lodashHelpers/includes
          else
           i32.const 0
          end
          br_if $folding-inner1
          local.get $6
          f64.const 1
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $4
           local.get $2
           i32.store $0
           local.get $4
           i32.const 2032
           i32.store $0 offset=12
           local.get $2
           i32.const 2032
           call $assembly/helpers/lodashHelpers/includes
          else
           i32.const 0
          end
          br_if $folding-inner1
          local.get $6
          f64.const -1
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $4
           local.get $2
           i32.store $0
           local.get $4
           i32.const 2096
           i32.store $0 offset=12
           local.get $2
           i32.const 2096
           call $assembly/helpers/lodashHelpers/includes
          else
           i32.const 0
          end
          br_if $folding-inner1
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 0
        br $__inlined_func$assembly/bucketing/segmentation/checkVersionValue
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
      end
      if
       i32.const 1
       local.set $0
       br $for-break1
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.eqz
   local.get $0
   local.get $7
   select
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkVersionFilters (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  call $assembly/types/target/UserFilter#getStringValues
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 1968
  i32.store $0 offset=12
  local.get $3
  i32.const 1968
  call $~lib/string/String.__eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=12
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/_checkStringsFilter
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=12
   local.get $1
   local.get $3
   i32.store $0 offset=16
   local.get $0
   local.get $2
   local.get $3
   call $assembly/bucketing/segmentation/checkVersionFilter
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/checkValueExists (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 133
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 17872
    i32.const 503
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 124
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 17872
    i32.const 504
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $3
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 135
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 17872
    i32.const 505
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $4
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=28
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 134
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 17872
    i32.const 506
    i32.const 38
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $5
  i32.store $0 offset=32
  i32.const 1
  local.get $5
  i32.const 1
  local.get $4
  i32.const 1
  local.get $3
  local.get $2
  select
  select
  select
  i32.const 0
  local.get $0
  select
  if (result i32)
   local.get $2
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=40
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=36
    local.get $0
    i32.const 7168
    call $~lib/string/String.__ne
   else
    i32.const 1
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $3
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
    local.tee $1
    local.get $1
    f64.eq
   else
    i32.const 1
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    drop
   end
   i32.const 0
  else
   i32.const 1
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.eqz
 )
 (func $assembly/bucketing/segmentation/_checkNumberFilter (param $0 f64) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $2
   i32.store $0
   local.get $5
   i32.const 2160
   i32.store $0 offset=4
   local.get $2
   i32.const 2160
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    local.get $0
    f64.eq
    return
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $2
    i32.store $0
    local.get $5
    i32.const 2192
    i32.store $0 offset=4
    local.get $2
    i32.const 2192
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     local.get $0
     f64.ne
     return
    end
   end
  end
  local.get $0
  local.get $0
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $2
  i32.store $0
  local.get $5
  i32.const 2000
  i32.store $0 offset=4
  local.get $2
  i32.const 2000
  call $~lib/string/String.__eq
  if
   i32.const 1
   local.set $2
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     i32.const 0
     local.get $2
     local.get $1
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.tee $6
     local.get $0
     f64.eq
     local.get $6
     local.get $6
     f64.ne
     i32.or
     select
     local.set $2
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    block $for-continue|1
     local.get $1
     local.get $4
     call $~lib/array/Array<f64>#__get
     local.tee $6
     local.get $6
     f64.ne
     br_if $for-continue|1
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $2
     i32.store $0
     local.get $5
     i32.const 1968
     i32.store $0 offset=4
     local.get $2
     i32.const 1968
     call $~lib/string/String.__eq
     if (result i32)
      local.get $0
      local.get $6
      f64.eq
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $2
      i32.store $0
      local.get $5
      i32.const 2032
      i32.store $0 offset=4
      local.get $2
      i32.const 2032
      call $~lib/string/String.__eq
      if (result i32)
       local.get $0
       local.get $6
       f64.gt
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $2
       i32.store $0
       local.get $5
       i32.const 2064
       i32.store $0 offset=4
       local.get $2
       i32.const 2064
       call $~lib/string/String.__eq
       if (result i32)
        local.get $0
        local.get $6
        f64.ge
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        local.get $2
        i32.store $0
        local.get $5
        i32.const 2096
        i32.store $0 offset=4
        local.get $2
        i32.const 2096
        call $~lib/string/String.__eq
        if (result i32)
         local.get $0
         local.get $6
         f64.lt
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $5
         local.get $2
         i32.store $0
         local.get $5
         i32.const 2128
         i32.store $0 offset=4
         local.get $2
         i32.const 2128
         call $~lib/string/String.__eq
         i32.eqz
         br_if $for-continue|1
         local.get $0
         local.get $6
         f64.le
        end
       end
      end
     end
     local.tee $3
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      return
     end
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/bucketing/segmentation/checkNumbersFilterJSONValue (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/helpers/jsonHelpers/getF64FromJSONValue
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $1
   i32.load $0 offset=12
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=28
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0
    local.get $0
    local.get $1
    i32.load $0 offset=28
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    i32.eqz
    if
     i32.const 8112
     i32.const 18336
     i32.const 304
     i32.const 15
     call $~lib/builtins/abort
     unreachable
    end
   else
    i32.const 0
    i32.const 3
    i32.const 62
    i32.const 18624
    call $~lib/rt/__newArray
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $2
   local.get $0
   local.get $4
   call $assembly/bucketing/segmentation/_checkNumberFilter
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load8_u $0
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<bool>#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/array/Array<bool>#indexOf
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    i32.eqz
    local.get $3
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const -1
     local.set $2
     br $__inlined_func$~lib/array/Array<bool>#indexOf
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $0
      local.get $2
      i32.add
      i32.load8_u $0
      i32.const 0
      i32.ne
      local.get $1
      i32.const 0
      i32.ne
      i32.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/array/Array<bool>#indexOf
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   i32.const 0
   i32.ge_s
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkCustomData (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=12
    local.get $3
    local.get $2
    i32.load $0 offset=36
    local.tee $3
    i32.store $0 offset=8
    local.get $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
   else
    i32.const 0
   end
   local.tee $0
   i32.store $0 offset=16
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=12
    local.get $0
    local.get $2
    i32.load $0 offset=36
    local.tee $3
    i32.store $0 offset=8
    local.get $0
    local.get $1
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $0
    i32.store $0 offset=16
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0
   local.get $1
   i32.const 2160
   i32.store $0 offset=8
   local.get $4
   i32.const 2160
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/bucketing/segmentation/checkValueExists
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $4
    i32.store $0
    local.get $1
    i32.const 2192
    i32.store $0 offset=8
    local.get $4
    i32.const 2192
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/bucketing/segmentation/checkValueExists
     i32.eqz
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 36
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $2
     i32.store $0 offset=12
     local.get $1
     local.get $2
     i32.load $0 offset=32
     local.tee $3
     i32.store $0
     local.get $1
     i32.const 2720
     i32.store $0 offset=8
     local.get $0
     i32.const 0
     local.get $3
     i32.const 2720
     call $~lib/string/String.__eq
     select
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
      end
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       i32.const 0
       local.get $2
       call $assembly/bucketing/segmentation/_checkStringsFilter
      else
       block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        local.get $0
        i32.store $0 offset=20
        i32.const 0
        local.get $0
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 133
        i32.ne
        br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 17872
        i32.const 445
        i32.const 29
        call $~lib/builtins/abort
        unreachable
       end
       local.get $1
       local.get $0
       i32.store $0 offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       local.get $0
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
       local.set $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       local.get $0
       local.get $2
       call $assembly/bucketing/segmentation/_checkStringsFilter
      end
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 36
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $2
      i32.store $0 offset=12
      local.get $1
      local.get $2
      i32.load $0 offset=32
      local.tee $3
      i32.store $0
      local.get $1
      i32.const 2800
      i32.store $0 offset=8
      local.get $0
      i32.const 0
      local.get $3
      i32.const 2800
      call $~lib/string/String.__eq
      select
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
       if (result i32)
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
       end
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store $0
       local.get $1
       local.get $2
       i32.store $0 offset=8
       local.get $0
       local.get $2
       call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 36
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $2
       i32.store $0 offset=12
       local.get $1
       local.get $2
       i32.load $0 offset=32
       local.tee $3
       i32.store $0
       local.get $1
       i32.const 2752
       i32.store $0 offset=8
       local.get $0
       i32.const 0
       local.get $3
       i32.const 2752
       call $~lib/string/String.__eq
       select
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
       else
        i32.const 0
       end
       if
        block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $0
         i32.store $0 offset=28
         i32.const 0
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 134
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 17872
         i32.const 452
         i32.const 27
         call $~lib/builtins/abort
         unreachable
        end
        local.get $1
        local.get $0
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=8
        local.get $0
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner1
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i64.const 0
        i64.store $0
        local.get $1
        i64.const 0
        i64.store $0 offset=8
        local.get $1
        local.get $2
        i32.store $0
        local.get $1
        local.get $2
        i32.load $0 offset=12
        local.tee $3
        i32.store $0 offset=4
        local.get $1
        local.get $2
        i32.store $0
        local.get $1
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner1
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        i64.const 0
        i64.store $0
        local.get $4
        local.get $2
        i32.store $0
        local.get $2
        i32.load $0 offset=24
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         local.get $2
         i32.store $0
         local.get $4
         local.get $2
         i32.load $0 offset=24
         local.tee $2
         i32.store $0 offset=4
         local.get $2
         i32.eqz
         if
          i32.const 8112
          i32.const 18336
          i32.const 298
          i32.const 15
          call $~lib/builtins/abort
          unreachable
         end
        else
         i32.const 0
         i32.const 0
         i32.const 152
         i32.const 18656
         call $~lib/rt/__newArray
         local.set $2
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $1
        local.get $2
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        i32.const 2224
        i32.store $0 offset=12
        local.get $3
        i32.const 2224
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $3
         i32.store $0
         local.get $1
         i32.const 1968
         i32.store $0 offset=12
         local.get $3
         i32.const 1968
         call $~lib/string/String.__eq
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0
         local.get $2
         local.get $0
         call $~lib/array/Array<bool>#includes
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 16
         i32.add
         global.set $~lib/memory/__stack_pointer
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $3
         i32.store $0
         local.get $1
         i32.const 2272
         i32.store $0 offset=12
         local.get $3
         i32.const 2272
         call $~lib/string/String.__eq
         if (result i32)
          i32.const 1
         else
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          local.get $3
          i32.store $0
          local.get $1
          i32.const 2000
          i32.store $0 offset=12
          local.get $3
          i32.const 2000
          call $~lib/string/String.__eq
         end
         if
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0
          local.get $2
          local.get $0
          call $~lib/array/Array<bool>#includes
          i32.eqz
          local.set $0
          global.get $~lib/memory/__stack_pointer
          i32.const 16
          i32.add
          global.set $~lib/memory/__stack_pointer
         else
          global.get $~lib/memory/__stack_pointer
          local.tee $0
          local.get $3
          i32.store $0
          local.get $0
          i32.const 2160
          i32.store $0 offset=12
          local.get $3
          i32.const 2160
          call $~lib/string/String.__eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 1
          else
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           local.get $3
           i32.store $0
           local.get $0
           i32.const 2192
           i32.store $0 offset=12
           local.get $3
           i32.const 2192
           call $~lib/string/String.__eq
           drop
           global.get $~lib/memory/__stack_pointer
           i32.const 16
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 0
          end
          local.set $0
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 36
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        local.get $0
        if (result i32)
         i32.const 0
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         local.get $4
         i32.store $0
         local.get $0
         i32.const 2000
         i32.store $0 offset=8
         local.get $4
         i32.const 2000
         call $~lib/string/String.__eq
        end
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         i32.const 36
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 1
        else
         global.get $~lib/memory/__stack_pointer
         i32.const 36
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 0
        end
        local.set $0
       end
      end
     end
    end
   end
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/filterFunctionsBySubtype (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  i32.const 1552
  i32.store $0 offset=4
  local.get $0
  i32.const 1552
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.load $0 offset=16
   local.tee $1
   i32.store $0
   local.get $0
   local.get $2
   i32.store $0 offset=4
   i32.const 5120
   i32.const 0
   local.get $1
   local.get $2
   call $assembly/bucketing/segmentation/_checkStringsFilter
   local.tee $0
   select
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0
   local.get $4
   i32.const 1488
   i32.store $0 offset=4
   local.get $0
   i32.const 1488
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=8
    local.get $0
    local.get $1
    i32.load $0 offset=4
    local.tee $1
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    i32.const 5088
    i32.const 0
    local.get $1
    local.get $2
    call $assembly/bucketing/segmentation/_checkStringsFilter
    local.tee $0
    select
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=8
    local.get $0
    local.get $1
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0
    local.get $4
    i32.const 1440
    i32.store $0 offset=4
    local.get $0
    i32.const 1440
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0 offset=8
     local.get $0
     local.get $1
     i32.load $0
     local.tee $1
     i32.store $0
     local.get $0
     local.get $2
     i32.store $0 offset=4
     i32.const 5040
     i32.const 0
     local.get $1
     local.get $2
     call $assembly/bucketing/segmentation/_checkStringsFilter
     local.tee $0
     select
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=8
     local.get $0
     local.get $1
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0
     local.get $4
     i32.const 1712
     i32.store $0 offset=4
     local.get $0
     i32.const 1712
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.store $0 offset=8
      local.get $0
      local.get $1
      i32.load $0 offset=20
      local.tee $1
      i32.store $0
      local.get $0
      local.get $2
      i32.store $0 offset=4
      i32.const 5280
      i32.const 0
      local.get $1
      local.get $2
      call $assembly/bucketing/segmentation/_checkVersionFilters
      local.tee $0
      select
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=8
      local.get $0
      local.get $1
      call $assembly/bucketing/segmentation/SegmentationResult#constructor
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 40
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0
      local.get $4
      i32.const 1648
      i32.store $0 offset=4
      local.get $0
      i32.const 1648
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $1
       i32.store $0 offset=8
       local.get $0
       local.get $1
       i32.load $0 offset=60
       local.tee $1
       i32.store $0
       local.get $0
       local.get $2
       i32.store $0 offset=4
       i32.const 5216
       i32.const 0
       local.get $1
       local.get $2
       call $assembly/bucketing/segmentation/_checkVersionFilters
       local.tee $0
       select
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $0
       local.get $1
       call $assembly/bucketing/segmentation/SegmentationResult#constructor
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 40
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $0
       i32.store $0
       local.get $4
       i32.const 1760
       i32.store $0 offset=4
       local.get $0
       i32.const 1760
       call $~lib/string/String.__eq
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        local.get $1
        i32.store $0 offset=8
        local.get $0
        local.get $1
        i32.load $0 offset=44
        local.tee $1
        i32.store $0
        local.get $0
        local.get $2
        i32.store $0 offset=4
        i32.const 5328
        i32.const 0
        local.get $1
        local.get $2
        call $assembly/bucketing/segmentation/_checkStringsFilter
        local.tee $0
        select
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=8
        local.get $0
        local.get $1
        call $assembly/bucketing/segmentation/SegmentationResult#constructor
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 40
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $0
        i32.store $0
        local.get $4
        i32.const 1600
        i32.store $0 offset=4
        local.get $0
        i32.const 1600
        call $~lib/string/String.__eq
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         local.get $1
         i32.store $0 offset=8
         local.get $0
         local.get $1
         i32.load $0 offset=56
         local.tee $1
         i32.store $0
         local.get $0
         local.get $2
         i32.store $0 offset=4
         i32.const 5168
         i32.const 0
         local.get $1
         local.get $2
         call $assembly/bucketing/segmentation/_checkStringsFilter
         local.tee $0
         select
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store $0 offset=8
         local.get $0
         local.get $1
         call $assembly/bucketing/segmentation/SegmentationResult#constructor
        else
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         local.get $0
         i32.store $0
         local.get $4
         i32.const 1808
         i32.store $0 offset=4
         local.get $0
         i32.const 1808
         call $~lib/string/String.__eq
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=12
          local.get $2
          if (result i32)
           local.get $2
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 153
           i32.eq
          else
           i32.const 0
          end
          i32.eqz
          if
           i32.const 18560
           i32.const 17872
           i32.const 198
           i32.const 13
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=16
          local.get $1
          call $assembly/types/dvcUser/DVCPopulatedUser#getCombinedCustomData
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $3
          i32.store $0 offset=4
          block $__inlined_func$~instanceof|assembly/types/target/CustomDataFilter0 (result i32)
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0 offset=20
           i32.const 0
           local.get $2
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 153
           i32.ne
           br_if $__inlined_func$~instanceof|assembly/types/target/CustomDataFilter0
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 8352
           i32.const 17872
           i32.const 200
           i32.const 89
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=8
          local.get $0
          local.get $3
          local.get $2
          call $assembly/bucketing/segmentation/_checkCustomData
          local.set $0
          global.get $~lib/memory/__stack_pointer
          local.get $0
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i32.const 5376
           i32.store $0 offset=24
           block $__inlined_func$~instanceof|assembly/types/target/CustomDataFilter2 (result i32)
            local.get $1
            local.get $2
            i32.store $0 offset=28
            i32.const 0
            local.get $2
            i32.const 8
            i32.sub
            i32.load $0
            i32.const 153
            i32.ne
            br_if $__inlined_func$~instanceof|assembly/types/target/CustomDataFilter2
            drop
            i32.const 1
           end
           i32.eqz
           if
            i32.const 8352
            i32.const 17872
            i32.const 201
            i32.const 75
            call $~lib/builtins/abort
            unreachable
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           local.get $2
           i32.store $0
           local.get $1
           local.get $2
           i32.load $0 offset=36
           local.tee $1
           i32.store $0 offset=32
           local.get $3
           i32.const 18688
           i32.store $0
           local.get $3
           i32.const 5376
           i32.store $0 offset=8
           i32.const 18688
           i32.const 0
           i32.const 5376
           call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
           global.get $~lib/memory/__stack_pointer
           i32.const 18688
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.store $0 offset=8
           i32.const 18688
           i32.const 2
           local.get $1
           call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
           global.get $~lib/memory/__stack_pointer
           i32.const 18688
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           i32.const 7168
           i32.store $0 offset=4
           i32.const 18688
           call $~lib/staticarray/StaticArray<~lib/string/String>#join
          else
           i32.const 0
          end
          local.tee $1
          i32.store $0 offset=36
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store $0 offset=8
          local.get $0
          local.get $1
          call $assembly/bucketing/segmentation/SegmentationResult#constructor
         else
          i32.const 0
          i32.const 0
          call $assembly/bucketing/segmentation/SegmentationResult#constructor
         end
        end
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 40
        i32.add
        global.set $~lib/memory/__stack_pointer
       end
      end
     end
    end
   end
  end
  local.get $0
 )
 (func $assembly/bucketing/segmentation/doesUserPassFilter (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.load $0
  local.tee $5
  i32.store $0
  local.get $4
  i32.const 1200
  i32.store $0 offset=4
  block $folding-inner0
   local.get $5
   i32.const 1200
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4640
    i32.store $0 offset=8
    i32.const 1
    i32.const 4640
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $0
    br $folding-inner0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=8
    local.get $4
    local.get $0
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $4
    i32.const 1264
    i32.store $0 offset=4
    local.get $5
    i32.const 1264
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 0
     i32.const 0
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
     local.set $0
     br $folding-inner0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=8
     local.get $4
     local.get $0
     i32.load $0
     local.tee $5
     i32.store $0
     local.get $4
     i32.const 1296
     i32.store $0 offset=4
     local.get $5
     i32.const 1296
     call $~lib/string/String.__eq
     if (result i32)
      block $__inlined_func$~instanceof|assembly/types/target/AudienceMatchFilter (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=12
       i32.const 0
       local.get $0
       i32.const 8
       i32.sub
       i32.load $0
       i32.const 148
       i32.ne
       br_if $__inlined_func$~instanceof|assembly/types/target/AudienceMatchFilter
       drop
       i32.const 1
      end
      i32.eqz
      if
       i32.const 8352
       i32.const 17872
       i32.const 112
       i32.const 15
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      i32.load8_u $0 offset=12
      if
       block $__inlined_func$~instanceof|assembly/types/target/AudienceMatchFilter2 (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=20
        i32.const 0
        local.get $0
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 148
        i32.ne
        br_if $__inlined_func$~instanceof|assembly/types/target/AudienceMatchFilter2
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 17872
        i32.const 115
        i32.const 43
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $0
       i32.store $0
       local.get $4
       local.get $1
       i32.store $0 offset=4
       local.get $4
       local.get $2
       i32.store $0 offset=8
       local.get $4
       local.get $3
       i32.store $0 offset=16
       local.get $0
       local.get $1
       local.get $2
       local.get $3
       call $assembly/bucketing/segmentation/filterForAudienceMatch
       local.set $0
       br $folding-inner0
      end
      i32.const 0
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=24
      local.get $0
      if (result i32)
       block $__inlined_func$~instanceof|assembly/types/target/UserFilter (result i32)
        block $is_instance4
         local.get $0
         i32.const 8
         i32.sub
         i32.load $0
         local.tee $1
         i32.const 151
         i32.eq
         br_if $is_instance4
         local.get $1
         i32.const 153
         i32.eq
         br_if $is_instance4
         i32.const 0
         br $__inlined_func$~instanceof|assembly/types/target/UserFilter
        end
        i32.const 1
       end
      else
       i32.const 0
      end
     end
    end
   end
   if
    block $__inlined_func$~instanceof|assembly/types/target/UserFilter5 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=28
     block $is_instance6
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $4
      i32.const 151
      i32.eq
      br_if $is_instance6
      local.get $4
      i32.const 153
      i32.eq
      br_if $is_instance6
      i32.const 0
      br $__inlined_func$~instanceof|assembly/types/target/UserFilter5
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 17872
     i32.const 122
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.get $0
    i32.store $0 offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load8_u $0 offset=16
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=36
     local.get $1
     i32.const 1920
     i32.store $0
     local.get $1
     local.get $4
     i32.store $0 offset=4
     i32.const 1920
     local.get $4
     call $~lib/array/Array<~lib/string/String>#includes
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $4
      i32.store $0
      local.get $1
      local.get $2
      i32.store $0 offset=4
      local.get $1
      local.get $0
      i32.store $0 offset=8
      local.get $1
      local.get $3
      i32.store $0 offset=16
      local.get $4
      local.get $2
      local.get $0
      local.get $3
      call $assembly/bucketing/segmentation/filterFunctionsBySubtype
      local.set $0
      br $folding-inner0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
   local.tee $0
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 19072
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   i32.const 19072
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 19072
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=8
   i32.const 19072
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/console/console.log
   i32.const 0
   i32.const 0
   call $assembly/bucketing/segmentation/SegmentationResult#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/_evaluateOperator (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i32.const 0
  i32.const 68
  memory.fill $0
  local.get $6
  local.get $0
  i32.store $0 offset=4
  local.get $6
  local.get $0
  i32.load $0 offset=4
  local.tee $6
  i32.store $0
  block $folding-inner1
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.eqz
   if
    i32.const 0
    i32.const 0
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $4
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $0
   i32.store $0 offset=8
   local.get $6
   local.get $0
   i32.load $0
   local.tee $7
   i32.store $0
   local.get $6
   i32.const 1088
   i32.store $0 offset=4
   local.get $7
   i32.const 1088
   call $~lib/string/String.__eq
   if
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     i32.load $0 offset=4
     local.tee $4
     i32.store $0
     local.get $4
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0 offset=4
      local.get $4
      local.get $0
      i32.load $0 offset=4
      local.tee $6
      i32.store $0
      local.get $4
      local.get $6
      local.get $5
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $4
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      i32.load $0
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $4
       i32.store $0 offset=20
       local.get $6
       local.get $4
       i32.load $0
       local.tee $4
       i32.store $0 offset=24
       local.get $4
       i32.eqz
       if
        i32.const 8112
        i32.const 17872
        i32.const 60
        i32.const 39
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $7
       local.get $4
       i32.store $0
       local.get $7
       local.get $1
       i32.store $0 offset=4
       local.get $7
       local.get $2
       i32.store $0 offset=8
       local.get $7
       local.get $3
       i32.store $0 offset=16
       local.get $6
       local.get $4
       local.get $1
       local.get $2
       local.get $3
       call $assembly/bucketing/segmentation/_evaluateOperator
       local.tee $4
       i32.store $0 offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       local.get $4
       i32.load8_u $0
       br_if $folding-inner1
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0
       local.get $4
       i32.load $0 offset=4
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        local.get $4
        i32.store $0 offset=20
        local.get $6
        local.get $4
        i32.load $0 offset=4
        local.tee $4
        i32.store $0 offset=32
        local.get $4
        i32.eqz
        if
         i32.const 8112
         i32.const 17872
         i32.const 68
         i32.const 40
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        local.get $4
        i32.store $0
        local.get $7
        local.get $1
        i32.store $0 offset=4
        local.get $7
        local.get $2
        i32.store $0 offset=8
        local.get $7
        local.get $3
        i32.store $0 offset=16
        local.get $6
        local.get $4
        local.get $1
        local.get $2
        local.get $3
        call $assembly/bucketing/segmentation/doesUserPassFilter
        local.tee $4
        i32.store $0 offset=36
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        i32.load8_u $0
        br_if $folding-inner1
       end
      end
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|0
     end
    end
    i32.const 0
    i32.const 0
    call $assembly/bucketing/segmentation/SegmentationResult#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 68
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $0
    i32.store $0 offset=8
    local.get $5
    local.get $0
    i32.load $0
    local.tee $6
    i32.store $0
    local.get $5
    i32.const 1056
    i32.store $0 offset=4
    local.get $6
    i32.const 1056
    call $~lib/string/String.__eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<~lib/string/String>#constructor
     local.tee $6
     i32.store $0 offset=40
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $0
      i32.store $0 offset=4
      local.get $5
      local.get $0
      i32.load $0 offset=4
      local.tee $5
      i32.store $0
      local.get $5
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $4
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       i32.store $0 offset=4
       local.get $5
       local.get $0
       i32.load $0 offset=4
       local.tee $7
       i32.store $0
       local.get $5
       local.get $7
       local.get $4
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.tee $5
       i32.store $0 offset=44
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       i32.load $0
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        local.get $5
        i32.store $0 offset=20
        local.get $0
        local.get $5
        i32.load $0
        local.tee $0
        i32.store $0 offset=48
        local.get $0
        i32.eqz
        if
         i32.const 8112
         i32.const 17872
         i32.const 81
         i32.const 41
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $0
        i32.store $0
        local.get $4
        local.get $1
        i32.store $0 offset=4
        local.get $4
        local.get $2
        i32.store $0 offset=8
        local.get $4
        local.get $3
        i32.store $0 offset=16
        local.get $0
        local.get $1
        local.get $2
        local.get $3
        call $assembly/bucketing/segmentation/_evaluateOperator
        local.set $4
        br $folding-inner1
       else
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0
        local.get $5
        i32.load $0 offset=4
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $7
         local.get $5
         i32.store $0 offset=20
         local.get $7
         local.get $5
         i32.load $0 offset=4
         local.tee $8
         i32.store $0 offset=52
         local.get $8
         i32.eqz
         if
          i32.const 8112
          i32.const 17872
          i32.const 84
          i32.const 40
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $5
         local.get $8
         i32.store $0
         local.get $5
         local.get $1
         i32.store $0 offset=4
         local.get $5
         local.get $2
         i32.store $0 offset=8
         local.get $5
         local.get $3
         i32.store $0 offset=16
         local.get $7
         local.get $8
         local.get $1
         local.get $2
         local.get $3
         call $assembly/bucketing/segmentation/doesUserPassFilter
         local.tee $5
         i32.store $0 offset=56
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         local.get $5
         i32.load8_u $0
         i32.eqz
         if
          i32.const 0
          i32.const 0
          call $assembly/bucketing/segmentation/SegmentationResult#constructor
          local.set $4
          br $folding-inner1
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $7
         local.get $5
         i32.store $0 offset=4
         local.get $7
         local.get $5
         i32.load $0 offset=4
         local.tee $7
         i32.store $0
         local.get $7
         i32.const 0
         call $~lib/string/String.__ne
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $7
          local.get $6
          i32.store $0
          local.get $7
          local.get $5
          i32.store $0 offset=8
          local.get $7
          local.get $5
          i32.load $0 offset=4
          local.tee $5
          i32.store $0 offset=60
          local.get $5
          i32.eqz
          if
           i32.const 8112
           i32.const 17872
           i32.const 89
           i32.const 34
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=4
          local.get $6
          local.get $5
          call $~lib/array/Array<~lib/string/String>#push
         end
        end
       end
       local.get $4
       i32.const 1
       i32.add
       local.set $4
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $6
     i32.store $0
     local.get $0
     i32.const 19104
     i32.store $0 offset=4
     local.get $0
     local.get $6
     i32.const 19104
     call $~lib/array/Array<~lib/string/String>#join
     local.tee $0
     i32.store $0 offset=64
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     i32.const 1
     local.get $0
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
    else
     i32.const 0
     i32.const 0
     call $assembly/bucketing/segmentation/SegmentationResult#constructor
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 68
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 68
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/bucketing/bucketing/evaluateSegmentationForFeature (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 48
   memory.fill $0
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $1
    i32.store $0 offset=8
    local.get $6
    local.get $1
    i32.load $0 offset=16
    local.tee $7
    i32.store $0 offset=4
    local.get $6
    local.get $7
    i32.load $0 offset=16
    local.tee $6
    i32.store $0
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $4
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $1
     i32.store $0 offset=8
     local.get $6
     local.get $1
     i32.load $0 offset=16
     local.tee $7
     i32.store $0 offset=4
     local.get $6
     local.get $7
     i32.load $0 offset=16
     local.tee $7
     i32.store $0
     local.get $6
     local.get $7
     local.get $4
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $7
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load $0
     local.tee $6
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0 offset=12
     local.tee $6
     i32.store $0
     local.get $6
     i32.load8_u $0
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $6
     i32.const 1
     local.get $7
     i32.load $0 offset=8
     select
     if (result i32)
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $2
      i32.store $0
      local.get $6
      local.get $7
      i32.store $0 offset=4
      local.get $6
      local.get $2
      local.get $7
      call $assembly/bucketing/bucketing/_getUserValueForBucketingKey
      local.tee $6
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load $0
      local.tee $8
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      local.get $8
      call $assembly/bucketing/bucketing/_generateBoundedHashes
      local.tee $6
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      f64.load $0
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load $0 offset=8
      local.tee $6
      i32.store $0
      local.get $6
      local.get $5
      call $assembly/bucketing/bucketing/_doesUserPassRollout
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $8
      local.get $7
      i32.store $0 offset=32
      local.get $8
      local.get $7
      i32.load $0 offset=4
      local.tee $6
      i32.store $0 offset=28
      local.get $8
      local.get $6
      i32.load $0
      local.tee $9
      i32.store $0
      local.get $8
      local.get $0
      i32.store $0 offset=28
      local.get $8
      local.get $0
      i32.load $0 offset=4
      local.tee $6
      i32.store $0 offset=4
      local.get $8
      local.get $2
      i32.store $0 offset=8
      local.get $8
      local.get $3
      i32.store $0 offset=24
      local.get $8
      local.get $9
      local.get $6
      local.get $2
      local.get $3
      call $assembly/bucketing/segmentation/_evaluateOperator
      local.tee $6
      i32.store $0 offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      i32.load8_u $0
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i64.const 0
       i64.store $0
       local.get $1
       i32.const 8
       i32.const 146
       call $~lib/rt/itcms/__new
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0 offset=4
       local.get $2
       local.get $1
       call $~lib/object/Object#constructor
       local.tee $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=4
       local.get $1
       i32.const 0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=4
       local.get $1
       i32.const 0
       i32.store $0 offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
       local.get $1
       i32.store $0 offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=4
       local.get $1
       local.get $7
       i32.store $0
       local.get $7
       if
        local.get $1
        local.get $7
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $1
       i32.store $0
       local.get $0
       local.get $6
       i32.store $0 offset=8
       local.get $0
       local.get $6
       i32.load $0 offset=4
       local.tee $2
       i32.store $0 offset=44
       local.get $0
       local.get $2
       i32.const 7168
       local.get $2
       select
       local.tee $0
       i32.store $0 offset=4
       local.get $1
       local.get $0
       i32.store $0 offset=4
       local.get $0
       if
        local.get $1
        local.get $0
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 48
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       return
      end
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/bucketing/doesUserQualifyForFeature (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i32.const 0
    i32.const 40
    memory.fill $0
    local.get $5
    local.get $0
    i32.store $0
    local.get $5
    local.get $1
    i32.store $0 offset=4
    local.get $5
    local.get $2
    i32.store $0 offset=8
    local.get $5
    local.get $3
    i32.store $0 offset=12
    local.get $5
    local.get $0
    local.get $1
    local.get $2
    local.get $3
    call $assembly/bucketing/bucketing/evaluateSegmentationForFeature
    local.tee $1
    i32.store $0 offset=16
    local.get $1
    i32.eqz
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0
    local.get $3
    local.get $1
    i32.load $0
    local.tee $5
    i32.store $0 offset=20
    local.get $3
    local.get $1
    i32.store $0
    local.get $3
    local.get $1
    i32.load $0 offset=4
    local.tee $1
    i32.store $0 offset=24
    local.get $3
    local.get $2
    i32.store $0
    local.get $3
    local.get $5
    i32.store $0 offset=4
    local.get $3
    local.get $2
    local.get $5
    call $assembly/bucketing/bucketing/_getUserValueForBucketingKey
    local.tee $2
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load $0
    local.tee $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    call $assembly/bucketing/bucketing/_generateBoundedHashes
    local.tee $2
    i32.store $0 offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    f64.load $0
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0
    local.tee $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $0
    i32.store $0
    local.get $0
    i32.load8_u $0
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    local.get $0
    i32.const 0
    local.get $5
    i32.load $0 offset=8
    select
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $5
     i32.store $0 offset=4
     local.get $0
     local.get $5
     i32.load $0 offset=8
     local.tee $0
     i32.store $0
     local.get $0
     local.get $4
     call $assembly/bucketing/bucketing/_doesUserPassRollout
    else
     i32.const 1
    end
    i32.eqz
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 12
    i32.const 145
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=4
    local.get $6
    local.get $0
    call $~lib/object/Object#constructor
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.const 0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.const 0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.const 0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    local.get $0
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $0
    local.get $5
    i32.store $0
    local.get $5
    if
     local.get $0
     local.get $5
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=4
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.store $0 offset=8
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/types/featureV2/FeatureV2#getVariationById (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=24
  local.tee $3
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0 offset=24
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/bucketing/bucketUserForVariation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $5
   local.get $1
   i32.store $0 offset=4
   local.get $5
   local.get $1
   i32.load $0
   local.tee $6
   i32.store $0
   local.get $5
   local.get $1
   i32.store $0 offset=8
   local.get $5
   local.get $1
   i32.load $0 offset=4
   local.tee $1
   i32.store $0 offset=4
   local.get $1
   f64.load $0 offset=8
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$assembly/types/targetV2/TargetV2#decideTargetVariation
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $6
     i32.store $0 offset=4
     local.get $1
     local.get $6
     i32.load $0 offset=20
     local.tee $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $6
      i32.store $0 offset=4
      local.get $7
      local.get $6
      i32.load $0 offset=20
      local.tee $1
      i32.store $0
      local.get $7
      local.get $1
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $1
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $3
      f64.const 1
      f64.eq
      local.get $4
      local.get $1
      f64.load $0 offset=8
      f64.add
      local.tee $4
      f64.const 1
      f64.eq
      i32.and
      local.get $3
      local.get $4
      f64.lt
      i32.or
      local.get $3
      f64.const 0
      f64.ge
      i32.and
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $1
       i32.store $0
       local.get $1
       i32.load $0
       local.set $1
       local.get $2
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$assembly/types/targetV2/TargetV2#decideTargetVariation
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 19136
    i32.store $0
    local.get $0
    local.get $6
    i32.store $0 offset=12
    local.get $0
    local.get $6
    i32.load $0
    local.tee $0
    i32.store $0 offset=4
    i32.const 19136
    local.get $0
    call $~lib/string/String#concat
    i32.const 19232
    i32.const 66
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $5
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $assembly/types/featureV2/FeatureV2#getVariationById
   local.tee $0
   i32.store $0 offset=16
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 19312
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    i32.const 19312
    local.get $1
    call $~lib/string/String#concat
    i32.const 19392
    i32.const 258
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/EvalReason#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 12
  i32.const 139
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/bucketing/bucketing/_getEvalReason (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0
  local.get $3
  i32.load $0 offset=8
  i32.const 0
  i32.ne
  local.set $4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $1
  local.get $3
  i32.load $0 offset=12
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#get:length
  i32.const 1
  i32.ne
  local.set $5
  i32.const 4336
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4336
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0 offset=16
  local.get $4
  local.get $5
  i32.or
  if
   i32.const 4400
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 4400
   i32.store $0 offset=12
   local.get $2
   local.get $4
   local.get $5
   i32.and
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 4928
    i32.store $0 offset=20
    local.get $2
    i32.const 4992
    i32.store $0 offset=24
    local.get $2
    i32.const 19520
    i32.store $0
    local.get $2
    i32.const 4928
    i32.store $0 offset=28
    i32.const 19520
    i32.const 0
    i32.const 4928
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 19520
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4992
    i32.store $0 offset=28
    i32.const 19520
    i32.const 2
    i32.const 4992
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 19520
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=8
    i32.const 19520
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
   else
    i32.const 4928
    i32.const 4992
    local.get $5
    select
   end
   local.tee $2
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $2
   i32.store $0 offset=36
   local.get $4
   local.get $0
   i32.store $0 offset=40
   local.get $4
   i32.const 19552
   i32.store $0
   local.get $4
   local.get $2
   i32.store $0 offset=28
   i32.const 19552
   i32.const 0
   local.get $2
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 19552
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=28
   i32.const 19552
   i32.const 2
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 19552
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=8
   local.get $4
   i32.const 19552
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $0
   i32.store $0 offset=16
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=28
  local.get $2
  local.get $3
  i32.store $0 offset=44
  local.get $2
  local.get $3
  i32.load $0
  local.tee $2
  i32.store $0 offset=44
  local.get $1
  local.get $0
  local.get $2
  call $assembly/types/bucketedUserConfig/EvalReason#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $7
  i64.const 0
  i64.store $0
  local.get $7
  i32.const 0
  i32.store $0 offset=8
  local.get $7
  i32.const 32
  i32.const 138
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $8
  local.get $7
  i32.store $0 offset=4
  local.get $8
  local.get $0
  i32.store $0 offset=8
  local.get $7
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $7
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $7
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $7
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $7
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $7
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $7
  local.get $3
  i32.store $0 offset=16
  local.get $3
  if
   local.get $7
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $7
  local.get $4
  i32.store $0 offset=20
  local.get $4
  if
   local.get $7
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $5
  i32.store $0 offset=8
  local.get $7
  local.get $5
  i32.store $0 offset=24
  local.get $5
  if
   local.get $7
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $6
  i32.store $0 offset=8
  local.get $7
  local.get $6
  i32.store $0 offset=28
  local.get $6
  if
   local.get $7
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $7
  i32.store $0 offset=4
  local.get $0
  local.get $7
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 12
  i32.const 141
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i64.const 0
  i64.store $0
  local.get $6
  i32.const 0
  i32.store $0 offset=8
  local.get $6
  i32.const 28
  i32.const 143
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $7
  local.get $6
  i32.store $0 offset=4
  local.get $7
  local.get $0
  i32.store $0 offset=8
  local.get $6
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $6
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $6
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $6
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $6
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $6
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $6
  local.get $3
  i32.store $0 offset=16
  local.get $3
  if
   local.get $6
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $6
  local.get $4
  i32.store $0 offset=20
  local.get $4
  if
   local.get $6
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $5
  i32.store $0 offset=8
  local.get $6
  local.get $5
  i32.store $0 offset=24
  local.get $5
  if
   local.get $6
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i64.const 0
  i64.store $0
  local.get $6
  i32.const 0
  i32.store $0 offset=8
  local.get $6
  i32.const 28
  i32.const 137
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $7
  local.get $6
  i32.store $0 offset=4
  local.get $7
  local.get $0
  i32.store $0 offset=8
  local.get $6
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $6
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $6
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $6
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $6
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $6
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $6
  local.get $3
  i32.store $0 offset=16
  local.get $3
  if
   local.get $6
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $6
  local.get $4
  i32.store $0 offset=20
  local.get $4
  if
   local.get $6
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $5
  i32.store $0 offset=8
  local.get $6
  local.get $5
  i32.store $0 offset=24
  local.get $5
  if
   local.get $6
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $6
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/bucketing/_generateBucketedConfig (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 104
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 104
   memory.fill $0
   local.get $4
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
   local.tee $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $8
   i32.store $0 offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=20
    local.get $4
    local.get $0
    i32.load $0 offset=12
    local.tee $4
    i32.store $0 offset=16
    local.get $4
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $9
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=20
     local.get $4
     local.get $0
     i32.load $0 offset=12
     local.tee $10
     i32.store $0 offset=16
     local.get $4
     local.get $10
     local.get $9
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $10
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $10
     local.get $1
     local.get $2
     call $assembly/bucketing/bucketing/doesUserQualifyForFeature
     local.tee $4
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     local.get $3
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $11
      local.get $3
      i32.store $0 offset=16
      local.get $11
      local.get $10
      i32.store $0 offset=28
      local.get $11
      local.get $10
      i32.load $0
      local.tee $11
      i32.store $0 offset=20
      local.get $3
      local.get $11
      call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
     else
      i32.const 0
     end
     local.tee $11
     i32.store $0 offset=40
     block $for-continue|0
      local.get $4
      if (result i32)
       i32.const 0
      else
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=16
       local.get $11
       call $~lib/string/String.__not
      end
      br_if $for-continue|0
      global.get $~lib/memory/__stack_pointer
      local.get $4
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.tee $12
       local.get $10
       i32.store $0 offset=16
       local.get $12
       local.get $4
       i32.store $0 offset=20
       local.get $10
       local.get $4
       call $assembly/bucketing/bucketing/bucketUserForVariation
      else
       i32.const 0
      end
      local.tee $12
      i32.store $0 offset=44
      global.get $~lib/memory/__stack_pointer
      local.get $11
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.tee $13
       local.get $10
       i32.store $0 offset=16
       local.get $13
       local.get $11
       i32.store $0 offset=20
       local.get $10
       local.get $11
       call $assembly/types/featureV2/FeatureV2#getVariationById
      else
       i32.const 0
      end
      local.tee $13
      i32.store $0 offset=48
      global.get $~lib/memory/__stack_pointer
      local.get $13
      local.get $12
      local.get $13
      select
      local.tee $12
      i32.store $0 offset=52
      local.get $12
      i32.eqz
      br_if $for-continue|0
      global.get $~lib/memory/__stack_pointer
      local.get $11
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       i32.const 4560
       i32.store $0 offset=20
       local.get $4
       i32.const 4880
       i32.store $0 offset=28
       local.get $4
       i32.const 7168
       i32.store $0 offset=32
       i32.const 4560
       i32.const 4880
       i32.const 7168
       call $assembly/types/bucketedUserConfig/EvalReason#constructor
      else
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=56
       local.get $4
       i32.eqz
       if
        i32.const 8112
        i32.const 19392
        i32.const 328
        i32.const 30
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=16
       local.get $4
       call $assembly/bucketing/bucketing/_getEvalReason
      end
      local.tee $11
      i32.store $0 offset=60
      global.get $~lib/memory/__stack_pointer
      local.tee $13
      local.get $6
      i32.store $0 offset=16
      local.get $13
      local.get $10
      i32.store $0 offset=32
      local.get $13
      local.get $10
      i32.load $0 offset=8
      local.tee $14
      i32.store $0 offset=20
      local.get $13
      local.get $10
      i32.store $0 offset=88
      local.get $13
      local.get $10
      i32.load $0
      local.tee $15
      i32.store $0 offset=64
      local.get $13
      local.get $10
      i32.store $0 offset=88
      local.get $13
      local.get $10
      i32.load $0 offset=4
      local.tee $16
      i32.store $0 offset=68
      local.get $13
      local.get $10
      i32.store $0 offset=88
      local.get $13
      local.get $10
      i32.load $0 offset=8
      local.tee $17
      i32.store $0 offset=72
      local.get $13
      local.get $12
      i32.store $0 offset=88
      local.get $13
      local.get $12
      i32.load $0
      local.tee $18
      i32.store $0 offset=76
      local.get $13
      local.get $12
      i32.store $0 offset=88
      local.get $13
      local.get $12
      i32.load $0 offset=4
      local.tee $4
      i32.store $0 offset=80
      local.get $13
      local.get $12
      i32.store $0 offset=88
      local.get $13
      local.get $12
      i32.load $0 offset=8
      local.tee $19
      i32.store $0 offset=84
      local.get $13
      local.get $11
      i32.store $0 offset=88
      local.get $15
      local.get $16
      local.get $17
      local.get $18
      local.get $4
      local.get $19
      local.get $11
      call $assembly/types/bucketedUserConfig/SDKFeature#constructor
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=28
      local.get $6
      local.get $14
      local.get $4
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store $0 offset=32
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.load $0
      local.tee $4
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store $0 offset=32
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.load $0
      local.tee $13
      i32.store $0 offset=28
      local.get $7
      local.get $4
      local.get $13
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
      i32.const 0
      local.set $4
      loop $for-loop|1
       global.get $~lib/memory/__stack_pointer
       local.tee $13
       local.get $12
       i32.store $0 offset=20
       local.get $13
       local.get $12
       i32.load $0 offset=12
       local.tee $13
       i32.store $0 offset=16
       local.get $13
       call $~lib/array/Array<~lib/string/String>#get:length
       local.get $4
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $13
        local.get $12
        i32.store $0 offset=20
        local.get $13
        local.get $12
        i32.load $0 offset=12
        local.tee $14
        i32.store $0 offset=16
        local.get $13
        local.get $14
        local.get $4
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.tee $13
        i32.store $0 offset=92
        global.get $~lib/memory/__stack_pointer
        local.set $14
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.store $0 offset=28
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.load $0
        local.tee $15
        i32.store $0 offset=20
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.tee $16
        i64.const 0
        i64.store $0
        local.get $16
        i32.const 0
        i32.store $0 offset=8
        local.get $16
        local.get $0
        i32.store $0 offset=8
        local.get $16
        local.get $0
        i32.load $0 offset=32
        local.tee $17
        i32.store $0
        local.get $16
        local.get $15
        i32.store $0 offset=4
        local.get $17
        local.get $15
        call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.tee $16
         local.get $0
         i32.store $0 offset=8
         local.get $16
         local.get $0
         i32.load $0 offset=32
         local.tee $17
         i32.store $0
         local.get $16
         local.get $15
         i32.store $0 offset=4
         local.get $17
         local.get $15
         call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
        else
         i32.const 0
        end
        local.set $15
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $14
        local.get $15
        i32.store $0 offset=96
        local.get $15
        i32.eqz
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         i32.const 19584
         i32.store $0 offset=16
         local.get $0
         local.get $13
         i32.store $0 offset=28
         local.get $0
         local.get $13
         i32.load $0
         local.tee $0
         i32.store $0 offset=20
         i32.const 19584
         local.get $0
         call $~lib/string/String#concat
         i32.const 19392
         i32.const 350
         i32.const 17
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $14
        local.get $8
        i32.store $0 offset=16
        local.get $14
        local.get $15
        i32.store $0 offset=32
        local.get $14
        local.get $15
        i32.load $0 offset=8
        local.tee $16
        i32.store $0 offset=20
        local.get $14
        local.get $10
        i32.store $0 offset=68
        local.get $14
        local.get $10
        i32.load $0
        local.tee $17
        i32.store $0 offset=64
        local.get $14
        local.get $12
        i32.store $0 offset=68
        local.get $14
        local.get $12
        i32.load $0
        local.tee $14
        i32.store $0 offset=68
        local.get $17
        local.get $14
        call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
        local.set $14
        global.get $~lib/memory/__stack_pointer
        local.get $14
        i32.store $0 offset=28
        local.get $8
        local.get $16
        local.get $14
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.load $0
        local.tee $14
        i32.store $0 offset=20
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.load $0 offset=4
        local.tee $16
        i32.store $0 offset=28
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.load $0 offset=8
        local.tee $17
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.load $0 offset=4
        local.tee $13
        i32.store $0 offset=64
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load $0
        local.tee $18
        i32.store $0 offset=68
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store $0 offset=72
        global.get $~lib/memory/__stack_pointer
        local.get $14
        local.get $16
        local.get $17
        local.get $13
        local.get $18
        local.get $11
        call $assembly/types/bucketedUserConfig/SDKVariable#constructor
        local.tee $13
        i32.store $0 offset=100
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store $0 offset=32
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.load $0 offset=8
        local.tee $14
        i32.store $0 offset=20
        global.get $~lib/memory/__stack_pointer
        local.get $13
        i32.store $0 offset=28
        local.get $5
        local.get $14
        local.get $13
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|1
       end
      end
     end
     local.get $9
     i32.const 1
     i32.add
     local.set $9
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=72
   local.get $1
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=20
   local.get $1
   local.get $0
   i32.store $0 offset=72
   local.get $1
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   i32.store $0 offset=28
   local.get $1
   local.get $6
   i32.store $0 offset=32
   local.get $1
   local.get $7
   i32.store $0 offset=64
   local.get $1
   local.get $8
   i32.store $0 offset=68
   local.get $1
   local.get $5
   i32.store $0 offset=72
   local.get $2
   local.get $0
   local.get $6
   local.get $7
   local.get $8
   local.get $5
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 104
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $3
  i32.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0 offset=4
    local.get $4
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $0
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    local.get $1
    local.get $5
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $3
  i32.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0 offset=4
    local.get $4
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=28
    local.get $0
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=20
    local.get $1
    local.get $5
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19664
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19664
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19712
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19712
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19760
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19760
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19808
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19808
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19936
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=24
  local.tee $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 19936
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCUser.fromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 19984
   i32.const 14672
   i32.const 142
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 14672
   i32.const 143
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/types/dvcUser/DVCUser.fromJSONObj
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/dvcUser/DVCUser.fromUTF8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Uint8Array#slice (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $~lib/typedarray/Uint8Array#get:length
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.le_s
  select
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.get $2
  i32.sub
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.load $0 offset=4
  local.set $5
  local.get $3
  local.get $0
  i32.store $0 offset=4
  local.get $5
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.add
  local.get $4
  memory.copy $0 $0
  local.get $3
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32) (result i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $10
  i64.const 0
  i64.store $0
  local.get $10
  i32.const 0
  i32.store $0 offset=8
  local.get $10
  i32.const 40
  i32.const 155
  call $~lib/rt/itcms/__new
  local.tee $10
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.tee $11
  local.get $10
  i32.store $0 offset=4
  local.get $11
  local.get $0
  i32.store $0 offset=8
  local.get $10
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $10
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $10
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $10
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $10
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $10
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=8
  local.get $10
  local.get $3
  i32.store $0 offset=12
  local.get $3
  if
   local.get $10
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $10
  local.get $4
  i32.store $0 offset=16
  local.get $4
  if
   local.get $10
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $5
  i32.store $0 offset=8
  local.get $10
  local.get $5
  i32.store $0 offset=20
  local.get $5
  if
   local.get $10
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $6
  i32.store $0 offset=8
  local.get $10
  local.get $6
  i32.store $0 offset=24
  local.get $6
  if
   local.get $10
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $7
  i32.store $0 offset=8
  local.get $10
  local.get $7
  i32.store $0 offset=28
  local.get $7
  if
   local.get $10
   local.get $7
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $8
  i32.store $0 offset=8
  local.get $10
  local.get $8
  i32.store $0 offset=32
  local.get $8
  if
   local.get $10
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $10
  i32.store $0 offset=4
  local.get $0
  local.get $9
  i32.store $0 offset=8
  local.get $10
  local.get $9
  i32.store $0 offset=36
  local.get $9
  if
   local.get $10
   local.get $9
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 5
  i32.const 156
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store8 $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store8 $0 offset=4
  local.get $0
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0
   i32.add
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 7168
  i32.store $0 offset=4
  local.get $1
  i32.const 7168
  i32.const 0
  call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
  local.tee $1
  i32.store $0 offset=8
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.load $0
   i32.gt_u
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    block $case2|1
     block $case1|1
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#uint32@override
      local.tee $2
      i32.const 3
      i32.shr_u
      local.tee $4
      i32.const 1
      i32.ne
      if
       local.get $4
       i32.const 2
       i32.eq
       br_if $case1|1
       br $case2|1
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $1
      i32.store $0
      local.get $2
      local.get $0
      i32.store $0 offset=12
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#string@override
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=4
      local.get $1
      local.get $2
      i32.store $0
      local.get $2
      if
       local.get $1
       local.get $2
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      br $while-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     call $~lib/as-proto/assembly/Reader/Reader#bool@override
     i32.store8 $0 offset=4
     br $while-continue|0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    local.get $2
    i32.const 7
    i32.and
    call $~lib/as-proto/assembly/Reader/Reader#skipType@override
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor (param $0 f64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 9
  i32.const 157
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f64.const 0
  f64.store $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store8 $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  f64.store $0
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store8 $0 offset=8
  local.get $3
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 5
  i32.const 158
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store8 $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store8 $0 offset=4
  local.get $0
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 160
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  i32.const 20
  i32.const 159
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  i32.store $0
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  i32.store8 $0 offset=4
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  f64.const 0
  f64.store $0 offset=8
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $1
  i32.store8 $0 offset=4
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $4
  local.get $2
  f64.store $0 offset=8
  local.get $5
  local.get $4
  i32.store $0 offset=4
  local.get $5
  local.get $3
  i32.store $0 offset=8
  local.get $4
  local.get $3
  i32.store $0 offset=16
  local.get $3
  if
   local.get $4
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.add
   end
   local.set $2
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   block $2of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $2of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
    local.tee $3
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store $0 offset=4
   local.get $4
   local.get $3
   i32.store $0 offset=8
   local.get $3
   i32.const 0
   call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $6
   i32.store $0 offset=4
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.load $0
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     block $case2|1
      block $case1|1
       local.get $0
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       local.tee $1
       i32.const 3
       i32.shr_u
       local.tee $3
       i32.const 1
       i32.ne
       if
        local.get $3
        i32.const 2
        i32.eq
        br_if $case1|1
        br $case2|1
       end
       i32.const 7168
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.tee $7
       i32.const 7168
       i32.store $0 offset=8
       i32.const 0
       local.set $1
       i32.const 0
       local.set $5
       i32.const 0
       local.set $3
       local.get $7
       local.get $0
       i32.store $0
       local.get $0
       i32.load $0
       local.set $8
       local.get $7
       local.get $0
       i32.store $0
       local.get $0
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       local.get $8
       i32.add
       local.set $7
       loop $for-loop|2
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $7
        local.get $0
        i32.load $0
        i32.gt_u
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         block $break|3
          block $case2|3
           block $case1|3
            local.get $0
            call $~lib/as-proto/assembly/Reader/Reader#uint32@override
            local.tee $8
            i32.const 3
            i32.shr_u
            local.tee $9
            i32.const 1
            i32.ne
            if
             local.get $9
             i32.const 2
             i32.eq
             br_if $case1|3
             br $case2|3
            end
            global.get $~lib/memory/__stack_pointer
            local.tee $4
            local.get $0
            i32.store $0
            local.get $4
            local.get $0
            call $~lib/as-proto/assembly/Reader/Reader#string@override
            local.tee $4
            i32.store $0 offset=8
            i32.const 1
            local.set $5
            br $break|3
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           local.get $0
           i32.store $0
           local.get $3
           local.get $0
           i32.store $0 offset=12
           local.get $0
           call $~lib/as-proto/assembly/Reader/Reader#uint32@override
           local.set $1
           global.get $~lib/memory/__stack_pointer
           i32.const 20
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 33780
           i32.lt_s
           br_if $folding-inner1
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           i32.const 20
           memory.fill $0
           local.get $1
           i32.const 0
           i32.lt_s
           if (result i32)
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $0
            i32.load $0 offset=4
           else
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $1
            local.get $0
            i32.load $0
            i32.add
           end
           local.set $8
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i32.const 7168
           i32.store $0 offset=4
           local.get $1
           i32.const 0
           i32.const 0
           f64.const 0
           i32.const 7168
           call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
           local.tee $1
           i32.store $0 offset=8
           loop $while-continue|00
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $8
            local.get $0
            i32.load $0
            i32.gt_u
            if
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0
             block $case4|1
              block $case3|1
               block $case2|11
                block $case1|12
                 block $case0|1
                  local.get $0
                  call $~lib/as-proto/assembly/Reader/Reader#uint32@override
                  local.tee $9
                  i32.const 3
                  i32.shr_u
                  i32.const 1
                  i32.sub
                  br_table $case0|1 $case1|12 $case2|11 $case3|1 $case4|1
                 end
                 global.get $~lib/memory/__stack_pointer
                 local.tee $9
                 local.get $1
                 i32.store $0
                 local.get $9
                 local.get $0
                 i32.store $0 offset=12
                 local.get $1
                 local.get $0
                 call $~lib/as-proto/assembly/Reader/Reader#uint32@override
                 i32.store $0
                 br $while-continue|00
                end
                global.get $~lib/memory/__stack_pointer
                local.tee $9
                local.get $1
                i32.store $0
                local.get $9
                local.get $0
                i32.store $0 offset=12
                local.get $1
                local.get $0
                call $~lib/as-proto/assembly/Reader/Reader#bool@override
                i32.store8 $0 offset=4
                br $while-continue|00
               end
               global.get $~lib/memory/__stack_pointer
               local.tee $9
               local.get $1
               i32.store $0
               local.get $9
               local.get $0
               i32.store $0 offset=12
               local.get $1
               local.get $0
               call $~lib/as-proto/assembly/Reader/Reader#double@override
               f64.store $0 offset=8
               br $while-continue|00
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $9
              local.get $1
              i32.store $0
              local.get $9
              local.get $0
              i32.store $0 offset=16
              local.get $0
              call $~lib/as-proto/assembly/Reader/Reader#string@override
              local.set $9
              global.get $~lib/memory/__stack_pointer
              local.get $9
              i32.store $0 offset=12
              local.get $1
              local.get $9
              i32.store $0 offset=16
              local.get $9
              if
               local.get $1
               local.get $9
               i32.const 0
               call $byn-split-outlined-A$~lib/rt/itcms/__link
              end
              br $while-continue|00
             end
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0
             local.get $0
             local.get $9
             i32.const 7
             i32.and
             call $~lib/as-proto/assembly/Reader/Reader#skipType@override
             br $while-continue|00
            end
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 20
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $3
           local.get $1
           i32.store $0 offset=16
           i32.const 1
           local.set $3
           br $break|3
          end
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store $0
          local.get $0
          local.get $8
          i32.const 7
          i32.and
          call $~lib/as-proto/assembly/Reader/Reader#skipType@override
         end
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0
         local.get $6
         i32.load $0
         i32.eqz
         if
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
          local.set $8
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.store $0 offset=12
          local.get $6
          local.get $8
          i32.store $0
          local.get $8
          if
           local.get $6
           local.get $8
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $8
         local.get $6
         i32.store $0
         local.get $8
         local.get $6
         i32.load $0
         local.tee $8
         i32.store $0 offset=20
         local.get $1
         i32.const 0
         local.get $3
         i32.const 0
         local.get $5
         i32.const 0
         local.get $8
         select
         select
         select
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $9
          local.get $8
          i32.store $0
          local.get $9
          local.get $4
          i32.store $0 offset=12
          local.get $9
          local.get $1
          i32.store $0 offset=24
          local.get $8
          local.get $4
          local.get $1
          call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
         end
         br $for-loop|2
        end
       end
       br $while-continue|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $6
      i32.store $0
      local.get $1
      local.get $0
      i32.store $0 offset=12
      local.get $6
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      i32.store8 $0 offset=4
      br $while-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $1
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.add
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 7168
   i32.store $0 offset=4
   local.get $2
   i32.const 7168
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor
   local.tee $2
   i32.store $0 offset=8
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $0
                call $~lib/as-proto/assembly/Reader/Reader#uint32@override
                local.tee $3
                i32.const 3
                i32.shr_u
                i32.const 1
                i32.sub
                br_table $case0|1 $case1|1 $case2|1 $case3|1 $case4|1 $case5|1 $case6|1 $case7|1 $case8|1 $case9|1 $case10|1
               end
               global.get $~lib/memory/__stack_pointer
               local.tee $3
               local.get $2
               i32.store $0
               local.get $3
               local.get $0
               i32.store $0 offset=12
               local.get $0
               call $~lib/as-proto/assembly/Reader/Reader#string@override
               local.set $3
               global.get $~lib/memory/__stack_pointer
               local.get $3
               i32.store $0 offset=4
               local.get $2
               local.get $3
               i32.store $0
               local.get $3
               if
                local.get $2
                local.get $3
                i32.const 0
                call $byn-split-outlined-A$~lib/rt/itcms/__link
               end
               br $while-continue|0
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $3
              local.get $2
              i32.store $0
              local.get $3
              local.get $0
              i32.store $0 offset=12
              local.get $3
              local.get $0
              i32.store $0 offset=16
              local.get $0
              local.get $0
              call $~lib/as-proto/assembly/Reader/Reader#uint32@override
              call $assembly/types/protobuf-generated/NullableString/NullableString.decode
              local.set $3
              global.get $~lib/memory/__stack_pointer
              local.get $3
              i32.store $0 offset=4
              local.get $2
              local.get $3
              i32.store $0 offset=4
              local.get $3
              if
               local.get $2
               local.get $3
               i32.const 0
               call $byn-split-outlined-A$~lib/rt/itcms/__link
              end
              br $while-continue|0
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $3
             local.get $2
             i32.store $0
             local.get $3
             local.get $0
             i32.store $0 offset=12
             local.get $3
             local.get $0
             i32.store $0 offset=16
             local.get $0
             local.get $0
             call $~lib/as-proto/assembly/Reader/Reader#uint32@override
             call $assembly/types/protobuf-generated/NullableString/NullableString.decode
             local.set $3
             global.get $~lib/memory/__stack_pointer
             local.get $3
             i32.store $0 offset=4
             local.get $2
             local.get $3
             i32.store $0 offset=8
             local.get $3
             if
              local.get $2
              local.get $3
              i32.const 0
              call $byn-split-outlined-A$~lib/rt/itcms/__link
             end
             br $while-continue|0
            end
            global.get $~lib/memory/__stack_pointer
            local.tee $3
            local.get $2
            i32.store $0
            local.get $3
            local.get $0
            i32.store $0 offset=12
            local.get $3
            local.get $0
            i32.store $0 offset=16
            local.get $0
            local.get $0
            call $~lib/as-proto/assembly/Reader/Reader#uint32@override
            call $assembly/types/protobuf-generated/NullableString/NullableString.decode
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store $0 offset=4
            local.get $2
            local.get $3
            i32.store $0 offset=12
            local.get $3
            if
             local.get $2
             local.get $3
             i32.const 0
             call $byn-split-outlined-A$~lib/rt/itcms/__link
            end
            br $while-continue|0
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           local.get $2
           i32.store $0
           local.get $3
           local.get $0
           i32.store $0 offset=12
           local.get $3
           local.get $0
           i32.store $0 offset=16
           local.get $0
           local.get $0
           call $~lib/as-proto/assembly/Reader/Reader#uint32@override
           call $assembly/types/protobuf-generated/NullableString/NullableString.decode
           local.set $3
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.store $0 offset=4
           local.get $2
           local.get $3
           i32.store $0 offset=16
           local.get $3
           if
            local.get $2
            local.get $3
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           br $while-continue|0
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $2
          i32.store $0
          local.get $3
          local.get $0
          i32.store $0 offset=12
          local.get $3
          local.get $0
          i32.store $0 offset=16
          local.get $0
          call $~lib/as-proto/assembly/Reader/Reader#uint32@override
          local.set $3
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $4
          i64.const 0
          i64.store $0
          local.get $4
          i32.const 0
          i32.store $0 offset=8
          local.get $3
          i32.const 0
          i32.lt_s
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $0
           i32.load $0 offset=4
          else
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $3
           local.get $0
           i32.load $0
           i32.add
          end
          local.set $3
          global.get $~lib/memory/__stack_pointer
          f64.const 0
          i32.const 0
          call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor
          local.tee $5
          i32.store $0 offset=4
          loop $while-continue|04
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.store $0
           local.get $3
           local.get $0
           i32.load $0
           i32.gt_u
           if
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            block $case2|17
             block $case1|18
              local.get $0
              call $~lib/as-proto/assembly/Reader/Reader#uint32@override
              local.tee $6
              i32.const 3
              i32.shr_u
              local.tee $4
              i32.const 1
              i32.ne
              if
               local.get $4
               i32.const 2
               i32.eq
               br_if $case1|18
               br $case2|17
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $4
              local.get $5
              i32.store $0
              local.get $4
              local.get $0
              i32.store $0 offset=8
              local.get $5
              local.get $0
              call $~lib/as-proto/assembly/Reader/Reader#double@override
              f64.store $0
              br $while-continue|04
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $4
             local.get $5
             i32.store $0
             local.get $4
             local.get $0
             i32.store $0 offset=8
             local.get $5
             local.get $0
             call $~lib/as-proto/assembly/Reader/Reader#bool@override
             i32.store8 $0 offset=8
             br $while-continue|04
            end
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store $0
            local.get $0
            local.get $6
            i32.const 7
            i32.and
            call $~lib/as-proto/assembly/Reader/Reader#skipType@override
            br $while-continue|04
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=4
          local.get $2
          local.get $5
          i32.store $0 offset=20
          local.get $5
          if
           local.get $2
           local.get $5
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          br $while-continue|0
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         local.get $2
         i32.store $0
         local.get $3
         local.get $0
         i32.store $0 offset=12
         local.get $3
         local.get $0
         i32.store $0 offset=16
         local.get $0
         local.get $0
         call $~lib/as-proto/assembly/Reader/Reader#uint32@override
         call $assembly/types/protobuf-generated/NullableString/NullableString.decode
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=4
         local.get $2
         local.get $3
         i32.store $0 offset=24
         local.get $3
         if
          local.get $2
          local.get $3
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         br $while-continue|0
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $2
        i32.store $0
        local.get $3
        local.get $0
        i32.store $0 offset=12
        local.get $3
        local.get $0
        i32.store $0 offset=16
        local.get $0
        local.get $0
        call $~lib/as-proto/assembly/Reader/Reader#uint32@override
        call $assembly/types/protobuf-generated/NullableString/NullableString.decode
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0 offset=4
        local.get $2
        local.get $3
        i32.store $0 offset=28
        local.get $3
        if
         local.get $2
         local.get $3
         i32.const 0
         call $byn-split-outlined-A$~lib/rt/itcms/__link
        end
        br $while-continue|0
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $2
       i32.store $0
       local.get $3
       local.get $0
       i32.store $0 offset=12
       local.get $3
       local.get $0
       i32.store $0 offset=16
       local.get $0
       local.get $0
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $2
       local.get $3
       i32.store $0 offset=32
       local.get $3
       if
        local.get $2
        local.get $3
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       br $while-continue|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=12
      local.get $3
      local.get $0
      i32.store $0 offset=16
      local.get $0
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#uint32@override
      call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.decode
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=4
      local.get $2
      local.get $3
      i32.store $0 offset=36
      local.get $3
      if
       local.get $2
       local.get $3
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      br $while-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $3
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.add
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 7168
   i32.store $0 offset=4
   local.get $2
   i32.const 7168
   i32.store $0 offset=8
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   i32.const 17
   i32.const 154
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store8 $0 offset=16
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   i32.const 7168
   i32.store $0 offset=8
   local.get $3
   i32.const 7168
   i32.store $0
   local.get $3
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   i32.const 7168
   i32.store $0 offset=8
   local.get $3
   i32.const 7168
   i32.store $0 offset=4
   local.get $3
   i32.const 7168
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store8 $0 offset=16
   local.get $4
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0 offset=12
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     block $case5|1
      block $case4|1
       block $case3|1
        block $case2|1
         block $case1|1
          block $case0|1
           local.get $0
           call $~lib/as-proto/assembly/Reader/Reader#uint32@override
           local.tee $2
           i32.const 3
           i32.shr_u
           i32.const 1
           i32.sub
           br_table $case0|1 $case1|1 $case2|1 $case3|1 $case4|1 $case5|1
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $3
          i32.store $0
          local.get $2
          local.get $0
          i32.store $0 offset=8
          local.get $0
          call $~lib/as-proto/assembly/Reader/Reader#string@override
          local.set $2
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store $0 offset=4
          local.get $3
          local.get $2
          i32.store $0
          local.get $2
          if
           local.get $3
           local.get $2
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          br $while-continue|0
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $2
         local.get $3
         i32.store $0
         local.get $2
         local.get $0
         i32.store $0 offset=8
         local.get $0
         call $~lib/as-proto/assembly/Reader/Reader#string@override
         local.set $2
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0 offset=4
         local.get $3
         local.get $2
         i32.store $0 offset=4
         local.get $2
         if
          local.get $3
          local.get $2
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         br $while-continue|0
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        local.get $3
        i32.store $0
        local.get $2
        local.get $0
        i32.store $0 offset=4
        local.get $3
        local.get $0
        call $~lib/as-proto/assembly/Reader/Reader#uint32@override
        i32.store $0 offset=8
        br $while-continue|0
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $3
       i32.store $0
       local.get $2
       local.get $0
       i32.store $0 offset=8
       local.get $2
       local.get $0
       i32.store $0 offset=16
       local.get $0
       local.get $0
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.decode
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=4
       local.get $3
       local.get $2
       i32.store $0 offset=12
       local.get $2
       if
        local.get $3
        local.get $2
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       br $while-continue|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $3
      i32.store $0
      local.get $2
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#bool@override
      i32.store8 $0 offset=16
      br $while-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $2
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const -1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   global.get $~lib/as-proto/assembly/Protobuf/READER
   local.tee $3
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   local.get $3
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0 offset=4
   i32.store $0
   local.get $4
   local.get $3
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0 offset=4
   local.set $5
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $5
   local.get $0
   i32.load $0 offset=8
   i32.add
   i32.store $0 offset=4
   local.get $4
   local.get $3
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/as-proto/assembly/Protobuf/READER
   local.tee $0
   i32.store $0
   i32.const 2
   global.set $~argumentsLength
   local.get $0
   local.get $2
   local.get $1
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_i32)
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 20144
  i32.store $0 offset=4
  i32.const 2
  global.set $~argumentsLength
  local.get $0
  i32.const 20144
  call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Bool
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcUser/getJSONObjFromPBCustomData (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $2
  i32.store $0 offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $2
    i32.store $0
    local.get $4
    local.get $2
    local.get $3
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $4
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0
    local.tee $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.get $4
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $5
    i32.store $0 offset=24
    local.get $5
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     i32.load $0
    else
     i32.const 1
    end
    if
     local.get $5
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      local.get $5
      i32.load $0
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $4
      i32.store $0 offset=8
      local.get $6
      local.get $5
      i32.store $0 offset=20
      local.get $1
      local.get $4
      local.get $5
      f64.load $0 offset=8
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
     else
      local.get $5
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       i32.load $0
       i32.const 2
       i32.eq
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $1
       i32.store $0
       local.get $6
       local.get $4
       i32.store $0 offset=8
       local.get $6
       local.get $5
       i32.store $0 offset=28
       local.get $6
       local.get $5
       i32.load $0 offset=16
       local.tee $5
       i32.store $0 offset=20
       local.get $1
       local.get $4
       local.get $5
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
      else
       local.get $5
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0
        local.get $5
        i32.load $0
        i32.const 3
        i32.eq
       else
        i32.const 0
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $5
        local.get $1
        i32.store $0
        local.get $5
        local.get $4
        i32.store $0 offset=8
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor
        local.set $5
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=20
        local.get $1
        local.get $4
        local.get $5
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
       else
        i32.const 14752
        i32.const 14672
        i32.const 47
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
      end
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $1
     i32.store $0
     local.get $6
     local.get $4
     i32.store $0 offset=8
     local.get $6
     local.get $5
     i32.store $0 offset=20
     local.get $1
     local.get $4
     local.get $5
     i32.load8_u $0 offset=4
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/dvcUser/DVCUser.fromPBUser (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.const 76
  memory.fill $0
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=4
  local.tee $6
  i32.store $0 offset=4
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=8
  local.tee $7
  i32.store $0 offset=8
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=12
  local.tee $8
  i32.store $0 offset=12
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=16
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=20
  local.tee $3
  i32.store $0 offset=20
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=24
  local.tee $4
  i32.store $0 offset=24
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=28
  local.tee $9
  i32.store $0 offset=28
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=32
  local.tee $10
  i32.store $0 offset=32
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=36
  local.tee $11
  i32.store $0 offset=36
  local.get $5
  local.get $0
  i32.store $0 offset=68
  local.get $5
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=40
  local.get $5
  local.get $6
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=68
   local.get $6
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=68
   local.get $6
   i32.load $0
  end
  local.tee $5
  i32.store $0 offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $7
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=68
   local.get $7
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=68
   local.get $7
   i32.load $0
  end
  local.tee $6
  i32.store $0 offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $8
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=68
   local.get $8
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=68
   local.get $8
   i32.load $0
  end
  local.tee $7
  i32.store $0 offset=52
  global.get $~lib/memory/__stack_pointer
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=68
   local.get $2
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=68
   local.get $2
   i32.load $0
  end
  local.tee $2
  i32.store $0 offset=56
  local.get $3
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=68
   local.get $3
   i32.load8_u $0 offset=8
  else
   i32.const 1
  end
  if (result f64)
   f64.const nan:0x8000000000000
  else
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=68
   local.get $3
   f64.load $0
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $4
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=68
   local.get $4
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=68
   local.get $4
   i32.load $0
  end
  local.tee $3
  i32.store $0 offset=60
  global.get $~lib/memory/__stack_pointer
  local.get $9
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=68
   local.get $9
   i32.load8_u $0 offset=4
  else
   i32.const 1
  end
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=68
   local.get $9
   i32.load $0
  end
  local.tee $4
  i32.store $0 offset=64
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=68
  local.get $10
  call $assembly/types/dvcUser/getJSONObjFromPBCustomData
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store $0 offset=68
  local.get $11
  call $assembly/types/dvcUser/getJSONObjFromPBCustomData
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=72
  local.get $0
  local.get $5
  local.get $6
  local.get $7
  local.get $2
  local.get $1
  local.get $3
  local.get $4
  local.get $8
  local.get $9
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/bucketing/_generateBucketedVariableForUser (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    i32.const 0
    i32.const 60
    memory.fill $0
    local.get $4
    local.get $0
    i32.store $0
    local.get $4
    local.get $2
    i32.store $0 offset=4
    local.get $4
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i64.const 0
    i64.store $0
    local.get $5
    i32.const 0
    i32.store $0 offset=8
    local.get $5
    local.get $0
    i32.store $0 offset=8
    local.get $5
    local.get $0
    i32.load $0 offset=28
    local.tee $6
    i32.store $0
    local.get $5
    local.get $2
    i32.store $0 offset=4
    local.get $6
    local.get $2
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $0
     i32.load $0 offset=28
     local.tee $6
     i32.store $0
     local.get $5
     local.get $2
     i32.store $0 offset=4
     local.get $6
     local.get $2
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    else
     i32.const 0
    end
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    local.get $2
    i32.store $0 offset=8
    local.get $2
    i32.eqz
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0
    local.get $4
    local.get $2
    i32.store $0 offset=12
    local.get $4
    local.get $2
    i32.load $0
    local.tee $5
    i32.store $0 offset=4
    local.get $4
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i64.const 0
    i64.store $0
    local.get $6
    i32.const 0
    i32.store $0 offset=8
    local.get $6
    local.get $0
    i32.store $0 offset=8
    local.get $6
    local.get $0
    i32.load $0 offset=36
    local.tee $7
    i32.store $0
    local.get $6
    local.get $5
    i32.store $0 offset=4
    local.get $7
    local.get $5
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     i32.store $0 offset=8
     local.get $6
     local.get $0
     i32.load $0 offset=36
     local.tee $7
     i32.store $0
     local.get $6
     local.get $5
     i32.store $0 offset=4
     local.get $7
     local.get $5
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    else
     i32.const 0
    end
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    local.get $5
    i32.store $0 offset=16
    local.get $5
    i32.eqz
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0
    local.get $4
    local.get $5
    i32.store $0 offset=4
    local.get $4
    local.get $1
    i32.store $0 offset=12
    local.get $4
    local.get $3
    i32.store $0 offset=20
    local.get $4
    local.get $0
    local.get $5
    local.get $1
    local.get $3
    call $assembly/bucketing/bucketing/doesUserQualifyForFeature
    local.tee $0
    i32.store $0 offset=24
    local.get $0
    i32.eqz
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $5
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $5
    local.get $0
    call $assembly/bucketing/bucketing/bucketUserForVariation
    local.tee $1
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0
    local.tee $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i64.const 0
    i64.store $0
    local.get $6
    i32.const 0
    i32.store $0 offset=8
    local.get $6
    local.get $1
    i32.store $0 offset=8
    local.get $6
    local.get $1
    i32.load $0 offset=16
    local.tee $7
    i32.store $0
    local.get $6
    local.get $4
    i32.store $0 offset=4
    local.get $7
    local.get $4
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $1
     i32.store $0 offset=8
     local.get $6
     local.get $1
     i32.load $0 offset=16
     local.tee $7
     i32.store $0
     local.get $6
     local.get $4
     i32.store $0 offset=4
     local.get $7
     local.get $4
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    else
     i32.const 0
    end
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    local.get $4
    i32.store $0 offset=32
    local.get $4
    i32.eqz
    if
     i32.const 20368
     i32.const 19392
     i32.const 413
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    call $assembly/bucketing/bucketing/_getEvalReason
    local.tee $0
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0
    local.tee $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0 offset=4
    local.tee $6
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0 offset=8
    local.tee $2
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load $0 offset=4
    local.tee $4
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load $0
    local.tee $7
    i32.store $0 offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $6
    local.get $2
    local.get $4
    local.get $7
    local.get $0
    call $assembly/types/bucketedUserConfig/SDKVariable#constructor
    local.tee $0
    i32.store $0 offset=52
    global.get $~lib/memory/__stack_pointer
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store $0
    local.get $3
    i32.const 12
    i32.const 162
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0 offset=4
    local.get $4
    local.get $3
    call $~lib/object/Object#constructor
    local.tee $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    i32.const 0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    i32.store $0 offset=56
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.store $0
    local.get $0
    if
     local.get $3
     local.get $0
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $3
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $1
    if
     local.get $3
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $3
    i32.store $0
    local.get $0
    local.get $5
    i32.store $0 offset=4
    local.get $3
    local.get $5
    i32.store $0 offset=8
    local.get $5
    if
     local.get $3
     local.get $5
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/managers/eventQueueManager/getEventQueue (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 20480
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 20480
   local.get $0
   call $~lib/string/String#concat
   i32.const 20576
   i32.const 23
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  global.get $assembly/managers/eventQueueManager/_eventQueueMap
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcEvent/DVCEvent#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store $0
  local.get $5
  i32.const 0
  i32.store $0 offset=8
  local.get $5
  i32.const 28
  i32.const 109
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  local.get $5
  i32.store $0 offset=4
  local.get $6
  local.get $0
  i32.store $0 offset=8
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $5
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $5
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $5
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $5
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $5
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $5
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $5
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $5
  i32.store $0 offset=4
  local.get $5
  local.get $3
  f64.store $0 offset=16
  local.get $0
  local.get $5
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=8
  local.get $5
  local.get $4
  i32.store $0 offset=24
  local.get $4
  if
   local.get $5
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $5
  i32.store $0 offset=4
  local.get $0
  local.get $5
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/set/Set<~lib/string/String>#has (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/set/Set<~lib/string/String>#find
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  global.get $assembly/eventQueue/eventQueue/EventTypesSet
  local.tee $3
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.load $0
  local.tee $1
  i32.store $0 offset=4
  local.get $3
  local.get $1
  call $~lib/set/Set<~lib/string/String>#has
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=8
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=9
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,i64>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 112
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 113
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,i64>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $4
  local.get $3
  local.get $0
  i32.store $0
  local.get $4
  local.get $2
  local.get $0
  i32.load $0 offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load $0 offset=16
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $2
     i32.load $0
     local.tee $4
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $4
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get (param $0 i32) (param $1 i32) (result i64)
  (local $2 i32)
  (local $3 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,i64>#find
  local.tee $0
  i32.eqz
  if
   i32.const 11888
   i32.const 11952
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.load $0 offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,i64>#set (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   local.get $7
   call $~lib/map/Map<~lib/string/String,i64>#find
   local.tee $3
   if
    local.get $3
    local.get $2
    i64.store $0 offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=16
    local.set $4
    local.get $3
    local.get $0
    i32.store $0
    local.get $4
    local.get $0
    i32.load $0 offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0 offset=20
     local.set $4
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     i32.load $0 offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.load $0 offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $3
     local.get $6
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $8
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $0
     i32.load $0 offset=8
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $0
     i32.load $0 offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $9
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $9
      i32.ne
      if
       local.get $5
       i32.load $0 offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $12
        local.get $5
        i32.load $0
        local.tee $11
        i32.store $0 offset=12
        local.get $12
        local.get $11
        i32.store $0 offset=16
        local.get $3
        local.get $11
        i32.store $0
        local.get $3
        local.get $5
        i64.load $0 offset=8
        i64.store $0 offset=8
        local.get $12
        local.get $11
        i32.store $0 offset=8
        local.get $3
        local.get $10
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $6
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load $0
        i32.store $0 offset=16
        local.get $11
        local.get $3
        i32.store $0
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $5
       i32.const 24
       i32.add
       local.set $5
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $10
     i32.store $0 offset=16
     local.get $0
     local.get $10
     i32.store $0
     local.get $10
     if
      local.get $0
      local.get $10
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $6
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $4
     i32.store $0 offset=16
     local.get $0
     local.get $4
     i32.store $0 offset=8
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $8
     i32.store $0 offset=12
     local.get $3
     local.get $0
     i32.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0 offset=16
     local.get $0
     local.get $0
     i32.load $0 offset=20
     i32.store $0 offset=16
     local.get $3
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.load $0 offset=8
    local.tee $4
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=16
    local.tee $5
    i32.const 1
    i32.add
    i32.store $0 offset=16
    local.get $3
    local.get $1
    i32.store $0 offset=4
    local.get $4
    local.get $5
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store $0
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $3
    local.get $2
    i64.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $0
    local.get $0
    i32.load $0 offset=20
    i32.const 1
    i32.add
    i32.store $0 offset=20
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0
    local.set $4
    local.get $1
    local.get $0
    i32.store $0
    local.get $3
    local.get $4
    local.get $7
    local.get $0
    i32.load $0 offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load $0
    i32.store $0 offset=16
    local.get $0
    local.get $3
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap (param $0 i32) (param $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $1
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0
    local.get $3
    i32.const 20672
    i32.store $0 offset=4
    local.get $1
    i32.const 20672
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0
    local.get $3
    i32.const 20672
    i32.store $0 offset=4
    local.get $3
    local.get $1
    i32.const 20672
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
    local.tee $1
    i32.store $0 offset=8
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $1
     i32.store $0
     local.get $3
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
     local.tee $3
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i64.const 0
     i64.store $0
     local.get $4
     i32.const 0
     i32.store $0 offset=8
     local.get $4
     local.get $0
     i32.store $0
     local.get $4
     local.get $3
     i32.store $0 offset=4
     local.get $4
     local.get $3
     i32.store $0 offset=8
     local.get $0
     local.get $3
     local.get $3
     call $~lib/util/hash/HASH<~lib/string/String>
     call $~lib/map/Map<~lib/string/String,i64>#find
     i32.const 0
     i32.ne
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0
      local.get $4
      local.get $3
      i32.store $0 offset=4
      local.get $0
      local.get $3
      call $~lib/map/Map<~lib/string/String,i64>#get
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=16
      local.get $1
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $2
      i64.const 1
      i64.add
      call $~lib/map/Map<~lib/string/String,i64>#set
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0
      local.get $3
      local.get $1
      i32.store $0 offset=16
      local.get $1
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      local.get $0
      local.get $1
      i64.const 1
      call $~lib/map/Map<~lib/string/String,i64>#set
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const -64
  i32.add
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 64
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $4
   local.get $1
   local.tee $4
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled
   if
    global.get $~lib/memory/__stack_pointer
    i32.const -64
    i32.sub
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0
   local.get $1
   local.get $4
   i32.load $0
   local.tee $6
   i32.store $0 offset=8
   local.get $1
   local.get $4
   i32.store $0
   local.get $1
   local.get $4
   i32.load $0 offset=4
   local.tee $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/string/String.__not
   if
    i32.const 20720
    i32.const 20832
    i32.const 122
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   i32.store $0
   local.get $1
   local.get $6
   i32.store $0 offset=4
   local.get $5
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=16
    local.get $1
    local.get $0
    i32.load $0 offset=12
    local.tee $5
    i32.store $0
    local.get $1
    local.get $6
    i32.store $0 offset=4
    local.get $1
    local.get $5
    local.get $6
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $5
    i32.store $0 offset=20
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i64.const 0
    i64.store $0
    local.get $5
    i32.const 0
    i32.store $0 offset=8
    local.get $5
    i32.const 24
    i32.const 115
    call $~lib/rt/itcms/__new
    local.tee $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    i32.const 16
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $5
    local.get $8
    i32.store $0
    local.get $8
    if
     local.get $5
     local.get $8
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 3
    i32.store $0 offset=4
    local.get $8
    local.get $5
    i32.store $0 offset=4
    i32.const 48
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $5
    local.get $8
    i32.store $0 offset=8
    local.get $8
    if
     local.get $5
     local.get $8
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 4
    i32.store $0 offset=12
    local.get $8
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=16
    local.get $8
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=20
    local.get $8
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $5
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $1
    local.get $6
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $5
   i32.store $0
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $5
   local.get $7
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $5
    i32.store $0
    local.get $1
    local.get $7
    i32.store $0 offset=4
    local.get $1
    local.get $5
    local.get $7
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $1
    i32.store $0 offset=28
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    i32.const 0
    i32.store $0 offset=8
    local.get $1
    i32.const 24
    i32.const 114
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    i32.const 16
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $1
    local.get $8
    i32.store $0
    local.get $8
    if
     local.get $1
     local.get $8
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 3
    i32.store $0 offset=4
    local.get $8
    local.get $1
    i32.store $0 offset=4
    i32.const 48
    call $~lib/arraybuffer/ArrayBuffer#constructor
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $1
    local.get $8
    i32.store $0 offset=8
    local.get $8
    if
     local.get $1
     local.get $8
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 4
    i32.store $0 offset=12
    local.get $8
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0 offset=16
    local.get $8
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0 offset=20
    local.get $8
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    local.get $1
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=16
    local.get $5
    local.get $7
    local.get $1
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   end
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0
    local.get $3
    local.get $7
    i32.store $0 offset=4
    local.get $2
    local.get $7
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $7
     i32.store $0 offset=32
     local.get $0
     i32.const 21136
     i32.store $0
     local.get $0
     local.get $7
     i32.store $0 offset=16
     i32.const 21136
     i32.const 1
     local.get $7
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 21136
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=4
     i32.const 21136
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     i32.const 20832
     i32.const 143
     i32.const 17
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0
    local.get $3
    local.get $7
    i32.store $0 offset=4
    local.get $3
    local.get $2
    local.get $7
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $2
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    call $~lib/map/Map<~lib/string/String,i64>#constructor
    local.tee $5
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load $0 offset=4
    local.tee $3
    i32.store $0 offset=4
    local.get $1
    local.get $3
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $1
     i32.store $0
     local.get $3
     local.get $2
     i32.store $0 offset=16
     local.get $3
     local.get $2
     i32.load $0 offset=4
     local.tee $6
     i32.store $0 offset=4
     local.get $3
     local.get $1
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
     local.tee $3
     i32.store $0 offset=44
    else
     global.get $~lib/memory/__stack_pointer
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor
     local.tee $3
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0 offset=4
     local.tee $6
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=16
     local.get $1
     local.get $6
     local.get $3
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $3
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=16
    local.get $1
    local.get $2
    i32.load $0 offset=8
    local.tee $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $3
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0 offset=16
     local.get $1
     local.get $2
     i32.load $0 offset=8
     local.tee $2
     i32.store $0 offset=4
     local.get $1
     local.get $3
     local.get $2
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
     local.tee $5
     i32.store $0 offset=40
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $3
     i32.store $0
     local.get $1
     local.get $2
     i32.store $0 offset=24
     local.get $1
     local.get $2
     i32.load $0 offset=8
     local.tee $2
     i32.store $0 offset=4
     local.get $1
     local.get $5
     i32.store $0 offset=16
     local.get $3
     local.get $2
     local.get $5
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $0
     i32.load $0 offset=16
     i32.const 1
     i32.add
     i32.store $0 offset=16
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $5
    i32.store $0 offset=4
    local.get $1
    local.get $4
    i32.store $0 offset=24
    local.get $1
    local.get $4
    i32.load $0 offset=24
    local.tee $0
    i32.store $0 offset=16
    local.get $5
    local.get $0
    call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0
    local.get $2
    i32.const 21168
    i32.store $0 offset=4
    local.get $1
    i32.const 21168
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     i32.const 21168
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.const 21168
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
     local.tee $1
     i32.store $0 offset=48
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 21168
     i32.store $0 offset=4
     local.get $1
     i32.const 21168
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $1
      i32.store $0
      local.get $2
      i32.const 21168
      i32.store $0 offset=4
      local.get $2
      local.get $1
      i32.const 21168
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
      local.tee $1
      i32.store $0 offset=52
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=24
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load $0 offset=24
      local.tee $0
      i32.store $0 offset=16
      local.get $1
      local.get $0
      call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
     else
      i32.const 21200
      i32.const 20832
      i32.const 176
      i32.const 21
      call $~lib/builtins/abort
      unreachable
     end
    else
     global.get $~lib/memory/__stack_pointer
     call $~lib/map/Map<~lib/string/String,i64>#constructor
     local.tee $2
     i32.store $0 offset=56
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load $0 offset=24
     local.tee $3
     i32.store $0 offset=16
     local.get $2
     local.get $3
     call $assembly/eventQueue/eventQueue/EventQueue#addEvalReasonToVariationAggMap
     global.get $~lib/memory/__stack_pointer
     call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>#constructor
     local.tee $3
     i32.store $0 offset=60
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 21168
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=16
     local.get $3
     i32.const 21168
     local.get $2
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 21168
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=16
     local.get $1
     i32.const 21168
     local.get $3
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     local.get $0
     local.get $0
     i32.load $0 offset=16
     i32.const 1
     i32.add
     i32.store $0 offset=16
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const -64
   i32.sub
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  call $assembly/managers/eventQueueManager/getEventQueue
  local.tee $5
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.load $0 offset=4
  local.tee $0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 6688
  i32.const 6816
  local.get $2
  select
  local.tee $0
  i32.store $0 offset=12
  local.get $4
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $6
  i32.store $0 offset=16
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $6
   i32.store $0
   local.get $4
   i32.const 20672
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=28
   local.get $4
   local.get $2
   i32.load $0 offset=24
   local.tee $2
   i32.store $0 offset=24
   local.get $4
   local.get $2
   i32.load $0
   local.tee $2
   i32.store $0 offset=20
   local.get $6
   i32.const 20672
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $6
   i32.store $0
   local.get $2
   i32.const 20672
   i32.store $0 offset=8
   local.get $2
   i32.const 4432
   i32.store $0 offset=20
   local.get $6
   i32.const 20672
   i32.const 4432
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  local.get $6
  i32.store $0 offset=32
  local.get $2
  local.get $0
  local.get $3
  i32.const 0
  f64.const nan:0x8000000000000
  local.get $6
  call $assembly/types/dvcEvent/DVCEvent#constructor
  local.tee $2
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 6688
  i32.store $0 offset=8
  local.get $0
  i32.const 6688
  call $~lib/string/String.__eq
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  local.get $5
  local.get $2
  local.get $1
  local.get $0
  call $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/_variableForDVCUser (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  call $assembly/managers/configDataManager/_getConfigData
  local.tee $6
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  local.get $0
  call $assembly/managers/clientCustomDataManager/_getClientCustomData
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  local.get $7
  local.get $6
  local.get $1
  local.get $2
  local.get $5
  call $assembly/bucketing/bucketing/_generateBucketedVariableForUser
  local.tee $1
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0
  else
   i32.const 0
  end
  local.tee $5
  i32.store $0 offset=28
  i32.const 0
  local.get $5
  local.get $5
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.load $0 offset=8
   local.tee $5
   i32.store $0
   local.get $6
   i32.const 11632
   i32.store $0 offset=12
   i32.const 11632
   local.get $3
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $5
   local.get $3
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  select
  local.set $3
  local.get $4
  if
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $4
   i32.store $0 offset=32
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $4
    i32.store $0
    local.get $5
    local.get $2
    i32.store $0 offset=8
    local.get $5
    local.get $1
    i32.store $0 offset=40
    local.get $5
    local.get $1
    i32.load $0 offset=8
    local.tee $6
    i32.store $0 offset=36
    local.get $5
    local.get $6
    i32.load $0
    local.tee $6
    i32.store $0 offset=20
    local.get $5
    local.get $1
    i32.store $0 offset=40
    local.get $5
    local.get $1
    i32.load $0 offset=4
    local.tee $1
    i32.store $0 offset=36
    local.get $5
    local.get $1
    i32.load $0
    local.tee $1
    i32.store $0 offset=36
    local.get $6
    local.get $1
    call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=12
    local.get $4
    local.get $2
    local.get $1
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $4
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $1
   local.get $2
   i32.store $0 offset=16
   local.get $0
   local.get $4
   local.get $3
   local.get $2
   call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  i32.const 12
  i32.const 163
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $3
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (result i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $9
  i64.const 0
  i64.store $0
  local.get $9
  i32.const 0
  i32.store $0 offset=8
  local.get $9
  i32.const 40
  i32.const 164
  call $~lib/rt/itcms/__new
  local.tee $9
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $10
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=4
  local.get $10
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $10
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store8 $0 offset=12
  local.get $10
  local.get $9
  i32.store $0 offset=4
  local.get $9
  f64.const 0
  f64.store $0 offset=16
  local.get $10
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store $0 offset=4
  local.get $9
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.tee $10
  local.get $9
  i32.store $0 offset=4
  local.get $10
  local.get $0
  i32.store $0 offset=8
  local.get $9
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $9
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $9
  i32.store $0 offset=4
  local.get $9
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $9
  i32.store $0 offset=4
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $9
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $9
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $9
  i32.store $0 offset=4
  local.get $9
  local.get $3
  i32.store8 $0 offset=12
  local.get $0
  local.get $9
  i32.store $0 offset=4
  local.get $9
  local.get $4
  f64.store $0 offset=16
  local.get $0
  local.get $9
  i32.store $0 offset=4
  local.get $0
  local.get $5
  i32.store $0 offset=8
  local.get $9
  local.get $5
  i32.store $0 offset=24
  local.get $5
  if
   local.get $9
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $9
  i32.store $0 offset=4
  local.get $0
  local.get $6
  i32.store $0 offset=8
  local.get $9
  local.get $6
  i32.store $0 offset=28
  local.get $6
  if
   local.get $9
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $9
  i32.store $0 offset=4
  local.get $0
  local.get $7
  i32.store $0 offset=8
  local.get $9
  local.get $7
  i32.store $0 offset=32
  local.get $7
  if
   local.get $9
   local.get $7
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $9
  i32.store $0 offset=4
  local.get $0
  local.get $8
  i32.store $0 offset=8
  local.get $9
  local.get $8
  i32.store $0 offset=36
  local.get $8
  if
   local.get $9
   local.get $8
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $assembly/types/protobuf-generated/NullableString/NullableString.encode (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 16
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load8_u $0 offset=4
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.encode (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.const 10
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   call $~lib/as-proto/assembly/Writer/Writer#string@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 16
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load $0 offset=4
   call $~lib/as-proto/assembly/Writer/Writer#int32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 26
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   call $~lib/as-proto/assembly/Writer/Writer#string@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 32
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.load8_u $0 offset=12
   call $~lib/as-proto/assembly/Writer/Writer#bool@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 41
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   f64.load $0 offset=16
   call $~lib/as-proto/assembly/Writer/Writer#double@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 50
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=24
   local.tee $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   call $~lib/as-proto/assembly/Writer/Writer#string@override
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=28
   local.tee $2
   i32.store $0 offset=12
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 58
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=32
   local.tee $2
   i32.store $0 offset=16
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 66
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=36
   local.tee $0
   i32.store $0 offset=20
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 74
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i32.const 0
    i32.store $0 offset=8
    local.get $2
    local.get $1
    i32.store $0
    local.get $1
    i32.const 10
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    call $~lib/as-proto/assembly/Writer/Writer#string@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 18
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=4
    local.tee $2
    i32.store $0 offset=4
    local.get $1
    local.get $2
    call $~lib/as-proto/assembly/Writer/Writer#string@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 26
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load $0 offset=8
    local.tee $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    call $~lib/as-proto/assembly/Writer/Writer#string@override
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   global.get $~lib/as-proto/assembly/Protobuf/WRITER
   local.tee $3
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.load $0 offset=4
   local.tee $2
   i32.store $0
   local.get $2
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0 offset=8
   local.tee $2
   i32.store $0
   local.get $2
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load $0 offset=12
   local.tee $2
   i32.store $0
   local.get $2
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/as-proto/assembly/Protobuf/WRITER
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   i32.const 2
   global.set $~argumentsLength
   local.get $0
   local.get $2
   local.get $1
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_none)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/as-proto/assembly/Protobuf/WRITER
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=12
   local.get $2
   local.get $3
   i32.load $0
   local.tee $2
   i32.store $0 offset=8
   local.get $2
   i32.load $0
   call $~lib/typedarray/Uint8Array#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $3
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.load $0 offset=8
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.load $0 offset=4
   i32.store $0 offset=4
   local.get $2
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $2
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/as-proto/assembly/Protobuf/WRITER
   local.tee $2
   i32.store $0 offset=4
   i32.const 2
   global.set $~argumentsLength
   local.get $0
   local.get $2
   local.get $1
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_none)
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/as-proto/assembly/Protobuf/WRITER
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $0
   local.get $1
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 21488
  i32.store $0 offset=4
  local.get $0
  i32.const 21488
  call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#toProtobuf (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 76
   memory.fill $0
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0
   local.get $1
   i32.const 2752
   i32.store $0 offset=4
   local.get $3
   i32.const 2752
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0 offset=16
    local.tee $1
    i32.store $0
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
   else
    i32.const 0
   end
   if (result i32)
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0 offset=4
     local.get $1
     local.get $0
     i32.load $0 offset=16
     local.tee $1
     i32.store $0 offset=12
     i32.const 0
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 134
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 21328
     i32.const 312
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
   else
    i32.const 0
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0
   local.get $3
   i32.const 2800
   i32.store $0 offset=4
   local.get $4
   i32.const 2800
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=16
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
   else
    i32.const 0
   end
   if (result f64)
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=16
     local.tee $3
     i32.store $0 offset=16
     i32.const 0
     local.get $3
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 135
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 21328
     i32.const 315
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    f64.convert_i64_s
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.load $0 offset=8
    local.tee $4
    i32.store $0
    local.get $3
    i32.const 2800
    i32.store $0 offset=4
    local.get $4
    i32.const 2800
    call $~lib/string/String.__eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=16
     local.tee $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
    else
     i32.const 0
    end
    if (result f64)
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=4
      local.get $3
      local.get $0
      i32.load $0 offset=16
      local.tee $3
      i32.store $0 offset=20
      i32.const 0
      local.get $3
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 124
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 21328
      i32.const 316
      i32.const 65
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
    else
     f64.const 0
    end
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0
   local.get $3
   i32.const 2720
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.const 2720
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=16
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
   else
    i32.const 0
   end
   if (result i32)
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=16
     local.tee $3
     i32.store $0 offset=24
     i32.const 0
     local.get $3
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 133
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 21328
     i32.const 318
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   else
    i32.const 0
   end
   local.tee $5
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0
   local.get $3
   i32.const 3648
   i32.store $0 offset=4
   local.get $3
   local.get $4
   i32.const 3648
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=16
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0 offset=16
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
   else
    i32.const 0
   end
   local.tee $6
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=40
   local.get $3
   local.get $0
   i32.load $0 offset=24
   local.tee $4
   i32.store $0 offset=36
   local.get $3
   local.get $4
   i32.load $0
   local.tee $4
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=40
   local.get $3
   local.get $0
   i32.load $0 offset=24
   local.tee $7
   i32.store $0 offset=36
   local.get $3
   local.get $7
   i32.load $0 offset=4
   local.tee $7
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=40
   local.get $3
   local.get $0
   i32.load $0 offset=24
   local.tee $8
   i32.store $0 offset=36
   local.get $3
   local.get $8
   i32.load $0 offset=8
   local.tee $8
   i32.store $0 offset=36
   local.get $3
   local.get $4
   local.get $7
   local.get $8
   call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor
   local.tee $7
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $8
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $9
   i64.const 0
   i64.store $0
   local.get $9
   local.get $4
   i32.store $0
   local.get $9
   i32.const 2752
   i32.store $0 offset=4
   local.get $4
   i32.const 2752
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $9
    local.get $4
    i32.store $0
    local.get $9
    i32.const 2800
    i32.store $0 offset=4
    local.get $4
    i32.const 2800
    call $~lib/string/String.__eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $4
     i32.store $0
     local.get $9
     i32.const 2720
     i32.store $0 offset=4
     local.get $4
     i32.const 2720
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 2
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $9
      local.get $4
      i32.store $0
      local.get $9
      i32.const 3648
      i32.store $0 offset=4
      local.get $4
      i32.const 3648
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i32.const 21424
       i32.store $0
       local.get $0
       local.get $4
       i32.store $0 offset=4
       i32.const 21424
       local.get $4
       call $~lib/string/String#concat
       i32.const 21328
       i32.const 306
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      i32.const 3
     end
    end
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.tee $9
   local.get $0
   i32.store $0 offset=48
   local.get $9
   local.get $0
   i32.load $0 offset=12
   local.tee $10
   i32.store $0 offset=36
   local.get $9
   local.get $5
   local.get $6
   local.get $5
   select
   local.tee $5
   i32.store $0 offset=64
   local.get $9
   local.get $5
   i32.const 7168
   local.get $5
   select
   local.tee $5
   i32.store $0 offset=48
   local.get $9
   i32.const 7168
   i32.store $0 offset=52
   i32.const 7168
   i32.const 1
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=20
   local.tee $9
   i32.store $0 offset=68
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.const 7168
   local.get $9
   select
   local.tee $9
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=20
   local.tee $0
   i32.store $0 offset=52
   local.get $9
   local.get $0
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=60
   local.get $3
   local.get $8
   local.get $4
   local.get $10
   local.get $1
   local.get $2
   local.get $5
   local.get $6
   local.get $0
   local.get $7
   call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor
   local.tee $0
   i32.store $0 offset=72
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/index/variableForUser_PB (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=8
   local.get $2
   i32.eqz
   if
    i32.const 20176
    i32.const 20080
    i32.const 149
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=12
   local.get $2
   call $assembly/types/dvcUser/DVCUser.fromPBUser
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $3
   local.get $2
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.tee $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $5
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $0
   i32.load $0 offset=8
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $__inlined_func$assembly/index/variableTypeFromPB
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $4
         br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/index/variableTypeFromPB
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       local.set $1
       br $__inlined_func$assembly/index/variableTypeFromPB
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 2
      local.set $1
      br $__inlined_func$assembly/index/variableTypeFromPB
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 3
     local.set $1
     br $__inlined_func$assembly/index/variableTypeFromPB
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20288
    i32.store $0
    local.get $4
    i32.const 10
    call $~lib/number/I32#toString
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 20288
    local.get $0
    call $~lib/string/String#concat
    i32.const 20080
    i32.const 125
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $6
   local.get $3
   local.get $2
   local.get $5
   local.get $1
   local.get $0
   i32.load8_u $0 offset=16
   call $assembly/index/_variableForDVCUser
   local.tee $0
   i32.store $0 offset=28
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $assembly/types/bucketedUserConfig/SDKVariable#toProtobuf
   else
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=12
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 12992
    i32.const 435
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.String
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21520
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 15872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21552
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21168
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21168
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21584
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21584
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 21616
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=20
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 21616
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/index/variableForUser (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $5
  local.get $1
  i32.store $0
  local.get $5
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/index/_variableForDVCUser
  local.tee $0
  i32.store $0 offset=16
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/bucketedUserConfig/SDKVariable#stringify
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/platformData/PlatformData#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 28
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 1600
  i32.store $0 offset=16
  local.get $0
  i32.const 1600
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 1648
  i32.store $0 offset=16
  local.get $0
  i32.const 1648
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 21856
  i32.store $0 offset=16
  local.get $0
  i32.const 21856
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=12
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 21904
  i32.store $0 offset=16
  local.get $0
  i32.const 21904
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=16
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 21952
  i32.store $0 offset=16
  local.get $0
  i32.const 21952
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=20
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 22000
  i32.store $0 offset=16
  local.get $0
  i32.const 22000
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=24
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/platformData/PlatformData.fromString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 21664
   i32.const 21776
   i32.const 24
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   block $is_instance
    local.get $1
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $0
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 21776
   i32.const 25
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  local.get $1
  call $assembly/types/platformData/PlatformData#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/platformData/PlatformData.fromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 22048
   i32.const 21776
   i32.const 17
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   block $is_instance
    local.get $1
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $0
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 21776
   i32.const 18
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  local.get $1
  call $assembly/types/platformData/PlatformData#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 134
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 12992
    i32.const 402
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/getJSONObjFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 22800
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=20
   i32.const 22800
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 22800
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   i32.const 22800
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 22800
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 22800
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 15312
   i32.const 5
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/PublicProject#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 16
   i32.const 66
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21520
   i32.store $0 offset=16
   local.get $0
   i32.const 21520
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 21552
   i32.store $0 offset=16
   local.get $0
   i32.const 21552
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 22400
   i32.store $0 offset=16
   local.get $0
   i32.const 22400
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   i32.const 22672
   i32.store $0 offset=20
   local.get $0
   i32.const 22672
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 1
   i32.const 67
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store8 $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 22464
   i32.store $0 offset=8
   local.get $0
   i32.const 22464
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.store $0 offset=8
    local.get $3
    i32.const 22464
    i32.store $0 offset=12
    local.get $3
    i32.const 24
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 0
    i32.const 24
    memory.fill $0
    local.get $3
    local.get $0
    i32.store $0
    local.get $3
    i32.const 22464
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.const 22464
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
    local.tee $3
    i32.store $0 offset=8
    local.get $3
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 22464
     i32.store $0 offset=12
     local.get $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
     local.tee $0
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 22624
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 22464
     i32.store $0 offset=20
     i32.const 22624
     i32.const 1
     i32.const 22464
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 22624
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=20
     i32.const 22624
     i32.const 3
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 22624
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=4
     i32.const 22624
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     i32.const 15312
     i32.const 12
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    local.get $0
    i32.store8 $0
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.const 0
    i32.store8 $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0 offset=12
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBody/PublicEnvironment#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 8
  i32.const 74
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 21552
  i32.store $0 offset=16
  local.get $0
  i32.const 21552
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    i32.const 0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    i32.const 132
    i32.ne
    br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr
    drop
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 12992
    i32.const 410
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/getJSONArrayFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=12
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 22928
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=20
   i32.const 22928
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 22928
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   i32.const 22928
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 22928
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 22928
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 15312
   i32.const 28
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 99
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/types/feature/Variation>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i64.const 0
  i64.store $0 offset=8
  local.get $0
  i32.const 16
  i32.const 80
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $1
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $2
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 94
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getJSONValueFromJSON (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 21168
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 21168
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $1
  i32.store $0 offset=8
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 21168
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 23136
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 21168
   i32.store $0 offset=20
   i32.const 23136
   i32.const 1
   i32.const 21168
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 23136
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   i32.const 23136
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 23136
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 23136
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 15312
   i32.const 172
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $assembly/types/feature/Variation#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 40
   memory.fill $0
   local.get $2
   i32.const 20
   i32.const 76
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21520
   i32.store $0 offset=16
   local.get $0
   i32.const 21520
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   i32.const 15408
   i32.store $0 offset=16
   local.get $0
   i32.const 15408
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   i32.const 21552
   i32.store $0 offset=16
   local.get $0
   i32.const 21552
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0 offset=8
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   i32.const 19936
   i32.store $0 offset=12
   local.get $0
   i32.const 19936
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.tee $3
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 78
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=12
   local.get $5
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=12
   local.get $0
   local.get $5
   i32.store $0
   local.get $5
   if
    local.get $0
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=4
   local.get $6
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 32
   i32.store $0 offset=8
   local.get $6
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=12
   local.get $6
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 24
   i32.const 79
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 3
   i32.store $0 offset=4
   local.get $6
   local.get $5
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0 offset=8
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 4
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $6
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $5
   i32.store $0 offset=28
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $3
      i32.store $0 offset=8
      local.get $4
      local.get $3
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $6
      i32.store $0 offset=32
      block $is_instance
       local.get $6
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $7
       i32.const 6
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 5
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 103
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 107
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 137
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 138
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 141
       i32.eq
       br_if $is_instance
       local.get $7
       i32.const 143
       i32.eq
       br_if $is_instance
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 23184
      i32.const 82
      i32.const 52
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $6
     i32.store $0 offset=8
     local.get $7
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $7
     i32.const 8
     i32.const 77
     call $~lib/rt/itcms/__new
     local.tee $7
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $7
     i32.const 0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     local.get $7
     i32.store $0 offset=4
     local.get $8
     local.get $7
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
     local.tee $7
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 23024
     i32.store $0 offset=16
     local.get $6
     i32.const 23024
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=8
     local.get $7
     local.get $8
     i32.store $0
     local.get $8
     if
      local.get $7
      local.get $8
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     local.get $7
     i32.store $0 offset=4
     local.get $8
     local.get $6
     i32.store $0 offset=12
     local.get $8
     i32.const 21168
     i32.store $0 offset=16
     local.get $6
     call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $7
     local.get $6
     i32.store $0 offset=4
     local.get $6
     if
      local.get $7
      local.get $6
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $7
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $0
     local.get $7
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.load $0
     local.tee $4
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=12
     local.get $5
     local.get $4
     local.get $7
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=8
   local.get $2
   local.get $5
   i32.store $0 offset=16
   local.get $5
   if
    local.get $2
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    local.get $1
    local.get $0
    i32.store $0 offset=4
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $1
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 23440
    i32.const 26
    i32.const 49
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 8
   i32.const 82
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21616
   i32.store $0 offset=16
   local.get $0
   i32.const 21616
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 23392
   i32.store $0 offset=16
   local.get $2
   i32.const 5952
   i32.store $0 offset=20
   local.get $0
   i32.const 23392
   i32.const 5952
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/AudienceFilter#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 71
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 1392
  i32.store $0 offset=20
  local.get $1
  i32.const 15872
  i32.const 1392
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/UserFilter#compileValues (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 76
   memory.fill $0
   local.get $1
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
   else
    i32.const 0
   end
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 76
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0
   local.get $4
   local.get $1
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.tee $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i64.const 0
    i64.store $0
    local.get $5
    i64.const 0
    i64.store $0 offset=8
    local.get $5
    i32.const 16
    i32.const 152
    call $~lib/rt/itcms/__new
    local.tee $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=4
    local.get $6
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=8
    local.get $6
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=12
    local.get $6
    i32.const 8
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $6
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=12
    local.get $5
    local.get $6
    i32.store $0
    local.get $6
    if
     local.get $5
     local.get $6
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $5
    i32.store $0 offset=4
    local.get $5
    local.get $6
    i32.store $0 offset=4
    local.get $7
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 8
    i32.store $0 offset=8
    local.get $7
    local.get $5
    i32.store $0 offset=4
    local.get $5
    i32.const 0
    i32.store $0 offset=12
    local.get $7
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    local.get $5
    i32.store $0 offset=8
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $1
      i32.store $0
      local.get $4
      local.get $1
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $4
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      block $for-continue|0
       local.get $4
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        i32.const 24096
        i32.store $0 offset=16
        local.get $6
        i32.const 24256
        i32.store $0 offset=24
        local.get $6
        local.get $4
        i32.store $0 offset=32
        local.get $4
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0 offset=28
        i32.const 24256
        local.get $4
        call $~lib/string/String#concat
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0 offset=20
        i32.const 24096
        local.get $4
        call $~lib/string/String.__concat
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        local.get $4
        call $~lib/console/console.log
        br $for-continue|0
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $5
       i32.store $0
       block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
        local.get $6
        local.get $4
        i32.store $0 offset=36
        i32.const 0
        local.get $4
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 134
        i32.ne
        br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 18336
        i32.const 247
        i32.const 34
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=16
       local.get $4
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
       local.set $4
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 33780
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       i32.const 0
       i32.store $0
       local.get $6
       local.get $5
       i32.store $0
       local.get $5
       local.get $5
       i32.load $0 offset=12
       local.tee $6
       i32.const 1
       i32.add
       local.tee $7
       i32.const 0
       i32.const 1
       call $~lib/array/ensureCapacity
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $6
       local.get $5
       i32.load $0 offset=4
       i32.add
       local.get $4
       i32.store8 $0
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       local.get $5
       local.get $7
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    local.get $1
    local.get $5
    i32.store $0 offset=16
    local.get $0
    local.get $5
    i32.store $0 offset=24
    local.get $5
    if
     local.get $0
     local.get $5
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $~lib/array/Array<~lib/string/String>#constructor
     local.tee $4
     i32.store $0 offset=40
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $1
       i32.store $0
       local.get $5
       local.get $1
       local.get $2
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.tee $5
       i32.store $0 offset=44
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0
       block $for-continue|1
        local.get $5
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
        i32.eqz
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $6
         i32.const 24096
         i32.store $0 offset=16
         local.get $6
         i32.const 24320
         i32.store $0 offset=24
         local.get $6
         local.get $5
         i32.store $0 offset=32
         local.get $5
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0 offset=28
         i32.const 24320
         local.get $5
         call $~lib/string/String#concat
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0 offset=20
         i32.const 24096
         local.get $5
         call $~lib/string/String.__concat
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0
         local.get $5
         call $~lib/console/console.log
         br $for-continue|1
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $6
        local.get $4
        i32.store $0
        block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
         local.get $6
         local.get $5
         i32.store $0 offset=48
         i32.const 0
         local.get $5
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 133
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 18336
         i32.const 261
         i32.const 36
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=20
        local.get $5
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
        local.set $5
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store $0 offset=16
        local.get $4
        local.get $5
        call $~lib/array/Array<~lib/string/String>#push
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store $0
     local.get $1
     local.get $4
     i32.store $0 offset=16
     local.get $0
     local.get $4
     i32.store $0 offset=20
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
     if (result i32)
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $4
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      i64.const 0
      i64.store $0
      local.get $5
      i64.const 0
      i64.store $0 offset=8
      local.get $5
      i32.const 16
      i32.const 62
      call $~lib/rt/itcms/__new
      local.tee $5
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 0
      i32.store $0 offset=4
      local.get $6
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 0
      i32.store $0 offset=8
      local.get $6
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 0
      i32.store $0 offset=12
      local.get $6
      i32.const 64
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $6
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=12
      local.get $5
      local.get $6
      i32.store $0
      local.get $6
      if
       local.get $5
       local.get $6
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $5
      i32.store $0 offset=4
      local.get $5
      local.get $6
      i32.store $0 offset=4
      local.get $7
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 64
      i32.store $0 offset=8
      local.get $7
      local.get $5
      i32.store $0 offset=4
      local.get $5
      i32.const 0
      i32.store $0 offset=12
      local.get $7
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $4
      local.get $5
      i32.store $0 offset=52
      loop $for-loop|2
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       call $~lib/array/Array<~lib/string/String>#get:length
       local.get $2
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $1
        i32.store $0
        local.get $4
        local.get $1
        local.get $2
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.tee $4
        i32.store $0 offset=56
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $4
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat
        if (result i32)
         block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=60
          i32.const 0
          local.get $4
          i32.const 8
          i32.sub
          i32.load $0
          i32.const 124
          i32.ne
          br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Float
          drop
          i32.const 1
         end
         i32.eqz
         if
          i32.const 8352
          i32.const 18336
          i32.const 269
          i32.const 47
          call $~lib/builtins/abort
          unreachable
         end
         local.get $4
        else
         i32.const 0
        end
        local.tee $6
        i32.store $0 offset=64
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        local.get $4
        i32.store $0
        local.get $7
        local.get $4
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
        if (result i32)
         block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=68
          i32.const 0
          local.get $4
          i32.const 8
          i32.sub
          i32.load $0
          i32.const 135
          i32.ne
          br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
          drop
          i32.const 1
         end
         i32.eqz
         if
          i32.const 8352
          i32.const 18336
          i32.const 270
          i32.const 47
          call $~lib/builtins/abort
          unreachable
         end
         local.get $4
        else
         i32.const 0
        end
        local.tee $7
        i32.store $0 offset=72
        block $for-continue|2
         local.get $6
         local.get $7
         i32.or
         i32.eqz
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $6
          i32.const 24096
          i32.store $0 offset=16
          local.get $6
          i32.const 24400
          i32.store $0 offset=24
          local.get $6
          local.get $4
          i32.store $0 offset=32
          local.get $4
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=28
          i32.const 24400
          local.get $4
          call $~lib/string/String#concat
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0 offset=20
          i32.const 24096
          local.get $4
          call $~lib/string/String.__concat
          local.set $4
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store $0
          local.get $4
          call $~lib/console/console.log
          br $for-continue|2
         end
         local.get $6
         if (result f64)
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
         else
          local.get $7
          if (result f64)
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store $0
           local.get $7
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
           f64.convert_i64_s
          else
           f64.const nan:0x8000000000000
          end
         end
         local.tee $3
         local.get $3
         f64.eq
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $4
          local.get $5
          i32.store $0
          local.get $4
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $4
          i32.const 0
          i32.store $0
          local.get $4
          local.get $5
          i32.store $0
          local.get $5
          local.get $5
          i32.load $0 offset=12
          local.tee $4
          i32.const 1
          i32.add
          local.tee $6
          i32.const 3
          i32.const 1
          call $~lib/array/ensureCapacity
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0
          local.get $5
          i32.load $0 offset=4
          local.get $4
          i32.const 3
          i32.shl
          i32.add
          local.get $3
          f64.store $0
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0
          local.get $5
          local.get $6
          i32.store $0 offset=12
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
         end
        end
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        br $for-loop|2
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      local.get $5
      i32.store $0 offset=16
      local.get $0
      local.get $5
      i32.store $0 offset=28
      local.get $5
      if
       local.get $0
       local.get $5
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      i32.const 24480
      i32.store $0
      local.get $0
      local.get $4
      i32.store $0 offset=20
      local.get $4
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=16
      i32.const 24480
      local.get $0
      call $~lib/string/String#concat
      i32.const 18336
      i32.const 286
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/UserFilter#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 151
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store8 $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=28
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $0
  local.get $1
  call $assembly/types/target/AudienceFilter#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 24064
  i32.store $0 offset=16
  local.get $1
  i32.const 24064
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  i32.const 24016
  i32.store $0 offset=16
  local.get $2
  i32.const 1920
  i32.store $0 offset=20
  local.get $1
  i32.const 24016
  i32.const 1920
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $2
  i32.store $0 offset=4
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  i32.const 23392
  i32.store $0 offset=16
  local.get $2
  i32.const 2592
  i32.store $0 offset=20
  local.get $1
  i32.const 23392
  i32.const 2592
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  i32.const 2592
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.load $0 offset=12
  local.tee $1
  i32.store $0 offset=12
  local.get $0
  i32.const 2592
  local.get $1
  call $~lib/array/Array<~lib/string/String>#includes
  i32.store8 $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  call $assembly/types/target/UserFilter#compileValues
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/CustomDataFilter#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 40
  i32.const 153
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $1
  local.get $0
  call $assembly/types/target/UserFilter#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 24576
  i32.store $0 offset=16
  local.get $0
  i32.const 24576
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=36
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 24624
  i32.store $0 offset=16
  local.get $2
  i32.const 2864
  i32.store $0 offset=20
  local.get $0
  i32.const 24624
  i32.const 2864
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=32
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/target/AudienceFilterOrOperator#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 8
   i32.const 70
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 23792
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 1152
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 40
   memory.fill $0
   local.get $4
   local.get $0
   local.tee $1
   i32.store $0
   local.get $4
   i32.const 23792
   i32.store $0 offset=4
   local.get $4
   local.get $1
   i32.const 23792
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
   local.tee $5
   i32.store $0 offset=8
   block $__inlined_func$assembly/helpers/jsonHelpers/isValidStringOptional
    local.get $5
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$assembly/helpers/jsonHelpers/isValidStringOptional
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $5
    i32.store $0
    local.get $0
    local.get $5
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.tee $0
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 1152
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    i32.const 1152
    local.get $0
    call $~lib/array/Array<~lib/string/String>#includes
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $5
     i32.store $0 offset=4
     local.get $4
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
     local.tee $4
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 23792
     i32.store $0 offset=32
     global.get $~lib/memory/__stack_pointer
     i32.const 23968
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=36
     i32.const 23968
     i32.const 1
     local.get $4
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 23968
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 23792
     i32.store $0 offset=36
     i32.const 23968
     i32.const 3
     i32.const 23792
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 23968
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=24
     i32.const 23968
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0
     local.get $4
     call $~lib/console/console.log
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $2
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=20
    local.get $1
    call $assembly/types/target/AudienceOperator#constructor
   else
    i32.const 0
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $3
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $0
   if
    i32.const 0
    local.set $0
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=12
    local.get $0
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i64.const 0
    i64.store $0 offset=8
    local.get $0
    local.get $1
    i32.store $0 offset=8
    local.get $0
    i32.const 15872
    i32.store $0 offset=12
    local.get $1
    i32.const 15872
    call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 1232
    i32.store $0 offset=4
    local.get $0
    i32.const 1232
    call $~lib/string/String.__eq
    if
     block $__inlined_func$assembly/types/target/initializeFilterClass (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.store $0 offset=8
      local.get $0
      i32.const 24016
      i32.store $0 offset=12
      local.get $1
      i32.const 24016
      call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 1808
      i32.store $0 offset=4
      local.get $0
      i32.const 1808
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=4
       local.get $1
       call $assembly/types/target/CustomDataFilter#constructor
       br $__inlined_func$assembly/types/target/initializeFilterClass
      end
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      i32.const 0
      local.get $1
      call $assembly/types/target/UserFilter#constructor
     end
     local.set $0
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0 offset=8
     local.get $0
     i32.const 15872
     i32.store $0 offset=12
     local.get $1
     i32.const 15872
     call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 1296
     i32.store $0 offset=4
     local.get $0
     i32.const 1296
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.store $0 offset=4
      local.get $0
      i32.const 24
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner2
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      i32.const 0
      i32.const 24
      memory.fill $0
      local.get $0
      i32.const 13
      i32.const 148
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.const 0
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.const 0
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=4
      local.get $0
      i32.const 0
      i32.store8 $0 offset=12
      local.get $2
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $1
      i32.store $0 offset=8
      local.get $2
      local.get $0
      local.get $1
      call $assembly/types/target/AudienceFilter#constructor
      local.tee $0
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 24672
      i32.store $0 offset=16
      local.get $1
      i32.const 24672
      call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $0
      local.get $2
      i32.store $0 offset=4
      local.get $2
      if
       local.get $0
       local.get $2
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $1
      i32.store $0 offset=12
      local.get $2
      i32.const 15872
      i32.store $0 offset=16
      i32.const 1
      i32.const 2
      i32.const 4
      i32.const 24720
      call $~lib/rt/__newArray
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=20
      local.get $1
      i32.const 15872
      local.get $2
      i32.const 0
      call $assembly/helpers/jsonHelpers/isValidString
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $0
      local.get $2
      i32.store $0
      local.get $2
      if
       local.get $0
       local.get $2
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $1
      i32.store $0 offset=12
      local.get $2
      i32.const 23392
      i32.store $0 offset=16
      local.get $2
      i32.const 2672
      i32.store $0 offset=20
      local.get $1
      i32.const 23392
      i32.const 2672
      i32.const 0
      call $assembly/helpers/jsonHelpers/isValidString
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=8
      local.get $0
      local.get $1
      i32.store $0 offset=8
      local.get $1
      if
       local.get $0
       local.get $1
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=4
      local.get $1
      i32.const 2672
      i32.store $0 offset=8
      local.get $1
      local.get $0
      i32.store $0 offset=16
      local.get $1
      local.get $0
      i32.load $0 offset=8
      local.tee $1
      i32.store $0 offset=12
      local.get $0
      i32.const 2672
      local.get $1
      call $~lib/array/Array<~lib/string/String>#includes
      i32.store8 $0 offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      i32.const 0
      local.get $1
      call $assembly/types/target/AudienceFilter#constructor
      local.set $0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/AudienceOperator#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $2
  i32.const 8
  i32.const 69
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 23792
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 1152
  i32.store $0 offset=20
  local.get $0
  i32.const 23792
  i32.const 1152
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  i32.const 23840
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 23840
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  i32.const 0
  i32.const 2
  i32.const 72
  i32.const 23888
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=12
    local.get $3
    local.get $2
    i32.load $0 offset=4
    local.tee $4
    i32.store $0 offset=4
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
     local.get $3
     local.get $0
     i32.store $0 offset=20
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=16
     local.get $3
     local.get $5
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $3
     i32.store $0 offset=28
     block $is_instance
      local.get $3
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $5
      i32.const 6
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 5
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 103
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 107
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 137
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 138
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 141
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 143
      i32.eq
      br_if $is_instance
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 18336
     i32.const 133
     i32.const 60
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    local.get $3
    call $assembly/types/target/AudienceFilterOrOperator#constructor
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $4
    local.get $3
    call $~lib/array/Array<~lib/string/String>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/Audience#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 4
  i32.const 68
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 23840
  i32.store $0 offset=16
  local.get $0
  i32.const 23840
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $assembly/types/target/AudienceOperator#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/target/Rollout#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 18336
   i32.const 391
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/target/RolloutStage#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/Rollout#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $2
   i32.const 24
   i32.const 88
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   f64.const 0
   f64.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 15872
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 3088
   i32.store $0 offset=20
   local.get $0
   i32.const 15872
   i32.const 3088
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $5
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $5
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $5
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $2
   i32.const 24848
   i32.store $0 offset=12
   local.get $5
   local.get $0
   i32.const 24848
   f64.const 1
   call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
   f64.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24912
   i32.store $0 offset=16
   local.get $0
   i32.const 24912
   call $assembly/helpers/jsonHelpers/getDateFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $5
   local.get $2
   i32.store $0 offset=16
   local.get $2
   if
    local.get $5
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 24960
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.const 24960
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
   local.tee $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 24992
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i64.const 0
    i64.store $0 offset=8
    local.get $0
    local.get $7
    i32.store $0
    local.get $0
    local.get $7
    i32.load $0 offset=12
    local.tee $2
    i32.const 2
    i32.const 90
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $3
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $1
     local.get $2
     local.get $7
     i32.load $0 offset=12
     local.tee $4
     local.get $2
     local.get $4
     i32.lt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $8
      local.get $7
      i32.store $0 offset=8
      local.get $8
      local.get $1
      i32.const 2
      i32.shl
      local.tee $4
      local.get $7
      i32.load $0 offset=4
      i32.add
      i32.load $0
      local.tee $6
      i32.store $0
      local.get $8
      local.get $7
      i32.store $0 offset=8
      i32.const 3
      global.set $~argumentsLength
      local.get $8
      local.get $6
      local.get $1
      local.get $7
      i32.const 24992
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      local.tee $6
      i32.store $0 offset=12
      local.get $3
      local.get $4
      i32.add
      local.get $6
      i32.store $0
      local.get $6
      if
       local.get $0
       local.get $6
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 0
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0 offset=20
   local.get $0
   if
    local.get $5
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/TargetDistribution#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 16
  i32.const 91
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  f64.const 0
  f64.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 23648
  i32.store $0 offset=16
  local.get $0
  i32.const 23648
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
  local.get $2
  i32.const 15904
  i32.store $0 offset=12
  local.get $1
  local.get $0
  call $assembly/helpers/jsonHelpers/getF64FromJSONObj
  f64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/targetV2/TargetV2#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 19232
   i32.const 32
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/target/TargetDistribution#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.const 2
  i32.const 92
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.load $0 offset=4
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $0
    i32.store $0 offset=8
    local.get $7
    local.get $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $0
    i32.load $0 offset=4
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $7
    local.get $0
    i32.store $0 offset=8
    i32.const 3
    global.set $~argumentsLength
    local.get $7
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $5
    i32.store $0 offset=12
    local.get $4
    local.get $8
    i32.add
    local.get $5
    i32.store $0
    local.get $5
    if
     local.get $6
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 8
  i32.const 169
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $3
   local.get $2
   call $~lib/string/String#charCodeAt
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $3
   local.get $2
   call $~lib/string/String#charCodeAt
   local.get $4
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $2
    local.get $3
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
   else
    i32.const 0
   end
   if
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0
  local.get $3
  local.get $2
  call $~lib/string/String#charCodeAt
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $3
  i32.store $0
  local.get $3
  local.get $2
  call $~lib/string/String#charCodeAt
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $0
  local.get $2
  call $~lib/string/String#charCodeAt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/string/String#charCodeAt
  i32.sub
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $8
  loop $for-loop|0
   local.get $2
   local.get $8
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $0
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    local.tee $5
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $7
    local.get $5
    i32.load $0 offset=4
    local.tee $5
    i32.store $0 offset=4
    local.get $5
    local.set $6
    local.get $7
    local.get $5
    i32.store $0 offset=8
    local.get $7
    local.get $3
    i32.store $0 offset=12
    local.get $7
    local.get $3
    i32.store $0 offset=16
    local.get $7
    local.get $5
    i32.store $0 offset=20
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $5
    local.get $4
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $3
     local.tee $6
     i32.store $0 offset=8
     local.get $7
     local.get $5
     local.tee $3
     i32.store $0 offset=12
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $9
    loop $while-continue|1
     local.get $1
     local.get $9
     i32.le_s
     if
      block $while-break|1
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $7
       i32.store $0
       local.get $5
       local.get $7
       i32.store $0 offset=16
       local.get $5
       local.get $3
       i32.store $0 offset=20
       i32.const 2
       global.set $~argumentsLength
       local.get $7
       local.get $3
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.get $7
       i32.store $0 offset=8
       local.get $9
       i32.const 1
       i32.sub
       local.set $9
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store $0 offset=8
    loop $while-continue|2
     local.get $1
     local.get $9
     i32.le_s
     if
      block $while-break|2
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.store $0
       local.get $5
       local.get $3
       i32.store $0 offset=16
       local.get $5
       local.get $6
       i32.store $0 offset=20
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $6
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store $0 offset=4
       local.get $9
       i32.const 1
       i32.sub
       local.set $9
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    i32.store $0 offset=4
    local.get $8
    i32.const 2
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $5
  i32.store $0
  local.get $4
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $6
  i32.store $0 offset=4
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $7
     i32.load $0 offset=4
     local.tee $5
     i32.store $0
     local.get $6
     local.get $7
     i32.load $0
     local.tee $6
     i32.store $0 offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $6
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     local.tee $5
     i32.store $0 offset=8
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     i32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=4
     local.tee $6
     i32.store $0
     local.get $1
     local.get $5
     i32.load $0
     local.tee $1
     i32.store $0 offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $1
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i64.const 0
  i64.store $0
  local.get $6
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.add
  local.set $7
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $1
   local.get $6
   i32.lt_s
   if
    local.get $6
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load $0
    i32.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $7
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $9
    i32.store $0
    local.get $8
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    i32.store $0 offset=4
    local.get $8
    local.get $9
    i32.store $0 offset=8
    local.get $8
    local.get $7
    i32.store $0 offset=12
    i32.const 2
    global.set $~argumentsLength
    local.get $9
    local.get $7
    local.get $5
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $9
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store $0
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $1
      local.get $0
      i32.load $0 offset=4
      local.tee $4
      i32.store $0 offset=4
      local.get $1
      local.get $3
      i32.store $0 offset=8
      local.get $1
      local.get $4
      i32.store $0 offset=12
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $4
      local.get $3
      local.get $3
      local.get $4
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $4
      local.get $1
      select
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0 offset=8
      local.tee $3
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=12
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $3
      local.get $4
      select
      i32.store $0 offset=8
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0 offset=16
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=20
     local.get $1
     local.get $3
     i32.store $0 offset=8
     local.get $1
     local.get $4
     i32.store $0 offset=12
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $4
     local.get $3
     local.get $3
     local.get $4
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     i32.store $0
     local.get $0
     local.get $3
     local.get $4
     local.get $1
     select
     i32.store $0 offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=24
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.gt_u
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=28
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   local.tee $5
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=24
    local.get $0
    i32.const 0
    i32.const 31
    local.get $9
    local.get $9
    i32.const 31
    i32.ge_s
    select
    local.tee $5
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   end
   i32.const 0
   local.set $4
   i32.const 0
   local.set $1
   loop $while-continue|2
    local.get $5
    local.get $9
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=28
     local.get $0
     local.get $5
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     local.tee $3
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=24
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $3
      local.get $3
      local.get $9
      i32.gt_s
      select
      local.tee $3
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     end
     local.get $1
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $3
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $4
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $4
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $4
        i32.const 2
        i32.shl
        local.tee $14
        local.get $11
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=32
        local.get $0
        local.get $8
        local.get $1
        local.get $5
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
        local.get $10
        local.get $14
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $1
       end
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $4
     local.get $10
     i32.add
     local.get $1
     i32.store $0
     local.get $4
     local.get $11
     i32.add
     local.get $5
     i32.store $0
     local.get $6
     local.set $1
     local.get $3
     local.set $5
     local.get $7
     local.set $4
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $4
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $1
     i32.const -1
     i32.ne
     if
      local.get $11
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=32
      local.get $0
      local.get $1
      local.get $3
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     end
     local.get $4
     i32.const 1
     i32.sub
     local.set $4
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#sort (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  local.set $3
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $4
  local.get $1
  call $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/types/target/TargetDistribution>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $2
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $4
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   local.get $4
   i32.const 1
   i32.gt_u
   if
    local.get $4
    i32.const 1
    i32.shr_u
    local.set $5
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    loop $while-continue|0
     local.get $1
     local.get $5
     i32.lt_u
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $6
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $6
      local.get $2
      local.get $4
      local.get $1
      i32.sub
      i32.const 2
      i32.shl
      i32.add
      local.tee $6
      i32.load $0
      i32.store $0
      local.get $6
      local.get $3
      i32.store $0
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  i32.const 25216
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.const 25216
  call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#sort
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 92
  i32.const 25248
  call $~lib/rt/__newArray
  local.tee $0
  i32.store $0 offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=20
    local.get $2
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=4
    local.tee $3
    i32.store $0 offset=4
    local.get $0
    local.get $3
    call $~lib/array/Array<~lib/string/String>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 25184
  i32.store $0
  local.get $1
  i32.const 25184
  i32.store $0 offset=4
  i32.const 25184
  i32.const 25184
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<assembly/types/target/TargetDistribution>#reverse
   local.set $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/targetV2/TargetV2#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 52
  memory.fill $0
  local.get $2
  i32.const 24
  i32.const 87
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=16
  local.get $3
  i32.const 24752
  i32.store $0 offset=20
  local.get $0
  i32.const 24752
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/target/Audience#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  i32.const 24800
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 24800
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $3
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $3
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/target/Rollout#constructor
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  i32.const 25024
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 25024
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $3
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 25072
  i32.store $0 offset=8
  local.get $4
  local.get $3
  i32.const 25072
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution>
  local.tee $3
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 170
  i32.const 25104
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $4
    i32.store $0 offset=4
    local.get $5
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor
    local.tee $5
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=20
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=16
    local.get $5
    local.get $6
    i32.store $0 offset=4
    local.get $6
    if
     local.get $5
     local.get $6
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $5
    i32.store $0 offset=12
    local.get $6
    local.get $3
    i32.store $0 offset=44
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.load $0
    local.tee $6
    i32.store $0 offset=16
    local.get $5
    local.get $6
    i32.store $0
    local.get $6
    if
     local.get $5
     local.get $6
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $4
    local.get $5
    call $~lib/array/Array<~lib/string/String>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  i32.const 25136
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.const 25136
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store $0 offset=48
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  else
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   i32.const 1440
   i32.store $0 offset=8
   local.get $2
   i32.const 1440
   i32.store $0 offset=16
   local.get $2
   i32.const 1440
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $4
  i32.store $0 offset=12
  local.get $0
  i32.const 25184
  i32.store $0 offset=16
  local.get $4
  call $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 23440
   i32.const 33
   i32.const 81
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/targetV2/TargetV2#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $4
   i32.const 20
   i32.const 81
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21520
   i32.store $0 offset=16
   local.get $0
   i32.const 21520
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $6
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $6
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   i32.const 23344
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.const 23344
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
   local.tee $4
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $4
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=24
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 23552
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i64.const 0
    i64.store $0 offset=8
    local.get $2
    local.get $7
    i32.store $0
    local.get $2
    local.get $7
    i32.load $0 offset=12
    local.tee $8
    i32.const 2
    i32.const 83
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $2
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=4
    local.set $9
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $3
     local.get $8
     local.get $7
     i32.load $0 offset=12
     local.tee $4
     local.get $4
     local.get $8
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $7
      i32.store $0 offset=8
      local.get $4
      local.get $3
      i32.const 2
      i32.shl
      local.tee $5
      local.get $7
      i32.load $0 offset=4
      i32.add
      i32.load $0
      local.tee $10
      i32.store $0
      local.get $4
      local.get $7
      i32.store $0 offset=8
      i32.const 3
      global.set $~argumentsLength
      local.get $4
      local.get $10
      local.get $3
      local.get $7
      i32.const 23552
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      local.tee $4
      i32.store $0 offset=12
      local.get $5
      local.get $9
      i32.add
      local.get $4
      i32.store $0
      local.get $4
      if
       local.get $2
       local.get $4
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $6
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $6
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 23584
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.const 23584
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
   local.tee $2
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $2
    i32.store $0 offset=16
    local.get $1
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $1
    i32.const 8
    i32.const 84
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 23648
    i32.store $0 offset=16
    local.get $2
    i32.const 23648
    call $assembly/helpers/jsonHelpers/getStringFromJSON
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $1
    local.get $3
    i32.store $0
    local.get $3
    if
     local.get $1
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=12
    local.get $3
    i32.const 23696
    i32.store $0 offset=16
    local.get $2
    i32.const 23696
    call $assembly/helpers/jsonHelpers/getDateFromJSON
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $1
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $6
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $6
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 23744
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.const 23744
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 25280
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $1
   i32.const 2
   i32.const 93
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=4
   local.set $4
   i32.const 0
   local.set $2
   loop $for-loop|05
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $2
    local.get $1
    local.get $0
    i32.load $0 offset=12
    local.tee $5
    local.get $1
    local.get $5
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     local.tee $7
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $8
     i32.store $0
     local.get $5
     local.get $0
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $5
     local.get $8
     local.get $2
     local.get $0
     i32.const 25280
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $5
     i32.store $0 offset=12
     local.get $4
     local.get $7
     i32.add
     local.get $5
     i32.store $0
     local.get $5
     if
      local.get $3
      local.get $5
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|05
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $6
   local.get $3
   i32.store $0 offset=16
   local.get $3
   if
    local.get $6
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $0
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureV2/FeatureV2#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $2
  i32.const 28
  i32.const 75
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  i32.const 15872
  i32.store $0 offset=16
  local.get $3
  i32.const 6048
  i32.store $0 offset=20
  local.get $0
  i32.const 15872
  i32.const 6048
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  i32.const 21552
  i32.store $0 offset=16
  local.get $0
  i32.const 21552
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=8
  local.get $3
  i32.const 22976
  i32.store $0 offset=12
  local.get $0
  i32.const 22976
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $3
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.tee $6
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  call $~lib/array/Array<assembly/types/feature/Variation>#constructor
  local.tee $3
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor
  local.tee $4
  i32.store $0 offset=32
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $6
     i32.store $0 offset=8
     local.get $7
     local.get $6
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $8
     i32.store $0 offset=36
     block $is_instance
      local.get $8
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $5
      i32.const 6
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 5
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 103
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 107
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 137
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 138
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 141
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 143
      i32.eq
      br_if $is_instance
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 23264
     i32.const 36
     i32.const 45
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $7
    local.get $8
    call $assembly/types/feature/Variation#constructor
    local.tee $5
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $3
    local.get $5
    call $~lib/array/Array<~lib/string/String>#push
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load $0
    local.tee $7
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $4
    local.get $7
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $4
  i32.store $0 offset=8
  local.get $2
  local.get $4
  i32.store $0 offset=24
  local.get $4
  if
   local.get $2
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  i32.const 25312
  i32.store $0 offset=20
  local.get $0
  i32.const 25312
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $assembly/types/featureConfigurationV2/FeatureConfigurationV2#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 22672
  i32.store $0 offset=16
  local.get $0
  i32.const 22672
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 73
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/types/configBody/Variable>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i64.const 0
  i64.store $0 offset=8
  local.get $0
  i32.const 16
  i32.const 97
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $1
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $2
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 98
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/configBody/Variable#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 12
  i32.const 96
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 15872
  i32.store $0 offset=16
  local.get $2
  i32.const 3728
  i32.store $0 offset=20
  local.get $0
  i32.const 15872
  i32.const 3728
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 21552
  i32.store $0 offset=16
  local.get $0
  i32.const 21552
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 112
   memory.fill $0
   local.get $3
   i32.const 40
   i32.const 65
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $4
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=20
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=12
   local.get $1
   i32.const 22352
   i32.store $0 offset=16
   local.get $0
   i32.const 22352
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=24
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 19664
   i32.store $0 offset=20
   local.get $0
   i32.const 19664
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   local.get $1
   call $assembly/types/configBody/PublicProject#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 19712
   i32.store $0 offset=20
   local.get $0
   i32.const 19712
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   local.get $1
   call $assembly/types/configBody/PublicEnvironment#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 19760
   i32.store $0 offset=12
   local.get $0
   i32.const 19760
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $1
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.tee $5
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 95
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $6
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $6
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $3
   i32.store $0 offset=4
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 32
   i32.store $0 offset=8
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $7
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $6
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor
   local.tee $7
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/featureV2/FeatureV2>#constructor
   local.tee $8
   i32.store $0 offset=36
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $5
      i32.store $0 offset=8
      local.get $1
      local.get $5
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store $0 offset=40
      block $is_instance
       local.get $3
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $9
       i32.const 6
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 5
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 103
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 107
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 137
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 138
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 141
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 143
       i32.eq
       br_if $is_instance
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 22272
      i32.const 78
      i32.const 43
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $1
     local.get $3
     call $assembly/types/featureV2/FeatureV2#constructor
     local.tee $9
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $6
     local.get $9
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.load $0
     local.tee $1
     i32.store $0 offset=8
     local.get $8
     local.get $1
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $8
      i32.store $0 offset=4
      local.get $1
      local.get $9
      i32.store $0 offset=16
      local.get $1
      local.get $9
      i32.load $0
      local.tee $3
      i32.store $0 offset=8
      local.get $1
      local.get $9
      i32.store $0 offset=12
      local.get $8
      local.get $3
      local.get $9
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     end
     i32.const 0
     local.set $3
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $9
      i32.store $0 offset=8
      local.get $1
      local.get $9
      i32.load $0 offset=12
      local.tee $1
      i32.store $0 offset=4
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $3
      i32.gt_s
      if
       i32.const 0
       local.set $1
       loop $for-loop|2
        global.get $~lib/memory/__stack_pointer
        local.tee $10
        local.get $9
        i32.store $0 offset=16
        local.get $10
        local.get $9
        i32.load $0 offset=12
        local.tee $10
        i32.store $0 offset=12
        local.get $10
        local.get $3
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.set $10
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load $0 offset=12
        local.tee $10
        i32.store $0 offset=4
        local.get $10
        call $~lib/array/Array<~lib/string/String>#get:length
        local.get $1
        i32.gt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $10
         local.get $7
         i32.store $0 offset=4
         local.get $10
         local.get $9
         i32.store $0 offset=52
         local.get $10
         local.get $9
         i32.load $0 offset=12
         local.tee $10
         i32.store $0 offset=48
         local.get $10
         local.get $3
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.set $10
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.store $0 offset=20
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.load $0 offset=12
         local.tee $10
         i32.store $0 offset=16
         local.get $10
         local.get $1
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.set $10
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.load $0
         local.tee $10
         i32.store $0 offset=8
         local.get $7
         local.get $10
         call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
         i32.eqz
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $10
          local.get $7
          i32.store $0 offset=4
          local.get $10
          local.get $9
          i32.store $0 offset=56
          local.get $10
          local.get $9
          i32.load $0 offset=12
          local.tee $10
          i32.store $0 offset=52
          local.get $10
          local.get $3
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $10
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0 offset=48
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.load $0 offset=12
          local.tee $10
          i32.store $0 offset=20
          local.get $10
          local.get $1
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $10
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.load $0
          local.tee $10
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $9
          i32.store $0 offset=12
          local.get $7
          local.get $10
          local.get $9
          call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
         end
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|2
        end
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|1
      end
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $4
   local.get $6
   i32.store $0 offset=12
   local.get $6
   if
    local.get $4
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=8
   local.get $4
   local.get $7
   i32.store $0 offset=36
   local.get $7
   if
    local.get $4
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 25360
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.const 25360
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
   local.tee $1
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
   local.tee $2
   i32.store $0 offset=64
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.tee $5
    i32.store $0 offset=68
    i32.const 0
    local.set $3
    loop $for-loop|3
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $3
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $5
      i32.store $0 offset=4
      local.get $6
      local.get $5
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $6
      i32.store $0 offset=72
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      local.get $6
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $7
      i32.store $0 offset=76
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj9 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=80
       global.get $~lib/memory/__stack_pointer
       local.set $8
       local.get $7
       i32.eqz
       if
        i32.const 8112
        i32.const 22272
        i32.const 117
        i32.const 57
        call $~lib/builtins/abort
        unreachable
       end
       local.get $8
       local.get $7
       i32.store $0 offset=84
       block $is_instance10
        local.get $7
        i32.const 8
        i32.sub
        i32.load $0
        local.tee $8
        i32.const 6
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 5
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 103
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 107
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 137
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 138
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 141
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 143
        i32.eq
        br_if $is_instance10
        i32.const 0
        br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj9
       end
       i32.const 1
      end
      i32.eqz
      if
       i32.const 8352
       i32.const 22272
       i32.const 117
       i32.const 57
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=20
      local.get $7
      call $assembly/types/target/Audience#constructor
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=12
      local.get $2
      local.get $6
      local.get $7
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|3
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 19936
   i32.store $0 offset=12
   local.get $0
   i32.const 19936
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.tee $0
   i32.store $0 offset=88
   global.get $~lib/memory/__stack_pointer
   call $~lib/array/Array<assembly/types/configBody/Variable>#constructor
   local.tee $2
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
   local.tee $3
   i32.store $0 offset=96
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
   local.tee $5
   i32.store $0 offset=100
   i32.const 0
   local.set $1
   loop $for-loop|4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj11 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $0
      i32.store $0 offset=8
      local.get $6
      local.get $0
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $7
      i32.store $0 offset=104
      block $is_instance12
       local.get $7
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $8
       i32.const 6
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 5
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 103
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 107
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 137
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 138
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 141
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 143
       i32.eq
       br_if $is_instance12
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj11
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 22272
      i32.const 130
      i32.const 43
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $6
     local.get $7
     call $assembly/types/configBody/Variable#constructor
     local.tee $6
     i32.store $0 offset=108
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $2
     local.get $6
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0 offset=8
     local.tee $7
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $3
     local.get $7
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0
     local.tee $7
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $5
     local.get $7
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|4
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=16
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $3
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=28
   local.get $3
   if
    local.get $4
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=32
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 112
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 22144
   i32.const 22272
   i32.const 33
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=12
   block $is_instance
    local.get $2
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $0
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 22272
   i32.const 37
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $2
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=20
  local.get $0
  local.get $1
  i32.store $0 offset=24
  local.get $2
  local.get $1
  call $assembly/types/configBodyV2/ConfigBodyV2#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/configBody/ConfigMetadata#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 8
   i32.const 173
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 8
   i32.const 174
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.store $0 offset=12
   local.get $4
   local.get $0
   i32.load $0
   local.tee $4
   i32.store $0 offset=8
   local.get $3
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $3
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $3
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.store $0 offset=12
   local.get $4
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $2
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 8
   i32.const 175
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=12
   local.get $3
   local.get $1
   i32.load $0
   local.tee $3
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $0
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=12
   local.get $3
   local.get $1
   i32.load $0 offset=4
   local.tee $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBody/ConfigMetadata#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 25408
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load $0
  local.tee $3
  i32.store $0 offset=16
  local.get $1
  i32.const 25408
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load $0 offset=4
  local.tee $3
  i32.store $0 offset=16
  local.get $1
  i32.const 21552
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $3
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 25408
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $4
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.load $0
  local.tee $4
  i32.store $0 offset=16
  local.get $3
  i32.const 25408
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=16
  local.get $3
  i32.const 21552
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 19664
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $2
  i32.const 19664
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 19712
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $2
  i32.const 19712
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/configDataManager/_setConfigData (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  global.get $assembly/managers/configDataManager/_configData
  local.tee $3
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/managers/configDataManager/_configMetadata
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $3
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=8
  local.tee $1
  i32.store $0 offset=20
  local.get $3
  local.get $1
  call $assembly/types/configBody/ConfigMetadata#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $assembly/types/configBody/ConfigMetadata#stringify
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/index/setConfigDataUTF8 (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.const 0
  call $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  call $assembly/managers/configDataManager/_setConfigData
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/configBodyV2/ConfigBodyV2.fromString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $2
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 22144
   i32.const 22272
   i32.const 47
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=12
   block $is_instance
    local.get $2
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $0
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $0
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 22272
   i32.const 51
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  local.get $2
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=20
  local.get $0
  local.get $1
  i32.store $0 offset=24
  local.get $2
  local.get $1
  call $assembly/types/configBodyV2/ConfigBodyV2#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 52
   memory.fill $0
   local.get $1
   i32.const 10
   i32.const 103
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 100
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store8 $0 offset=8
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store8 $0 offset=9
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 25968
    i32.const 26064
    i32.const 12
    i32.const 26
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=16
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 26064
    i32.const 13
    i32.const 25
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 26160
   i32.store $0 offset=24
   local.get $2
   local.get $0
   i32.const 26160
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
   local.tee $2
   i32.store $0 offset=28
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=24
    local.get $1
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
    i32.store8 $0 offset=8
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 26240
   i32.store $0 offset=24
   local.get $2
   local.get $0
   i32.const 26240
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getBool
   local.tee $2
   i32.store $0 offset=32
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=24
    local.get $1
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
    i32.store8 $0 offset=9
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 26320
   i32.store $0 offset=24
   local.get $2
   local.get $0
   i32.const 26320
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
   local.tee $0
   i32.store $0 offset=36
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=24
    local.get $2
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger
    if (result i32)
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      i32.const 0
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      i32.const 135
      i32.ne
      br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer
      drop
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 15312
      i32.const 189
      i32.const 39
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
    else
     i32.const 0
    end
    local.tee $2
    i32.store $0 offset=8
    local.get $2
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 26384
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=16
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#toString@override
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=12
     i32.const 26384
     local.get $0
     call $~lib/string/String#concat
     i32.const 15312
     i32.const 191
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Integer#valueOf
    i32.wrap_i64
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $0
    i32.store $0 offset=4
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.load $0 offset=4
   i32.const 10
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.load $0 offset=4
    i32.const 10
    call $~lib/number/I32#toString
    local.tee $0
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    i32.const 26656
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=44
    i32.const 26656
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 26656
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=24
    i32.const 26656
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 26064
    i32.const 30
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.load $0 offset=4
    i32.const 10000
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.load $0 offset=4
     i32.const 10
     call $~lib/number/I32#toString
     local.tee $0
     i32.store $0 offset=48
     global.get $~lib/memory/__stack_pointer
     i32.const 26768
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=44
     i32.const 26768
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 26768
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 7168
     i32.store $0 offset=24
     i32.const 26768
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     i32.const 26064
     i32.const 32
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 52
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 111
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 116
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/eventQueueManager/initEventQueue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/string/String.__not
   if
    i32.const 25568
    i32.const 20576
    i32.const 46
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   global.get $assembly/managers/eventQueueManager/_eventQueueMap
   local.tee $4
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    global.get $assembly/managers/eventQueueManager/_requestPayloadMap
    local.tee $4
    i32.store $0
    local.get $3
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=8
    local.get $1
    i32.const 25792
    i32.store $0 offset=12
    local.get $1
    local.get $0
    i32.store $0 offset=16
    i32.const 25792
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 25792
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=20
    i32.const 25792
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 25824
    i32.store $0 offset=4
    local.get $0
    i32.const 25824
    call $~lib/string/String.__concat
    i32.const 20576
    i32.const 49
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $assembly/types/eventQueueOptions/EventQueueOptions#constructor
   local.tee $2
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   i32.const 20
   i32.const 102
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $0
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=8
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=12
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/managers/eventQueueManager/_eventQueueMap
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $3
   local.get $0
   local.get $4
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   local.get $4
   i32.const 12
   i32.const 118
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   i32.const 24
   i32.const 121
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 3
   i32.store $0 offset=4
   local.get $6
   local.get $5
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   local.get $5
   local.get $6
   i32.store $0 offset=8
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 4
   i32.store $0 offset=12
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $6
   local.get $5
   i32.store $0 offset=4
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $6
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.load $0 offset=4
   i32.store $0 offset=4
   local.get $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/managers/eventQueueManager/_requestPayloadMap
   local.tee $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $4
   i32.store $0 offset=12
   local.get $2
   local.get $0
   local.get $4
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/managers/eventQueueManager/getRequestPayloadManager (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 26800
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 26800
   local.get $0
   call $~lib/string/String#concat
   i32.const 20576
   i32.const 32
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  global.get $assembly/managers/eventQueueManager/_requestPayloadMap
  local.tee $2
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store $0
   local.get $5
   i32.const 0
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=16
   local.set $3
   local.get $5
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.const 177
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 268435455
   i32.gt_u
   if
    i32.const 6096
    i32.const 7120
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $3
   local.get $3
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $1
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=4
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=12
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $1
   i32.store $0 offset=4
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $4
     local.get $2
     i32.const 12
     i32.mul
     i32.add
     local.tee $5
     i32.load $0 offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $1
      i32.store $0
      local.get $6
      local.get $5
      i32.load $0 offset=4
      local.tee $5
      i32.store $0 offset=8
      local.get $1
      local.get $0
      local.get $5
      call $~lib/array/Array<~lib/string/String>#__set
      local.get $0
      i32.const 1
      i32.add
      local.set $0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/string/String>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#checkForFailedPayloads~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0
  local.get $1
  i32.const 26912
  i32.store $0 offset=4
  local.get $2
  i32.const 26912
  call $~lib/string/String.__ne
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 27088
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=8
   i32.const 27088
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 27088
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=4
   i32.const 27088
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 27120
   i32.const 281
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 120
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 6096
   i32.const 7120
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/map/Map<~lib/string/String,i64>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=8
  local.set $3
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.load $0 offset=16
  local.tee $4
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $5
  i32.store $0 offset=4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $3
    local.get $2
    i32.const 24
    i32.mul
    i32.add
    local.tee $6
    i32.load $0 offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $5
     i32.store $0
     local.get $0
     local.get $6
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     local.get $5
     local.get $1
     local.get $0
     call $~lib/array/Array<~lib/string/String>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0
  local.get $5
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $3
  i32.const 40
  i32.const 108
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $3
  f64.const 0
  f64.store $0 offset=24
  local.get $4
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/types/dvcEvent/EventTypes
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $5
  i32.store $0 offset=8
  local.get $4
  local.get $5
  call $~lib/set/Set<~lib/string/String>#has
  i32.eqz
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  if (result i32)
   i32.const 27408
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   i32.load $0
  end
  local.tee $5
  i32.store $0 offset=8
  local.get $3
  local.get $5
  i32.store $0
  local.get $5
  if
   local.get $3
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $3
  i32.store $0 offset=4
  local.get $5
  local.get $0
  i32.store $0 offset=12
  local.get $5
  local.get $0
  i32.load $0 offset=4
  local.tee $5
  i32.store $0 offset=8
  local.get $3
  local.get $5
  i32.store $0 offset=4
  local.get $5
  if
   local.get $3
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $3
  i32.store $0 offset=4
  local.get $5
  local.get $4
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $0
   i32.load $0
  else
   i32.const 0
  end
  local.tee $4
  i32.store $0 offset=8
  local.get $3
  local.get $4
  i32.store $0 offset=8
  local.get $4
  if
   local.get $3
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=12
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/date/Date#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=8
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0 offset=8
  else
   i32.const 0
  end
  local.tee $1
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $1
  i32.eqz
  if
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/date/Date#constructor
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $1
  if
   local.get $3
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  f64.load $0 offset=16
  f64.store $0 offset=24
  local.get $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=32
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.load $0 offset=24
  local.tee $0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=36
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/types/dvcEvent/UserEventsBatchRecord#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 8
  i32.const 104
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromAggEvents (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 156
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 156
  memory.fill $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $5
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 110
  i32.const 27264
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/managers/platformDataManager/_getPlatformData
  local.tee $6
  i32.store $0 offset=12
  i32.const 27296
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 27296
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.load $0 offset=24
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=8
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   i32.store $0 offset=20
   local.get $2
   local.get $6
   i32.store $0
   local.get $2
   local.get $6
   i32.load $0 offset=24
   local.tee $6
   i32.store $0 offset=24
   local.get $6
   i32.eqz
   if
    i32.const 8112
    i32.const 27120
    i32.const 75
    i32.const 45
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $6
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   i32.const 27376
   i32.store $0
   local.get $7
   local.get $0
   i32.store $0 offset=32
   i32.const 27376
   i32.const 0
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 27376
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=32
   i32.const 27376
   i32.const 2
   local.get $6
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 27376
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=36
   local.get $2
   i32.const 27376
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.tee $2
   i32.store $0 offset=16
  else
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   i32.load $0 offset=24
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $6
    i32.store $0
    local.get $0
    local.get $6
    i32.load $0 offset=24
    local.tee $2
    i32.store $0 offset=40
    local.get $2
    i32.eqz
    if
     i32.const 8112
     i32.const 27120
     i32.const 77
     i32.const 23
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.store $0 offset=16
   end
  end
  global.get $~lib/memory/__stack_pointer
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  local.tee $19
  i32.store $0 offset=44
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   local.get $5
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $11
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $5
    i32.store $0
    local.get $0
    local.get $5
    local.get $11
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $13
    i32.store $0 offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store $0 offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.get $13
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $6
    i32.store $0 offset=52
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $6
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
    local.tee $7
    i32.store $0 offset=56
    i32.const 0
    local.set $8
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $8
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $7
      i32.store $0
      local.get $0
      local.get $7
      local.get $8
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $20
      i32.store $0 offset=60
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $20
      i32.store $0 offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $6
      local.get $20
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
      local.tee $14
      i32.store $0 offset=64
      f64.const nan:0x8000000000000
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 21168
      i32.store $0 offset=36
      local.get $14
      i32.const 21168
      call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $14
       i32.store $0
       local.get $0
       i32.const 21168
       i32.store $0 offset=36
       local.get $0
       local.get $14
       i32.const 21168
       call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
       local.tee $0
       i32.store $0 offset=68
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       i32.const 21168
       i32.store $0 offset=36
       local.get $0
       i32.const 21168
       call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $9
        local.get $0
        i32.store $0
        local.get $9
        i32.const 21168
        i32.store $0 offset=36
        local.get $9
        local.get $0
        i32.const 21168
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
        local.tee $9
        i32.store $0 offset=72
        local.get $9
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         local.get $9
         i32.store $0
         local.get $0
         local.get $9
         call $~lib/map/Map<~lib/string/String,i64>#keys
         local.tee $10
         i32.store $0 offset=76
         i32.const 0
         local.set $0
         loop $for-loop|2
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0
          local.get $10
          call $~lib/array/Array<~lib/string/String>#get:length
          local.get $0
          i32.gt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $14
           local.get $10
           i32.store $0
           local.get $14
           local.get $10
           local.get $0
           call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
           local.tee $14
           i32.store $0 offset=80
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $14
           i32.store $0 offset=36
           local.get $9
           local.get $14
           call $~lib/map/Map<~lib/string/String,i64>#get
           f64.convert_i64_s
           local.set $3
           local.get $0
           i32.const 1
           i32.add
           local.set $0
           br $for-loop|2
          end
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
         local.tee $0
         i32.store $0 offset=84
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         i32.const 4432
         i32.store $0 offset=36
         local.get $0
         i32.const 4432
         local.get $3
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
         local.tee $9
         i32.store $0 offset=88
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         i32.const 23648
         i32.store $0 offset=36
         global.get $~lib/memory/__stack_pointer
         i32.const 4432
         i32.store $0 offset=32
         local.get $9
         i32.const 23648
         i32.const 4432
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         i32.const 21584
         i32.store $0 offset=36
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=32
         local.get $9
         i32.const 21584
         local.get $0
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
         global.get $~lib/memory/__stack_pointer
         local.get $13
         i32.store $0 offset=36
         global.get $~lib/memory/__stack_pointer
         local.get $20
         i32.store $0 offset=32
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store $0 offset=92
         global.get $~lib/memory/__stack_pointer
         local.get $13
         local.get $20
         i32.const 0
         local.get $3
         local.get $9
         call $assembly/types/dvcEvent/DVCEvent#constructor
         local.tee $0
         i32.store $0 offset=96
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=100
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store $0 offset=104
         global.get $~lib/memory/__stack_pointer
         local.get $19
         i32.store $0 offset=92
         local.get $0
         local.get $2
         local.get $19
         call $assembly/types/dvcEvent/DVCRequestEvent#constructor
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0 offset=36
         local.get $4
         local.get $0
         call $~lib/array/Array<~lib/string/String>#push
        else
         i32.const 27456
         i32.const 27120
         i32.const 126
         i32.const 29
         call $~lib/builtins/abort
         unreachable
        end
       else
        i32.const 27552
        i32.const 27120
        i32.const 129
        i32.const 25
        call $~lib/builtins/abort
        unreachable
       end
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $14
       i32.store $0
       local.get $0
       local.get $14
       call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
       local.tee $15
       i32.store $0 offset=108
       i32.const 0
       local.set $0
       loop $for-loop|3
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store $0
        local.get $15
        call $~lib/array/Array<~lib/string/String>#get:length
        local.get $0
        i32.gt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $9
         local.get $15
         i32.store $0
         local.get $9
         local.get $15
         local.get $0
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.tee $16
         i32.store $0 offset=112
         global.get $~lib/memory/__stack_pointer
         local.get $14
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $16
         i32.store $0 offset=36
         global.get $~lib/memory/__stack_pointer
         local.get $14
         local.get $16
         call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
         local.tee $21
         i32.store $0 offset=116
         global.get $~lib/memory/__stack_pointer
         local.get $21
         i32.store $0
         global.get $~lib/memory/__stack_pointer
         local.get $21
         call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
         local.tee $22
         i32.store $0 offset=120
         i32.const 0
         local.set $9
         loop $for-loop|4
          global.get $~lib/memory/__stack_pointer
          local.get $22
          i32.store $0
          local.get $22
          call $~lib/array/Array<~lib/string/String>#get:length
          local.get $9
          i32.gt_s
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $10
           local.get $22
           i32.store $0
           local.get $10
           local.get $22
           local.get $9
           call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
           local.tee $23
           i32.store $0 offset=124
           global.get $~lib/memory/__stack_pointer
           local.get $21
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $23
           i32.store $0 offset=36
           global.get $~lib/memory/__stack_pointer
           local.get $21
           local.get $23
           call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
           local.tee $24
           i32.store $0 offset=128
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $17
           i32.store $0 offset=132
           f64.const 0
           local.set $3
           local.get $24
           if
            global.get $~lib/memory/__stack_pointer
            local.tee $10
            local.get $24
            i32.store $0
            local.get $10
            local.get $24
            call $~lib/map/Map<~lib/string/String,i64>#keys
            local.tee $18
            i32.store $0 offset=136
            i32.const 0
            local.set $10
            loop $for-loop|5
             global.get $~lib/memory/__stack_pointer
             local.get $18
             i32.store $0
             local.get $18
             call $~lib/array/Array<~lib/string/String>#get:length
             local.get $10
             i32.gt_s
             if
              global.get $~lib/memory/__stack_pointer
              local.tee $25
              local.get $18
              i32.store $0
              local.get $25
              local.get $18
              local.get $10
              call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
              local.tee $25
              i32.store $0 offset=140
              global.get $~lib/memory/__stack_pointer
              local.get $24
              i32.store $0
              global.get $~lib/memory/__stack_pointer
              local.get $25
              i32.store $0 offset=36
              local.get $24
              local.get $25
              call $~lib/map/Map<~lib/string/String,i64>#get
              f64.convert_i64_s
              local.set $12
              global.get $~lib/memory/__stack_pointer
              local.get $17
              i32.store $0
              global.get $~lib/memory/__stack_pointer
              local.get $25
              i32.store $0 offset=36
              local.get $17
              local.get $25
              local.get $12
              call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
              local.get $3
              local.get $12
              f64.add
              local.set $3
              local.get $10
              i32.const 1
              i32.add
              local.set $10
              br $for-loop|5
             end
            end
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $10
           i32.store $0 offset=144
           global.get $~lib/memory/__stack_pointer
           local.get $17
           i32.store $0 offset=32
           local.get $17
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
           local.set $18
           global.get $~lib/memory/__stack_pointer
           local.get $18
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           i32.const 25536
           i32.store $0 offset=36
           local.get $18
           i32.const 25536
           call $~lib/string/String.__ne
           if
            global.get $~lib/memory/__stack_pointer
            local.tee $18
            local.get $10
            i32.store $0
            local.get $18
            i32.const 21584
            i32.store $0 offset=36
            local.get $18
            local.get $17
            i32.store $0 offset=32
            local.get $10
            i32.const 21584
            local.get $17
            call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $17
           local.get $10
           i32.store $0
           local.get $17
           i32.const 21616
           i32.store $0 offset=36
           local.get $17
           local.get $16
           i32.store $0 offset=32
           local.get $10
           i32.const 21616
           local.get $16
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           i32.const 23648
           i32.store $0 offset=36
           global.get $~lib/memory/__stack_pointer
           local.get $23
           i32.store $0 offset=32
           local.get $10
           i32.const 23648
           local.get $23
           call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           global.get $~lib/memory/__stack_pointer
           local.get $13
           i32.store $0 offset=36
           global.get $~lib/memory/__stack_pointer
           local.get $20
           i32.store $0 offset=32
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0 offset=92
           global.get $~lib/memory/__stack_pointer
           local.get $13
           local.get $20
           i32.const 0
           local.get $3
           local.get $10
           call $assembly/types/dvcEvent/DVCEvent#constructor
           local.tee $10
           i32.store $0 offset=148
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.store $0
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0 offset=100
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store $0 offset=104
           global.get $~lib/memory/__stack_pointer
           local.get $19
           i32.store $0 offset=92
           local.get $10
           local.get $2
           local.get $19
           call $assembly/types/dvcEvent/DVCRequestEvent#constructor
           local.set $10
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.store $0 offset=36
           local.get $4
           local.get $10
           call $~lib/array/Array<~lib/string/String>#push
           local.get $9
           i32.const 1
           i32.add
           local.set $9
           br $for-loop|4
          end
         end
         local.get $0
         i32.const 1
         i32.add
         local.set $0
         br $for-loop|3
        end
       end
      end
      local.get $8
      i32.const 1
      i32.add
      local.set $8
      br $for-loop|1
     end
    end
    local.get $11
    i32.const 1
    i32.add
    local.set $11
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=32
  local.get $2
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  f64.const nan:0x8000000000000
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/types/dvcUser/DVCUser#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=36
  local.get $0
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser#constructor
  local.tee $0
  i32.store $0 offset=152
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=32
  local.get $0
  local.get $4
  call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 156
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcEvent/FlushPayload#eventCount (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=8
    local.tee $3
    i32.store $0
    local.get $4
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=4
    local.tee $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.add
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  local.get $2
  i32.store8 $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-uuid/assembly/rng/randomFill (param $0 i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  loop $for-loop|0
   local.get $2
   i32.const 256
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/math/random_seeded
    i32.eqz
    if
     call $~lib/builtins/seed
     i64.reinterpret_f64
     local.tee $1
     i64.eqz
     if
      i64.const -7046029254386353131
      local.set $1
     end
     local.get $1
     local.get $1
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $1
     i64.const 33
     i64.shr_u
     local.get $1
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $1
     i64.const 33
     i64.shr_u
     local.get $1
     i64.xor
     global.set $~lib/math/random_state0_64
     global.get $~lib/math/random_state0_64
     i64.const -1
     i64.xor
     local.tee $1
     i64.const 33
     i64.shr_u
     local.get $1
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $1
     i64.const 33
     i64.shr_u
     local.get $1
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $1
     i64.const 33
     i64.shr_u
     local.get $1
     i64.xor
     global.set $~lib/math/random_state1_64
     i32.const 1
     global.set $~lib/math/random_seeded
    end
    global.get $~lib/math/random_state0_64
    local.set $3
    global.get $~lib/math/random_state1_64
    local.tee $1
    global.set $~lib/math/random_state0_64
    local.get $1
    local.get $3
    local.get $3
    i64.const 23
    i64.shl
    i64.xor
    local.tee $3
    i64.const 17
    i64.shr_u
    local.get $3
    i64.xor
    i64.xor
    local.get $1
    i64.const 26
    i64.shr_u
    i64.xor
    global.set $~lib/math/random_state1_64
    local.get $0
    local.get $2
    local.get $1
    i64.const 12
    i64.shr_u
    i64.const 4607182418800017408
    i64.or
    f64.reinterpret_i64
    f64.const -1
    f64.add
    f64.const 256
    f64.mul
    i32.trunc_sat_f64_u
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__uset
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8Array#__uget (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  i32.load8_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/as-uuid/assembly/stringify/stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $0
  i32.const 72
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  local.get $0
  i32.load8_u $0
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0
  local.get $1
  local.get $0
  i32.load8_u $0 offset=1
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load8_u $0 offset=2
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load8_u $0 offset=3
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=12
  local.get $1
  i32.const 45
  i32.store16 $0 offset=16
  local.get $1
  local.get $0
  i32.load8_u $0 offset=4
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=18
  local.get $1
  local.get $0
  i32.load8_u $0 offset=5
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=22
  local.get $1
  i32.const 45
  i32.store16 $0 offset=26
  local.get $1
  local.get $0
  i32.load8_u $0 offset=6
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=28
  local.get $1
  local.get $0
  i32.load8_u $0 offset=7
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=32
  local.get $1
  i32.const 45
  i32.store16 $0 offset=36
  local.get $1
  local.get $0
  i32.load8_u $0 offset=8
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=38
  local.get $1
  local.get $0
  i32.load8_u $0 offset=9
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=42
  local.get $1
  i32.const 45
  i32.store16 $0 offset=46
  local.get $1
  local.get $0
  i32.load8_u $0 offset=10
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=48
  local.get $1
  local.get $0
  i32.load8_u $0 offset=11
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=52
  local.get $1
  local.get $0
  i32.load8_u $0 offset=12
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=56
  local.get $1
  local.get $0
  i32.load8_u $0 offset=13
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=60
  local.get $1
  i32.const -64
  i32.sub
  local.get $0
  i32.load8_u $0 offset=14
  local.tee $2
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $2
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0
  local.get $1
  local.get $0
  i32.load8_u $0 offset=15
  local.tee $0
  i32.const 4
  i32.shr_u
  i32.const 6588
  i32.add
  i32.load8_u $0
  local.get $0
  i32.const 15
  i32.and
  i32.const 6588
  i32.add
  i32.load8_u $0
  i32.const 16
  i32.shl
  i32.or
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#getFlushPayload (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   block $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $1
    local.get $3
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
    local.tee $3
    i32.store $0 offset=8
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0
     local.get $3
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $3
      i32.store $0
      local.get $1
      local.get $3
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $1
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load $0 offset=4
      local.tee $4
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      i32.const 26912
      i32.store $0 offset=4
      local.get $4
      i32.const 26912
      call $~lib/string/String.__eq
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       call $assembly/types/dvcEvent/FlushPayload#eventCount
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $4
       local.get $0
       i32.load $0 offset=4
       i32.lt_s
       br_if $folding-inner2
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    i32.const 0
    i32.const 2
    i32.const 120
    i32.const 27776
    call $~lib/rt/__newArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store $0
    local.get $1
    i32.const 0
    i32.store $0 offset=8
    local.get $1
    i32.const 12
    i32.const 119
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.store $0 offset=8
    local.get $0
    if
     local.get $1
     local.get $0
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0 offset=4
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 27696
    i32.store $0 offset=8
    local.get $1
    i32.const 27696
    i32.store $0 offset=4
    local.get $1
    i32.const 27696
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i32.const 0
    i32.store $0 offset=8
    i32.const 0
    global.set $~argumentsLength
    i32.const 0
    local.set $0
    local.get $2
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    block $1of1
     block $0of1
      block $outOfRange
       global.get $~argumentsLength
       br_table $0of1 $1of1 $outOfRange
      end
      unreachable
     end
     i32.const 27744
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 27744
     i32.store $0
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $3
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store $0
    global.get $~lib/as-uuid/assembly/rng/poolPtr
    i32.const 240
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $~lib/as-uuid/assembly/rng/rnds8Pool
     local.tee $3
     i32.store $0
     i32.const 1
     global.set $~argumentsLength
     local.get $3
     local.get $0
     i32.load $0
     call_indirect $0 (type $i32_=>_none)
     i32.const 0
     global.set $~lib/as-uuid/assembly/rng/poolPtr
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $~lib/as-uuid/assembly/rng/rnds8Pool
    local.tee $3
    i32.store $0
    global.get $~lib/as-uuid/assembly/rng/poolPtr
    local.tee $4
    i32.const 16
    i32.add
    global.set $~lib/as-uuid/assembly/rng/poolPtr
    local.get $0
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/as-uuid/assembly/rng/poolPtr
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    i64.const 0
    i64.store $0
    local.get $5
    i32.const 0
    i32.store $0 offset=8
    local.get $5
    local.get $3
    i32.store $0
    local.get $5
    local.get $3
    i32.store $0 offset=4
    local.get $3
    call $~lib/typedarray/Uint8Array#get:length
    local.set $5
    local.get $4
    i32.const 0
    i32.lt_s
    if (result i32)
     local.get $4
     local.get $5
     i32.add
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.gt_s
     select
    else
     local.get $4
     local.get $5
     local.get $4
     local.get $5
     i32.lt_s
     select
    end
    local.set $4
    local.get $0
    i32.const 0
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $5
     i32.add
     local.tee $0
     i32.const 0
     local.get $0
     i32.const 0
     i32.gt_s
     select
    else
     local.get $0
     local.get $5
     local.get $0
     local.get $5
     i32.lt_s
     select
    end
    local.tee $0
    local.get $4
    local.get $0
    local.get $4
    i32.gt_s
    select
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 9
    call $~lib/rt/itcms/__new
    local.tee $5
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $5
    local.get $3
    i32.load $0
    local.tee $6
    i32.store $0
    local.get $6
    if
     local.get $5
     local.get $6
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $3
    i32.store $0 offset=4
    local.get $5
    local.get $4
    local.get $3
    i32.load $0 offset=4
    i32.add
    i32.store $0 offset=4
    local.get $5
    local.get $0
    local.get $4
    i32.sub
    i32.store $0 offset=8
    local.get $6
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    local.get $5
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    i32.const 6
    local.get $5
    i32.const 6
    call $~lib/typedarray/Uint8Array#__uget
    i32.const 15
    i32.and
    i32.const 64
    i32.or
    call $~lib/typedarray/Uint8Array#__uset
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    i32.const 8
    local.get $5
    i32.const 8
    call $~lib/typedarray/Uint8Array#__uget
    i32.const 63
    i32.and
    i32.const 128
    i32.or
    call $~lib/typedarray/Uint8Array#__uset
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/as-uuid/assembly/stringify/stringify
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    if
     local.get $1
     local.get $0
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    br $folding-inner2
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/dvcEvent/FlushPayload#addBatchRecordForUser (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $5
   local.get $0
   i32.store $0
   local.get $5
   local.get $1
   i32.store $0 offset=12
   local.get $5
   local.get $1
   i32.load $0
   local.tee $3
   i32.store $0 offset=8
   local.get $5
   local.get $3
   i32.load $0
   local.tee $6
   i32.store $0 offset=4
   local.get $5
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   local.get $0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   block $__inlined_func$assembly/types/dvcEvent/FlushPayload#recordForUser
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $3
     i32.store $0 offset=4
     local.get $0
     local.get $3
     i32.load $0 offset=8
     local.tee $0
     i32.store $0
     local.get $0
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $4
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $3
      i32.store $0 offset=4
      local.get $0
      local.get $3
      i32.load $0 offset=8
      local.tee $7
      i32.store $0
      local.get $0
      local.get $7
      local.get $4
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $0
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0
      local.tee $7
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load $0
      local.tee $7
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $7
      local.get $6
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$assembly/types/dvcEvent/FlushPayload#recordForUser
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $0
   end
   local.get $5
   local.get $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $1
   i32.store $0 offset=4
   local.get $4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   i32.store $0
   local.get $4
   local.get $3
   i32.store $0 offset=4
   local.get $2
   local.get $3
   call $assembly/types/dvcEvent/FlushPayload#eventCount
   i32.sub
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store $0
   local.get $6
   local.get $5
   i32.store $0
   local.get $5
   i32.load $0 offset=12
   local.tee $7
   i32.const 0
   local.get $7
   i32.const 0
   i32.le_s
   select
   local.set $8
   local.get $6
   local.get $2
   local.get $7
   local.get $8
   i32.sub
   local.tee $6
   local.get $2
   local.get $6
   i32.lt_s
   select
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.tee $2
   i32.const 2
   i32.const 110
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $9
   local.get $6
   i32.store $0
   local.get $6
   i32.load $0 offset=4
   local.set $10
   local.get $9
   local.get $5
   i32.store $0
   local.get $10
   local.get $5
   i32.load $0 offset=4
   local.tee $9
   local.get $8
   i32.const 2
   i32.shl
   i32.add
   local.tee $10
   local.get $2
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $8
   i32.add
   local.tee $8
   local.get $7
   i32.ne
   if
    local.get $10
    local.get $9
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    local.get $8
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $5
   i32.store $0
   local.get $5
   local.get $7
   local.get $2
   i32.sub
   i32.store $0 offset=12
   local.get $8
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $6
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=8
    local.get $2
    local.get $1
    i32.load $0
    local.tee $1
    i32.store $0 offset=4
    local.get $0
    local.tee $2
    local.get $1
    i32.store $0
    local.get $1
    if
     local.get $2
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=24
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.tee $1
    i32.store $0 offset=8
    local.get $0
    local.get $6
    i32.store $0 offset=12
    local.get $0
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0 offset=12
    local.set $3
    local.get $0
    local.get $6
    i32.store $0
    local.get $6
    i32.load $0 offset=12
    local.tee $0
    local.get $3
    i32.add
    local.tee $4
    i32.const 268435455
    i32.gt_u
    if
     i32.const 6096
     i32.const 7120
     i32.const 224
     i32.const 60
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 2
    i32.const 110
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.load $0 offset=4
    local.set $5
    local.get $3
    i32.const 2
    i32.shl
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.load $0 offset=4
    local.set $7
    i32.const 0
    local.set $1
    loop $for-loop|00
     local.get $1
     local.get $3
     i32.lt_u
     if
      local.get $1
      local.get $5
      i32.add
      local.get $1
      local.get $7
      i32.add
      i32.load $0
      local.tee $8
      i32.store $0
      local.get $8
      if
       local.get $4
       local.get $8
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $1
      i32.const 4
      i32.add
      local.set $1
      br $for-loop|00
     end
    end
    local.get $3
    local.get $5
    i32.add
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    i32.load $0 offset=4
    local.set $3
    local.get $0
    i32.const 2
    i32.shl
    local.set $5
    i32.const 0
    local.set $0
    loop $for-loop|1
     local.get $0
     local.get $5
     i32.lt_u
     if
      local.get $0
      local.get $1
      i32.add
      local.get $0
      local.get $3
      i32.add
      i32.load $0
      local.tee $6
      i32.store $0
      local.get $6
      if
       local.get $4
       local.get $6
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $0
      i32.const 4
      i32.add
      local.set $0
      br $for-loop|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $2
    local.get $4
    i32.store $0 offset=4
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=8
    local.get $0
    local.get $1
    i32.load $0
    local.tee $1
    i32.store $0 offset=4
    local.get $0
    local.get $6
    i32.store $0 offset=8
    local.get $0
    local.get $1
    local.get $6
    call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
    local.tee $0
    i32.store $0 offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=8
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#updateFailedPayloads~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $1
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0
  local.get $1
  i32.const 26912
  i32.store $0 offset=4
  local.get $2
  i32.const 26912
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 27696
   i32.store $0 offset=4
   local.get $0
   i32.const 27696
   i32.store $0 offset=4
   local.get $0
   i32.const 27696
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructFlushPayloads (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $6
   local.get $0
   i32.store $0
   local.get $6
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store $0
   local.get $6
   i64.const 0
   i64.store $0 offset=8
   local.get $6
   local.get $0
   i32.store $0 offset=12
   local.get $6
   local.get $0
   i32.load $0
   local.tee $6
   i32.store $0 offset=8
   local.get $6
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 27232
   i32.store $0 offset=4
   local.get $6
   i32.const 27232
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromUserEvents (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     i32.const 0
     i32.const 20
     memory.fill $0
     local.get $6
     i32.const 0
     call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
     local.tee $6
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     i64.const 0
     i64.store $0
     local.get $7
     i32.const 0
     i32.store $0 offset=8
     local.get $7
     local.get $1
     i32.store $0
     local.get $1
     i32.load $0 offset=8
     local.set $10
     local.get $7
     local.get $1
     i32.store $0
     local.get $7
     local.get $1
     i32.load $0 offset=16
     local.tee $11
     call $~lib/array/Array<assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
     local.tee $7
     i32.store $0 offset=4
     loop $for-loop|0
      local.get $4
      local.get $11
      i32.lt_s
      if
       local.get $10
       local.get $4
       i32.const 12
       i32.mul
       i32.add
       local.tee $8
       i32.load $0 offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $12
        local.get $7
        i32.store $0
        local.get $3
        local.tee $1
        i32.const 1
        i32.add
        local.set $3
        local.get $12
        local.get $8
        i32.load $0 offset=4
        local.tee $8
        i32.store $0 offset=8
        local.get $7
        local.get $1
        local.get $8
        call $~lib/array/Array<~lib/string/String>#__set
       end
       local.get $4
       i32.const 1
       i32.add
       local.set $4
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     local.get $3
     call $~lib/array/Array<~lib/string/String>#set:length
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $9
     local.get $7
     i32.store $0 offset=8
     i32.const 0
     local.set $3
     loop $for-loop|01
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=4
      local.get $7
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $3
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $6
       i32.store $0 offset=4
       local.get $1
       local.get $7
       i32.store $0 offset=16
       local.get $7
       local.get $3
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=12
       local.get $6
       local.get $1
       call $~lib/array/Array<~lib/string/String>#push
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     br $__inlined_func$assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromUserEvents
    end
    br $folding-inner1
   end
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $3
   local.get $2
   i32.store $0 offset=16
   local.get $0
   local.get $2
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructBatchRecordsFromAggEvents
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill $0
   loop $for-loop|02
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $5
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     local.get $1
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $2
     i32.store $0 offset=4
     loop $while-continue|1
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $2
      i32.store $0 offset=8
      local.get $3
      local.get $2
      i32.load $0 offset=4
      local.tee $3
      i32.store $0
      local.get $3
      call $~lib/array/Array<~lib/string/String>#get:length
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $0
       i32.store $0
       local.get $3
       local.get $0
       call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#getFlushPayload
       local.tee $3
       i32.store $0 offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0 offset=16
       local.get $3
       local.get $2
       local.get $0
       i32.load $0 offset=4
       call $assembly/types/dvcEvent/FlushPayload#addBatchRecordForUser
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load $0 offset=8
       local.tee $4
       i32.store $0
       local.get $4
       call $~lib/array/Array<~lib/string/String>#get:length
       i32.const 0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $0
        i32.store $0 offset=20
        local.get $4
        local.get $0
        i32.load $0
        local.tee $6
        i32.store $0
        local.get $4
        local.get $3
        i32.store $0 offset=20
        local.get $4
        local.get $3
        i32.load $0
        local.tee $7
        i32.store $0 offset=8
        local.get $4
        local.get $3
        i32.store $0 offset=16
        local.get $6
        local.get $7
        local.get $3
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
       end
       br $while-continue|1
      end
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|02
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 27808
   i32.store $0 offset=4
   local.get $1
   i32.const 27808
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#forEach
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $2
  i32.store $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=4
    local.get $3
    local.get $0
    i32.store $0 offset=12
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $2
    local.get $3
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $2
   i32.const 13984
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=32
   local.get $2
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=24
   local.get $2
   i32.const 27840
   i32.store $0 offset=28
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   i32.const 2
   i32.const 4
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   i32.load $0 offset=4
   local.set $5
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $4
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $3
    local.get $4
    i32.gt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     i32.store $0 offset=8
     local.get $6
     local.get $1
     i32.const 2
     i32.shl
     local.tee $7
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $3
     i32.store $0
     local.get $6
     local.get $0
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $6
     local.get $3
     local.get $1
     local.get $0
     i32.const 27840
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $3
     i32.store $0 offset=12
     local.get $5
     local.get $7
     i32.add
     local.get $3
     i32.store $0
     local.get $3
     if
      local.get $2
      local.get $3
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12096
   i32.store $0 offset=20
   local.get $2
   i32.const 12096
   call $~lib/array/Array<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   i32.const 13984
   local.get $0
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14016
   i32.store $0 offset=4
   local.get $0
   i32.const 14016
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#find
  local.tee $1
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.get $1
  i32.load $0 offset=8
  i32.const 1
  i32.or
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  local.get $0
  i32.load $0 offset=20
  i32.const 1
  i32.sub
  i32.store $0 offset=20
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  i32.shr_u
  local.set $2
  local.get $1
  local.get $0
  i32.store $0
  local.get $2
  i32.const 1
  i32.add
  i32.const 4
  local.get $0
  i32.load $0 offset=20
  local.tee $1
  local.get $1
  i32.const 4
  i32.lt_u
  select
  i32.ge_u
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=20
   local.set $3
   local.get $1
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.load $0 offset=12
   i32.const 3
   i32.mul
   i32.const 4
   i32.div_s
   i32.lt_s
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#rehash
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcEvent/DVCEvent.fromJSONString (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 40
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $4
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 28288
    i32.const 28384
    i32.const 57
    i32.const 31
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $4
    i32.store $0 offset=12
    block $is_instance
     local.get $4
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 28384
    i32.const 58
    i32.const 23
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $4
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=36
   local.get $0
   i32.const 15872
   i32.store $0 offset=32
   local.get $4
   i32.const 15872
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 28464
   i32.store $0 offset=32
   local.get $4
   i32.const 28464
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 15952
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   local.get $4
   i32.store $0
   local.get $0
   i32.const 15952
   i32.store $0 offset=4
   local.get $0
   local.get $4
   i32.const 15952
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   block $__inlined_func$assembly/helpers/jsonHelpers/getDateFromJSONOptional
    local.get $0
    call $~lib/string/String.__not
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$assembly/helpers/jsonHelpers/getDateFromJSONOptional
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/date/Date.fromString
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $0
   i32.store $0 offset=28
   local.get $5
   local.get $4
   i32.store $0 offset=36
   local.get $5
   i32.const 21168
   i32.store $0 offset=32
   local.get $4
   i32.const 21168
   f64.const nan:0x8000000000000
   call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 28496
   i32.store $0 offset=32
   local.get $4
   i32.const 28496
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=32
   local.get $3
   local.get $2
   local.get $0
   local.get $1
   local.get $4
   call $assembly/types/dvcEvent/DVCEvent#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#mergeClientCustomData (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=32
  if (result i32)
   i32.const 0
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   i32.const 0
   i32.gt_s
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $0
   local.get $3
   i32.store $0 offset=32
   local.get $3
   if
    local.get $0
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=8
    local.get $3
    local.get $0
    i32.load $0 offset=32
    local.tee $3
    i32.store $0 offset=12
    local.get $3
    i32.eqz
    if
     i32.const 8112
     i32.const 14672
     i32.const 273
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0
    local.get $4
    local.get $1
    i32.store $0 offset=16
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $3
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0 offset=36
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.store $0 offset=8
      local.get $3
      local.get $0
      i32.load $0 offset=36
      local.tee $3
      i32.store $0 offset=20
      local.get $3
      i32.eqz
      if
       i32.const 8112
       i32.const 14672
       i32.const 274
       i32.const 52
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $3
      i32.store $0
      local.get $4
      local.get $1
      i32.store $0 offset=16
      local.get $1
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=8
      local.get $4
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=4
      local.get $3
      local.get $4
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#has
     else
      i32.const 1
     end
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $0
     i32.store $0 offset=16
     local.get $3
     local.get $0
     i32.load $0 offset=32
     local.tee $3
     i32.store $0 offset=24
     local.get $3
     i32.eqz
     if
      i32.const 8112
      i32.const 14672
      i32.const 275
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $3
     i32.store $0
     local.get $4
     local.get $1
     i32.store $0 offset=28
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=16
     local.get $4
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=36
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=32
     local.get $5
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=28
     local.get $1
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $3
     local.get $4
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 21616
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 21616
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 23648
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 23648
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $0
  i32.store $0 offset=12
  local.get $1
  i32.eqz
  if
   i32.const 28688
   i32.const 21328
   i32.const 120
   i32.const 24
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 28784
   i32.const 21328
   i32.const 121
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  call $assembly/types/bucketedUserConfig/FeatureVariation#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/eventQueueManager/queueAggregateEvent (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $4
   local.get $0
   call $assembly/managers/eventQueueManager/getEventQueue
   local.tee $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.load $0 offset=4
   local.tee $0
   i32.store $0
   local.get $0
   i32.load8_u $0 offset=8
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $assembly/types/dvcEvent/DVCEvent.fromJSONString
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $1
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 28576
    i32.const 20576
    i32.const 144
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $1
    i32.store $0 offset=24
    block $is_instance
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 20576
    i32.const 147
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $8
   i32.store $0 offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=4
    local.get $8
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $8
     i32.store $0 offset=4
     local.get $4
     local.get $8
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $4
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $4
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
     local.tee $5
     i32.store $0 offset=20
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $9
      local.get $2
      i32.store $0 offset=4
      local.get $9
      local.get $4
      i32.store $0 offset=16
      local.get $9
      local.get $5
      i32.store $0 offset=28
      local.get $5
      call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=24
      local.get $2
      local.get $4
      local.get $5
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $2
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6688
   i32.store $0 offset=8
   local.get $1
   i32.const 6688
   call $~lib/string/String.__eq
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=32
   local.get $6
   local.get $0
   local.get $2
   local.get $1
   call $assembly/eventQueue/eventQueue/EventQueue#queueAggregateEvent
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 29168
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 29168
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=8
   i32.const 7168
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  i32.const 29200
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.const 29200
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=12
   i32.const 7168
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  i32.const 29248
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.const 29248
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/string/String.__not
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=16
   i32.const 7168
   local.set $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=20
  local.get $3
  local.get $0
  i32.store $0 offset=24
  local.get $1
  local.get $2
  local.get $0
  call $assembly/types/bucketedUserConfig/EvalReason#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 40
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 21584
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.const 21584
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.eqz
  if
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.set $1
  end
  local.get $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=32
  local.get $2
  i32.const 21520
  i32.store $0 offset=36
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=36
  local.get $0
  i32.const 15872
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=36
  local.get $0
  i32.const 21552
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 21168
  i32.store $0 offset=36
  local.get $0
  call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 21616
  i32.store $0 offset=36
  local.get $0
  i32.const 21616
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=32
  local.get $1
  call $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=32
  local.get $4
  local.get $5
  local.get $2
  local.get $3
  local.get $0
  local.get $1
  call $assembly/types/bucketedUserConfig/SDKVariable#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.const 52
   memory.fill $0
   local.get $5
   local.get $1
   i32.store $0
   local.get $5
   local.get $1
   i32.store $0 offset=4
   local.get $5
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 28880
    i32.const 20576
    i32.const 165
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $1
    i32.store $0 offset=12
    block $is_instance
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $6
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $6
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 20576
    i32.const 166
    i32.const 29
    call $~lib/builtins/abort
    unreachable
   end
   local.get $5
   local.get $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $5
   i32.store $0 offset=20
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=24
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $4
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $1
     i32.store $0 offset=24
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $6
     local.get $7
     local.get $4
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $6
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $6
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $7
     i32.store $0 offset=32
     local.get $7
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=4
      local.get $7
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     else
      i32.const 0
     end
     i32.eqz
     if
      i32.const 28976
      i32.const 20576
      i32.const 173
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $8
     local.get $5
     i32.store $0 offset=4
     local.get $8
     local.get $6
     i32.store $0 offset=24
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0 (result i32)
      local.get $8
      local.get $7
      i32.store $0 offset=44
      block $is_instance1
       local.get $7
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $8
       i32.const 6
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 5
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 103
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 107
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 137
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 138
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 141
       i32.eq
       br_if $is_instance1
       local.get $8
       i32.const 143
       i32.eq
       br_if $is_instance1
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 20576
      i32.const 176
      i32.const 42
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=40
     local.get $7
     call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=36
     local.get $5
     local.get $6
     local.get $7
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   local.tee $1
   i32.store $0 offset=4
   local.get $4
   local.get $5
   i32.store $0 offset=24
   local.get $4
   local.get $2
   i32.store $0 offset=48
   local.get $2
   i32.const 0
   call $~lib/string/String.__ne
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $2
    i32.store $0 offset=48
    local.get $0
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $0
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
    local.tee $0
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
    i32.eqz
    if
     i32.const 29088
     i32.const 21328
     i32.const 276
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj1 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=12
     block $is_instance2
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $4
      i32.const 6
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 5
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 103
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 107
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 137
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 138
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 141
      i32.eq
      br_if $is_instance2
      local.get $4
      i32.const 143
      i32.eq
      br_if $is_instance2
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj1
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 21328
     i32.const 278
     i32.const 31
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    local.get $0
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 0
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=36
   local.get $2
   local.get $3
   i32.store $0 offset=40
   local.get $1
   local.get $5
   local.get $0
   local.get $3
   call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
   global.get $~lib/memory/__stack_pointer
   i32.const 52
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  call $assembly/types/dvcEvent/FlushPayload#eventCount
  local.get $0
  i32.add
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.load $0
   local.tee $4
   i32.store $0 offset=4
   local.get $4
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $4
    i32.store $0
    local.get $3
    local.get $4
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#keys
    local.tee $5
    i32.store $0 offset=8
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $5
      i32.store $0
      local.get $3
      local.get $5
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store $0 offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 10
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/as-proto/assembly/Writer/Writer#fork@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 10
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=16
      local.get $1
      local.get $3
      call $~lib/as-proto/assembly/Writer/Writer#string@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 18
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/as-proto/assembly/Writer/Writer#fork@override
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=24
      local.get $4
      local.get $3
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i64.const 0
      i64.store $0
      local.get $3
      i32.const 0
      i32.store $0 offset=8
      local.get $3
      local.get $1
      i32.store $0
      local.get $1
      i32.const 8
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $1
      local.get $6
      i32.load $0
      call $~lib/as-proto/assembly/Writer/Writer#int32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 16
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $1
      local.get $6
      i32.load8_u $0 offset=4
      call $~lib/as-proto/assembly/Writer/Writer#bool@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 25
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=4
      local.get $1
      local.get $6
      f64.load $0 offset=8
      call $~lib/as-proto/assembly/Writer/Writer#double@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      i32.const 34
      call $~lib/as-proto/assembly/Writer/Writer#uint32@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.load $0 offset=16
      local.tee $3
      i32.store $0 offset=4
      local.get $1
      local.get $3
      call $~lib/as-proto/assembly/Writer/Writer#string@override
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 16
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.load8_u $0 offset=4
   call $~lib/as-proto/assembly/Writer/Writer#bool@override
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 48
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.const 10
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=4
   local.get $1
   local.get $2
   call $~lib/as-proto/assembly/Writer/Writer#string@override
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 18
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=16
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 26
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=20
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 34
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=16
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 42
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=20
   local.tee $3
   i32.store $0 offset=28
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 50
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    local.get $1
    i32.store $0
    local.get $1
    i32.const 9
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $1
    local.get $3
    f64.load $0
    call $~lib/as-proto/assembly/Writer/Writer#double@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 16
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $1
    local.get $3
    i32.load8_u $0 offset=8
    call $~lib/as-proto/assembly/Writer/Writer#bool@override
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=24
   local.tee $2
   i32.store $0 offset=32
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 58
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=28
   local.tee $2
   i32.store $0 offset=36
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 66
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableString/NullableString.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=32
   local.tee $2
   i32.store $0 offset=40
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 74
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.load $0 offset=36
   local.tee $0
   i32.store $0 offset=44
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    i32.const 82
    call $~lib/as-proto/assembly/Writer/Writer#uint32@override
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#fork@override
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $1
    call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData.encode
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    local.get $1
    call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB.encode (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.const 10
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 18
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $1
  local.get $2
  call $~lib/as-proto/assembly/Writer/Writer#string@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 24
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load $0 offset=8
  call $~lib/as-proto/assembly/Writer/Writer#int32@override
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=12
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 34
   call $~lib/as-proto/assembly/Writer/Writer#uint32@override
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/as-proto/assembly/Writer/Writer#fork@override
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB.encode
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/as-proto/assembly/Writer/Writer#ldelim@override
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 40
  call $~lib/as-proto/assembly/Writer/Writer#uint32@override
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.load8_u $0 offset=16
  call $~lib/as-proto/assembly/Writer/Writer#bool@override
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcUser/nullableCustomDataFromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 48
    memory.fill $0
    local.get $0
    i32.eqz
    if
     call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     i32.const 1
     call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
     local.set $0
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.tee $1
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    call $~lib/map/Map<~lib/string/String,assembly/types/protobuf-generated/CustomDataValue/CustomDataValue>#constructor
    local.tee $4
    i32.store $0 offset=12
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $1
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $1
      i32.store $0 offset=4
      local.get $5
      local.get $1
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $5
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      local.get $5
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $6
      i32.store $0 offset=20
      local.get $6
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0 offset=4
       local.get $6
       call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        local.get $4
        i32.store $0 offset=4
        local.get $7
        local.get $5
        i32.store $0
        block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool (result i32)
         local.get $7
         local.get $6
         i32.store $0 offset=36
         i32.const 0
         local.get $6
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 134
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 14672
         i32.const 65
         i32.const 78
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=32
        local.get $6
        call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Bool#valueOf
        local.set $6
        global.get $~lib/memory/__stack_pointer
        i32.const 7168
        i32.store $0 offset=28
        i32.const 0
        local.get $6
        f64.const 0
        i32.const 7168
        call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
        local.set $6
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=24
        local.get $4
        local.get $5
        local.get $6
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
       else
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        local.get $6
        i32.store $0 offset=4
        local.get $7
        i32.const 4
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 33780
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.tee $7
        i32.const 0
        i32.store $0
        local.get $7
        local.get $6
        i32.store $0
        local.get $6
        if (result i32)
         block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num (result i32)
          block $is_instance1
           local.get $6
           i32.const 8
           i32.sub
           i32.load $0
           local.tee $7
           i32.const 125
           i32.eq
           br_if $is_instance1
           local.get $7
           i32.const 124
           i32.eq
           br_if $is_instance1
           i32.const 0
           br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        local.set $7
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $7
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $7
         local.get $4
         i32.store $0 offset=4
         local.get $7
         local.get $5
         i32.store $0
         block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num2 (result i32)
          local.get $7
          local.get $6
          i32.store $0 offset=40
          block $is_instance0
           local.get $6
           i32.const 8
           i32.sub
           i32.load $0
           local.tee $7
           i32.const 125
           i32.eq
           br_if $is_instance0
           local.get $7
           i32.const 124
           i32.eq
           br_if $is_instance0
           i32.const 0
           br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Num2
          end
          i32.const 1
         end
         i32.eqz
         if
          i32.const 8352
          i32.const 14672
          i32.const 67
          i32.const 84
          call $~lib/builtins/abort
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=32
         local.get $6
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Num#valueOf
         local.set $3
         global.get $~lib/memory/__stack_pointer
         i32.const 7168
         i32.store $0 offset=28
         i32.const 1
         i32.const 0
         local.get $3
         i32.const 7168
         call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
         local.set $6
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=24
         local.get $4
         local.get $5
         local.get $6
         call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
        else
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=4
         local.get $6
         call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $7
          local.get $4
          i32.store $0 offset=4
          local.get $7
          local.get $5
          i32.store $0
          block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
           local.get $7
           local.get $6
           i32.store $0 offset=44
           i32.const 0
           local.get $6
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 133
           i32.ne
           br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 8352
           i32.const 14672
           i32.const 69
           i32.const 87
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=32
          local.get $6
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=28
          i32.const 2
          i32.const 0
          f64.const 0
          local.get $6
          call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
          local.set $6
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=24
          local.get $4
          local.get $5
          local.get $6
          call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
         else
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0 offset=4
          local.get $6
          call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
          if
           global.get $~lib/memory/__stack_pointer
           local.tee $6
           local.get $4
           i32.store $0 offset=4
           local.get $6
           local.get $5
           i32.store $0
           local.get $6
           i32.const 7168
           i32.store $0 offset=28
           i32.const 3
           i32.const 0
           f64.const 0
           i32.const 7168
           call $assembly/types/protobuf-generated/CustomDataValue/CustomDataValue#constructor
           local.set $6
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=24
           local.get $4
           local.get $5
           local.get $6
           call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
          end
         end
        end
       end
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    i32.const 0
    call $assembly/types/protobuf-generated/NullableCustomData/NullableCustomData#constructor
    local.set $0
    br $folding-inner1
   end
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCUser#toProtoBuf (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 76
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0 offset=40
   local.get $3
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=44
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $4
   i32.store $0 offset=48
   local.get $3
   local.get $4
   i32.const 7168
   local.get $4
   select
   local.tee $4
   i32.store $0 offset=44
   local.get $3
   local.get $0
   i32.store $0 offset=52
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=44
   local.get $4
   local.get $3
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 7168
   local.get $4
   select
   local.tee $4
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   i32.store $0 offset=44
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=16
   local.tee $5
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.const 7168
   local.get $5
   select
   local.tee $5
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=16
   local.tee $6
   i32.store $0 offset=44
   local.get $5
   local.get $6
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=20
   local.tee $6
   i32.store $0 offset=64
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.const 7168
   local.get $6
   select
   local.tee $6
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=20
   local.tee $7
   i32.store $0 offset=44
   local.get $6
   local.get $7
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=40
   local.get $0
   f64.load $0 offset=24
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=40
   local.get $1
   f64.const 0
   local.get $1
   i64.reinterpret_f64
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.le_u
   select
   local.get $0
   f64.load $0 offset=24
   local.tee $1
   local.get $1
   f64.ne
   call $assembly/types/protobuf-generated/NullableDouble/NullableDouble#constructor
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=32
   local.tee $8
   i32.store $0 offset=68
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.const 7168
   local.get $8
   select
   local.tee $8
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=32
   local.tee $9
   i32.store $0 offset=44
   local.get $8
   local.get $9
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=36
   local.tee $9
   i32.store $0 offset=72
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.const 7168
   local.get $9
   select
   local.tee $9
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=36
   local.tee $10
   i32.store $0 offset=44
   local.get $9
   local.get $10
   i32.const 0
   call $~lib/string/String.__eq
   call $assembly/types/protobuf-generated/NullableString/NullableString#constructor
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=40
   local.tee $10
   i32.store $0 offset=40
   local.get $10
   call $assembly/types/dvcUser/nullableCustomDataFromJSONObj
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=44
   local.tee $0
   i32.store $0 offset=40
   local.get $0
   call $assembly/types/dvcUser/nullableCustomDataFromJSONObj
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=40
   local.get $2
   local.get $3
   local.get $4
   local.get $5
   local.get $6
   local.get $7
   local.get $8
   local.get $9
   local.get $10
   local.get $0
   call $assembly/types/protobuf-generated/DVCUser_PB/DVCUser_PB#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 29392
   i32.store $0 offset=4
   local.get $0
   i32.const 29392
   call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 76
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB.decode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $1
    local.get $0
    i32.load $0
    i32.add
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 7168
   i32.store $0 offset=4
   local.get $1
   i32.const 7168
   i32.store $0 offset=8
   local.get $1
   i32.const 7168
   i32.store $0 offset=12
   local.get $1
   i32.const 7168
   i32.const 0
   i32.const 7168
   i32.const 0
   f64.const 0
   i32.const 7168
   i32.const 0
   i32.const 0
   i32.const 0
   call $assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB#constructor
   local.tee $1
   i32.store $0 offset=16
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.load $0
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     block $case9|1
      block $case8|1
       block $case7|1
        block $case6|1
         block $case5|1
          block $case4|1
           block $case3|1
            block $case2|1
             block $case1|1
              block $case0|1
               local.get $0
               call $~lib/as-proto/assembly/Reader/Reader#uint32@override
               local.tee $3
               i32.const 3
               i32.shr_u
               i32.const 1
               i32.sub
               br_table $case0|1 $case1|1 $case2|1 $case3|1 $case4|1 $case5|1 $case6|1 $case7|1 $case8|1 $case9|1
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $3
              local.get $1
              i32.store $0
              local.get $3
              local.get $0
              i32.store $0 offset=20
              local.get $0
              call $~lib/as-proto/assembly/Reader/Reader#string@override
              local.set $3
              global.get $~lib/memory/__stack_pointer
              local.get $3
              i32.store $0 offset=4
              local.get $1
              local.get $3
              i32.store $0
              local.get $3
              if
               local.get $1
               local.get $3
               i32.const 0
               call $byn-split-outlined-A$~lib/rt/itcms/__link
              end
              br $while-continue|0
             end
             global.get $~lib/memory/__stack_pointer
             local.tee $3
             local.get $1
             i32.store $0
             local.get $3
             local.get $0
             i32.store $0 offset=4
             local.get $1
             local.get $0
             call $~lib/as-proto/assembly/Reader/Reader#uint32@override
             i32.store $0 offset=4
             br $while-continue|0
            end
            global.get $~lib/memory/__stack_pointer
            local.tee $3
            local.get $1
            i32.store $0
            local.get $3
            local.get $0
            i32.store $0 offset=20
            local.get $0
            call $~lib/as-proto/assembly/Reader/Reader#string@override
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store $0 offset=4
            local.get $1
            local.get $3
            i32.store $0 offset=8
            local.get $3
            if
             local.get $1
             local.get $3
             i32.const 0
             call $byn-split-outlined-A$~lib/rt/itcms/__link
            end
            br $while-continue|0
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $3
           local.get $1
           i32.store $0
           local.get $3
           local.get $0
           i32.store $0 offset=4
           local.get $1
           local.get $0
           call $~lib/as-proto/assembly/Reader/Reader#bool@override
           i32.store8 $0 offset=12
           br $while-continue|0
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          local.get $1
          i32.store $0
          local.get $3
          local.get $0
          i32.store $0 offset=4
          local.get $1
          local.get $0
          call $~lib/as-proto/assembly/Reader/Reader#double@override
          f64.store $0 offset=16
          br $while-continue|0
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         local.get $1
         i32.store $0
         local.get $3
         local.get $0
         i32.store $0 offset=20
         local.get $0
         call $~lib/as-proto/assembly/Reader/Reader#string@override
         local.set $3
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0 offset=4
         local.get $1
         local.get $3
         i32.store $0 offset=24
         local.get $3
         if
          local.get $1
          local.get $3
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         br $while-continue|0
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $1
        i32.store $0
        local.get $3
        local.get $0
        i32.store $0 offset=20
        local.get $3
        local.get $0
        i32.store $0 offset=8
        local.get $0
        local.get $0
        call $~lib/as-proto/assembly/Reader/Reader#uint32@override
        call $assembly/types/protobuf-generated/NullableString/NullableString.decode
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0 offset=4
        local.get $1
        local.get $3
        i32.store $0 offset=28
        local.get $3
        if
         local.get $1
         local.get $3
         i32.const 0
         call $byn-split-outlined-A$~lib/rt/itcms/__link
        end
        br $while-continue|0
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $1
       i32.store $0
       local.get $3
       local.get $0
       i32.store $0 offset=20
       local.get $3
       local.get $0
       i32.store $0 offset=8
       local.get $0
       local.get $0
       call $~lib/as-proto/assembly/Reader/Reader#uint32@override
       call $assembly/types/protobuf-generated/NullableString/NullableString.decode
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store $0 offset=4
       local.get $1
       local.get $3
       i32.store $0 offset=32
       local.get $3
       if
        local.get $1
        local.get $3
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       br $while-continue|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $1
      i32.store $0
      local.get $3
      local.get $0
      i32.store $0 offset=20
      local.get $3
      local.get $0
      i32.store $0 offset=8
      local.get $0
      call $~lib/as-proto/assembly/Reader/Reader#uint32@override
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 33780
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 20
      memory.fill $0
      local.get $3
      i32.const 0
      i32.lt_s
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.load $0 offset=4
      else
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $3
       local.get $0
       i32.load $0
       i32.add
      end
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i32.const 7168
      i32.store $0 offset=4
      local.get $4
      i32.const 7168
      i32.store $0 offset=8
      local.get $4
      i32.const 7168
      i32.store $0 offset=12
      local.get $4
      i32.const 7168
      i32.const 7168
      i32.const 7168
      call $assembly/types/protobuf-generated/EvalReason_PB/EvalReason_PB#constructor
      local.tee $4
      i32.store $0 offset=16
      loop $while-continue|00
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $3
       local.get $0
       i32.load $0
       i32.gt_u
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        block $case3|11
         block $case2|12
          block $case1|13
           block $case0|14
            local.get $0
            call $~lib/as-proto/assembly/Reader/Reader#uint32@override
            local.tee $5
            i32.const 3
            i32.shr_u
            i32.const 1
            i32.sub
            br_table $case0|14 $case1|13 $case2|12 $case3|11
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $5
           local.get $4
           i32.store $0
           local.get $5
           local.get $0
           i32.store $0 offset=8
           local.get $0
           call $~lib/as-proto/assembly/Reader/Reader#string@override
           local.set $5
           global.get $~lib/memory/__stack_pointer
           local.get $5
           i32.store $0 offset=4
           local.get $4
           local.get $5
           i32.store $0
           local.get $5
           if
            local.get $4
            local.get $5
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           br $while-continue|00
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $5
          local.get $4
          i32.store $0
          local.get $5
          local.get $0
          i32.store $0 offset=8
          local.get $0
          call $~lib/as-proto/assembly/Reader/Reader#string@override
          local.set $5
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store $0 offset=4
          local.get $4
          local.get $5
          i32.store $0 offset=4
          local.get $5
          if
           local.get $4
           local.get $5
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          br $while-continue|00
         end
         global.get $~lib/memory/__stack_pointer
         local.tee $5
         local.get $4
         i32.store $0
         local.get $5
         local.get $0
         i32.store $0 offset=8
         local.get $0
         call $~lib/as-proto/assembly/Reader/Reader#string@override
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $5
         i32.store $0 offset=4
         local.get $4
         local.get $5
         i32.store $0 offset=8
         local.get $5
         if
          local.get $4
          local.get $5
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         br $while-continue|00
        end
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        local.get $5
        i32.const 7
        i32.and
        call $~lib/as-proto/assembly/Reader/Reader#skipType@override
        br $while-continue|00
       end
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=4
      local.get $1
      local.get $4
      i32.store $0 offset=36
      local.get $4
      if
       local.get $1
       local.get $4
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      br $while-continue|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $3
     i32.const 7
     i32.and
     call $~lib/as-proto/assembly/Reader/Reader#skipType@override
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/testHelpers/checkCustomDataFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $1
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 11552
  local.get $0
  select
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 29824
   i32.const 29600
   i32.const 71
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  end
  i32.eqz
  if
   i32.const 29968
   i32.const 29600
   i32.const 73
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=24
   block $is_instance
    local.get $1
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $3
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $3
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 29600
   i32.const 76
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=20
  local.get $2
  local.get $1
  call $assembly/types/target/CustomDataFilter#constructor
  local.tee $1
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.set $2
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=32
    block $is_instance1
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 6
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 5
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 103
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 107
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 137
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 138
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 141
     i32.eq
     br_if $is_instance1
     local.get $3
     i32.const 143
     i32.eq
     br_if $is_instance1
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 29600
    i32.const 77
    i32.const 54
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $0
  end
  local.get $2
  local.get $0
  i32.store $0 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=40
  local.get $0
  local.get $2
  local.get $1
  call $assembly/bucketing/segmentation/_checkCustomData
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 8112
   i32.const 12992
   i32.const 99
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Handler#reset
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/SegmentationResult#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30272
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 30272
  local.get $0
  i32.load8_u $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/string/String.__ne
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 30304
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=20
   local.get $0
   i32.eqz
   if
    i32.const 8112
    i32.const 17872
    i32.const 32
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $1
   i32.const 30304
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/testHelpers/evaluateOperatorFromJSON (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 76
  memory.fill $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0 offset=4
  local.get $4
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $4
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
  i32.eqz
  if
   i32.const 30096
   i32.const 29600
   i32.const 88
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
  local.tee $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 7168
  i32.store $0 offset=16
  local.get $2
  i32.const 7168
  call $~lib/string/String.__ne
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $2
   i32.store $0 offset=4
   local.get $5
   i32.const 25536
   i32.store $0 offset=16
   local.get $2
   i32.const 25536
   call $~lib/string/String.__ne
  else
   i32.const 0
  end
  if
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $2
    i32.store $0 offset=20
    local.get $5
    local.get $2
    i32.store $0 offset=4
    local.get $5
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
    local.tee $6
    i32.store $0 offset=24
    block $is_instance
     local.get $6
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 29600
    i32.const 92
    i32.const 31
    call $~lib/builtins/abort
    unreachable
   end
   local.get $5
   local.get $6
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 30096
    i32.const 29600
    i32.const 94
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $6
   i32.store $0 offset=4
   local.get $2
   local.get $6
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $5
   i32.store $0 offset=32
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $3
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $6
      i32.store $0 offset=4
      local.get $7
      local.get $5
      i32.store $0 offset=36
      local.get $5
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=16
      local.get $7
      local.get $6
      local.get $2
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $8
      i32.store $0 offset=40
      local.get $7
      local.get $8
      if (result i32)
       local.get $8
      else
       i32.const 8112
       i32.const 29600
       i32.const 98
       i32.const 25
       call $~lib/builtins/abort
       unreachable
      end
      i32.store $0 offset=44
      block $is_instance1
       local.get $8
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $2
       i32.const 6
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 5
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 103
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 107
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 137
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 138
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 141
       i32.eq
       br_if $is_instance1
       local.get $2
       i32.const 143
       i32.eq
       br_if $is_instance1
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 29600
      i32.const 98
      i32.const 25
      call $~lib/builtins/abort
      unreachable
     end
     local.get $7
     local.get $8
     i32.store $0 offset=48
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $5
     i32.store $0 offset=52
     local.get $5
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=56
     local.get $8
     call $assembly/types/target/Audience#constructor
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=36
     local.get $0
     local.get $2
     local.get $7
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
  end
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $4
   i32.store $0 offset=60
   block $is_instance3
    local.get $4
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $3
    i32.const 6
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 5
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 103
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 107
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 137
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 138
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 141
    i32.eq
    br_if $is_instance3
    local.get $3
    i32.const 143
    i32.eq
    br_if $is_instance3
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj2
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 29600
   i32.const 103
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=16
  local.get $2
  local.get $4
  call $assembly/types/target/AudienceOperator#constructor
  local.tee $2
  i32.store $0 offset=64
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
  local.tee $1
  i32.store $0 offset=68
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=36
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=52
  local.get $3
  local.get $2
  local.get $0
  local.get $1
  local.get $4
  call $assembly/bucketing/segmentation/_evaluateOperator
  local.tee $0
  i32.store $0 offset=72
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $assembly/bucketing/segmentation/SegmentationResult#stringify
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 76
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/Target#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 18336
   i32.const 35
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/target/TargetDistribution#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/Target#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $2
  i32.const 20
  i32.const 186
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=16
  local.get $3
  i32.const 24752
  i32.store $0 offset=20
  local.get $0
  i32.const 24752
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $assembly/types/target/Audience#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  i32.const 24800
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 24800
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $3
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $3
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=16
   local.get $3
   call $assembly/types/target/Rollout#constructor
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=4
  local.get $3
  i32.const 25024
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 25024
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $0
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30512
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.const 30512
  call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/TargetDistribution>
  local.tee $0
  i32.store $0 offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 170
  i32.const 30544
  call $~lib/rt/__newArray
  local.tee $3
  i32.store $0 offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $3
    i32.store $0 offset=4
    local.get $4
    call $assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>#constructor
    local.tee $4
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=20
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    local.get $4
    local.get $5
    i32.store $0 offset=4
    local.get $5
    if
     local.get $4
     local.get $5
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $4
    i32.store $0 offset=12
    local.get $5
    local.get $0
    i32.store $0 offset=44
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load $0
    local.tee $5
    i32.store $0 offset=16
    local.get $4
    local.get $5
    i32.store $0
    local.get $5
    if
     local.get $4
     local.get $5
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $3
    local.get $4
    call $~lib/array/Array<~lib/string/String>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  local.get $2
  i32.store $0 offset=4
  local.get $0
  local.get $3
  i32.store $0 offset=12
  local.get $0
  i32.const 25184
  i32.store $0 offset=16
  local.get $3
  call $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=16
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/testHelpers/decideTargetVariationFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 30352
    i32.const 29600
    i32.const 111
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=16
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $5
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $5
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 29600
    i32.const 112
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $4
   local.get $0
   call $assembly/types/target/Target#constructor
   local.tee $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store $0
   local.get $4
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$assembly/types/target/Target#decideTargetVariation
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.store $0 offset=4
     local.get $4
     local.get $0
     i32.load $0 offset=16
     local.tee $4
     i32.store $0
     local.get $4
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0 offset=4
      local.get $4
      local.get $0
      i32.load $0 offset=16
      local.tee $5
      i32.store $0
      local.get $4
      local.get $5
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $4
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      local.get $1
      f64.const 1
      f64.eq
      local.get $3
      local.get $4
      f64.load $0 offset=8
      f64.add
      local.tee $3
      f64.const 1
      f64.eq
      i32.and
      local.get $1
      local.get $3
      f64.lt
      i32.or
      local.get $1
      f64.const 0
      f64.ge
      i32.and
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       local.get $4
       i32.store $0
       local.get $4
       i32.load $0
       local.set $2
       local.get $0
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$assembly/types/target/Target#decideTargetVariation
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 19136
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    i32.load $0
    local.tee $0
    i32.store $0 offset=4
    i32.const 19136
    local.get $0
    call $~lib/string/String#concat
    i32.const 18336
    i32.const 64
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 24
  i32.const 195
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    local.get $1
    local.get $0
    i32.store $0 offset=4
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $1
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 30800
    i32.const 26
    i32.const 49
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $1
   i32.const 8
   i32.const 190
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21616
   i32.store $0 offset=16
   local.get $0
   i32.const 21616
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $1
   local.get $2
   i32.store $0
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 23392
   i32.store $0 offset=16
   local.get $2
   i32.const 3328
   i32.store $0 offset=20
   local.get $0
   i32.const 23392
   i32.const 3328
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
   local.get $1
   local.get $0
   i32.store $0 offset=4
   block $is_instance
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.tee $1
    i32.const 6
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 5
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 103
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 107
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 137
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 138
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 141
    i32.eq
    br_if $is_instance
    local.get $1
    i32.const 143
    i32.eq
    br_if $is_instance
    i32.const 0
    br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 8352
   i32.const 30800
   i32.const 33
   i32.const 77
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/types/target/Target#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $4
   i32.const 20
   i32.const 189
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   local.get $4
   i32.store $0 offset=4
   local.get $5
   local.get $4
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 21520
   i32.store $0 offset=16
   local.get $0
   i32.const 21520
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $6
   local.get $4
   i32.store $0
   local.get $4
   if
    local.get $6
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   i32.const 23344
   i32.store $0 offset=8
   local.get $4
   local.get $0
   i32.const 23344
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getArr
   local.tee $4
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $4
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=24
    local.get $4
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 30896
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i64.const 0
    i64.store $0 offset=8
    local.get $2
    local.get $7
    i32.store $0
    local.get $2
    local.get $7
    i32.load $0 offset=12
    local.tee $8
    i32.const 2
    i32.const 191
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $2
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $2
    i32.load $0 offset=4
    local.set $9
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $3
     local.get $8
     local.get $7
     i32.load $0 offset=12
     local.tee $4
     local.get $4
     local.get $8
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $7
      i32.store $0 offset=8
      local.get $4
      local.get $3
      i32.const 2
      i32.shl
      local.tee $5
      local.get $7
      i32.load $0 offset=4
      i32.add
      i32.load $0
      local.tee $10
      i32.store $0
      local.get $4
      local.get $7
      i32.store $0 offset=8
      i32.const 3
      global.set $~argumentsLength
      local.get $4
      local.get $10
      local.get $3
      local.get $7
      i32.const 30896
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      local.tee $4
      i32.store $0 offset=12
      local.get $5
      local.get $9
      i32.add
      local.get $4
      i32.store $0
      local.get $4
      if
       local.get $2
       local.get $4
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $6
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $6
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 23584
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.const 23584
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
   local.tee $2
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $2
    i32.store $0 offset=16
    local.get $1
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 33780
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $1
    i32.const 8
    i32.const 192
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    local.get $1
    i32.const 0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
    local.tee $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 23648
    i32.store $0 offset=16
    local.get $2
    i32.const 23648
    call $assembly/helpers/jsonHelpers/getStringFromJSON
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    local.get $1
    local.get $3
    i32.store $0
    local.get $3
    if
     local.get $1
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $2
    i32.store $0 offset=12
    local.get $3
    i32.const 23696
    i32.store $0 offset=16
    local.get $2
    i32.const 23696
    call $assembly/helpers/jsonHelpers/getDateFromJSON
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $1
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $6
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $6
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 23744
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.const 23744
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 30928
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $1
   i32.const 2
   i32.const 193
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=4
   local.set $4
   i32.const 0
   local.set $2
   loop $for-loop|05
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $2
    local.get $1
    local.get $0
    i32.load $0 offset=12
    local.tee $5
    local.get $1
    local.get $5
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.store $0 offset=8
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     local.tee $7
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $8
     i32.store $0
     local.get $5
     local.get $0
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $5
     local.get $8
     local.get $2
     local.get $0
     i32.const 30928
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $5
     i32.store $0 offset=12
     local.get $4
     local.get $7
     i32.add
     local.get $5
     i32.store $0
     local.get $5
     if
      local.get $3
      local.get $5
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|05
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $6
   local.get $3
   i32.store $0 offset=16
   local.get $3
   if
    local.get $6
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $0
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/feature/Feature#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 44
  memory.fill $0
  local.get $2
  i32.const 28
  i32.const 188
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=16
  local.get $0
  i32.const 21520
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  i32.const 15872
  i32.store $0 offset=16
  local.get $3
  i32.const 3600
  i32.store $0 offset=20
  local.get $0
  i32.const 15872
  i32.const 3600
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  i32.const 21552
  i32.store $0 offset=16
  local.get $0
  i32.const 21552
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0 offset=8
  local.get $3
  i32.const 22976
  i32.store $0 offset=12
  local.get $0
  i32.const 22976
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $3
  local.get $4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
  local.tee $6
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  call $~lib/array/Array<assembly/types/feature/Variation>#constructor
  local.tee $3
  i32.store $0 offset=28
  global.get $~lib/memory/__stack_pointer
  call $~lib/map/Map<~lib/string/String,assembly/types/feature/Variation>#constructor
  local.tee $4
  i32.store $0 offset=32
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $1
   i32.gt_s
   if
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $6
     i32.store $0 offset=8
     local.get $7
     local.get $6
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $8
     i32.store $0 offset=36
     block $is_instance
      local.get $8
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $5
      i32.const 6
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 5
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 103
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 107
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 137
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 138
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 141
      i32.eq
      br_if $is_instance
      local.get $5
      i32.const 143
      i32.eq
      br_if $is_instance
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 23184
     i32.const 35
     i32.const 45
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store $0 offset=8
    local.get $7
    local.get $8
    call $assembly/types/feature/Variation#constructor
    local.tee $5
    i32.store $0 offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $3
    local.get $5
    call $~lib/array/Array<~lib/string/String>#push
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load $0
    local.tee $7
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $4
    local.get $7
    local.get $5
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=12
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $4
  i32.store $0 offset=8
  local.get $2
  local.get $4
  i32.store $0 offset=24
  local.get $4
  if
   local.get $2
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  i32.const 25312
  i32.store $0 offset=20
  local.get $0
  i32.const 25312
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $assembly/types/featureConfiguration/FeatureConfiguration#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 22672
  i32.store $0 offset=16
  local.get $0
  i32.const 22672
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/ConfigBody#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 112
   memory.fill $0
   local.get $3
   i32.const 40
   i32.const 187
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 0
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $4
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=20
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=12
   local.get $1
   i32.const 22352
   i32.store $0 offset=16
   local.get $0
   i32.const 22352
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=24
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 19664
   i32.store $0 offset=20
   local.get $0
   i32.const 19664
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   local.get $1
   call $assembly/types/configBody/PublicProject#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 19712
   i32.store $0 offset=20
   local.get $0
   i32.const 19712
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   local.get $1
   call $assembly/types/configBody/PublicEnvironment#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 19760
   i32.store $0 offset=12
   local.get $0
   i32.const 19760
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $1
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.tee $5
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 194
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=4
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $3
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $6
   local.get $3
   i32.store $0
   local.get $3
   if
    local.get $6
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   local.get $3
   i32.store $0 offset=4
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 32
   i32.store $0 offset=8
   local.get $7
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   i32.store $0 offset=12
   local.get $7
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $6
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor
   local.tee $7
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/feature/Feature>#constructor
   local.tee $8
   i32.store $0 offset=36
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $5
      i32.store $0 offset=8
      local.get $1
      local.get $5
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store $0 offset=40
      block $is_instance
       local.get $3
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $9
       i32.const 6
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 5
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 103
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 107
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 137
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 138
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 141
       i32.eq
       br_if $is_instance
       local.get $9
       i32.const 143
       i32.eq
       br_if $is_instance
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 30720
      i32.const 164
      i32.const 41
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $1
     local.get $3
     call $assembly/types/feature/Feature#constructor
     local.tee $9
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=8
     local.get $6
     local.get $9
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.load $0
     local.tee $1
     i32.store $0 offset=8
     local.get $8
     local.get $1
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $8
      i32.store $0 offset=4
      local.get $1
      local.get $9
      i32.store $0 offset=16
      local.get $1
      local.get $9
      i32.load $0
      local.tee $3
      i32.store $0 offset=8
      local.get $1
      local.get $9
      i32.store $0 offset=12
      local.get $8
      local.get $3
      local.get $9
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     end
     i32.const 0
     local.set $3
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $9
      i32.store $0 offset=8
      local.get $1
      local.get $9
      i32.load $0 offset=12
      local.tee $1
      i32.store $0 offset=4
      local.get $1
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $3
      i32.gt_s
      if
       i32.const 0
       local.set $1
       loop $for-loop|2
        global.get $~lib/memory/__stack_pointer
        local.tee $10
        local.get $9
        i32.store $0 offset=16
        local.get $10
        local.get $9
        i32.load $0 offset=12
        local.tee $10
        i32.store $0 offset=12
        local.get $10
        local.get $3
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.set $10
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load $0 offset=12
        local.tee $10
        i32.store $0 offset=4
        local.get $10
        call $~lib/array/Array<~lib/string/String>#get:length
        local.get $1
        i32.gt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $10
         local.get $7
         i32.store $0 offset=4
         local.get $10
         local.get $9
         i32.store $0 offset=52
         local.get $10
         local.get $9
         i32.load $0 offset=12
         local.tee $10
         i32.store $0 offset=48
         local.get $10
         local.get $3
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.set $10
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.store $0 offset=20
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.load $0 offset=12
         local.tee $10
         i32.store $0 offset=16
         local.get $10
         local.get $1
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.set $10
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.store $0 offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $10
         i32.load $0
         local.tee $10
         i32.store $0 offset=8
         local.get $7
         local.get $10
         call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
         i32.eqz
         if
          global.get $~lib/memory/__stack_pointer
          local.tee $10
          local.get $7
          i32.store $0 offset=4
          local.get $10
          local.get $9
          i32.store $0 offset=56
          local.get $10
          local.get $9
          i32.load $0 offset=12
          local.tee $10
          i32.store $0 offset=52
          local.get $10
          local.get $3
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $10
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0 offset=48
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.load $0 offset=12
          local.tee $10
          i32.store $0 offset=20
          local.get $10
          local.get $1
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.set $10
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.store $0 offset=16
          global.get $~lib/memory/__stack_pointer
          local.get $10
          i32.load $0
          local.tee $10
          i32.store $0 offset=8
          global.get $~lib/memory/__stack_pointer
          local.get $9
          i32.store $0 offset=12
          local.get $7
          local.get $10
          local.get $9
          call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
         end
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|2
        end
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|1
      end
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $6
   i32.store $0 offset=8
   local.get $4
   local.get $6
   i32.store $0 offset=12
   local.get $6
   if
    local.get $4
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $7
   i32.store $0 offset=8
   local.get $4
   local.get $7
   i32.store $0 offset=36
   local.get $7
   if
    local.get $4
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 25360
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.const 25360
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
   local.tee $1
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/target/Audience>#constructor
   local.tee $2
   i32.store $0 offset=64
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.tee $5
    i32.store $0 offset=68
    i32.const 0
    local.set $3
    loop $for-loop|3
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     call $~lib/array/Array<~lib/string/String>#get:length
     local.get $3
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $5
      i32.store $0 offset=4
      local.get $6
      local.get $5
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $6
      i32.store $0 offset=72
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      local.get $6
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $7
      i32.store $0 offset=76
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=8
      block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj9 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=80
       global.get $~lib/memory/__stack_pointer
       local.set $8
       local.get $7
       i32.eqz
       if
        i32.const 8112
        i32.const 30720
        i32.const 203
        i32.const 57
        call $~lib/builtins/abort
        unreachable
       end
       local.get $8
       local.get $7
       i32.store $0 offset=84
       block $is_instance10
        local.get $7
        i32.const 8
        i32.sub
        i32.load $0
        local.tee $8
        i32.const 6
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 5
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 103
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 107
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 137
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 138
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 141
        i32.eq
        br_if $is_instance10
        local.get $8
        i32.const 143
        i32.eq
        br_if $is_instance10
        i32.const 0
        br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj9
       end
       i32.const 1
      end
      i32.eqz
      if
       i32.const 8352
       i32.const 30720
       i32.const 203
       i32.const 57
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=20
      local.get $7
      call $assembly/types/target/Audience#constructor
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=12
      local.get $2
      local.get $6
      local.get $7
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|3
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0 offset=4
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=4
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 19936
   i32.store $0 offset=12
   local.get $0
   i32.const 19936
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
   local.tee $0
   i32.store $0 offset=88
   global.get $~lib/memory/__stack_pointer
   call $~lib/array/Array<assembly/types/configBody/Variable>#constructor
   local.tee $2
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
   local.tee $3
   i32.store $0 offset=96
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/configBody/Variable>#constructor
   local.tee $5
   i32.store $0 offset=100
   i32.const 0
   local.set $1
   loop $for-loop|4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj11 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $6
      local.get $0
      i32.store $0 offset=8
      local.get $6
      local.get $0
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $7
      i32.store $0 offset=104
      block $is_instance12
       local.get $7
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $8
       i32.const 6
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 5
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 103
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 107
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 137
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 138
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 141
       i32.eq
       br_if $is_instance12
       local.get $8
       i32.const 143
       i32.eq
       br_if $is_instance12
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj11
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 30720
      i32.const 216
      i32.const 43
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $6
     local.get $7
     call $assembly/types/configBody/Variable#constructor
     local.tee $6
     i32.store $0 offset=108
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $2
     local.get $6
     call $~lib/array/Array<~lib/string/String>#push
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0 offset=8
     local.tee $7
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $3
     local.get $7
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.load $0
     local.tee $7
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=12
     local.get $5
     local.get $7
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|4
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $2
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0 offset=16
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $3
   i32.store $0 offset=8
   local.get $4
   local.get $3
   i32.store $0 offset=28
   local.get $3
   if
    local.get $4
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $4
   i32.store $0 offset=4
   local.get $0
   local.get $5
   i32.store $0 offset=8
   local.get $4
   local.get $5
   i32.store $0 offset=32
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 112
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBody/ConfigBody#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19664
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19664
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19712
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19712
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 25360
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 25360
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19760
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19760
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 19936
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 19936
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=24
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 22352
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=24
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 22352
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#stringify (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1440
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 1440
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1488
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=4
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1488
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15408
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 15408
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15440
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 15440
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=16
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1552
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=16
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1552
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1712
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=20
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1712
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  f64.load $0 offset=24
  local.tee $1
  local.get $1
  f64.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15488
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 15488
   local.get $0
   f64.load $0 offset=24
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=44
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1760
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=44
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1760
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=32
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1808
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=32
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1808
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=36
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 14896
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=36
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 14896
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $2
  i32.store $0 offset=4
  local.get $3
  i32.const 30960
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=20
  local.get $3
  local.get $0
  i32.load $0 offset=48
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/date/Date#toISOString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  i32.const 30960
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31008
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=52
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/date/Date#toISOString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  i32.const 31008
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1600
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=56
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 1600
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1648
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=60
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 1648
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21856
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=64
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 21856
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21904
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=68
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 21904
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=72
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 21952
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=72
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 21952
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=76
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 22000
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=76
   local.tee $0
   i32.store $0 offset=12
   local.get $2
   i32.const 22000
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getStringMapFromJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
  local.tee $1
  i32.store $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   call $~lib/array/Array<~lib/string/String>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=8
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $3
    local.get $4
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $4
    i32.store $0 offset=12
    global.get $~lib/memory/__stack_pointer
    local.set $5
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str (result i32)
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $4
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
     local.tee $6
     i32.store $0 offset=16
     local.get $3
     local.get $6
     if (result i32)
      local.get $6
     else
      i32.const 8112
      i32.const 15312
      i32.const 201
      i32.const 28
      call $~lib/builtins/abort
      unreachable
     end
     i32.store $0 offset=20
     i32.const 0
     local.get $6
     i32.const 8
     i32.sub
     i32.load $0
     i32.const 133
     i32.ne
     br_if $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Str
     drop
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 15312
     i32.const 201
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    local.get $6
    i32.store $0 offset=24
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=4
    local.get $3
    local.get $4
    i32.store $0 offset=8
    local.get $3
    local.get $6
    i32.store $0 offset=32
    local.get $6
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Str#valueOf
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=28
    local.get $1
    local.get $4
    local.get $3
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig.fromJSONString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 116
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 116
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 31056
    i32.const 21328
    i32.const 165
    i32.const 36
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $7
    i32.store $0 offset=12
    block $is_instance
     local.get $7
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $3
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $3
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 21328
    i32.const 166
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $7
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $7
   i32.store $0 offset=20
   local.get $0
   i32.const 19664
   i32.store $0 offset=24
   local.get $7
   i32.const 19664
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $0
   local.get $3
   call $assembly/types/configBody/PublicProject#constructor
   local.tee $8
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 19712
   i32.store $0 offset=24
   local.get $7
   i32.const 19712
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=20
   local.get $0
   local.get $3
   call $assembly/types/configBody/PublicEnvironment#constructor
   local.tee $9
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 19760
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.const 19760
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $10
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
   local.tee $3
   i32.store $0 offset=40
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=20
    local.get $10
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $10
     i32.store $0 offset=20
     local.get $10
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     local.get $0
     local.get $4
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $4
     i32.store $0 offset=44
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=20
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store $0 offset=52
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0 offset=56
      global.get $~lib/memory/__stack_pointer
      local.get $10
      local.get $4
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $11
      i32.store $0 offset=60
      local.get $11
      i32.eqz
      if
       i32.const 8112
       i32.const 21328
       i32.const 176
       i32.const 54
       call $~lib/builtins/abort
       unreachable
      end
      local.get $0
      local.get $11
      i32.store $0 offset=64
      block $is_instance1
       local.get $11
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $0
       i32.const 6
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 5
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 103
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 107
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 137
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 138
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 141
       i32.eq
       br_if $is_instance1
       local.get $0
       i32.const 143
       i32.eq
       br_if $is_instance1
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj0
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 21328
      i32.const 176
      i32.const 54
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $11
     i32.store $0 offset=48
     local.get $0
     i32.const 44
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.const 44
     memory.fill $0
     local.get $0
     local.get $11
     i32.store $0
     local.get $0
     i32.const 21584
     i32.store $0 offset=4
     local.get $0
     local.get $11
     i32.const 21584
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
     local.tee $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.eqz
     if
      i32.const 0
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
      local.set $0
     end
     local.get $0
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $11
     i32.store $0 offset=36
     local.get $5
     i32.const 21520
     i32.store $0 offset=40
     local.get $11
     i32.const 21520
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 15872
     i32.store $0 offset=40
     local.get $11
     i32.const 15872
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 21552
     i32.store $0 offset=40
     local.get $11
     i32.const 21552
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 23648
     i32.store $0 offset=40
     local.get $11
     i32.const 23648
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 31184
     i32.store $0 offset=40
     local.get $11
     i32.const 31184
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 31232
     i32.store $0 offset=40
     local.get $11
     i32.const 31232
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=36
     local.get $0
     call $assembly/types/bucketedUserConfig/EvalReason.fromJSONObj
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=36
     local.get $5
     local.get $6
     local.get $12
     local.get $13
     local.get $14
     local.get $11
     local.get $0
     call $assembly/types/bucketedUserConfig/SDKFeature#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 44
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=24
     local.get $10
     local.get $4
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $7
   i32.store $0 offset=4
   local.get $0
   i32.const 19808
   i32.store $0 offset=20
   local.get $0
   local.get $7
   i32.const 19808
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $0
   i32.store $0 offset=68
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/helpers/jsonHelpers/getStringMapFromJSONObj
   local.tee $0
   i32.store $0 offset=72
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 19872
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.const 19872
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $1
   i32.store $0 offset=76
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/FeatureVariation>#constructor
   local.tee $4
   i32.store $0 offset=80
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=20
    local.get $1
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=4
    local.get $5
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $1
     i32.store $0 offset=20
     local.get $1
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=4
     local.get $5
     local.get $6
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $5
     i32.store $0 offset=84
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.get $5
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#getObj
     local.tee $6
     i32.store $0 offset=88
     local.get $6
     i32.eqz
     if
      i32.const 31280
      i32.const 21328
      i32.const 187
      i32.const 24
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $10
     local.get $4
     i32.store $0 offset=4
     local.get $10
     local.get $5
     i32.store $0 offset=20
     local.get $10
     local.get $6
     i32.store $0 offset=48
     local.get $6
     call $assembly/types/bucketedUserConfig/FeatureVariation.fromJSONObj
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=24
     local.get $4
     local.get $5
     local.get $6
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $7
   i32.store $0 offset=4
   local.get $1
   i32.const 19936
   i32.store $0 offset=20
   local.get $1
   local.get $7
   i32.const 19936
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $2
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
   local.tee $5
   i32.store $0 offset=96
   i32.const 0
   local.set $1
   loop $for-loop|2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=20
    local.get $2
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0 offset=4
    local.get $6
    call $~lib/array/Array<~lib/string/String>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $2
     i32.store $0 offset=20
     local.get $2
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=4
     local.get $6
     local.get $7
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $6
     i32.store $0 offset=100
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=20
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj2 (result i32)
      global.get $~lib/memory/__stack_pointer
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=52
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0 offset=56
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $6
      call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $10
      i32.store $0 offset=104
      local.get $10
      i32.eqz
      if
       i32.const 8112
       i32.const 21328
       i32.const 195
       i32.const 59
       call $~lib/builtins/abort
       unreachable
      end
      local.get $7
      local.get $10
      i32.store $0 offset=108
      block $is_instance3
       local.get $10
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $7
       i32.const 6
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 5
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 103
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 107
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 137
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 138
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 141
       i32.eq
       br_if $is_instance3
       local.get $7
       i32.const 143
       i32.eq
       br_if $is_instance3
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj2
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 21328
      i32.const 195
      i32.const 59
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=48
     local.get $10
     call $assembly/types/bucketedUserConfig/SDKVariable.fromJSONObj
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=24
     local.get $5
     local.get $6
     local.get $7
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $8
   i32.store $0 offset=20
   local.get $1
   local.get $9
   i32.store $0 offset=24
   local.get $1
   local.get $3
   i32.store $0 offset=48
   local.get $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   local.get $4
   i32.store $0 offset=56
   local.get $1
   local.get $5
   i32.store $0 offset=112
   local.get $8
   local.get $9
   local.get $3
   local.get $0
   local.get $4
   local.get $5
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 116
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0 offset=12
  local.get $3
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i64.extend_i32_s
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value.Integer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/eventQueueOptions/EventQueueOptions#stringify (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 26160
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 26160
  local.get $0
  i32.load8_u $0 offset=8
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 26240
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 26240
  local.get $0
  i32.load8_u $0 offset=9
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<bool>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 26320
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 26320
  local.get $0
  i32.load $0 offset=4
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<i32>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcEvent/DVCEvent#stringify (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $3
  i32.const 15872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  i32.store $0 offset=20
  local.get $4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 15952
   i32.store $0 offset=8
   local.get $2
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $~lib/date/Date#toISOString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $3
   i32.const 15952
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 28464
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $3
   i32.const 28464
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  f64.load $0 offset=16
  local.tee $1
  local.get $1
  f64.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 21168
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $3
   i32.const 21168
   local.get $0
   f64.load $0 offset=16
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=24
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 28496
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=24
   local.tee $0
   i32.store $0 offset=12
   local.get $3
   i32.const 28496
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcEvent/DVCRequestEvent#stringify (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 28
  memory.fill $0
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $3
  i32.const 15872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 28464
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $3
   i32.const 28464
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 31648
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=12
   local.get $3
   i32.const 31648
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $3
  i32.store $0 offset=4
  local.get $2
  i32.const 1440
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=12
  local.get $3
  i32.const 1440
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15952
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $3
  i32.const 15952
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31696
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $3
  i32.const 31696
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  f64.load $0 offset=24
  local.tee $1
  local.get $1
  f64.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 21168
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=12
   local.get $3
   i32.const 21168
   local.get $0
   f64.load $0 offset=24
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.load $0 offset=32
  local.tee $4
  i32.store $0 offset=24
  local.get $4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 31744
   i32.store $0 offset=8
   local.get $2
   local.get $4
   i32.store $0 offset=16
   local.get $4
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $3
   i32.const 31744
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=36
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 28496
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=36
   local.tee $0
   i32.store $0 offset=12
   local.get $3
   i32.const 28496
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/platformData/PlatformData#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1600
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 1600
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1648
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 1648
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21856
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21856
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21904
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21904
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 21952
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=20
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 21952
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=24
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 22000
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=24
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 22000
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0
  local.get $6
  i32.load $0 offset=4
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $0
    i32.store $0 offset=8
    local.get $7
    local.get $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $0
    i32.load $0 offset=4
    i32.add
    i32.load $0
    local.tee $5
    i32.store $0
    local.get $7
    local.get $0
    i32.store $0 offset=8
    i32.const 3
    global.set $~argumentsLength
    local.get $7
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $5
    i32.store $0 offset=12
    local.get $4
    local.get $8
    i32.add
    local.get $5
    i32.store $0
    local.get $5
    if
     local.get $6
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load $0 offset=4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  local.get $0
  i32.load $0 offset=4
  call $~lib/array/Array<~lib/string/String>#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  i32.const 32
  i32.or
  local.get $1
  local.get $0
  i32.load8_u $0 offset=8
  select
  local.set $1
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.eq
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0
  block $folding-inner0
   block $case12|0
    block $case11|0
     block $case10|0
      block $case9|0
       block $case8|0
        block $case7|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               local.get $0
               i32.load $0 offset=4
               local.tee $2
               i32.const 100
               i32.ne
               if
                local.get $2
                i32.const 68
                i32.eq
                br_if $case1|0
                local.get $2
                i32.const 46
                i32.eq
                br_if $case2|0
                local.get $2
                i32.const 119
                i32.eq
                br_if $case3|0
                local.get $2
                i32.const 87
                i32.eq
                br_if $case4|0
                local.get $2
                i32.const 115
                i32.eq
                br_if $case5|0
                local.get $2
                i32.const 83
                i32.eq
                br_if $case6|0
                local.get $2
                i32.const 116
                i32.eq
                br_if $case7|0
                local.get $2
                i32.const 114
                i32.eq
                br_if $case8|0
                local.get $2
                i32.const 110
                i32.eq
                br_if $case9|0
                local.get $2
                i32.const 118
                i32.eq
                br_if $case10|0
                local.get $2
                i32.const 102
                i32.eq
                br_if $case11|0
                br $case12|0
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $1
               i32.const 48
               i32.sub
               i32.const 10
               i32.lt_u
               return
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 12
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $1
              i32.const 48
              i32.sub
              i32.const 10
              i32.ge_u
              return
             end
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.store $0
             local.get $0
             i32.load8_u $0 offset=8
             if (result i32)
              i32.const 1
             else
              local.get $1
              i32.const 10
              i32.ne
              local.get $1
              i32.const 13
              i32.ne
              i32.and
              local.get $1
              i32.const 8232
              i32.ne
              i32.and
              local.get $1
              i32.const 8233
              i32.ne
              i32.and
             end
             local.set $0
             br $folding-inner0
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 12
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $1
            i32.const 95
            i32.eq
            local.get $1
            i32.const 32
            i32.or
            i32.const 97
            i32.sub
            i32.const 26
            i32.lt_u
            i32.or
            local.get $1
            i32.const 48
            i32.sub
            i32.const 10
            i32.lt_u
            i32.or
            return
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $1
           i32.const 95
           i32.eq
           local.get $1
           i32.const 32
           i32.or
           i32.const 97
           i32.sub
           i32.const 26
           i32.lt_u
           i32.or
           local.get $1
           i32.const 48
           i32.sub
           i32.const 10
           i32.lt_u
           i32.or
           i32.eqz
           return
          end
          local.get $1
          call $~lib/assemblyscript-regex/assembly/char/isWhitespace
          local.set $0
          br $folding-inner0
         end
         local.get $1
         call $~lib/assemblyscript-regex/assembly/char/isWhitespace
         i32.eqz
         local.set $0
         br $folding-inner0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $1
        i32.const 9
        i32.eq
        return
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       i32.const 13
       i32.eq
       return
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
      i32.const 10
      i32.eq
      return
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     i32.const 11
     i32.eq
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    i32.const 12
    i32.eq
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 31984
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.load $0 offset=4
   local.set $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/string/String.fromCharCode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 31984
   local.get $0
   call $~lib/string/String.__concat
   i32.const 10784
   i32.const 172
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $4
   local.get $0
   i32.store $0 offset=4
   local.get $4
   local.get $0
   i32.load $0 offset=4
   local.tee $4
   i32.store $0
   local.get $4
   call $~lib/array/Array<~lib/string/String>#get:length
   local.set $5
   loop $for-loop|2
    local.get $3
    local.get $5
    i32.lt_s
    if
     block $for-break2
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.store $0 offset=4
      local.get $4
      local.get $0
      i32.load $0 offset=4
      local.tee $6
      i32.store $0
      local.get $4
      local.get $6
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $6
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      block $break|3
       block $case3|3
        block $case2|3
         block $case1|3
          block $case0|3
           local.get $6
           i32.load $0
           br_table $case0|3 $case1|3 $case2|3 $case3|3 $break|3
          end
          block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher (result i32)
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=12
           i32.const 0
           local.get $6
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 46
           i32.ne
           br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 8352
           i32.const 10784
           i32.const 190
           i32.const 20
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $6
          i32.store $0
          local.get $6
          local.get $1
          call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher#matches
          local.set $2
          br $break|3
         end
         block $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches (result i32)
          block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher (result i32)
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store $0 offset=16
           i32.const 0
           local.get $6
           i32.const 8
           i32.sub
           i32.load $0
           i32.const 51
           i32.ne
           br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher
           drop
           i32.const 1
          end
          i32.eqz
          if
           i32.const 8352
           i32.const 10784
           i32.const 194
           i32.const 20
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $6
          i32.store $0
          local.get $2
          i32.const 12
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 33780
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $4
          i64.const 0
          i64.store $0
          local.get $4
          i32.const 0
          i32.store $0 offset=8
          i32.const 0
          local.set $2
          local.get $4
          local.get $6
          i32.store $0 offset=4
          local.get $4
          local.get $6
          i32.load $0 offset=4
          local.tee $4
          i32.store $0
          local.get $4
          call $~lib/array/Array<~lib/string/String>#get:length
          local.set $7
          loop $for-loop|0
           local.get $2
           local.get $7
           i32.lt_s
           if
            global.get $~lib/memory/__stack_pointer
            local.tee $4
            local.get $6
            i32.store $0 offset=8
            local.get $4
            local.get $6
            i32.load $0 offset=4
            local.tee $4
            i32.store $0 offset=4
            local.get $4
            local.get $2
            call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
            local.set $8
            global.get $~lib/memory/__stack_pointer
            local.get $8
            i32.store $0
            global.get $~lib/memory/__stack_pointer
            i32.const 4
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 33780
            i32.lt_s
            br_if $folding-inner0
            global.get $~lib/memory/__stack_pointer
            local.tee $4
            i32.const 0
            i32.store $0
            local.get $4
            local.get $8
            i32.store $0
            local.get $1
            local.get $8
            i32.load $0
            i32.ge_s
            if (result i32)
             global.get $~lib/memory/__stack_pointer
             local.get $8
             i32.store $0
             local.get $1
             local.get $8
             i32.load $0 offset=4
             i32.le_s
            else
             i32.const 0
            end
            local.set $4
            global.get $~lib/memory/__stack_pointer
            i32.const 4
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $4
            if
             global.get $~lib/memory/__stack_pointer
             i32.const 12
             i32.add
             global.set $~lib/memory/__stack_pointer
             i32.const 1
             br $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches
            end
            local.get $2
            i32.const 1
            i32.add
            local.set $2
            br $for-loop|0
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
         end
         local.set $2
         br $break|3
        end
        block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.store $0 offset=20
         i32.const 0
         local.get $6
         i32.const 8
         i32.sub
         i32.load $0
         i32.const 54
         i32.ne
         br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher
         drop
         i32.const 1
        end
        i32.eqz
        if
         i32.const 8352
         i32.const 10784
         i32.const 198
         i32.const 20
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0
        local.get $6
        local.get $1
        call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
        local.set $2
        br $break|3
       end
       block $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $6
        i32.store $0 offset=24
        i32.const 0
        local.get $6
        i32.const 8
        i32.sub
        i32.load $0
        i32.const 49
        i32.ne
        br_if $__inlined_func$~instanceof|~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher
        drop
        i32.const 1
       end
       i32.eqz
       if
        i32.const 8352
        i32.const 10784
        i32.const 202
        i32.const 20
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store $0
       local.get $6
       local.get $1
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
       local.set $2
      end
      local.get $2
      br_if $for-break2
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|2
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $2
   i32.eqz
   local.get $2
   local.get $0
   i32.load8_u $0 offset=8
   select
   local.set $0
   local.get $1
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/FeatureVariation#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21616
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=12
  local.get $2
  i32.const 21616
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 23648
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $0
  i32.store $0 offset=12
  local.get $2
  i32.const 23648
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21520
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 15872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21552
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 23648
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 23648
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31184
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 31184
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31232
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 31232
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21584
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=28
  local.tee $0
  i32.store $0 offset=12
  local.get $1
  i32.const 21584
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/dvcUser/DVCUser#stringify (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $2
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1440
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $3
  i32.store $0 offset=12
  local.get $2
  i32.const 1440
  local.get $3
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1488
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=8
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1488
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15408
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 15408
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=16
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15440
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=16
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 15440
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1552
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=20
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1552
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=32
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1712
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=32
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1712
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  f64.load $0 offset=24
  local.tee $1
  local.get $1
  f64.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 15488
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=12
   local.get $2
   i32.const 15488
   local.get $0
   f64.load $0 offset=24
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=36
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1760
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=36
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1760
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=40
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 1808
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=40
   local.tee $3
   i32.store $0 offset=12
   local.get $2
   i32.const 1808
   local.get $3
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=44
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 14896
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0 offset=16
   local.get $3
   local.get $0
   i32.load $0 offset=44
   local.tee $0
   i32.store $0 offset=12
   local.get $2
   i32.const 14896
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/feature/Feature#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21520
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 15872
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21552
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21552
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 22976
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.store $0 offset=16
  local.get $2
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 22976
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 25312
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=16
  local.tee $0
  i32.store $0 offset=12
  local.get $1
  i32.const 25312
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21520
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23344
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 30800
    i32.const 42
    i32.const 61
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23344
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23584
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=28
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 30800
    i32.const 45
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23584
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 32544
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=32
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 30800
    i32.const 48
    i32.const 52
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 32544
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i32.const 23744
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  local.get $0
  i32.load $0 offset=16
  local.tee $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 23744
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfiguration/FeaturePrerequisites#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21616
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0 offset=12
  local.get $2
  i32.const 21616
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 23392
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=12
  local.get $2
  i32.const 23392
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfiguration/FeatureWinningVariation#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 23648
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $1
  i32.store $0 offset=12
  local.get $2
  i32.const 23648
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 23696
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $0
  i32.store $0 offset=16
  local.get $0
  call $~lib/date/Date#toISOString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $2
  i32.const 23696
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/featureConfigurationV2/FeatureConfigurationV2#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 21520
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.tee $2
  i32.store $0 offset=12
  local.get $1
  i32.const 21520
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23344
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=24
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 23440
    i32.const 42
    i32.const 61
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23344
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23584
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=28
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 23440
    i32.const 45
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23584
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 32544
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=32
   local.get $2
   i32.eqz
   if
    i32.const 8112
    i32.const 23440
    i32.const 48
    i32.const 52
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=16
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $1
   i32.const 32544
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i32.const 23744
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  local.get $0
  i32.load $0 offset=16
  local.tee $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $1
  i32.const 23744
  local.get $0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/AudienceFilter#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 15872
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=12
   local.get $2
   i32.const 15872
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/AudienceOperator#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23792
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23792
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23840
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $0
   i32.store $0 offset=16
   local.get $0
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   local.get $1
   i32.const 23840
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/AudienceMatchFilter#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23392
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23392
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24672
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 24672
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 15872
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 15872
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/UserFilter#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 15872
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 15872
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24016
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 24016
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23392
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23392
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24064
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 24064
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/CustomDataFilter#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $1
  i32.const 0
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=36
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24576
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=36
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 24576
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=32
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24624
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=32
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 24624
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 15872
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 15872
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24016
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 24016
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 23392
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   i32.store $0 offset=12
   local.get $1
   i32.const 23392
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24064
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0 offset=16
   local.get $2
   local.get $0
   i32.load $0 offset=8
   local.tee $0
   i32.store $0 offset=12
   local.get $1
   i32.const 24064
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 48
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  local.set $2
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0 offset=8
  local.get $0
  local.get $0
  i32.load $0
  i32.const 1
  i32.add
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0
  local.set $3
  local.get $1
  local.get $0
  i32.store $0 offset=4
  block $folding-inner1
   block $folding-inner0
    local.get $3
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $2
    i32.load8_u $0
    local.tee $2
    i32.const 127
    i32.and
    local.set $1
    local.get $2
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $1
    local.get $3
    i32.load8_u $0
    local.tee $2
    i32.const 127
    i32.and
    i32.const 7
    i32.shl
    i32.or
    local.set $1
    local.get $2
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=16
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $1
    local.get $3
    i32.load8_u $0
    local.tee $2
    i32.const 127
    i32.and
    i32.const 14
    i32.shl
    i32.or
    local.set $1
    local.get $2
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=20
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $1
    local.get $3
    i32.load8_u $0
    local.tee $2
    i32.const 127
    i32.and
    i32.const 21
    i32.shl
    i32.or
    local.set $1
    local.get $2
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=24
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $1
    local.get $3
    i32.load8_u $0
    local.tee $2
    i32.const 15
    i32.and
    i32.const 28
    i32.shl
    i32.or
    local.set $1
    local.get $2
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=28
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $3
    i32.load8_u $0
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=32
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $3
    i32.load8_u $0
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=36
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $3
    i32.load8_u $0
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=40
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $3
    i32.load8_u $0
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=44
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $3
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $0
    i32.load $0
    i32.const 1
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $4
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $4
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
    local.get $3
    i32.load8_u $0
    i32.const 128
    i32.lt_u
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 48
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    return
   end
   i32.const 6400
   i32.const 32592
   i32.const 210
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  block $folding-inner0
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    drop
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $0
    local.get $1
    local.get $0
    i32.load $0
    i32.add
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0
    local.set $1
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $1
    local.get $0
    i32.load $0 offset=4
    i32.gt_u
    br_if $folding-inner0
   else
    loop $while-continue|0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0
     local.set $1
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     i32.store $0 offset=8
     local.get $0
     local.get $0
     i32.load $0
     i32.const 1
     i32.add
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $0
     i32.load $0
     local.set $3
     local.get $2
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.load $0 offset=4
     i32.gt_u
     br_if $folding-inner0
     local.get $1
     i32.load8_u $0
     i32.const 128
     i32.and
     br_if $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 6400
  i32.const 32592
  i32.const 210
  i32.const 5
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  i64.const 0
  i64.store $0 offset=8
  block $break|0
   block $case5|0
    block $case4|0
     block $case3|0
      block $case2|0
       block $case1|0
        block $case0|0
         local.get $1
         br_table $case0|0 $case1|0 $case2|0 $case3|0 $case5|0 $case4|0 $case5|0
        end
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $0
        i32.const 0
        call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
        br $break|0
       end
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       i32.const 8
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0
      local.get $1
      local.get $0
      i32.store $0 offset=4
      local.get $1
      local.get $0
      i32.store $0 offset=8
      local.get $0
      local.get $0
      call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
      call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
      br $break|0
     end
     loop $while-continue|1
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store $0 offset=12
      local.get $1
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#varint32
      i32.const 7
      i32.and
      local.tee $1
      i32.const 4
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       local.get $1
       call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skipType
       br $while-continue|1
      end
     end
     br $break|0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.const 4
    call $~lib/as-proto/assembly/internal/FixedReader/FixedReader#skip
    br $break|0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32704
   i32.store $0
   local.get $1
   i32.const 10
   call $~lib/number/I32#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   i32.const 32704
   local.get $0
   call $~lib/string/String.__concat
   i32.const 32592
   i32.const 131
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 6400
   i32.const 7120
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~start
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   call $start:assembly/types/index
   i32.const 2000
   call $~lib/staticarray/StaticArray<i32>#constructor
   global.set $assembly/helpers/murmurhash/keyBuffer
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   global.set $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
   i32.const 97
   i32.const 122
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
   global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
   i32.const 65
   i32.const 90
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
   global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
   global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 24
   i32.const 100
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=20
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/managers/configDataManager/_configData
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
   global.set $assembly/managers/configDataManager/_configMetadata
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 24
   i32.const 101
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0 offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=12
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=16
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=20
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/managers/clientCustomDataManager/_clientCustomData
   call $start:assembly/managers/eventQueueManager
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Null#constructor
   global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/NULL
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 4
   i32.const 127
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 128
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   call $~lib/array/Array<~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.handler
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   i32.const 8
   i32.const 130
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   global.set $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.decoder
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 6096
   i32.const 6144
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/object/Object#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 1
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy $0 $0
  end
  local.get $4
  local.get $1
  i32.store $0
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $5
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/staticarray/StaticArray<i32>#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 6096
   i32.const 7024
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.shl
  i32.const 18
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/managers/platformDataManager/_getPlatformData (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $assembly/managers/platformDataManager/_platformData
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/managers/platformDataManager/_platformData
   local.tee $0
   i32.store $0
   local.get $0
   i32.eqz
   if
    i32.const 8112
    i32.const 12512
    i32.const 13
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   i32.const 12432
   i32.const 12512
   i32.const 11
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/string/String.UTF8.decodeUnsafe (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.add
  local.tee $4
  local.get $0
  i32.lt_u
  if
   i32.const 0
   i32.const 12688
   i32.const 770
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  local.set $1
  loop $while-continue|0
   local.get $0
   local.get $4
   i32.lt_u
   if
    block $while-break|0
     local.get $0
     i32.load8_u $0
     local.set $5
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     i32.const 128
     i32.and
     if
      local.get $0
      local.get $4
      i32.eq
      br_if $while-break|0
      local.get $0
      i32.load8_u $0
      i32.const 63
      i32.and
      local.set $6
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      i32.const 224
      i32.and
      i32.const 192
      i32.eq
      if
       local.get $1
       local.get $5
       i32.const 31
       i32.and
       i32.const 6
       i32.shl
       local.get $6
       i32.or
       i32.store16 $0
      else
       local.get $0
       local.get $4
       i32.eq
       br_if $while-break|0
       local.get $0
       i32.load8_u $0
       i32.const 63
       i32.and
       local.set $3
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       local.get $5
       i32.const 240
       i32.and
       i32.const 224
       i32.eq
       if
        local.get $5
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        local.get $6
        i32.const 6
        i32.shl
        i32.or
        local.get $3
        i32.or
        local.set $3
       else
        local.get $0
        local.get $4
        i32.eq
        br_if $while-break|0
        local.get $0
        i32.load8_u $0
        i32.const 63
        i32.and
        local.get $5
        i32.const 7
        i32.and
        i32.const 18
        i32.shl
        local.get $6
        i32.const 12
        i32.shl
        i32.or
        local.get $3
        i32.const 6
        i32.shl
        i32.or
        i32.or
        local.set $3
        local.get $0
        i32.const 1
        i32.add
        local.set $0
       end
       local.get $3
       i32.const 65536
       i32.lt_u
       if
        local.get $1
        local.get $3
        i32.store16 $0
       else
        local.get $1
        local.get $3
        i32.const 65536
        i32.sub
        local.tee $3
        i32.const 10
        i32.shr_u
        i32.const 55296
        i32.or
        local.get $3
        i32.const 1023
        i32.and
        i32.const 56320
        i32.or
        i32.const 16
        i32.shl
        i32.or
        i32.store $0
        local.get $1
        i32.const 2
        i32.add
        local.set $1
       end
      end
     else
      local.get $1
      local.get $5
      i32.store16 $0
     end
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
  end
  local.get $2
  local.get $1
  local.get $2
  i32.sub
  call $~lib/rt/itcms/__renew
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    block $is_instance
     local.get $0
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $0
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isArr (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 132
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 133
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isFloat (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 124
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isInteger (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 135
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isBool (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 134
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isNull (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  if (result i32)
   local.get $0
   i32.const 8
   i32.sub
   i32.load $0
   i32.const 126
   i32.eq
  else
   i32.const 0
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i64.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 8832
   return
  end
  i64.const 0
  local.get $0
  i64.sub
  local.get $0
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.tee $2
  select
  local.tee $0
  i64.const 4294967295
  i64.le_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.wrap_i64
   local.tee $1
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $1
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $1
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $1
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $1
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $1
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   local.get $2
   local.get $3
   i32.add
   local.get $1
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $0
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $0
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $0
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $0
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $0
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $0
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $0
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $1
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   local.get $2
   local.get $3
   i32.add
   local.set $5
   loop $while-continue|0
    local.get $0
    i64.const 100000000
    i64.ge_u
    if
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $0
     i64.const 100000000
     i64.div_u
     local.tee $0
     i64.const 100000000
     i64.mul
     i64.sub
     i32.wrap_i64
     local.tee $4
     i32.const 10000
     i32.rem_u
     local.tee $6
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 8844
     i32.add
     i64.load32_u $0
     local.get $6
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 8844
     i32.add
     i64.load32_u $0
     i64.const 32
     i64.shl
     i64.or
     i64.store $0
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     i32.const 10000
     i32.div_u
     local.tee $4
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 8844
     i32.add
     i64.load32_u $0
     local.get $4
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 8844
     i32.add
     i64.load32_u $0
     i64.const 32
     i64.shl
     i64.or
     i64.store $0
     br $while-continue|0
    end
   end
   local.get $5
   local.get $0
   i32.wrap_i64
   local.get $1
   call $~lib/util/number/utoa32_dec_lut
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/index/generateBoundedHashesFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_generateBoundedHashes
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11792
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 11792
   local.get $0
   f64.load $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11840
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $1
   i32.const 11840
   local.get $0
   f64.load $0 offset=8
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#set<f64>
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj#stringify@override
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/generateBucketedConfigForUser (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $assembly/managers/configDataManager/_getConfigData
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $0
   call $assembly/managers/clientCustomDataManager/_getClientCustomData
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $2
   local.get $3
   local.get $0
   i32.const 0
   call $assembly/bucketing/bucketing/_generateBucketedConfig
   local.tee $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/generateBucketedConfigForUserUTF8 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $assembly/managers/configDataManager/_getConfigData
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8
   local.tee $3
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $0
   call $assembly/managers/clientCustomDataManager/_getClientCustomData
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $1
   local.get $2
   local.get $3
   local.get $0
   i32.const 0
   call $assembly/bucketing/bucketing/_generateBucketedConfig
   local.tee $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/string/String.UTF8.encode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/typedarray/Uint8Array.wrap@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/generateBucketedConfigForUserWithOverrides (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   i32.const 48
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 48
   memory.fill $0
   local.get $4
   local.get $0
   local.tee $3
   i32.store $0
   local.get $4
   local.get $0
   call $assembly/managers/configDataManager/_getConfigData
   local.tee $4
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser.fromUTF8
   local.tee $5
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   local.tee $0
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $2
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   if
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=20
     block $is_instance
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $1
      i32.const 6
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 5
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 103
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 107
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 137
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 138
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 141
      i32.eq
      br_if $is_instance
      local.get $1
      i32.const 143
      i32.eq
      br_if $is_instance
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 20080
     i32.const 91
     i32.const 46
     call $~lib/builtins/abort
     unreachable
    end
   else
    i32.const 0
    local.set $0
   end
   local.get $2
   local.get $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $4
   i32.store $0
   local.get $1
   local.get $5
   i32.store $0 offset=28
   local.get $1
   local.get $3
   i32.store $0 offset=40
   local.get $3
   call $assembly/managers/clientCustomDataManager/_getClientCustomData
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=36
   local.get $1
   local.get $4
   local.get $5
   local.get $2
   local.get $0
   call $assembly/bucketing/bucketing/_generateBucketedConfig
   local.tee $0
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=32
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=28
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/string/String.UTF8.encode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/typedarray/Uint8Array.wrap@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/variableForUser_PB_Preallocated (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $~lib/typedarray/Uint8Array#slice
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/index/variableForUser_PB
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/variableForUser_PB (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $assembly/index/variableForUser_PB
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/index/variableForUser (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $0
  i32.store $0
  local.get $5
  local.get $1
  i32.store $0 offset=4
  local.get $5
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/index/variableForUser
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/index/variableForUserPreallocated (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $0
   i32.store $0
   local.get $7
   local.get $1
   i32.store $0 offset=4
   local.get $7
   local.get $3
   i32.store $0 offset=8
   local.get $7
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   i64.const 0
   i64.store $0
   local.get $7
   i64.const 0
   i64.store $0 offset=8
   local.get $7
   local.get $0
   i32.store $0
   local.get $7
   local.get $1
   i32.store $0 offset=12
   local.get $1
   i32.const 0
   local.get $2
   call $~lib/string/String#substr
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=12
   local.get $3
   i32.const 0
   local.get $4
   call $~lib/string/String#substr
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $1
   local.get $2
   local.get $5
   local.get $6
   call $assembly/index/variableForUser
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setPlatformData (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/platformData/PlatformData.fromString
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   global.set $assembly/managers/platformDataManager/_platformData
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setPlatformDataUTF8 (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/platformData/PlatformData.fromUTF8
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   global.set $assembly/managers/platformDataManager/_platformData
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/clearPlatformData@varargs (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   i32.const 0
   global.set $assembly/managers/platformDataManager/_platformData
   local.get $1
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setConfigDataUTF8Preallocated (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $1
   local.get $2
   call $~lib/typedarray/Uint8Array#slice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $assembly/index/setConfigDataUTF8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setConfigDataUTF8 (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/index/setConfigDataUTF8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigData (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.const 0
   call $assembly/types/configBodyV2/ConfigBodyV2.fromString
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   call $assembly/managers/configDataManager/_setConfigData
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setConfigDataWithEtag (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $1
   local.get $2
   call $assembly/types/configBodyV2/ConfigBodyV2.fromString
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $assembly/managers/configDataManager/_setConfigData
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/hasConfigDataForEtag (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   global.get $assembly/managers/configDataManager/_configData
   local.tee $2
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/index/hasConfigDataForEtag
    local.get $2
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$assembly/index/hasConfigDataForEtag
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    call $assembly/managers/configDataManager/_getConfigData
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.load $0 offset=20
     local.tee $2
     i32.store $0
     local.get $2
     i32.const 0
     call $~lib/string/String.__ne
    else
     i32.const 0
    end
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=12
     local.get $2
     local.get $0
     i32.load $0 offset=20
     local.tee $0
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=8
     local.get $0
     local.get $1
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setClientCustomData (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 25440
    i32.const 20080
    i32.const 374
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    local.get $2
    local.get $1
    i32.store $0 offset=16
    block $is_instance
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 20080
    i32.const 377
    i32.const 34
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $0
   local.get $1
   call $assembly/managers/clientCustomDataManager/_setClientCustomData
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setClientCustomDataUTF8 (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 25440
    i32.const 20080
    i32.const 393
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    local.get $2
    local.get $1
    i32.store $0 offset=16
    block $is_instance
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $2
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $2
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 20080
    i32.const 396
    i32.const 34
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $0
   local.get $1
   call $assembly/managers/clientCustomDataManager/_setClientCustomData
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/getSDKKeyFromConfig (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/managers/configDataManager/_getConfigData
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=24
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/getConfigMetadata (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   block $__inlined_func$assembly/index/getConfigMetadata (result i32)
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0
     local.get $1
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $1
     global.get $assembly/managers/configDataManager/_configMetadata
     local.tee $2
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $0
     call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      global.get $assembly/managers/configDataManager/_configMetadata
      local.tee $2
      i32.store $0
      local.get $1
      local.get $0
      i32.store $0 offset=4
      local.get $2
      local.get $0
      call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      block $__inlined_func$assembly/managers/configDataManager/_getConfigMetadata
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       global.get $assembly/managers/configDataManager/_configData
       local.tee $2
       i32.store $0
       local.get $1
       local.get $0
       local.tee $1
       i32.store $0 offset=4
       local.get $2
       local.get $0
       call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        local.get $1
        i32.store $0
        local.get $0
        local.get $1
        call $assembly/managers/configDataManager/_getConfigData
        local.tee $2
        i32.store $0 offset=8
        global.get $~lib/memory/__stack_pointer
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.load $0
        local.tee $0
        i32.store $0 offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=16
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.load $0 offset=8
        local.tee $2
        i32.store $0 offset=16
        local.get $0
        local.get $2
        call $assembly/types/configBody/ConfigMetadata#constructor
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0
        local.get $3
        local.get $0
        call $assembly/types/configBody/ConfigMetadata#stringify
        local.tee $0
        i32.store $0 offset=20
        global.get $~lib/memory/__stack_pointer
        global.get $assembly/managers/configDataManager/_configMetadata
        local.tee $2
        i32.store $0
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store $0 offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store $0 offset=12
        local.get $2
        local.get $1
        local.get $0
        call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/managers/configDataManager/_getConfigMetadata
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 25536
       local.set $0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/index/getConfigMetadata
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3 (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/helpers/murmurhash/murmurhashV3
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3_js (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   local.get $1
   call $assembly/helpers/murmurhash/murmurhashV3
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $__inlined_func$~lib/util/number/utoa32
    local.get $1
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 8832
     local.set $0
     br $__inlined_func$~lib/util/number/utoa32
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $1
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $1
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $1
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $1
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $1
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $1
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $1
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $2
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
    local.get $0
    local.get $1
    local.get $2
    call $~lib/util/number/utoa32_dec_lut
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/initEventQueue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/initEventQueue
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/flushEventQueue (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/managers/eventQueueManager/getEventQueue
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/managers/eventQueueManager/getRequestPayloadManager
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $4
   local.get $2
   i32.store $0
   local.get $4
   local.get $2
   i32.load $0 offset=8
   local.tee $1
   i32.store $0 offset=4
   local.get $4
   local.get $2
   i32.store $0
   local.get $4
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   i32.store $0 offset=8
   local.get $4
   local.get $2
   i32.store $0
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/UserEventsBatchRecord>#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $2
   local.get $4
   i32.store $0 offset=8
   local.get $4
   if
    local.get $2
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   call $~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,~lib/map/Map<~lib/string/String,i64>>>>>#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   local.get $2
   local.get $4
   i32.store $0 offset=12
   local.get $4
   if
    local.get $2
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.get $2
   i32.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=16
   local.get $4
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 8
   i32.const 176
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $6
   i32.store $0 offset=4
   local.get $2
   local.get $6
   call $~lib/object/Object#constructor
   local.tee $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $2
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $5
   i32.store $0 offset=12
   local.get $2
   local.get $5
   i32.store $0 offset=4
   local.get $5
   if
    local.get $2
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=24
   local.get $1
   local.get $2
   i32.load $0
   local.tee $3
   i32.store $0 offset=16
   local.get $1
   local.get $2
   i32.store $0 offset=24
   local.get $1
   local.get $2
   i32.load $0 offset=4
   local.tee $2
   i32.store $0 offset=20
   local.get $1
   local.get $0
   local.get $3
   local.get $2
   call $assembly/eventQueue/requestPayloadManager/RequestPayloadManager#constructFlushPayloads
   local.tee $0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=16
   local.get $0
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/dvcEvent/FlushPayload>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Arr#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/onPayloadSuccess (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   call $assembly/managers/eventQueueManager/getRequestPayloadManager
   local.tee $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i64.const 0
   i64.store $0 offset=8
   local.get $0
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0
   local.tee $3
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=12
    local.get $0
    i32.const 28016
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=8
    i32.const 28016
    i32.const 1
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 28016
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=4
    i32.const 28016
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 27120
    i32.const 251
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.store $0 offset=8
   local.get $0
   local.get $2
   i32.load $0
   local.tee $2
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/onPayloadFailure (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   call $assembly/managers/eventQueueManager/getRequestPayloadManager
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $0
   local.get $3
   i32.store $0 offset=8
   local.get $0
   local.get $3
   i32.load $0
   local.tee $4
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $4
   local.get $1
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.store $0 offset=12
    local.get $0
    i32.const 14240
    i32.const 14128
    local.get $2
    select
    local.tee $2
    i32.store $0 offset=16
    local.get $0
    i32.const 28240
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=8
    i32.const 28240
    i32.const 1
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 28240
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    i32.const 28240
    i32.const 3
    local.get $2
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 28240
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0 offset=4
    i32.const 28240
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    i32.const 27120
    i32.const 261
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $3
    i32.store $0 offset=8
    local.get $0
    local.get $3
    i32.load $0
    local.tee $2
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $0
    local.get $2
    local.get $1
    call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $0
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 26912
    i32.store $0 offset=4
    local.get $0
    i32.const 26912
    i32.store $0 offset=4
    local.get $0
    i32.const 26912
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $3
    i32.store $0 offset=8
    local.get $0
    local.get $3
    i32.load $0
    local.tee $2
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/queueEvent (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 36
   memory.fill $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   call $assembly/managers/eventQueueManager/getEventQueue
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser.fromJSONString
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $assembly/types/dvcEvent/DVCEvent.fromJSONString
   local.tee $2
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $0
   call $assembly/managers/clientCustomDataManager/_getClientCustomData
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=16
   local.get $1
   local.get $4
   call $assembly/types/dvcUser/DVCPopulatedUser#mergeClientCustomData
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $0
   call $assembly/managers/configDataManager/_getConfigData
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=24
   local.get $0
   call $assembly/managers/clientCustomDataManager/_getClientCustomData
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $4
   local.get $5
   local.get $1
   local.get $0
   i32.const 0
   call $assembly/bucketing/bucketing/_generateBucketedConfig
   local.tee $0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=16
   local.tee $0
   i32.store $0 offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 28
   memory.fill $0
   local.get $4
   local.get $3
   i32.store $0
   local.get $4
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $assembly/eventQueue/eventQueue/EventQueue#checkIfEventLoggingDisabled
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $2
    i32.store $0 offset=4
    local.get $4
    local.get $1
    i32.store $0 offset=12
    local.get $4
    local.get $1
    i32.load $0
    local.tee $5
    i32.store $0 offset=8
    local.get $4
    local.get $0
    i32.store $0 offset=12
    local.get $4
    local.get $2
    local.get $5
    local.get $0
    call $assembly/types/dvcEvent/DVCRequestEvent#constructor
    local.tee $2
    i32.store $0 offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load $0
    local.tee $4
    i32.store $0 offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load $0 offset=8
    local.tee $0
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=4
    local.get $0
    local.get $4
    call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $3
     i32.store $0 offset=8
     local.get $0
     local.get $3
     i32.load $0 offset=8
     local.tee $5
     i32.store $0
     local.get $0
     local.get $4
     i32.store $0 offset=4
     local.get $0
     local.get $5
     local.get $4
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#get
     local.tee $0
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=4
     local.get $0
     local.get $1
     i32.store $0
     local.get $1
     if
      local.get $0
      local.get $1
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0 offset=4
     i32.const 0
     i32.const 2
     i32.const 110
     i32.const 28544
     call $~lib/rt/__newArray
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=8
     local.get $0
     local.get $1
     local.get $5
     call $assembly/types/dvcEvent/UserEventsBatchRecord#constructor
     local.tee $0
     i32.store $0 offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load $0 offset=8
     local.tee $1
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $1
     local.get $4
     local.get $0
     call $~lib/map/Map<~lib/string/String,~lib/@devcycle/assemblyscript-json/assembly/JSON/Value>#set
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.load $0 offset=4
    local.tee $0
    i32.store $0
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/string/String>#push
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=4
    local.get $3
    local.get $3
    i32.load $0 offset=16
    i32.const 1
    i32.add
    i32.store $0 offset=16
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/queueAggregateEvent (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $1
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/managers/eventQueueManager/queueAggregateEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $1
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=8
  local.get $4
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent_JSON
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/queueVariableEvaluatedEvent (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  i32.store $0
  local.get $4
  local.get $1
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=8
  local.get $4
  local.get $3
  i32.store $0 offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/managers/eventQueueManager/queueVariableEvaluatedEvent
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/managers/eventQueueManager/cleanupEventQueue (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   global.get $assembly/managers/eventQueueManager/_eventQueueMap
   local.tee $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/managers/eventQueueManager/_eventQueueMap
    local.tee $2
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $assembly/managers/eventQueueManager/_requestPayloadMap
   local.tee $2
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $0
   call $~lib/map/Map<~lib/string/String,assembly/types/configBodyV2/ConfigBodyV2>#has
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    global.get $assembly/managers/eventQueueManager/_requestPayloadMap
    local.tee $2
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0 offset=4
    local.get $2
    local.get $0
    call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#delete
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/managers/eventQueueManager/eventQueueSize (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $0
   call $assembly/managers/eventQueueManager/getEventQueue
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/managers/eventQueueManager/getRequestPayloadManager
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0 offset=16
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   block $__inlined_func$assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i64.const 0
     i64.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0 offset=12
     local.get $3
     local.get $0
     i32.load $0
     local.tee $0
     i32.store $0 offset=8
     local.get $0
     call $~lib/map/Map<~lib/string/String,assembly/types/dvcEvent/FlushPayload>#values
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     i32.const 29296
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     i64.const 0
     i64.store $0 offset=8
     local.get $3
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0 offset=12
     local.set $5
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $1
      local.get $5
      local.get $0
      i32.load $0 offset=12
      local.tee $3
      local.get $3
      local.get $5
      i32.gt_s
      select
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       local.get $0
       i32.store $0 offset=12
       local.get $3
       local.get $0
       i32.load $0 offset=4
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $6
       i32.store $0 offset=4
       local.get $3
       local.get $0
       i32.store $0 offset=8
       i32.const 4
       global.set $~argumentsLength
       local.get $2
       local.get $6
       local.get $1
       local.get $0
       i32.const 29296
       i32.load $0
       call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
       local.set $2
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     br $__inlined_func$assembly/eventQueue/requestPayloadManager/RequestPayloadManager#payloadEventCount
    end
    br $folding-inner1
   end
   local.get $4
   i32.add
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testVariableForUserParams_PB (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/protobuf-generated/VariableForUserParams_PB/decodeVariableForUserParams_PB
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 29328
   i32.store $0 offset=4
   local.get $0
   i32.const 29328
   call $~lib/as-proto/assembly/Protobuf/Protobuf.encode<assembly/types/protobuf-generated/SDKVariable_PB/SDKVariable_PB>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testDVCUser_PB (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 29360
   i32.store $0 offset=4
   i32.const 2
   global.set $~argumentsLength
   local.get $0
   i32.const 29360
   call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/dvcUser/DVCUser.fromPBUser
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/dvcUser/DVCUser#toProtoBuf
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testSDKVariable_PB (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 29424
   i32.store $0 offset=4
   i32.const 2
   global.set $~argumentsLength
   local.get $0
   i32.const 29424
   call $~lib/as-proto/assembly/Protobuf/Protobuf.decode<assembly/types/protobuf-generated/VariableForUserParams_PB/VariableForUserParams_PB>@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/protobuf-generated/SDKVariable_PB/encodeSDKVariable_PB
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/checkNumbersFilterFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 29456
    i32.const 29600
    i32.const 55
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $1
    i32.store $0 offset=24
    block $is_instance
     local.get $1
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $0
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 29600
    i32.const 56
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=20
   local.get $3
   i32.const 0
   local.get $1
   call $assembly/types/target/UserFilter#constructor
   local.tee $0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $2
   local.get $0
   call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/checkVersionFiltersFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $1
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 29680
    i32.const 29600
    i32.const 62
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $2
    i32.store $0 offset=16
    block $is_instance
     local.get $2
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $1
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $1
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 29600
    i32.const 63
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=12
   local.get $3
   i32.const 0
   local.get $2
   call $assembly/types/target/UserFilter#constructor
   local.tee $1
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/_checkVersionFilters
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/checkCustomDataFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/testHelpers/checkCustomDataFromJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/testHelpers/evaluateOperatorFromJSON@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 7168
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 7168
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=4
   local.get $3
   local.get $1
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0 offset=12
   local.get $0
   local.get $1
   local.get $2
   call $assembly/testHelpers/evaluateOperatorFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/decideTargetVariationFromJSON (param $0 i32) (param $1 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  call $assembly/testHelpers/decideTargetVariationFromJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/testHelpers/doesUserPassRolloutFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $2
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
   else
    i32.const 0
   end
   local.tee $0
   i32.store $0 offset=8
   local.get $0
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    local.get $0
    call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   else
    i32.const 1
   end
   i32.eqz
   if
    i32.const 30576
    i32.const 29600
    i32.const 119
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   if (result i32)
    block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=16
     block $is_instance
      local.get $0
      i32.const 8
      i32.sub
      i32.load $0
      local.tee $2
      i32.const 6
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 5
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 103
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 107
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 137
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 138
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 141
      i32.eq
      br_if $is_instance
      local.get $2
      i32.const 143
      i32.eq
      br_if $is_instance
      i32.const 0
      br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
     end
     i32.const 1
    end
    i32.eqz
    if
     i32.const 8352
     i32.const 29600
     i32.const 121
     i32.const 53
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=12
    local.get $0
    call $assembly/types/target/Rollout#constructor
   else
    i32.const 0
   end
   local.tee $0
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_doesUserPassRollout
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testConfigBodyClass@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   block $__inlined_func$assembly/testHelpers/testConfigBodyClass (result i32)
    local.get $2
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     i32.const 28
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 28
     memory.fill $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
     local.tee $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     i32.eqz
     if
      i32.const 22144
      i32.const 30720
      i32.const 133
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $3
      i32.store $0 offset=12
      block $is_instance
       local.get $3
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $0
       i32.const 6
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 5
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 103
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 107
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 137
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 138
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 141
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 143
       i32.eq
       br_if $is_instance
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 30720
      i32.const 137
      i32.const 31
      call $~lib/builtins/abort
      unreachable
     end
     local.get $4
     local.get $3
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $3
     i32.store $0 offset=20
     local.get $0
     local.get $1
     i32.store $0 offset=24
     local.get $3
     local.get $1
     call $assembly/types/configBody/ConfigBody#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 28
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/types/configBody/ConfigBody#stringify
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/testHelpers/testConfigBodyClass
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testConfigBodyClassFromUTF8@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   block $__inlined_func$assembly/testHelpers/testConfigBodyClassFromUTF8 (result i32)
    local.get $2
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 0
     i32.store $0 offset=8
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $1
     i32.store $0 offset=4
     local.get $2
     i32.const 28
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 28
     memory.fill $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $0
     i32.store $0 offset=4
     local.get $3
     local.get $0
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/typedarray/Uint8Array>
     local.tee $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=4
     local.get $3
     call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
     i32.eqz
     if
      i32.const 22144
      i32.const 30720
      i32.const 119
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $3
      i32.store $0 offset=12
      block $is_instance
       local.get $3
       i32.const 8
       i32.sub
       i32.load $0
       local.tee $0
       i32.const 6
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 5
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 103
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 107
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 137
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 138
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 141
       i32.eq
       br_if $is_instance
       local.get $0
       i32.const 143
       i32.eq
       br_if $is_instance
       i32.const 0
       br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
      end
      i32.const 1
     end
     i32.eqz
     if
      i32.const 8352
      i32.const 30720
      i32.const 123
      i32.const 31
      call $~lib/builtins/abort
      unreachable
     end
     local.get $4
     local.get $3
     i32.store $0 offset=16
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $3
     i32.store $0 offset=20
     local.get $0
     local.get $1
     i32.store $0 offset=24
     local.get $3
     local.get $1
     call $assembly/types/configBody/ConfigBody#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 28
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     local.get $0
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $assembly/types/configBody/ConfigBody#stringify
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/testHelpers/testConfigBodyClassFromUTF8
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testConfigBodyV2Class@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $assembly/types/configBodyV2/ConfigBodyV2.fromString
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/configBody/ConfigBody#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testConfigBodyV2ClassFromUTF8@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   local.get $0
   local.get $1
   call $assembly/types/configBodyV2/ConfigBodyV2.fromUTF8
   local.tee $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/configBody/ConfigBody#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testDVCUserClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/dvcUser/DVCUser.fromJSONString
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testDVCUserClassFromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/dvcUser/DVCUser.fromUTF8
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.tee $0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/testBucketedUserConfigClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig.fromJSONString
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/testHelpers/echoString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 33780
  i32.lt_s
  if
   i32.const 66576
   i32.const 66624
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/testHelpers/testSortObjectsByString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   block $__inlined_func$assembly/testHelpers/testSortObjectsByString (result i32)
    local.get $3
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     local.get $1
     i32.store $0 offset=4
     local.get $3
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 33780
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 24
     memory.fill $0
     local.get $3
     local.get $0
     i32.store $0
     local.get $3
     i32.const 31488
     i32.store $0 offset=4
     local.get $3
     local.get $0
     i32.const 31488
     call $~lib/array/Array<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>#sort
     local.tee $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 201
     i32.const 31520
     call $~lib/rt/__newArray
     local.tee $0
     i32.store $0 offset=12
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      call $~lib/array/Array<~lib/string/String>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $0
       i32.store $0
       local.get $4
       local.get $3
       i32.store $0 offset=20
       local.get $3
       local.get $2
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store $0 offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.load $0 offset=4
       local.tee $4
       i32.store $0 offset=4
       local.get $0
       local.get $4
       call $~lib/array/Array<~lib/string/String>#push
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $1
     i32.store $0
     local.get $2
     i32.const 25184
     i32.store $0 offset=4
     local.get $1
     i32.const 25184
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      call $~lib/array/Array<assembly/types/target/TargetDistribution>#reverse
      local.set $0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/testHelpers/testSortObjectsByString
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/types/eventQueueOptions/testEventQueueOptionsClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/eventQueueOptions/EventQueueOptions#constructor
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   call $assembly/types/eventQueueOptions/EventQueueOptions#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/types/dvcEvent/testDVCEventClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/dvcEvent/DVCEvent.fromJSONString
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/dvcEvent/DVCEvent#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/types/dvcEvent/testDVCRequestEventClass (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $2
   i32.store $0 offset=8
   local.get $3
   i32.const 32
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/@devcycle/assemblyscript-json/assembly/JSON/Value#get:isObj
   i32.eqz
   if
    i32.const 31552
    i32.const 28384
    i32.const 244
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store $0 offset=20
   local.get $0
   call $assembly/types/dvcEvent/DVCEvent.fromJSONString
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=16
   block $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=24
    block $is_instance
     local.get $2
     i32.const 8
     i32.sub
     i32.load $0
     local.tee $0
     i32.const 6
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 5
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 103
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 107
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 137
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 138
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 141
     i32.eq
     br_if $is_instance
     local.get $0
     i32.const 143
     i32.eq
     br_if $is_instance
     i32.const 0
     br $__inlined_func$~instanceof|~lib/@devcycle/assemblyscript-json/assembly/JSON/Obj
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 8352
    i32.const 28384
    i32.const 249
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=20
   local.get $2
   call $assembly/helpers/jsonHelpers/getStringMapFromJSONObj
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=20
   local.get $3
   local.get $4
   local.get $1
   local.get $0
   call $assembly/types/dvcEvent/DVCRequestEvent#constructor
   local.tee $0
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   call $assembly/types/dvcEvent/DVCRequestEvent#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/types/platformData/testPlatformDataClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/platformData/PlatformData.fromString
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/platformData/PlatformData#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/types/platformData/testPlatformDataClassFromUTF8 (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 33780
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   local.get $0
   call $assembly/types/platformData/PlatformData.fromUTF8
   local.tee $0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $assembly/types/platformData/PlatformData#stringify
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 66576
  i32.const 66624
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 6272
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load $0 offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)
